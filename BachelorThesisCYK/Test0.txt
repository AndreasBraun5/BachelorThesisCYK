Result{
		countGeneratedGrammars= 150
		countGeneratedGrammarsPerWord= 15
		countDifferentWords= 10
		totalTime= 811ms
		totalTime= 0min 0sec
		generatorType= DICEROLLTOPDOWNMARTENS
GrammarGeneratorSettingsDiceRoll{
		minValueCompoundVariablesAreAddedTo=0
		minValueTerminalsAreAddedTo=1
		maxValueCompoundVariablesAreAddedTo=2
		maxValueTerminalsAreAddedTo=1
		favouritism=[1, 1, 1, 1]
GrammarProperties: {
		variables= [A, B, S, C]
		variableStart= S
		terminals= [a, b]
GrammarPropertiesGrammarRestrictions{
		sizeOfWord=10
		maxNumberOfVarsPerCell=3
}
GrammarPropertiesExamConstraints{
		minRightCellCombinationsForced=1
		maxSumOfProductions=10
		maxSumOfVarsInPyramid=100
}
}
}
SuccessRates{
SUCCESSRATEOVERVIEW{
			-->	SUCCESSRATE=0.14
			-->	SUCCESSRATEPRODUCIBILITY=0.56
			-->	SUCCESSRATEGRAMMARRESTRICTIONS=0.7133333333333334
			-->	SUCCESSRATEEXAMCONSTRAINTS=0.3

			-->	SUCCESSRATE=0.14
		trueCount=21
		falseCount=129
			-->	SUCCESSRATEPRODUCIBILITY=0.56
		trueProducibilityCount=84
		falseProducibilityCount=66
}
SuccessRatesGrammarRestrictions{
		trueGrammarRestrictionsCount=107
		falseGrammarRestrictionsCount=43
			-->	SUCCESSRATEGrammarRestrictions=0.7133333333333334
		trueSizeOfWordCount=150
		falseSizeOfWordCount=0
			-->	SUCCESSRATESizeOfWord=1.0
		trueMaxNumberOfVarsPerCellCount=107
		falseMaxNumberOfVarsPerCellCount=43
			-->	SUCCESSRATEMaxNumberOfVarsPerCell=0.7133333333333334
}
SuccessRatesExamConstraints{
		trueExamConstraints=45
		falseExamConstraints=105
			-->	SUCCESSRATEExamConstraints=0.3
		trueRightCellCombinationsForcedCount=79
		falseRightCellCombinationsForcedCount=71
			-->	SUCCESSRATERightCellCombinationsForced=0.5266666666666666
		trueMaxSumOfProductionsCount=142
		falseMaxSumOfProductionsCount=8
			-->	SUCCESSRATEMaxSumOfProductions=0.9466666666666667
		trueMaxSumOfVarsInPyramidCount=91
		falseMaxSumOfVarsInPyramidCount=59
			-->	SUCCESSRATEMaxSumOfVarsInPyramid=0.6066666666666667
}
}
}



RepresentativeResultSamples{

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }, { B-->CS }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CS }, { S-->b }]

}
word='aababaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, C][B, C][C]   [C]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   [C]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   [C]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->SC }, { S-->b }]

}
word='aababaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[S, C][S, C][S]   [C]   []    []    []    []    []    []    
[S, C][S, C][S]   [C]   [S]   []    []    []    []    []    
[S, C][C, S][S]   [C, S][S]   [C]   []    []    []    []    
[S, C][C, S][S]   [C, S][S]   [S]   [C]   []    []    []    
[S, C][C, S][S]   [C, S][S]   [S]   [C]   [S]   []    []    
[S, C][C, S][S]   [C, S][S]   [C, S][C, S][S]   [C]   []    
[S, C][C, S][S]   [C, S][S]   [C, S][C, S][S]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [S][] [] [] [] [] [] 
[] [S][] [S][S][] [] [] [] [] 
[] [S][] [S][] [C][] [] [] [] 
[] [S][] [S][] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SC }, { A-->CC }]
S[{ S-->a }, { S-->CS }]
C[{ C-->CS }, { C-->b }]

}
word='babbaabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S, C][S]      []       []       []       []       []       []       []       []       
[A]      [A]      [C]      []       []       []       []       []       []       []       
[]       []       [A]      [C]      []       []       []       []       []       []       
[A, S, C][A]      [A, S, C][A, S, C][S]      []       []       []       []       []       
[A, S, C][A]      [A, S, C][A, S, C][]       [S]      []       []       []       []       
[A]      []       [A]      [A]      []       [A]      [C]      []       []       []       
[]       []       []       []       []       []       [A]      [C]      []       []       
[]       []       []       []       []       []       []       [A]      [C]      []       
[A, S, C][A]      [A, S, C][A, S, C][]       [A]      [A, S, C][A, S, C][A, S, C][S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S, C][A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->AS }, { S-->a }, { S-->SS }]

}
word='babbaabbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[B]   [B]   [A]   [A]   []    []    []    []    []    []    
[B, S][S]   [B, S][B, S][S]   []    []    []    []    []    
[B, S][S]   [B, S][B, S][S]   [S]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A]   [A]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A]   [A]   [A]   []    
[B, S][S]   [B, S][B, S][S]   [S]   [B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B]   []    [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B, S][S]   [B, S][B, S][S]   [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->CB }, { B-->BB }, { B-->CC }]
C[{ C-->a }]
S[{ S-->BC }]

}
word='babbaabbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[B]   [A, B][B]   []    []    []    []    []    []    []    
[B]   [A, B][B]   [B]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][C]   []    []    []    []    []    
[B]   [A, B][B]   [B]   [B]   [C]   []    []    []    []    
[B]   [A, B][B]   [B]   [A, B][A, B][B]   []    []    []    
[B]   [A, B][B]   [B]   [A, B][A, B][B]   [B]   []    []    
[B]   [A, B][B]   [B]   [A, B][A, B][B]   [B]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[B]   [A, B][B]   []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    []    [A]   []    []    []    []    []    
[]    [A]   []    []    [A]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->BA }]
S[{ S-->AB }]

}
word='bbabbaabaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [A]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[A, B, S][A, B, S][S]      [A, B]   [A, B]   [A]      []       []       []       []       
[A, B, S][A, B, S][S]      [A, B]   [A, B]   []       [A]      []       []       []       
[S]      [S]      []       [S]      [S]      []       [S]      [B]      []       []       
[A, B, S][A, B, S][S]      [A, B, S][A, B, S][]       [S]      [A, B]   [A]      []       
[A, B, S][A, B, S][S]      [A, B, S][A, B, S][]       [S]      [A, B]   []       [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, S][S]      []       []       []       []       []       []       []       
[S]      []       []       [S]      []       []       []       []       []       []       
[A, B, S][A, B, S][]       [A, B, S][]       []       []       []       []       []       
[]       [A, B, S][S]      []       []       []       [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->CC }]
C[{ C-->a }]
S[{ S-->CS }, { S-->SS }, { S-->SC }, { S-->b }]

}
word='aabbababab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [S]   []    []    []    []    []    []    
[A, S][A, S][S]   [S]   [C]   []    []    []    []    []    
[A, S][A, S][S]   [S]   [A, S][S]   []    []    []    []    
[A, S][A, S][S]   [S]   [A, S][S]   [C]   []    []    []    
[A, S][A, S][S]   [S]   [A, S][S]   [A, S][S]   []    []    
[A, S][A, S][S]   [S]   [A, S][S]   [A, S][S]   [C]   []    
[A, S][A, S][S]   [S]   [A, S][S]   [A, S][S]   [A, S][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [A][] [] [] [] [] 
[A][A][] [] [A][] [] [] [] [] 
[A][A][] [] [A][] [A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
S[{ S-->AS }, { S-->SA }, { S-->a }]
C[{ C-->AA }]

}
word='aabbababab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][C]      [A]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [A]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [A]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->a }, { B-->SS }]
C[{ C-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='aabbababab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[B, C][B, C][B]   [S]   []    []    []    []    []    []    
[C]   [C]   [C]   [A]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][B]   [S]   [S]   []    []    []    []    
[A]   [A]   [A]   [C]   [A]   [A]   [B]   []    []    []    
[B, C][B, C][B, C][A, S][B, C][B]   [S]   [S]   []    []    
[C]   [C]   [C]   [A]   [C]   [C]   [A]   [A]   [B]   []    
[A, S][A, S][A, S][B, C][A, S][A, S][B, C][B]   [S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A]   [A]   [A]   [C]   []    []    []    []    []    []    
[B, C][B, C][B, C][A, S][B, C][]    []    []    []    []    
[C]   [C]   [C]   [A]   [C]   [C]   []    []    []    []    
[A, S][A, S][A, S][B, C][A, S][A, S][B, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=44

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=44
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SS }]

}
word='aabbababab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [S]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][S]   [S]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    
[C, S][C, S][C, S][C, S][S, C][C, S][S]   [S]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    
[C, S][C, S][C, S][C, S][S, C][C, S][S, C][C, S][S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CS }]
C[{ C-->a }, { C-->CC }, { C-->SS }]
S[{ S-->CS }, { S-->SC }, { S-->b }]

}
word='aabbababab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][S]   []    []    []    []    []    []    
[A, C][A, C][A, C][S]   [C]   []    []    []    []    []    
[B, S][B, S][B, S][A, C][B, S][S]   []    []    []    []    
[B, S][B, S][B, S][A, C][B, S][S]   [C]   []    []    []    
[A, C][A, C][A, C][B, S][A, C][A, C][B, S][S]   []    []    
[A, C][A, C][A, C][B, S][A, C][A, C][B, S][S]   [C]   []    
[B, S][B, S][B, S][A, C][B, S][B, S][A, C][A, C][B, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[B, S][B, S][B]   [A, C][]    []    []    []    []    []    
[A, C][A, C][]    [B, S][A, C][]    []    []    []    []    
[A]   [A]   [A, C][B]   [A]   [A, C][]    []    []    []    
[]    []    [B, S][]    []    [B, S][A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
C[{ C-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='ababaabbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [A, C][A]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[A, C][S]   [S]   [A, C][A]   []    []    []    []    []    
[S]   [A, C][A, C][S]   [S]   [A]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[A, C][S]   [S]   [A, C][A, C][S]   [A, C][A, C][A]   []    
[S]   [A, C][A, C][S]   [S]   [A, C][S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][S]   []    [A, C][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
S[{ S-->BB }]
C[{ C-->CC }, { C-->b }, { C-->BC }]

}
word='ababaabbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }]
C[{ C-->BS }]

}
word='abababbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[C]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [A, B]   [B]      []       []       []       []       []       []       
[]       []       [C]      [C]      [S]      []       []       []       []       []       
[A, B, C][A, B, C][S]      [S]      [A, B]   [B]      []       []       []       []       
[S]      [S]      [A, B, C][A, B, C][S]      [S]      [B]      []       []       []       
[]       []       [C]      [C]      []       []       [C]      [S]      []       []       
[A, B, C][A, B, C][S]      [S]      [A, B, C][A, B, C][S]      [A, B]   [B]      []       
[S]      [S]      [A, B, C][A, B, C][S]      [S]      [A, B, C][S]      [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[S]      []       [C]      [A, B, C][]       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [S]      [S]      []       []       []       []       []       []       
[S]      []       [C]      [A, B, C][S]      []       [A, B, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }]
C[{ C-->BS }]

}
word='abababbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[C]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [A, B]   [B]      []       []       []       []       []       []       
[]       []       [C]      [C]      [S]      []       []       []       []       []       
[A, B, C][A, B, C][S]      [S]      [A, B]   [B]      []       []       []       []       
[S]      [S]      [A, B, C][A, B, C][S]      [S]      [B]      []       []       []       
[]       []       [C]      [C]      []       []       [C]      [S]      []       []       
[A, B, C][A, B, C][S]      [S]      [A, B, C][A, B, C][S]      [A, B]   [B]      []       
[S]      [S]      [A, B, C][A, B, C][S]      [S]      [A, B, C][S]      [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[S]      []       [C]      [A, B, C][]       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [S]      [S]      []       []       []       []       []       []       
[S]      []       [C]      [A, B, C][S]      []       [A, B, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
S[{ S-->CA }]
C[{ C-->a }]

}
word='ababaaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[B, S][A, B][C]   []    []    []    []    []    []    []    
[B, S][A]   [B, S][A]   []    []    []    []    []    []    
[B, S][A, B][B, S][A, B][C]   []    []    []    []    []    
[B, S][A, B][B, S][A, B][B]   [C]   []    []    []    []    
[B, S][A, B][B, S][A, B][]    [B]   [C]   []    []    []    
[B, S][A]   [B, S][A]   []    []    [B, S][A]   []    []    
[B, S][A]   [B, S][A]   []    []    [B, S][A]   [A]   []    
[B, S][A]   [B, S][A]   []    []    [B, S][A]   [A]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][A, B][]    []    []    []    []    []    []    []    
[B, S][A, B][B, S][]    []    []    []    []    []    []    
[B, S][A, B][B, S][]    []    []    []    []    []    []    
[B, S][A]   [B, S][]    []    []    []    []    []    []    
[B, S][A]   [B, S][]    []    []    []    []    []    []    
[B, S][A]   [B, S][]    []    []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->SB }, { S-->a }, { S-->SS }]
C[{ C-->SB }, { C-->BS }]

}
word='ababbaaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][B]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[S, C][C]   [S, C][B]   []    []    []    []    []    []    
[S, C][C]   [S, C][]    [B]   []    []    []    []    []    
[S]   [C]   [S]   []    [C]   [S]   []    []    []    []    
[S]   [C]   [S]   []    [C]   [S]   [S]   []    []    []    
[S]   [C]   [S]   []    [C]   [S]   [S]   [S]   []    []    
[S]   [C]   [S]   []    [C]   [S]   [S]   [S]   [S]   []    
[S]   [C]   [S]   []    [C]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [C]   []    []    [C]   []    []    []    []    []    
[S]   [C]   []    []    [C]   []    []    []    []    []    
[S]   [C]   []    []    [C]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->CB }, { B-->a }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->BB }, { C-->b }]

}
word='ababbaaaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[C]      [A, B, S][B]      []       []       []       []       []       []       []       
[S]      []       []       [C]      []       []       []       []       []       []       
[]       []       []       [S]      [C]      []       []       []       []       []       
[A, B, S][C, S]   [C]      [A, B, S][A, B, S][B]      []       []       []       []       
[S, C]   [A, B, S][A, B, S][S, C]   [S, C]   [C]      [B]      []       []       []       
[A, B, S][C, S]   [C, S]   [A, B, S][A, B, S][A, B, S][C]      [B]      []       []       
[S, C]   [A, B, S][A, B, S][S, C]   [S, C]   [C, S]   [A, B, S][C]      [B]      []       
[A, B, S][C, S]   [C, S]   [A, B, S][A, B, S][A, B, S][C, S]   [A, B, S][C]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    [A, B][S, C][]    []    []    []    []    []    
[A, B][C, S][S]   []    []    []    []    []    []    []    
[S]   []    [A, B][S, C][S, C][S]   []    []    []    []    
[A, B][C, S][S]   []    []    [A, B][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }]
B[{ B-->b }, { B-->BB }]
S[{ S-->BA }, { S-->AA }, { S-->BB }, { S-->AB }]
C[{ C-->BB }]

}
word='baabbaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A, S]   [A]      []       []       []       []       []       []       []       
[S]      [A, S]   [A, S]   [B]      []       []       []       []       []       []       
[S]      [A, S]   [A, S]   [B, S, C][B]      []       []       []       []       []       
[S]      [A, S]   [A, S]   [S]      [S]      [A]      []       []       []       []       
[S]      [A, S]   [A, S]   [S]      [S]      [A, S]   [A]      []       []       []       
[S]      [A, S]   [A, S]   [S]      [S]      [A, S]   [A, S]   [B]      []       []       
[S]      [A, S]   [A, S]   [S]      [S]      [A, S]   [A, S]   [S]      [A]      []       
[S]      [A, S]   [A, S]   [S]      [S]      [A, S]   [A, S]   [S]      [A, S]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    [A, S][]    []    []    []    []    []    []    
[S]   []    [A, S][S]   []    []    []    []    []    []    
[S]   []    [A, S][S]   [S]   []    []    []    []    []    
[S]   []    [A, S][S]   [S]   []    []    []    []    []    
[S]   []    [A, S][S]   [S]   []    [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->a }]
S[{ S-->SB }, { S-->SS }, { S-->b }]
C[{ C-->SB }, { C-->SS }]

}
word='baabbaabab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [B]      []       []       []       []       []       []       []       []       
[S, C]   []       [B]      []       []       []       []       []       []       []       
[A, S, C][]       [A]      [S]      []       []       []       []       []       []       
[A, S, C][]       [A]      [A, S, C][S]      []       []       []       []       []       
[A, S, C][]       [A]      [A, S, C][S, C]   [B]      []       []       []       []       
[A, S, C][]       [A]      [A, S, C][S, C]   []       [B]      []       []       []       
[A, S, C][]       [A]      [A, S, C][A, S, C][]       [A]      [S]      []       []       
[A, S, C][]       [A]      [A, S, C][A, S, C][]       [A]      [S, C]   [B]      []       
[A, S, C][]       [A]      [A, S, C][A, S, C][]       [A]      [A, S, C][A]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='baabbaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][B]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   [B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->BC }, { B-->CB }, { B-->a }]
S[{ S-->CB }]
C[{ C-->BB }, { C-->b }]

}
word='aababaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C]      [A, B]   [C]      []       []       []       []       []       []       []       
[A, B, S][C]      [B, S]   [B]      []       []       []       []       []       []       
[A, B, S][C]      [A, B, S][A, B]   [C]      []       []       []       []       []       
[C]      [A, B, S][C]      [C]      [B, S]   [B]      []       []       []       []       
[A, B, S][C]      [A, B, S][A, B, S][C]      [C]      [B]      []       []       []       
[A, B, S][C]      [A, B, S][A, B, S][C]      [C]      [A, B]   [C]      []       []       
[C]      [A, B, S][C]      [C]      [A, B, S][A, B, S][C]      [B, S]   [B]      []       
[C]      [A, B, S][C]      [C]      [A, B, S][A, B, S][C]      [A, B, S][A, B]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [A, B, S][C]      []       []       []       []       []       []       []       
[A, B, S][]       [A]      [A, B, S][]       []       []       []       []       []       
[S]      [C]      [A, B, S][S]      [C]      []       []       []       []       []       
[]       [A, B, S][C]      []       [A]      [A, B, S][]       []       []       []       
[C]      [S]      [C]      [C]      [A, B, S][S]      [C]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=40
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='aababaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, C][C]   []    []    []    []    []    []    []    []    
[A, C][A, C][C]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][C]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][C]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]

}
word='aababaabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->AC }, { C-->b }]

}
word='aababaabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[A, C][A, C][C]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[A, C][A, C][]    [A, C][C]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[A, C][A, C][]    [A, C][]    [A, C][A, C][C]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[A, C][A, C][]    [A, C][]    [A, C][A, C][]    [A, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->SB }, { B-->a }]
S[{ S-->b }, { S-->BS }]

}
word='aababaabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
S[{ S-->CC }]
C[{ C-->b }, { C-->BC }]

}
word='babbaabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[S, C][C]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [C]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [C]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[]    []    []    []    []    []    []    [S]   [C]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]
S[{ S-->AA }]

}
word='babbaabbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->a }, { B-->AA }]
C[{ C-->AA }, { C-->AB }]

}
word='babbaabbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [B]      []       []       []       []       []       []       []       []       
[A, B, C][A]      [A]      []       []       []       []       []       []       []       
[A, B, C][B, C]   [B, C]   [A]      []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      [A]      [A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [B, C]   [A]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [A]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [B, C][B, C][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AA }, { A-->SA }]
B[{ B-->AS }, { B-->SA }]
C[{ C-->SA }]
S[{ S-->b }]

}
word='babbaabbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[B]      [B]      [S]      []       []       []       []       []       []       []       
[A, B, C][A]      [A]      [S]      []       []       []       []       []       []       
[A, B, C][A]      [A, B, C][A, B, C][A]      []       []       []       []       []       
[A, B, C][A]      [A, B, C][A, B, C][A]      [A]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [S]      []       []       []       
[A, B, C][A]      [A, B, C][A, B, C][A]      [A]      [A]      [S]      []       []       
[A, B, C][A, B]   [A, B, C][A, B, C][A, B]   [A, B]   [A, B, C][A]      [S]      []       
[A, B, C][A]      [A, B, C][A, B, C][A]      [A]      [A, B, C][A, B, C][A, B, C][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[B, C]   []       []       []       []       []       []       []       []       []       
[B, C]   []       [B, C]   []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[A, B, C][A]      [A, B, C][A, B, C][A]      []       []       []       []       []       
[B, C]   [B]      [B, C]   [B, C]   [B]      [B]      []       []       []       []       
[B, C]   []       [B, C]   [B, C]   []       []       [B, C]   []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=41
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BA }]
B[{ B-->b }, { B-->AB }]
S[{ S-->BA }, { S-->AB }]
C[{ C-->BB }, { C-->AB }]

}
word='babbaabbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, S]      [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [A, C]      [B]         []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A]         []          []          []          []          []          
[]          []          []          []          []          [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, C]      [A, C]      [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B]         []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B, C][C]   []    []    []    []    []    
[]    []    []    []    [A]   [A]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->BC }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->CB }]
C[{ C-->b }, { C-->BC }]

}
word='bbabbaabaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A]         [C]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B]         []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, C]   [C]         []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B]         []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SB }]
B[{ B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='bbabbaabaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B]      [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B]      [B]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [S]         [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [S]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [B]         []          []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [B]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   [S]         [S]         [S]         []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [B]         []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B]      []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [A, B]      []          []          []          []          []          []          []          
[C]         [C]         [C]         [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   []          []          []          []          []          
[]          []          []          []          []          [C]         []          []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bbabbaabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='bbabbaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bbabbaabaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='aabbababab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]
C[{ C-->BB }]

}
word='aabbababab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->CA }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->CA }, { C-->b }]
S[{ S-->AC }]

}
word='aabbababab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [C]         []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   []          [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }]

}
word='aabbababab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[A][B][] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[A][] [A][A][] [] [] [] [] [] 
[A][] [A][A][B][] [] [] [] [] 
[A][] [A][A][] [A][] [] [] [] 
[A][] [A][A][] [A][B][] [] [] 
[A][] [A][A][] [A][] [A][] [] 
[A][] [A][A][] [A][] [A][B][] 
[A][] [A][A][] [A][] [A][] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->BB }]
S[{ S-->SB }, { S-->SS }, { S-->b }]
C[{ C-->BS }]

}
word='aabbababab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[C][C][S][] [] [] [] [] [] [] 
[C][C][S][S][] [] [] [] [] [] 
[C][C][S][S][B][] [] [] [] [] 
[C][C][S][S][C][S][] [] [] [] 
[C][C][S][S][C][S][B][] [] [] 
[C][C][S][S][C][S][C][S][] [] 
[C][C][S][S][C][S][C][S][B][] 
[C][C][S][S][C][S][C][S][C][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [S][] [] [] [] [] [] 
[C][C][] [S][C][] [] [] [] [] 
[C][C][] [S][C][S][] [] [] [] 
[C][C][] [S][C][S][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->a }]
S[{ S-->SB }, { S-->SS }, { S-->b }]

}
word='ababaabbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][S][B][] [] [] [] [] [] [] 
[A][S][A][S][] [] [] [] [] [] 
[A][S][A][S][B][] [] [] [] [] 
[A][S][A][S][] [B][] [] [] [] 
[A][S][A][S][] [A][S][] [] [] 
[A][S][A][S][] [A][S][S][] [] 
[A][S][A][S][] [A][S][S][B][] 
[A][S][A][S][] [A][S][S][] [B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[A][S][A][] [] [A][] [] [] [] 
[A][S][A][] [] [A][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='ababaabbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->AS }, { S-->a }]
C[{ C-->SA }]

}
word='ababaabbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[C]      [A, S]   [S]      []       []       []       []       []       []       []       
[]       [C]      [C]      [A]      []       []       []       []       []       []       
[C]      [A, S, C][C]      [A, S]   [S]      []       []       []       []       []       
[C]      [A, S, C][C]      [A, S]   []       [S]      []       []       []       []       
[]       [C]      []       [C]      []       [C]      [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[C]      [A, S, C][C]      [A, S, C][]       [C]      [A, S]   [A, S]   [S]      []       
[C]      [A, S, C][C]      [A, S, C][]       [C]      [A, S]   [A, S]   []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, S, C][]       []       []       []       []       []       []       []       
[C]      [A, S, C][C]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [A, S, C][C]      []       []       [C]      []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->AB }]

}
word='ababaabbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][A][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[B][S][B][A][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[B][S][B][S][B][B][] [] [] [] 
[B][S][B][S][B][B][A][] [] [] 
[B][S][B][S][B][B][] [A][] [] 
[B][S][B][S][B][B][] [S][B][] 
[B][S][B][S][B][B][] [S][B][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[B][S][B][S][] [] [] [] [] [] 
[B][S][B][S][] [] [] [] [] [] 
[B][S][B][S][] [] [] [] [] [] 
[B][S][B][S][] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->CA }, { B-->AA }]
C[{ C-->AC }, { C-->CA }, { C-->CC }, { C-->b }]
S[{ S-->AC }, { S-->CA }]

}
word='ababaabbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C, S]   [C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][A]      []       []       []       []       []       []       []       
[C, S]   [C]      [C, S]   [C]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][A]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][A, B]   [A]      []       []       []       []       
[C, S]   [C]      [C, S]   [C]      [C, S]   [C, S]   [C]      []       []       []       
[C, S]   [C]      [C, S]   [C]      [C, S]   [C, S]   [C]      [C]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A, B]   [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   []    [S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=42

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=42
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->AB }]

}
word='abababbabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[C]   [C]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [A, C][A]   []    []    []    []    []    []    
[]    []    [C]   [C]   [B]   []    []    []    []    []    
[A, C][A, C][B]   [B]   [A, C][A]   []    []    []    []    
[B]   [B]   [A, C][A, C][B]   [B]   [A]   []    []    []    
[]    []    [C]   [C]   []    []    [C]   [B]   []    []    
[A, C][A, C][B]   [B]   [A, C][A, C][B]   [A, C][A]   []    
[B]   [B]   [A, C][A, C][B]   [B]   [A, C][B]   [B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[B]   []    []    [A, C][]    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [B]   [B]   []    []    []    []    []    []    
[B]   []    []    [A, C][B]   []    [A, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->AC }, { B-->CC }]
C[{ C-->AC }, { C-->CA }, { C-->b }]

}
word='abababbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [C]      []       []       []       []       []       []       []       []       
[A, B, C][A, C]   [A]      []       []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [A]      []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A]      []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->CA }, { C-->b }]
S[{ S-->AC }, { S-->CA }, { S-->CC }]

}
word='abababbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, C, S][C]      []       []       []       []       []       []       
[A, B, S][A, B, S][B, C, S][B, C, S][A]      []       []       []       []       []       
[B, C, S][B, C, S][A, B, S][A, B, S][B, C, S][C]      []       []       []       []       
[A, B, S][A, B, S][B, C, S][B, C, S][A, B, S][A, B, S][C]      []       []       []       
[A, B, S][A, B, S][B, C, S][B, C, S][A, B, S][A, B, S][B, C, S][A]      []       []       
[B, C, S][B, C, S][A, B, S][A, B, S][B, C, S][B, C, S][A, B, S][B, C, S][C]      []       
[A, B, S][A, B, S][B, C, S][B, C, S][A, B, S][A, B, S][B, C, S][A, B, S][A, B, S][C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[]       [B, C, S][A]      []       []       []       []       []       []       []       
[A]      []       []       [B, C, S][]       []       []       []       []       []       
[A, B, S][A]      [C]      []       [A, B, S][]       []       []       []       []       
[]       [B, C, S][A]      []       []       [B, C, S][]       []       []       []       
[A]      []       []       [B, C, S][A]      []       [B, C, S][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=36

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=36
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->CC }, { S-->BC }]
C[{ C-->b }, { C-->BC }]

}
word='abababbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, S]   [C]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, S]   [C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->b }, { C-->BC }]
S[{ S-->BC }]

}
word='abababbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C, S]   [C]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][C, S]   [C]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B]      [B]      [C]      []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B]      [B]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[]    []    []    []    []    []    [C, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='ababaaabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }]
B[{ B-->AS }, { B-->SA }, { B-->SS }]
C[{ C-->AS }, { C-->SA }, { C-->SS }]
S[{ S-->SA }, { S-->b }]

}
word='ababaaabbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C, S][A, B, C]   [S]         []          []          []          []          []          []          
[A, B, C]   [A, B, S, C][A, B, C]   [A, B, S, C][A]         []          []          []          []          []          
[A, B, C]   [A, B, S, C][A, B, C]   [A, B, S, C][]          [A]         []          []          []          []          
[A, B, C]   [A, B, S, C][A, B, C]   [A, B, S, C][]          []          [A]         []          []          []          
[A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][]          []          [A, B, C]   [S]         []          []          
[A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][]          []          [A, B, C]   [B, C]      [S]         []          
[A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][]          []          [A, B, C]   []          [B, C]      [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->BB }]
C[{ C-->b }]

}
word='ababaaabbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][C][] [] [] [] [] [] 
[B][] [B][] [B][] [] [] [] [] 
[B][] [B][] [B][B][] [] [] [] 
[B][] [B][] [B][B][B][] [] [] 
[B][] [B][] [B][B][B][C][] [] 
[B][] [B][] [B][B][B][] [C][] 
[B][] [B][] [B][B][B][] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CC }]
B[{ B-->SC }]
S[{ S-->a }, { S-->SC }, { S-->SS }]
C[{ C-->CS }, { C-->b }]

}
word='ababaaabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[A, B, S][C]      [S]      []       []       []       []       []       []       []       
[A, B, S][A, C]   [A, B, S][C]      []       []       []       []       []       []       
[A, B, S][A, C]   [A, B, S][C]      [S]      []       []       []       []       []       
[A, B, S][A, C]   [A, B, S][C]      [S]      [S]      []       []       []       []       
[A, B, S][A, C]   [A, B, S][C]      [S]      [S]      [S]      []       []       []       
[A, B, S][A, C]   [A, B, S][A, C]   [A, B, S][A, B, S][A, B, S][C]      []       []       
[A, B, S][A, C]   [A, B, S][A, C]   [A, B, S][A, B, S][A, B, S][A]      [C]      []       
[A, B, S][A, C]   [A, B, S][A, C]   [A, B, S][A, B, S][A, B, S][]       [A]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    [A]   [A, B][]    []    []    []    []    
[]    [A]   []    [A]   [A, B][A, B][]    []    []    []    
[]    [A]   []    [A]   [A, B][A, B][]    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
S[{ S-->SA }, { S-->b }]

}
word='ababaaabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[A][S][A][S][] [] [] [] [] [] 
[A][S][A][S][A][] [] [] [] [] 
[A][S][A][S][] [A][] [] [] [] 
[A][S][A][S][] [] [A][] [] [] 
[A][S][A][S][] [] [A][S][] [] 
[A][S][A][S][] [] [A][] [S][] 
[A][S][A][S][] [] [A][] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='ababababbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->CC }]
B[{ B-->SC }]
S[{ S-->a }, { S-->SC }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='ababababbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      [S]         []          []          []          []          []          []          []          
[A, B, S]   [A, S, C]   [A, B, S]   [C]         []          []          []          []          []          []          
[A, B, S]   [A, S, C]   [A, B, S]   [A, C]      [S]         []          []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, S]   [A, C, S]   [A, B, S]   [C]         []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, S]   [A, C, S]   [A, B, S]   [A, C]      [S]         []          []          []          
[A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, C, S]   [A, B, S]   [C]         []          []          
[A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, S]      [C]         []          
[A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, S]      [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [B, S][]    [S]   []    []    []    []    []    []    
[]    [B, S][]    [B, S][]    []    []    []    []    []    
[]    [B, S][]    [B, S][]    [B, S][]    []    []    []    
[]    [B, S][]    [B, S][]    [B, S][]    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BA }]
S[{ S-->BA }]

}
word='ababababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A]   [B, S][A]   []    []    []    []    []    []    []    
[A]   [B, S][A]   [B]   []    []    []    []    []    []    
[A]   [B, S][A]   [B, S][A]   []    []    []    []    []    
[A]   [B, S][A]   [B, S][A]   [B]   []    []    []    []    
[A]   [B, S][A]   [B, S][A]   [B, S][A]   []    []    []    
[A]   [B, S][A]   [B, S][A]   [B, S][A]   [B]   []    []    
[A]   [B, S][A]   [B, S][A]   [B, S][A]   []    [B]   []    
[A]   [B, S][A]   [B, S][A]   [B, S][A]   []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }, { B-->CS }, { B-->CC }]
S[{ S-->a }]
C[{ C-->SC }, { C-->CS }, { C-->CC }, { C-->b }]

}
word='ababababbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[B, C][B, C][S]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][S]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][S]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->SS }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CS }, { S-->SS }, { S-->b }]

}
word='ababababbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C, S]      [S]         []          []          []          []          []          []          []          []          
[A]         [A]         [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [C, S]      [S]         []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [C, S]      [S]         []          []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [C]         []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [C, S]      [S]         []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [B, C, S]   [B, S]      [S]         []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [B, C, S]   [B, S]      [B, S]      [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][]          []          []          []          []          []          []          
[A]         [A]         [A]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][]          []          []          []          []          
[A]         []          [A]         []          [A]         []          []          []          []          []          
[A]         []          [A]         []          [A]         []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=45

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=45
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->a }, { B-->BB }]
C[{ C-->BB }, { C-->AB }]
S[{ S-->BB }, { S-->AB }]

}
word='ababbaaaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [B]         []          []          []          []          []          []          []          
[]          []          [A]         [A]         []          []          []          []          []          []          
[]          []          []          []          [A]         []          []          []          []          []          
[]          []          []          []          [A, C, S]   [B]         []          []          []          []          
[]          []          []          []          [A, C, S]   [A, B, C, S][B]         []          []          []          
[]          []          []          []          [A, C, S]   [A, B, C, S][A, B, C, S][B]         []          []          
[]          []          []          []          [A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B]         []          
[]          []          []          []          [A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='ababbaaaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->CA }]
B[{ B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->CA }, { S-->AA }]

}
word='ababbaaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[B, C]   [C]      [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A]      []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [C]      [C]      [C]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]
S[{ S-->AA }]

}
word='ababbaaaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='ababbaaaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->BC }, { B-->CB }, { B-->a }]
S[{ S-->BB }, { S-->CC }, { S-->BC }]
C[{ C-->b }, { C-->BC }]

}
word='baabbaabab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[A, S]      [A, S]      [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][B, C, S]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [S]         [C]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [B]         [B]         [B]         []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][B, C, S]   [C]         []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B]         [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, C, S]   [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='baabbaabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='baabbaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->BS }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->BB }]

}
word='baabbaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S, C]      [B]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [B]         []          []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, B, S]   [S]         []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, B, S]   [A]         [S]         []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, B, S, C][A]         [S, C]      [B]         []          []          []          []          
[A, S, C]   [A, B, C, S][A, B, S, C][A]         [A, S, C]   [A, S, C]   [B]         []          []          []          
[A, C, S]   [A, B, C, S][A, B, C, S][A]         [A, S, C]   [A, B, S, C][A, B, S]   [S]         []          []          
[A, C, S]   [A, B, C, S][A, B, C, S][A]         [A, S, C]   [A, B, S, C][A, B, S, C][S, C]      [B]         []          
[A, C, S]   [A, B, S, C][A, B, C, S][A]         [A, S, C]   [A, B, S, C][A, B, S, C][A, S, C]   [A, B, S]   [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          [A, B, S, C][]          []          []          []          []          []          []          
[]          []          [A, B, S, C][A]         []          []          []          []          []          []          
[]          []          [A, B, C, S][A]         []          []          []          []          []          []          
[]          []          [A, B, C, S][A]         []          []          []          []          []          []          
[]          []          [A, B, C, S][A]         []          []          [C]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='baabbaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}
