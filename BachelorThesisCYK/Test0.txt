

Result{
countGeneratedGrammars= 15000
countGeneratedGrammarsPerWord= 150
countDifferentWords= 100
totalTime= 18223ms
totalTime= 0min 18sec
generatorType= DICEROLLONLY
grammarGeneratorSettingsGrammarGeneratorSettingsDiceRoll{
minValueCompoundVariablesAreAddedTo=0
minValueTerminalsAreAddedTo=1
maxValueCompoundVariablesAreAddedTo=2
maxValueTerminalsAreAddedTo=2
favouritism=[1, 1, 1, 1]
grammarProperties=GrammarProperties: {
variables= [A, B, S, C]
variableStart= S
terminals= [a, b]
GrammarPropertiesGrammarRestrictions{
sizeOfWord=10
maxNumberOfVarsPerCell=3
}
GrammarPropertiesExamConstraints{
minRightCellCombinationsForced=1
maxSumOfProductions=10
maxSumOfVarsInPyramid=100

}
}
SuccessRates{
SUCCESSRATEOVERVIEW:
			-->	SUCCESSRATE=0.07086666666666666
			-->	SUCCESSRATEPRODUCIBILITY=0.453
			-->	SUCCESSRATEGRAMMARRESTRICTIONS=0.7236666666666667
			-->	SUCCESSRATEEXAMCONSTRAINTS=0.2774

			-->	SUCCESSRATE=0.07086666666666666
trueCount=1063
falseCount=13937
			-->	SUCCESSRATEPRODUCIBILITY=0.453
trueProducibilityCount=6795
falseProducibilityCount=8205

SuccessRatesGrammarRestrictions{
trueGrammarRestrictionsCount=10855
falseGrammarRestrictionsCount=4145
			-->	SUCCESSRATEGrammarRestrictions=0.7236666666666667
trueSizeOfWordCount=15000
falseSizeOfWordCount=0
			-->	SUCCESSRATESizeOfWord=1.0
trueMaxNumberOfVarsPerCellCount=10855
falseMaxNumberOfVarsPerCellCount=4145
			-->	SUCCESSRATEMaxNumberOfVarsPerCell=0.7236666666666667
}

SuccessRatesExamConstraints{
trueExamConstraints=4161
falseExamConstraints=10839
			-->	SUCCESSRATEExamConstraints=0.2774
trueRightCellCombinationsForcedCount=9988
falseRightCellCombinationsForcedCount=5012
			-->	SUCCESSRATERightCellCombinationsForced=0.6658666666666667
trueMaxSumOfProductionsCount=9763
falseMaxSumOfProductionsCount=5237
			-->	SUCCESSRATEMaxSumOfProductions=0.6508666666666667
trueMaxSumOfVarsInPyramidCount=9684
falseMaxSumOfVarsInPyramidCount=5316
			-->	SUCCESSRATEMaxSumOfVarsInPyramid=0.6456
}
}
}



RepresentativeResultSamples{

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CS }]
C[{ C-->AS }, { C-->CA }, { C-->AA }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

word='baaaaaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [C]   [A]   []    []    []    []    []    []    []    
[S]   [C]   [C]   [A]   []    []    []    []    []    []    
[S]   [C]   [C]   [C]   [A]   []    []    []    []    []    
[S]   [C]   [C]   [C]   [C]   [A]   []    []    []    []    
[S]   [C]   [C]   [C]   [C]   [C]   [A]   []    []    []    
[S]   [B]   [B]   [B]   [B]   [B]   [C]   [S]   []    []    
[S]   [B]   [B]   [B]   [B]   [B]   [B, C][S]   [S]   []    
[S]   [B]   [B]   [B]   [B]   [B]   [B, C][S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[] [C][C][C][] [] [] [] [] [] 
[S][B][B][B][B][] [] [] [] [] 
[S][B][B][B][B][B][] [] [] [] 
[S][B][B][B][B][B][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->CA }, { S-->SA }]

word='baaaaaabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C, S][C, S][A, C][]    []    []    []    []    []    []    
[C, S][C, S][C, S][A, C][]    []    []    []    []    []    
[C, S][C, S][C, S][C, S][A, C][]    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][A, C][]    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][A, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SC }]
S[{ S-->AS }, { S-->CB }, { S-->AA }]
C[{ C-->CA }, { C-->SB }, { C-->SS }, { C-->b }, { C-->BC }]

word='baaaaaabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[C]      [S]      [A]      []       []       []       []       []       []       []       
[C]      [S]      [S]      [A]      []       []       []       []       []       []       
[C]      [C, S]   [S]      [S]      [A]      []       []       []       []       []       
[C]      [C, S]   [S, C]   [S]      [S]      [A]      []       []       []       []       
[C, S]   [B, C, S][S, C]   [S, C]   [S]      [S]      [A]      []       []       []       
[B, S]   [B, C, S][B, C]   [B, C]   [B]      [B]      []       [C]      []       []       
[B, S, C][B, C]   [B, C]   [B, C]   [C]      [C]      []       []       [C]      []       
[B, C, S][B, C]   [C]      [C]      []       []       []       []       []       [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][S][S][] [] [] [] [] [] [] 
[C][S][S][S][] [] [] [] [] [] 
[] [] [] [B][B][] [] [] [] [] 
[S][] [B][B][] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->CA }, { A-->SB }]
B[{ B-->b }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->b }]
C[{ C-->CB }, { C-->a }]

word='baaaaaabbb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [S, C]   []       []       []       []       []       []       []       []       
[S]      []       [S, C]   []       []       []       []       []       []       []       
[]       []       []       [S, C]   []       []       []       []       []       []       
[]       []       []       []       [S, C]   []       []       []       []       []       
[]       []       []       []       []       [S, C]   []       []       []       []       
[]       []       []       []       []       []       [S, C]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, C]   [B, S]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S, C][A]      [B, S]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S, C][S]      [A]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->SA }]
B[{ B-->a }]
S[{ S-->CA }]
C[{ C-->BA }, { C-->a }, { C-->SC }, { C-->b }, { C-->BC }]

word='baaaaaabbb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[]       [B, C]   []       []       []       []       []       []       []       []       
[]       [C]      [B, C]   []       []       []       []       []       []       []       
[]       [C]      [C]      [B, C]   []       []       []       []       []       []       
[]       [C]      [C]      [C]      [B, C]   []       []       []       []       []       
[]       [C]      [C]      [C]      [C]      [B, C]   []       []       []       []       
[]       [C]      [C]      [C]      [C]      [C]      [B, C]   []       []       []       
[]       [S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [A, C]   []       []       
[A, S]   [A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   []       
[A, C, S][A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S]   [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [C]   []    []    []    []    []    []    []    
[]    [C]   [C]   [C]   []    []    []    []    []    []    
[]    [S, C][C, S][C, S][C, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->SB }, { S-->b }]

word='bbbaaabbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[B, S][B, S][A, S][]    []    []    []    []    []    []    
[B, S][B, S][S]   [B]   []    []    []    []    []    []    
[B, S][B, S][S]   []    [B]   []    []    []    []    []    
[B, S][B, S][S]   []    []    [B]   []    []    []    []    
[B, S][B, S][B]   []    []    []    [A, S][]    []    []    
[B, S][B, S][B, S][]    []    []    [B, S][A, S][]    []    
[B, S][B, S][B, S][]    []    []    [B, S][S]   [B]   []    
[B, S][B, S][B, S][]    []    []    [B, S][B]   []    [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->CA }, { C-->a }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

word='bbbaaabbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S, C][S, C][C, S][C]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [C]   []    []    []    []    []    
[S, C][S, C][C, S][C]   [A]   [C]   []    []    []    []    
[S, C][S, C][C, S][C]   [A]   [C]   [A, S][]    []    []    
[S, C][S, C][C, S][C]   [A]   [C]   [S]   [A, S][]    []    
[A, S][A, S][A, S][A]   [C]   [A]   [C, S][C, S][C]   []    
[A, S][A, S][A, S][A]   [C]   [A]   [C, S][C, S][C]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   []    [A]   []    []    []    []    []    
[A]   [A]   [A, S][]    [C]   []    []    []    []    []    
[A]   [A]   [A, S][A]   []    [A]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->a }]
S[{ S-->BB }, { S-->AB }, { S-->BS }]

word='bbbaaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, B][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, B][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, B][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=40

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->CA }, { S-->CC }]
C[{ C-->a }, { C-->SC }, { C-->b }]

word='bbbaaabbab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[A, C][S]   [A, C][]    []    []    []    []    []    []    
[S]   [A, C][S]   [C]   []    []    []    []    []    []    
[A, C][S]   [A, C][S]   [C]   []    []    []    []    []    
[S]   [A, C][S]   [C]   [S]   [C]   []    []    []    []    
[A, C][S]   [A, C][S]   [C]   [S]   [A, C][]    []    []    
[S]   [A, C][S]   [C]   [S]   [C]   [S]   [A, C][]    []    
[A, C][S]   [A, C][S]   [C]   [S]   [A, C][S]   [C]   []    
[S]   [A, C][S]   [C]   [S]   [C]   [S]   [A, C][S]   [A, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[A, C][]    [A, C][]    []    []    []    []    []    []    
[]    [A, C][]    [C]   []    []    []    []    []    []    
[A, C][]    [A, C][]    [C]   []    []    []    []    []    
[]    [A, C][]    [C]   []    [C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->a }]
S[{ S-->a }, { S-->SS }, { S-->b }]

word='bbbaaabbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [A, S][B, S][]    []    []    []    []    
[S]   [S]   [S]   [A, S][A, S][B, S][]    []    []    []    
[S]   [S]   [S]   [A, S][A, S][A, S][S]   []    []    []    
[S]   [S]   [S]   [A, S][A, S][A, S][S]   [S]   []    []    
[S]   [S]   [S]   [A, S][A, S][A, S][S]   [S]   [B, S][]    
[S]   [S]   [S]   [A, S][A, S][A, S][S]   [S]   [A, S][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][A][] [] [] [] [] 
[] [] [] [A][A][A][] [] [] [] 
[] [] [] [A][A][A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->SB }, { C-->a }, { C-->CS }, { C-->SS }, { C-->b }]
S[{ S-->BB }, { S-->CC }]

word='aabaabbbbb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[C]   [S]   [C]   []    []    []    []    []    []    []    
[S, C][C]   [S]   [B, C][]    []    []    []    []    []    
[C, S][C, S][C]   [S]   [B, C][]    []    []    []    []    
[S, C][C, S][S, C][C]   [S]   [C]   []    []    []    []    
[C, S][C, S][C, S][S, C][C]   [S]   [C]   []    []    []    
[C, S][C, S][C, S][C, S][S, C][C]   [S]   [C]   []    []    
[C, S][C, S][C, S][C, S][C, S][S, C][C]   [S]   [C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][S, C][C]   [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->AS }, { B-->a }]
S[{ S-->BA }, { S-->a }, { S-->BS }]

word='aabaabbbbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, B][]    []    []    []    []    []    []    
[S]   [S]   [B, S][B, S][]    []    []    []    []    []    
[S]   [S]   [B, S][S]   [B, S][]    []    []    []    []    
[S]   [S]   [B, S][S]   [S]   [A, B][]    []    []    []    
[S]   [S]   [B, S][S]   [S]   [S]   [A, B][]    []    []    
[S]   [S]   [B, S][S]   [S]   [B, S][S]   [A, B][]    []    
[S]   [S]   [B, S][S]   [S]   [B, S][B, S][S]   [A, B][]    
[S]   [S]   [B, S][S]   [S]   [B, S][B, S][B, S][S]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][B][] [] [] [] [] [] [] 
[S][S][B][S][] [] [] [] [] [] 
[S][S][B][S][S][] [] [] [] [] 
[S][S][B][S][S][B][] [] [] [] 
[S][S][B][S][S][B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->SB }, { C-->a }, { C-->CS }, { C-->SC }, { C-->b }]

word='aabaabbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[C]      [S]      [B, C]   []       []       []       []       []       []       []       
[S]      [C]      [S]      [C]      []       []       []       []       []       []       
[C]      [S]      [C]      [S]      [C]      []       []       []       []       []       
[S]      [C]      [S]      [C]      [S]      [B, C]   []       []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [B, S]   [B, C]   []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [B, C, S][B, S]   [B, C]   []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [B, C, S][B, C, S][B, S]   [B, C]   []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [B, C, S][B, C, S][B, C, S][B, S]   [B, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AS }, { S-->b }]
C[{ C-->a }, { C-->SC }]

word='aabaabbbbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, C][]    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->AC }]
C[{ C-->AS }, { C-->SS }, { C-->SC }]
S[{ S-->CA }, { S-->a }, { S-->AB }]

word='aabaabbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[C]   [C]   []    [S]   []    []    []    []    []    []    
[A]   [B]   []    [C]   [S]   []    []    []    []    []    
[S, C][S]   []    []    [A]   [B]   []    []    []    []    
[A]   [A, B][]    [C]   [S]   []    [B]   []    []    []    
[S, C][S]   []    []    [A]   []    []    [B]   []    []    
[A]   [A, B][]    [C]   [S]   []    []    []    [B]   []    
[S, C][S]   []    []    [A]   []    []    []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->AC }, { A-->CA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SA }]

word='abaaabbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, C]   [C]      [A]      []       []       []       []       []       []       []       
[A]      [A]      []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[A, S]   [A, S]   [S]      [S]      [S]      [S]      []       []       []       []       
[A, S, C][A, S, C][A]      [A]      [A]      [A]      [S]      []       []       []       
[A, C]   [A, C]   []       []       []       []       [C]      [A]      []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][C, S]   [A]      [S]      [S]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, C]   [A, C, S][A]      [A]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, S]   [A]      [A]      []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[]       []       []       []       [S]      []       [A, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->b }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->a }]
C[{ C-->a }, { C-->CC }]

word='abaaabbabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[B]   [S]   [S, C][]    []    []    []    []    []    []    
[B, S][A, S][B, C][S, C][]    []    []    []    []    []    
[B, S][A, S][B, C][B, C][S, C][]    []    []    []    []    
[S]   [A]   [B, S][B, S][S]   [A, B][]    []    []    []    
[S]   [A]   [B, S][B, S][S]   [A]   [A, B][]    []    []    
[B, S][A, S][B]   [B]   [B]   [S]   [S]   [S, C][]    []    
[S]   [A]   []    []    []    []    []    [S]   [A, B][]    
[S]   [A]   []    []    []    []    []    [S]   [A]   [A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [B, S][B, S][]    []    []    []    []    []    
[B, S][S]   [B]   [B]   [B]   []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->CB }, { B-->SS }, { B-->BB }]
S[{ S-->a }, { S-->BS }, { S-->BC }]
C[{ C-->CC }, { C-->b }]

word='abaaabbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [B, C]   []       []       []       []       []       []       []       []       
[B, S]   [S]      [S]      []       []       []       []       []       []       []       
[B, S]   [B]      [B]      [S]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      [B, C]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S, C][B, C]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [S]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      [B, C]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S, C][B, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->AA }]
S[{ S-->a }, { S-->BB }]

word='abaaabbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[A, B]   [B]      [S]      []       []       []       []       []       []       []       
[A, B]   [B]      []       [S]      []       []       []       []       []       []       
[A, B]   [B]      []       []       [S]      []       []       []       []       []       
[B, S]   [S]      [A]      [A]      [A]      [B]      []       []       []       []       
[A, B, S][A, B]   []       []       []       [S]      [B]      []       []       []       
[A, B, S][A, B]   []       []       []       [S]      [B]      [S]      []       []       
[A, B, S][B, S]   [A, B]   [A, B]   [A, B]   [A, B]   [S]      [A]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S]      [A, B]   []       [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[]    []    [A]   [A]   [S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AS }]
S[{ S-->a }, { S-->AA }]

word='abaaabbabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [S]   []    []    []    []    []    []    []    
[A]   [A, S][A]   [S]   []    []    []    []    []    []    
[A]   [A, S][A]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][S]   []    [A]   []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A]   [A, S][A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [A]   [A]   []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->AA }, { S-->b }]
C[{ C-->a }, { C-->SS }]

word='bbabaaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[C, S]   [S]      [A]      [S]      []       []       []       []       []       []       
[A]      [C]      [S]      []       [C]      []       []       []       []       []       
[S]      []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[A, S, C][A, S, C][A, S, C][S]      [A]      [S]      [A]      [S]      []       []       
[A, C, S][C, S]   [A, S]   [C]      [S]      [A]      [S]      []       [C]      []       
[A, S, C][A, S, C][A, S, C][S]      [A]      [S]      []       []       []       [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [A][] [] [] [] 
[] [] [S][] [A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->SB }, { B-->CS }]
S[{ S-->a }, { S-->BB }, { S-->CC }]
C[{ C-->a }]

word='bbabaaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [S, C][]    []    []    []    []    []    []    
[B]   [S]   [B]   [B]   []    []    []    []    []    []    
[B]   [S]   [B]   [B]   [S, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B]   [B, S][S, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [S, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->b }, { B-->SA }, { B-->BB }, { B-->CC }]
C[{ C-->CA }, { C-->a }]
S[{ S-->AA }]

word='bbabaaabaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, B, S][A, B]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [C]      [A, B]   []       []       []       []       []       []       
[A, B, S][A, B]   [B]      []       [C]      []       []       []       []       []       
[]       []       [C]      [A, B]   [B]      [C]      []       []       []       []       
[A, B, S][A, B]   [B]      []       []       [B]      [C]      []       []       []       
[A, B, S][A, B, S][B]      []       []       [B]      [C]      [A, B]   []       []       
[]       []       [C]      [A, B]   [B]      []       [B]      []       [C]      []       
[A, B, S][A, B, S][B]      []       []       [B]      [C]      [A, B]   [B]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->b }, { A-->AC }]
S[{ S-->CA }, { S-->AA }]
C[{ C-->a }, { C-->b }]

word='bbabaaabaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[A, S][A]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, C][]    []    []    []    []    []    
[A, S][A, S][A, S][A]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [C]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, C][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->AS }, { A-->SA }]
B[{ B-->a }, { B-->BB }]
S[{ S-->AA }, { S-->SS }]

word='bbabaaabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][A][B][] [] [] [] [] [] [] 
[A][S][] [A][] [] [] [] [] [] 
[A][S][] [A][B][] [] [] [] [] 
[A][S][] [A][B][B][] [] [] [] 
[A][S][] [A][B][B][B][] [] [] 
[S][A][] [S][] [] [] [A][] [] 
[S][A][] [S][] [] [] [A][B][] 
[S][A][] [S][] [] [] [A][B][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AS }]
B[{ B-->a }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->b }, { S-->BC }]
C[{ C-->SS }, { C-->BB }]

word='baabbbbbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[]       [C]      [B, S]   []       []       []       []       []       []       []       
[A, C]   [S]      [C]      [S]      []       []       []       []       []       []       
[A]      [A, C]   [S]      [C]      [S]      []       []       []       []       []       
[A, S, C][A, S]   [A, C]   []       [C]      [S]      []       []       []       []       
[A, S, C][A, S, C][A, S]   [A]      []       [C]      [S]      []       []       []       
[A, S, C][A, S, C][A, S, C][A]      [A]      []       [C]      [S]      []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A]      [A]      []       [C]      [B, S]   []       
[A, S, C][A, C, S][A, S, C][A, C, S][A, S]   [A]      [A]      []       [C]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[S, C]   []       []       []       []       []       []       []       []       []       
[]       [S]      [A, S]   []       []       []       []       []       []       []       
[]       []       [A, S, C][A]      []       []       []       []       []       []       
[]       []       [S]      [A, S]   [A]      []       []       []       []       []       
[]       []       []       [S]      [A, S]   [A]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SC }]
C[{ C-->BB }, { C-->CS }]
S[{ S-->b }, { S-->BS }]

word='baabbbbbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[B]      [C]      [B]      []       []       []       []       []       []       []       
[B, S]   [C, S]   [S]      [S]      []       []       []       []       []       []       
[B, S]   [C]      []       []       [S]      []       []       []       []       []       
[B, S]   [C]      []       []       []       [S]      []       []       []       []       
[B, S]   [C]      []       []       []       []       [S]      []       []       []       
[B, S]   [C]      []       []       []       []       []       [S]      []       []       
[C]      []       []       []       []       []       []       []       [B]      []       
[B, S, C][C]      []       []       []       []       []       []       [S]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
S[{ S-->SB }, { S-->CB }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->BS }]

word='baabbbbbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[S]      []       [S]      [B, S]   []       []       []       []       []       []       
[S]      []       [S]      [S, C]   [B, S]   []       []       []       []       []       
[S]      []       [S]      [B, C, S][S, C]   [B, S]   []       []       []       []       
[S]      []       [S]      [B, S, C][B, C, S][S, C]   [B, S]   []       []       []       
[S]      []       [S]      [B, S, C][B, S, C][B, C, S][S, C]   [B, S]   []       []       
[S]      []       [S]      [B, S, C][B, C, S][S, C]   [B, S]   [C]      [S]      []       
[S]      []       [S]      [B, C, S][B, S, C][B, S, C][B, C, S][C, S]   [S]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B, C][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->a }]
C[{ C-->CA }, { C-->AA }]
S[{ S-->BA }, { S-->BB }]

word='baabbbbbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[S]      [A, S, C][A, B]   []       []       []       []       []       []       []       
[S]      [A, S, C][A, S]   [B]      []       []       []       []       []       []       
[S]      [A, S, C][A]      [S]      [B]      []       []       []       []       []       
[S]      [A, S, C][A]      []       [S]      [B]      []       []       []       []       
[S]      [A, S, C][A]      []       []       [S]      [B]      []       []       []       
[S]      [A, S, C][A]      []       []       []       [S]      [B]      []       []       
[S]      [A, C, S][A, C]   []       []       []       []       [S]      [A, B]   []       
[S]      [A, C, S][A, C]   []       []       []       []       [S]      [A, S]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
C[{ C-->AC }, { C-->b }]
S[{ S-->a }, { S-->CS }, { S-->CC }]

word='baabbbbbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    [A]   [A, S][]    []    []    []    []    []    []    
[S]   [C]   [C]   [C]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }, { A-->CA }]
B[{ B-->CB }, { B-->a }]
S[{ S-->BA }, { S-->AA }]
C[{ C-->AB }]

word='baaaabbaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][A, B][]    []    []    []    []    []    []    []    
[A, B][S, C][A, B][]    []    []    []    []    []    []    
[S, C][A, B][S, C][A, B][]    []    []    []    []    []    
[A, B][S, C][A, B][S, C][A, B][]    []    []    []    []    
[S]   [A]   [S]   [A]   [S]   [A]   []    []    []    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A]   []    []    []    
[S, C][A]   [S, C][A]   [S, C][A]   [S, C][A, B][]    []    
[A, B][S, C][A, B][S, C][A, B][S, C][A, B][S, C][A, B][]    
[S]   [A]   [S]   [A]   [S]   [A]   [S]   [A]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[A]   []    [A]   []    []    []    []    []    []    []    
[C]   [A]   [C]   [A]   [C]   []    []    []    []    []    
[A, B][]    [A, B][]    [A, B][]    []    []    []    []    
[]    [A]   []    [A]   []    [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
S[{ S-->AS }, { S-->a }, { S-->SS }, { S-->SC }, { S-->b }]
C[{ C-->AA }]

word='baaaabbaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[S]      [S, C]   [A, S]   []       []       []       []       []       []       []       
[S]      [A, S]   [S, C]   [A, S]   []       []       []       []       []       []       
[S]      [A, S, C][A, S]   [S, C]   [A, S]   []       []       []       []       []       
[S]      [A, S, C][A, S, C][A, S]   [S]      [S]      []       []       []       []       
[S]      [A, S, C][A, S, C][A, S]   [S]      [S]      [S]      []       []       []       
[S]      [A, S, C][A, S, C][A, S, C][S]      [S]      [S]      [A, S]   []       []       
[S]      [A, C, S][A, S, C][A, S, C][S]      [S]      [S]      [S, C]   [A, S]   []       
[S]      [A, C, S][A, C, S][A, S, C][S]      [S]      [S]      [A, S]   [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->SB }, { C-->SS }, { C-->CS }]
S[{ S-->a }, { S-->BB }, { S-->BS }]

word='baaaabbaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B, C]   [C]      [S]      []       []       []       []       []       []       []       
[B, S, C][C]      [C]      [S]      []       []       []       []       []       []       
[B, S, C][C]      [C]      [C]      [S]      []       []       []       []       []       
[B, S, C][]       []       []       [C]      [B]      []       []       []       []       
[B, S, C][C]      [C]      [C]      [C]      [S]      [B]      []       []       []       
[B, S, C][C]      [C]      [C]      [C]      [S, C]   [S]      [S]      []       []       
[B, S, C][C]      [C]      [C]      [C]      [B, S, C][B, C]   [C]      [S]      []       
[B, S, C][C]      [C]      [C]      [C]      [S, C]   [S]      []       [C]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][C]   [C]   [C]   []    []    []    []    []    []    
[S, C][C]   [C]   [C]   []    [B, S][]    []    []    []    
[S, C][C]   [C]   [C]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SB }]
B[{ B-->BC }, { B-->a }, { B-->CC }, { B-->CS }, { B-->AA }]
C[{ C-->a }]
S[{ S-->b }, { S-->AB }]

word='baaaabbaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[A, S]   [A, B]   [B, C]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A]      [B]      [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[A, B, S][A, B, S][A, B]   [B]      []       []       [A]      [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B]   []       []       [A, S]   [A, B]   [B, C]   []       
[A, B, S][A, B, S][A, S]   [A]      []       []       [S]      [A]      [B]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][A, S][]    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->SS }]
C[{ C-->a }, { C-->b }]
S[{ S-->BB }, { S-->CS }, { S-->SC }]

word='baaaabbaab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[B, S][B]   [B]   [B]   [B]   [B, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    [C]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    [C]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][B][B][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AB }, { B-->AA }, { B-->BB }]
S[{ S-->SA }, { S-->a }, { S-->b }, { S-->BS }]

word='babbabaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[S]      [A]      [S]      []       []       []       []       []       []       []       
[S]      [A]      []       [S]      []       []       []       []       []       []       
[S]      [A, B]   []       [S]      [A, S]   []       []       []       []       []       
[S]      [A, B, S][]       [S]      [A]      [S]      []       []       []       []       
[S]      [A, B, S][]       [S]      [A, B]   [S]      [A, S]   []       []       []       
[S]      [A, B, S][]       [S]      [A, B, S][S]      [A, B, S][A, S]   []       []       
[S]      [A, B, S][]       [S]      [A, B, S][S]      [A, B, S][A, B, S][A, S]   []       
[S]      [A, B, S][]       [S]      [A, B, S][S]      [A, B, S][A, B, S][A]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->AS }, { S-->CC }, { S-->SC }]
C[{ C-->a }, { C-->b }]

word='babbabaaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, C][]    []    []    []    []    []    []    
[A, S][S]   [S]   [A, C][]    []    []    []    []    []    
[A, S][A, S][S]   [S]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [S]   [A, C][]    []    []    []    
[A, S][A, S][A, S][A, S][S]   [S]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->b }]
C[{ C-->AS }, { C-->a }, { C-->CC }]
S[{ S-->SA }, { S-->CB }, { S-->SS }]

word='babbabaaab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[C]      [S]      [A, B]   []       []       []       []       []       []       []       
[S, C]   [S]      []       [A, B]   []       []       []       []       []       []       
[C]      [S]      []       [A]      [C]      []       []       []       []       []       
[C, S]   [S]      [A]      [C]      [S]      [A, B]   []       []       []       []       
[C]      [S]      [A]      [C]      []       [A]      [C]      []       []       []       
[C]      [S]      [A]      [C]      []       [A]      [C]      [C]      []       []       
[C]      [S]      [A]      [C]      []       [A]      [C]      [C]      [C]      []       
[A, C, S][S, C]   [A, C]   [A, C, S][C, S]   [C]      [S]      [S]      [S]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    [A, S][]    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->CA }, { B-->CS }]
C[{ C-->BA }, { C-->b }, { C-->BC }]
S[{ S-->CC }]

word='babbabaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[B, C]   [A]      [C]      []       []       []       []       []       []       []       
[B, C, S][A]      [S]      [C]      []       []       []       []       []       []       
[B, C]   []       []       [B]      [A]      []       []       []       []       []       
[B, C, S][A]      [S]      [B, C]   [A]      [C]      []       []       []       []       
[B, C, S][A]      [S]      [B, C]   []       [B]      [A]      []       []       []       
[B, C, S][A]      [S]      [B, C]   [A]      [C]      []       [A]      []       []       
[B, C, S][A]      [S]      [B, C]   []       [B]      []       []       [A]      []       
[B, C, S][A]      [B, S]   [B, C, S][A]      [B, C]   []       []       [A]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   [S]   []    []    []    []    []    []    []    
[S]   [A]   [S]   []    []    []    []    []    []    []    
[S]   [A]   [S]   []    []    []    []    []    []    []    
[S]   [A]   [B, S][S]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AC }, { B-->SB }]
S[{ S-->SA }, { S-->CB }, { S-->SC }]
C[{ C-->BA }, { C-->a }]

word='babbabaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[C]   []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[S]   []    []    [B]   [C]   []    []    []    []    []    
[S]   [S]   [B]   [C]   []    [A]   []    []    []    []    
[B, S][S]   []    []    [S]   [B]   [C]   []    []    []    
[S]   [S]   []    []    [S]   []    []    [C]   []    []    
[S]   [S]   []    []    [S]   []    []    []    [C]   []    
[S]   [S]   []    []    [S]   []    []    []    []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->SA }, { B-->CC }, { B-->SS }]
S[{ S-->BB }, { S-->BC }]
C[{ C-->b }]

word='bbbbabbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[S]   [B]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [C]   []    []    []    []    []    []    
[B]   [B]   []    []    [A]   []    []    []    []    []    
[S]   [S]   []    []    []    [C]   []    []    []    []    
[S]   [S]   []    []    []    [B]   [C]   []    []    []    
[A]   [A]   []    []    []    [S]   [B]   [C]   []    []    
[A, B][A, B][]    []    []    [S]   [S]   [B]   [C]   []    
[A, S][A, S][]    []    []    [B]   [B]   []    []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    [S]   []    []    []    []    
[A, S][]    []    []    []    [B]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->b }, { B-->SB }, { B-->AA }, { B-->SS }]
S[{ S-->AS }, { S-->a }]

word='bbbbabbbba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B]      [A, B]   []       []       []       []       []       []       []       []       
[]       [B]      [A, B]   []       []       []       []       []       []       []       
[]       []       [B]      [A, B]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [S]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [A, B]   []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [A, B]   []       []       []       
[]       []       []       []       []       []       [B]      [A, B]   []       []       
[]       []       []       []       []       []       []       [B]      [A, B]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B, S][A, B, S][A, B, S][A, S]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
C[{ C-->SA }, { C-->b }]
S[{ S-->CC }]

word='bbbbabbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       []       [S]      [C]      []       []       []       []       []       []       
[A, S, C][A, C, S][A, C]   [A]      [A]      []       []       []       []       []       
[S]      [S]      [S]      []       []       [C]      []       []       []       []       
[]       []       []       []       []       [S]      [C]      []       []       []       
[]       []       []       []       []       []       [S]      [C]      []       []       
[]       []       []       []       []       []       []       [S]      [C]      []       
[A, C, S][A, C, S][A, S, C][]       []       [A, S, C][A, S, C][A, C]   [A]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->a }, { S-->CS }]
C[{ C-->SA }]

word='bbbbabbbba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[C][C][C][C][C][A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->SB }, { B-->a }]
C[{ C-->CB }, { C-->b }]
S[{ S-->CC }]

word='bbbbabbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       []       [S]      [C]      []       []       []       []       []       []       
[B, S]   [C]      [B, S]   [C]      [B]      []       []       []       []       []       
[B, S]   [S, C]   [B, S]   [C, S]   [B]      [C]      []       []       []       []       
[B, S]   [S, C]   [B, S]   [C, S]   [B]      [S]      [C]      []       []       []       
[B, S]   [S, C]   [B, S]   [C, S]   [B]      []       [S]      [C]      []       []       
[B, S]   [S, C]   [B, S]   [C, S]   [B]      []       []       [S]      [C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B]      [B, S]   [C]      [B, S]   [C]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[C, S][]    [C, S][S]   [B]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
S[{ S-->AA }, { S-->b }]

word='aaaabbbbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][S][A][] [] [] [] [] [] 
[S][A][S][A][S][] [] [] [] [] 
[S][A][S][A][] [S][] [] [] [] 
[S][A][S][A][] [] [S][] [] [] 
[S][A][S][A][] [] [] [S][] [] 
[S][A][S][A][] [] [] [] [S][] 
[S][A][S][A][] [] [] [] [] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->CA }, { B-->BA }, { B-->a }]
C[{ C-->b }]
S[{ S-->BC }]

word='aaaabbbbbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][A, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [A, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [A, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=55

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=55

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->a }, { C-->SS }, { C-->SC }]

word='aaaabbbbbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][]    []    []    []    []    []    
[S, C][S, C][S, C][C]   [S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [S]   []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [C]   [S]   []    []    []    
[C, S][S, C][S, C][S, C][C, S][C]   [C]   [S]   []    []    
[C, S][C, S][S, C][S, C][C, S][C, S][C]   [C]   [S]   []    
[C, S][C, S][C, S][S, C][C, S][C, S][C, S][C]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->BC }, { B-->a }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->SC }]
C[{ C-->b }]

word='aaaabbbbbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [B, S][A, C][]    []    []    []    []    
[S]   [S]   [S]   [B, S][A]   [A, C][]    []    []    []    
[S]   [S]   [S]   [B, S][A]   [A]   [A, C][]    []    []    
[S]   [S]   [S]   [B, S][A]   [A]   [A]   [A, C][]    []    
[S]   [S]   [S]   [B, S][A]   [A]   [A]   [A]   [A, C][]    
[S]   [S]   [S]   [B, S][A]   [A]   [A]   [A]   [A]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [B][] [] [] [] [] [] 
[S][S][] [B][] [] [] [] [] [] 
[S][S][] [B][] [] [] [] [] [] 
[S][S][] [B][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->a }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->BB }]

word='aaaabbbbbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, S][B, S][]    []    []    []    []    []    []    []    
[A, S][A, S][B, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][B, S][]    []    []    []    []    []    
[A, S][A, S][A, S][S]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [B]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AS }, { A-->BA }]
B[{ B-->a }]
S[{ S-->BB }, { S-->SS }, { S-->b }, { S-->AB }]

word='aaaabbbaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A]   [S]   [B]   []    []    []    []    []    []    []    
[A, S][A]   [S]   [B]   []    []    []    []    []    []    
[A, S][A]   [A, S][A]   [S]   []    []    []    []    []    
[A, S][A]   [A, S][A]   [S]   [S]   []    []    []    []    
[A, S][A]   [A, S][A]   [S]   [S]   [S]   []    []    []    
[A, S][A, S][A, S][S]   []    []    []    [B]   []    []    
[A, S][A, S][A, S][S]   []    []    []    [A]   [S]   []    
[A, S][A, S][A, S][A]   [S]   [S]   [S]   [S]   []    [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, S][A]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->SS }]
S[{ S-->a }, { S-->b }, { S-->BC }]
C[{ C-->a }]

word='aaaabbbaba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [S, C][]    []    []    []    []    []    []    []    
[B, S][B]   [S, C][]    []    []    []    []    []    []    
[B, S][B, S][B]   [S, C][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B, S][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S, C][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }, { B-->AA }]
C[{ C-->AC }, { C-->BA }]
S[{ S-->BB }, { S-->SS }]

word='aaaabbbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[C]      [B]      [A]      []       []       []       []       []       []       []       
[C, S]   [C]      [B]      [A]      []       []       []       []       []       []       
[C]      [S, C]   [C, S]   [B]      [A, B]   []       []       []       []       []       
[S, C]   [C]      [C, S]   [C, S]   [B, C, S][A, B]   []       []       []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [C, S]   [B, C, S][A, B]   []       []       []       
[S, C]   [S, C]   [C, S]   [C]      [C, S]   [C, S]   [B, C]   [A]      []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [S, C]   [B]      [A, B]   []       
[S, C]   [C]      [C, S]   [C, S]   [C, S]   [C]      [C, S]   [C]      [B, C]   [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[S, C][C]   [C]   []    []    []    []    []    []    []    
[C]   [S, C][C]   [C]   []    []    []    []    []    []    
[C]   [C]   [C, S][C]   [C]   []    []    []    []    []    
[C]   [C]   [C]   [C, S][C]   [C]   []    []    []    []    
[S, C][C]   [C]   [C]   [C, S][C]   [C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=37

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AS }, { A-->SA }]
B[{ B-->BA }, { B-->CS }]
S[{ S-->CA }, { S-->SS }, { S-->b }]
C[{ C-->a }]

word='aaaabbbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    [B]   [S]   []    []    []    []    []    
[]    []    []    [B]   [S]   [S]   []    []    []    []    
[]    []    []    [B]   [S]   [S]   [S]   []    []    []    
[]    [B]   [S]   [A]   []    []    []    [C]   []    []    
[]    [B]   [S]   [A]   []    []    []    [B]   [S]   []    
[S]   [A]   [B]   [B, S][A]   [A]   [A]   [A]   []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   [S]   []    []    []    []    []    []    []    
[]    [A]   [B]   [B, S][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SC }]
C[{ C-->SB }, { C-->a }]
S[{ S-->CC }]

word='aaaabbbaba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[B, C]   [B, S]   [B, C]   []       []       []       []       []       []       []       
[B, S, C][B, C]   [B, S]   [B, C]   []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B]      [B]      []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B]      [B]      [B]      []       []       []       []       
[B, C, S][B, C, S][B, C]   [B]      [B]      [B]      [B]      []       []       []       
[B, C, S][B, C, S][B, C, S][B]      [B]      [B]      [B]      [B, C]   []       []       
[B, C, S][B, C, S][B, C]   [B]      [B]      [B]      [B]      [B]      [B]      []       
[B, C, S][B, C, S][B, C, S][B]      [B]      [B]      [B]      [B]      [B]      [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
S[{ S-->AS }, { S-->a }, { S-->AA }, { S-->SC }, { S-->CS }]
C[{ C-->b }]

word='aabbbbabbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [A]   [C]   []    []    []    []    []    []    
[S]   [S]   []    [A]   [C]   []    []    []    []    []    
[S]   [S]   [S]   []    [A]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    [A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AC }]
S[{ S-->SA }, { S-->CS }, { S-->b }]
C[{ C-->SB }, { C-->a }]

word='aabbbbabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[C]   [C]   [B, C][B, C][C]   [B]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   []    [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   []    [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   []    [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[C]   []    [B]   [B, C][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->a }, { B-->CC }]
S[{ S-->SA }, { S-->a }, { S-->BS }]
C[{ C-->SS }, { C-->AA }]

word='aabbbbabbb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S, C]   [B, S]   []       []       []       []       []       []       []       []       
[S, C]   [S]      [A]      []       []       []       []       []       []       []       
[B, S, C][S]      [C]      [A]      []       []       []       []       []       []       
[B, S, C][S]      []       [C]      [A]      []       []       []       []       []       
[B, S, C][S]      [B]      []       [C]      [A]      []       []       []       []       
[B, S, C][S, C]   [B, S]   []       [C]      [A]      [B, S]   []       []       []       
[B, S, C][C, S]   [A, S]   [B]      []       [C]      [S]      [A]      []       []       
[B, S, C][B, S, C][C, S]   [A]      [B]      []       [S]      [C]      [A]      []       
[B, S, C][B, S, C][S]      [C]      [A]      [B]      [S]      []       [C]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    [S]   []    [A]   []    []    []    []    []    []    
[]    [B]   [S]   []    [A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
B[{ B-->BC }, { B-->a }]
S[{ S-->AS }, { S-->AC }, { S-->BA }, { S-->SS }]
C[{ C-->BS }]

word='aabbbbabbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[A, S, C][S]      [A]      []       []       []       []       []       []       []       
[A, S]   [A]      []       [A]      []       []       []       []       []       []       
[A]      []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A, B]   []       []       []       
[B, S, C][S, C]   [S]      [S]      [S]      [S]      [S]      [A]      []       []       
[A, S, C][A, S]   [A]      [A]      [A]      [A]      [A]      []       [A]      []       
[A, S]   [A]      []       []       []       []       []       []       []       [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AC }]
B[{ B-->b }, { B-->SC }]
C[{ C-->CA }, { C-->a }, { C-->BS }]
S[{ S-->CB }, { S-->a }]

word='aabbbbabbb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [S, C]   []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       [C]      [S, C]   []       []       []       
[]       []       []       []       [C]      [C, S]   [S]      [B]      []       []       
[S]      [B]      []       [C]      [C, S]   [S]      []       []       [B]      []       
[A, S, C][A, B]   [C]      [C, S]   [S]      []       []       []       []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       [C, S]   []       []       []       []       []       
[A, S, C][A, B]   []       [C, S]   []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AA }]
C[{ C-->AS }, { C-->a }, { C-->SS }]
S[{ S-->CA }, { S-->b }]

word='bbbbbaabab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[C]      [A]      [C]      [S]      []       []       []       []       []       []       
[A, S]   [C]      [A]      [C]      [S]      []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[A, C]   [A, S]   [C]      [A]      [C]      [S]      [A]      [S]      []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A, C, S][A, S, C][A, C, S][A, C]   [C, S]   [S]      [A]      []       [A]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CC }]
C[{ C-->a }, { C-->CS }, { C-->SC }, { C-->b }]

word='bbbbbaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[C]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [C]   [S]   [C]   []    []    []    []    []    []    
[C]   [S]   [C]   [S]   [C]   []    []    []    []    []    
[S, C][C, S][S, C][S, C][S, C][S, C][]    []    []    []    
[S, C][C, S][S, C][S, C][S, C][S, C][S, C][]    []    []    
[S, C][C, S][S, C][S, C][S, C][S, C][S, C][C]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }, { S-->b }]
C[{ C-->a }, { C-->SC }]

word='bbbbbaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[S, C][S, C][C, S][C, S][C, S][S, C][S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
C[{ C-->AS }, { C-->AC }]
S[{ S-->CA }, { S-->a }, { S-->SC }]

word='bbbbbaabab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [S]      [A]      [A]      [A]      []       []       
[C]      [C]      [C]      [C]      [C]      [S, C]   [S, C]   [C]      [S]      []       
[A, S, C][A, S, C][A, C, S][A, C, S][A, C, S][A, S]   [A, S]   [S]      [A]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][]    [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }]
B[{ B-->b }, { B-->AC }]
S[{ S-->CA }, { S-->SA }]
C[{ C-->b }, { C-->AB }]

word='bbbbbaabab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[B, S, C][A]      [B, C]   []       []       []       []       []       []       []       
[A]      [B, C, S][A]      [B, C]   []       []       []       []       []       []       
[B, S, C][A]      [B, S, C][A]      [B, C]   []       []       []       []       []       
[S]      []       [S]      []       [S]      [A]      []       []       []       []       
[S]      []       [S]      []       [S]      []       [A]      []       []       []       
[A]      [B, C, S][A]      [B, S, C][A]      [B, C]   [B, C]   [B, C]   []       []       
[]       [S]      []       [S]      []       [S]      [S]      [S]      [A]      []       
[B, S, C][A]      [B, S, C][A]      [B, S, C][A]      [A]      [A]      [B, C]   [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       [A]      []       [A]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       [A]      []       [A]      []       [A]      [A]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BS }, { A-->AS }]
B[{ B-->b }]
C[{ C-->AC }, { C-->BA }, { C-->SB }]
S[{ S-->CA }]

word='bbbbbaabaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       [C]      [A]      []       []       []       []       
[]       []       [C]      [A]      [S]      []       [A]      []       []       []       
[]       []       [C]      [A]      [S, C]   []       [A]      [B]      []       []       
[C]      [A]      [C, S]   [A, C]   [S]      [C]      [C]      [C]      [A]      []       
[S, C]   [A, C]   [A, C, S][A, C, S][A, C, S][A, S]   [A, S]   [S]      []       [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [C]      [C]      [S]      []       []       []       []       []       
[C]      []       [A, C]   []       [A, C, S][A]      [A, S]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->AC }]
B[{ B-->b }, { B-->BC }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->AB }]

word='bbbbbaabaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [B, S]   []       []       []       []       []       []       []       
[S]      [S]      [S]      [B, S]   []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [B, S]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [A, S]   []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [A, S]   [A, S]   []       []       []       
[S]      [S]      [S]      [S]      [B, S]   [A, S, C][A, S, C][B, S]   []       []       
[S]      [S]      [S]      [S]      [S]      [A, S]   [A, S]   [S]      [A, S]   []       
[S]      [S]      [S]      [S]      [S]      [A, S]   [A, S]   [S]      [A, S]   [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->SS }, { S-->SC }, { S-->b }]
C[{ C-->CS }, { C-->b }]

word='bbbbbaabaa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S, C][S, C]   []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][S, C]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][S, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][S, C]   []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][S, C]   [S]      [B]      []       []       []       []       
[B, S, C][B, S, C][S, C]   [S]      []       []       [B]      []       []       []       
[B, S, C][B, S, C][B, S, C][S]      []       []       [B]      [S, C]   []       []       
[B, S, C][B, S, C][S, C]   [S]      []       []       []       [S]      [B]      []       
[B, S, C][S, C]   [S]      []       []       []       []       []       []       [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]

word='bbbbbaabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    [B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    [B]   [B, S][]    []    
[B, S][B, S][B, S][B, S][B, S][]    [B]   [S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][]    [B]   [S]   []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }]
S[{ S-->AS }, { S-->a }, { S-->SS }]

word='bbbbbaabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[B][B][B][B][B][B][B][A][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->b }, { B-->BA }, { B-->BB }, { B-->CC }]
S[{ S-->CB }]
C[{ C-->b }]

word='bbaaaaaaab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B, S][B, C][]    []    []    []    []    []    []    []    
[B, S][B]   [A]   []    []    []    []    []    []    []    
[B, S][B]   [A]   [A]   []    []    []    []    []    []    
[B, S][B]   [A]   [A]   [A]   []    []    []    []    []    
[B, S][B]   [A]   [A]   [A]   [A]   []    []    []    []    
[B, S][B]   [A]   [A]   [A]   [A]   [A]   []    []    []    
[B, S][B]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[B, S][B]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    
[B, S][B]   []    []    []    []    []    []    []    [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->SA }]
S[{ S-->AA }, { S-->b }]
C[{ C-->b }]

word='bbaaaaaaab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[A, S][A]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A]   [S]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][A]   [S]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   []    [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
C[{ C-->AS }, { C-->AC }, { C-->a }, { C-->CC }, { C-->CS }]
S[{ S-->AA }, { S-->SC }, { S-->b }]

word='bbaaaaaaab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, C, S][A, S]   []       []       []       []       []       []       []       []       
[A, C, S][C, S]   [C]      []       []       []       []       []       []       []       
[A, C, S][C, S]   [C]      [C]      []       []       []       []       []       []       
[A, C, S][C, S]   [C]      [C]      [C]      []       []       []       []       []       
[A, C, S][C, S]   [C]      [C]      [C]      [C]      []       []       []       []       
[A, C, S][C, S]   [C]      [C]      [C]      [C]      [C]      []       []       []       
[A, C, S][C, S]   [C]      [C]      [C]      [C]      [C]      [C]      []       []       
[A, C, S][C, S]   [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       
[A, C, S][A, C, S][C]      [C]      [C]      [C]      [C]      [C]      [C]      [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->SA }, { S-->a }, { S-->b }]

word='bbaaaaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A]   [S]   []    []    []    []    []    []    []    
[A, S][A]   []    [S]   []    []    []    []    []    []    
[A, S][A]   []    []    [S]   []    []    []    []    []    
[A, S][A]   []    []    []    [S]   []    []    []    []    
[A, S][A]   []    []    []    []    [S]   []    []    []    
[A, S][A]   []    []    []    []    []    [S]   []    []    
[A, S][A]   []    []    []    []    []    []    [S]   []    
[A, S][A]   []    []    []    []    []    []    [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->SB }, { C-->CS }, { C-->BB }, { C-->SC }, { C-->b }, { C-->BS }]
S[{ S-->a }, { S-->CC }]

word='bbaaaaaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S, C][C]   [B, S][]    []    []    []    []    []    []    
[C, S][C, S][C]   [B, S][]    []    []    []    []    []    
[S, C][S, C][C]   [C]   [B, S][]    []    []    []    []    
[S, C][S, C][C, S][C]   [C]   [B, S][]    []    []    []    
[S, C][S, C][C, S][C, S][C]   [C]   [B, S][]    []    []    
[S, C][S, C][C, S][C, S][C, S][C]   [C]   [B, S][]    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   [C]   [B, S][]    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BS }]
B[{ B-->b }]
S[{ S-->AA }, { S-->SS }, { S-->b }]

word='aaababaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    [S]   [A]   [B, S][]    []    []    []    []    []    
[S]   []    [S]   []    [A]   []    []    []    []    []    
[S]   []    [S]   []    [A]   [B, S][]    []    []    []    
[S]   [S]   [S]   [A, S][S]   []    [A]   []    []    []    
[S]   [S]   [S]   [A, S][S]   [A, S][S]   [A]   []    []    
[S]   [S]   [S]   [A, S][S]   [S]   []    [S]   [A]   []    
[S]   [S]   [S]   [A, S][S]   [A, S][S]   []    [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SA }]
C[{ C-->AC }, { C-->a }, { C-->CS }, { C-->SS }]
S[{ S-->AS }, { S-->CC }]

word='aaababaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[C]   [S]   [C]   []    []    []    []    []    []    []    
[]    [B]   []    [A, B][]    []    []    []    []    []    
[S, C][C]   [S]   [C]   [C]   []    []    []    []    []    
[B]   []    [B]   []    []    [A, B][]    []    []    []    
[C, S][C, S][C]   [S]   [S]   [C]   [C]   []    []    []    
[S, C][C, S][S, C][C]   [C]   [S]   [S]   [C]   []    []    
[C, S][C, S][C, S][C, S][S, C][C]   [C]   [S]   [C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][S, C][C]   [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    [C]   []    []    []    []    []    []    []    
[]    []    [C]   [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->b }, { A-->BS }]
B[{ B-->b }]
S[{ S-->AC }, { S-->CB }, { S-->a }]
C[{ C-->BA }, { C-->a }]

word='aaababaaaa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A]      [S, C]   []       []       []       []       []       []       []       []       
[S]      [A]      [S, C]   []       []       []       []       []       []       []       
[]       [A]      [S]      [A, B]   []       []       []       []       []       []       
[A]      [S]      [A]      [A, S]   [S, C]   []       []       []       []       []       
[]       []       []       [A]      [S]      [A, B]   []       []       []       []       
[A]      [S]      [A]      [C, S]   [A]      [A, S]   [S, C]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, C, S][A, S]   [A, C, S][A]      [S, C]   []       []       
[A, S]   [A, S]   [A, S]   [A, C, S][A, S]   [A, S]   [S]      [A]      [S, C]   []       
[A, S]   [A, S]   [A, S]   [A, C, S][A, S]   [A, C, S][A]      [S]      [A]      [S, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [C, S]   []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [C, S]   [A]      []       []       []       []       []       
[A, S]   [A, S]   []       [C, S]   [A, S]   [S]      []       []       []       []       
[A, S]   [A, S]   []       [C, S]   []       [A, C, S][A]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=30

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->SA }]
S[{ S-->AC }, { S-->a }, { S-->b }]
C[{ C-->a }, { C-->CC }]

word='aaababaaaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[A]   [A]   [A]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   [S, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   [C]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   [C]   [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
S[{ S-->AA }, { S-->b }]

word='aaababaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [S]   [A, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AC }, { B-->AS }]
S[{ S-->CB }, { S-->AA }, { S-->SC }, { S-->BC }, { S-->BS }]
C[{ C-->SS }, { C-->b }]

word='baaaabbaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[S]      [B]      [S]      [A]      []       []       []       []       []       []       
[]       [C]      [B]      [S]      [A]      []       []       []       []       []       
[S]      [B, C]   [B, S]   [S]      [B]      [C]      []       []       []       []       
[C, S]   [B, C, S][B, C, S][B, S]   [S]      []       [C]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[S, C]   [B, C, S][B, S, C][B, C, S][C]      []       []       [S]      [A]      []       
[C, S]   [B, S]   [B, C, S][B, C]   [S]      []       [S]      [B]      [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [B, C][B]   []    []    []    []    []    []    []    
[]    [B, C][B]   [B, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   [B, C][B]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->b }]
B[{ B-->b }]
S[{ S-->BA }, { S-->a }, { S-->BS }]

word='baaaabbaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A]   [A, S][]    []    []    []    []    []    []    
[A, S][A]   [A]   [A, S][]    []    []    []    []    []    
[A, S][A]   [A]   [A]   [A, S][]    []    []    []    []    
[A, S][A]   [A]   [A]   [A]   [A, B][]    []    []    []    
[A, S][A]   [A]   [A]   [A]   [A, S][A, B][]    []    []    
[A, S][A]   [A]   [A]   [A]   [A, S][A, S][A, S][]    []    
[A, S][A]   [A]   [A]   [A]   [A, S][A, S][A]   [A, S][]    
[A, S][A]   [A]   [A]   [A]   [A, S][A, S][A]   [A]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 
[S][] [] [] [] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->CS }]

word='baaaabbaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[B][C][C][C][C][C][] [] [] [] 
[] [B][B][B][B][B][C][] [] [] 
[S][S][S][S][S][S][] [A][] [] 
[S][S][S][S][S][S][] [] [A][] 
[S][S][S][S][S][S][] [] [] [A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][B][B][] [] [] [] [] [] 
[] [S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->BS }, { B-->BA }, { B-->SC }, { B-->SS }]
C[{ C-->AC }, { C-->a }, { C-->b }]
S[{ S-->SA }, { S-->AA }]

word='baaaabbaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[C]      [A]      [C]      []       []       []       []       []       []       []       
[A, S]   [C]      [A]      [C]      []       []       []       []       []       []       
[B, C]   [A, S]   [C]      [A]      [C]      []       []       []       []       []       
[A, S]   [B, C]   [A, S]   [C]      [A]      [C]      []       []       []       []       
[B, C]   [A, S]   [B, C]   [A, S]   [C]      [A]      [C]      []       []       []       
[A, B, S][B, C]   [A, S]   [B, C]   [A, S]   [C]      [A]      [C]      []       []       
[B, C]   [A, B, S][B, C]   [A, S]   [B, C]   [A, S]   [C]      [A]      [C]      []       
[A, B, S][B, C]   [A, B, S][B, C]   [A, S]   [B, C]   [A, S]   [C]      [A]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[C]   [S]   [C]   [S]   []    []    []    []    []    []    
[B, S][C]   [S]   [C]   [S]   []    []    []    []    []    
[C]   [B, S][C]   [S]   [C]   [S]   []    []    []    []    
[B, S][C]   [B, S][C]   [S]   [C]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BS }]
B[{ B-->CC }]
S[{ S-->SA }, { S-->AA }, { S-->BB }]
C[{ C-->a }]

word='baaaabbaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[A, S][B, S][A, C][]    []    []    []    []    []    []    
[S]   [A, S][B, S][A, C][]    []    []    []    []    []    
[A, S][A, S][A, S][B, S][A, C][]    []    []    []    []    
[S]   [A, S][A, S][S]   [S]   [A]   []    []    []    []    
[S]   [A, S][A, S][A, S][S]   [S]   [A]   []    []    []    
[S]   [A, S][A, S][A, S][S]   [S]   [S]   [A, C][]    []    
[S]   [A, S][A, S][A, S][S]   [S]   [A, S][B, S][A, C][]    
[S]   [A, S][A, S][A, S][S]   [S]   [S]   [A, S][B, S][A, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    [A]   [A, S][]    []    []    []    []    []    []    
[]    [A]   [A]   [A, S][]    []    []    []    []    []    
[]    [A]   [A]   [A, S][S]   []    []    []    []    []    
[]    [A]   [A]   [A, S][S]   []    []    []    []    []    
[]    [A]   [A]   [A, S][S]   [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->AS }]
S[{ S-->SB }, { S-->a }, { S-->BS }]

word='baababbbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[S]      [A]      [S]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[B, S]   [A, B]   [S]      [B]      [S]      []       []       []       []       []       
[A]      [A]      []       [A]      []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[B, S]   [A, B]   [S]      [B]      [S]      [B]      [B]      [B]      [S]      []       
[A, B, S][A, B, S][A, S]   [B, S]   [A, S]   [B, S]   [B, S]   [S]      [A]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [B][] [B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CB }, { C-->SC }, { C-->SS }, { C-->b }]
S[{ S-->BB }, { S-->CS }]

word='baababbbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S, C][S]   [B]   []    []    []    []    []    []    []    
[C]   [C]   []    [C]   []    []    []    []    []    []    
[C]   [C]   []    [C]   [B]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    [C]   [B]   []    
[C, S][C, S][]    [S]   []    [S]   [S]   [S, C][S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->SC }, { S-->CC }, { S-->b }]
C[{ C-->a }, { C-->SS }]

word='baababbbaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[C, S][S]   [C]   []    []    []    []    []    []    []    
[C, S][C]   []    [A, S][]    []    []    []    []    []    
[C, S][C, S][]    [S]   [C]   []    []    []    []    []    
[S, C][S, C][S]   [C]   []    [A, S][]    []    []    []    
[C, S][C, S][S, C][C, S][S]   [C, S][A, S][]    []    []    
[C, S][C, S][S, C][C, S][S, C][C, S][C, S][A, S][]    []    
[C, S][C, S][S, C][C, S][S, C][C, S][C, S][S]   [C]   []    
[C, S][C, S][S, C][C, S][S, C][C, S][C, S][C, S][S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AS }]
B[{ B-->b }, { B-->SA }]
S[{ S-->BA }, { S-->SS }, { S-->b }, { S-->BS }]

word='baababbbaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [A]      []       []       []       []       []       []       []       []       
[B, S]   []       [A]      []       []       []       []       []       []       []       
[A, B, S][]       [A]      [B, S]   []       []       []       []       []       []       
[A, B, S][]       [A]      [B, S]   [A]      []       []       []       []       []       
[A, B, S][]       [A]      [A, B, S][A]      [B, S]   []       []       []       []       
[A, B, S][]       [A]      [A, B, S][A]      [A, S]   [B, S]   []       []       []       
[A, B, S][]       [A]      [A, B, S][A]      [A, B, S][A, S]   [B, S]   []       []       
[A, B, S][]       [A]      [A, B, S][A]      [A, B, S][A, B, S][B, S]   [A]      []       
[A, B, S][]       [A]      [A, B, S][A]      [A, B, S][A, B, S][B, S]   []       [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AC }]
B[{ B-->AA }, { B-->SC }, { B-->CC }]
C[{ C-->AS }, { C-->CB }]
S[{ S-->BB }, { S-->b }]

word='baababbbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [B]      [A]      []       []       []       []       []       []       []       
[]       [A]      [C]      [S]      []       []       []       []       []       []       
[]       [B]      []       []       [A]      []       []       []       []       []       
[]       [A, B, S][A, B]   [B]      [C]      [S]      []       []       []       []       
[B]      [A, C]   [C]      []       []       []       [S]      []       []       []       
[B]      [C]      []       []       []       []       []       [S]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[B, S]   [C]      []       []       []       []       []       []       [B]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->CA }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->AB }]
C[{ C-->b }]

word='bbbaababab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A]      [A, C]   []       []       []       []       []       []       []       []       
[A]      [A]      [A, C]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      [S]      []       []       []       []       []       []       
[A]      [A]      [A]      []       [S]      []       []       []       []       []       
[A]      [A]      [A]      []       [S]      [A, C]   []       []       []       []       
[B, S]   [B, S]   [B, S]   []       []       [B]      [S]      []       []       []       
[B, S]   [B, S]   [B, S]   []       []       [B]      [S]      [A, C]   []       []       
[A, B, S][A, B, S][A, B, S][]       [S]      [A, S]   []       [B]      [S]      []       
[A, B, S][A, B, S][A, B, S][]       [S]      [A, S]   []       [B]      [S]      [A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CA }]
B[{ B-->b }, { B-->CS }]
C[{ C-->AS }, { C-->SB }]
S[{ S-->BA }, { S-->BC }]

word='bbbaababab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       [S]      [A]      []       []       []       []       []       []       
[]       []       [S]      [A]      [A]      []       []       []       []       []       
[]       [S]      [C]      []       []       [B]      []       []       []       []       
[]       [S]      [A, S]   [C]      [C]      [S]      [A]      []       []       []       
[S]      [C, S]   [C]      []       []       [C]      []       [B]      []       []       
[S]      [A, S]   [A, S, C][A, B, C][A, B, C][A, S]   [C]      [S]      [A]      []       
[C, S]   [C, S]   [C]      []       []       [C]      []       [C]      []       [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   [A, S][]    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    [A, S][]    []    []    []    
[C, S][C, S][]    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AC }, { S-->AS }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->SC }]
C[{ C-->b }]

word='bbbaababab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }]
B[{ B-->AC }, { B-->CA }, { B-->CC }, { B-->SS }]
S[{ S-->AA }]
C[{ C-->b }, { C-->AB }]

word='bbbaababab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[A]   [B]   [C]   []    []    []    []    []    []    []    
[S]   []    [B]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[B]   [A]   [B]   [C]   [B]   [C]   []    []    []    []    
[C]   [B, S][A]   [B]   [C]   [B]   [A]   []    []    []    
[B, S][A, C][B]   [A, C][B, S][A]   [B]   [C]   []    []    
[A, C][B, S][A, C][B, S][A, C][B, S][C]   [B]   [A]   []    
[B, S][A, C][B, S][A, C][B, S][A, C][B, S][A]   [B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [B]   [A]   []    []    []    []    []    []    []    
[S]   [A, C][]    [A, C][S]   []    []    []    []    []    
[A, C][]    [A, C][]    [A, C][S]   []    []    []    []    
[]    [A, C][]    [A, C][]    [A, C][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SB }, { B-->BB }]
S[{ S-->AS }, { S-->a }, { S-->BC }]
C[{ C-->BA }, { C-->CB }]

word='bbbaababab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, B]   []       []       []       []       []       []       []       []       
[B, S, C][B, C]   [A, B]   []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[B, C, S][B, C]   [B]      [B]      [B]      [A, B]   []       []       []       []       
[]       []       []       []       []       [S]      [S]      []       []       []       
[B, C, S][B, C]   [B]      [B]      [B]      [B]      [B]      [A, B]   []       []       
[]       []       []       []       []       []       []       [S]      [S]      []       
[B, C, S][B, C]   [B]      [B]      [B]      [B]      [B]      [B]      [B]      [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->a }]
C[{ C-->SA }, { C-->SB }, { C-->AA }, { C-->b }, { C-->BC }]
S[{ S-->a }, { S-->SC }]

word='abbbbaabaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S, C]   [A, C]   []       []       []       []       []       []       []       []       
[S, C]   [C]      [A, C]   []       []       []       []       []       []       []       
[S, C]   []       [C]      [A, C]   []       []       []       []       []       []       
[S, C]   []       []       [C]      [A, C]   []       []       []       []       []       
[C]      []       []       []       []       [B, S]   []       []       []       []       
[S, C]   []       []       []       [C]      [A, C]   [B, S]   []       []       []       
[S, C]   []       []       []       [C]      [A, S, C][S, C]   [A, C]   []       []       
[S, C]   []       []       []       []       [S, C]   [C]      []       [B, S]   []       
[S, C]   []       []       []       [C]      [A, S, C][S, C]   [C]      [A, C]   [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    [A, C][S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->b }]
B[{ B-->SB }, { B-->CC }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->CS }]
C[{ C-->a }]

word='abbbbaabaa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A]      [A]      []       []       []       []       []       []       []       
[S]      [A]      [A]      [A]      []       []       []       []       []       []       
[S]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A]      []       []       []       []       [S, C]   []       []       []       []       
[B, S]   [A]      [A]      [A]      [A]      [A, B, S][S, C]   []       []       []       
[S]      [A]      [A]      [A]      [A]      [A, S]   [S]      [A]      []       []       
[A, S]   [A]      [A]      [A]      [A]      [A, S]   [A]      []       [S, C]   []       
[A, B, S][A]      [A]      [A]      [A]      [A, B, S][B, S]   [A]      [A, B, S][S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    [A, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }]
B[{ B-->CA }, { B-->a }]
S[{ S-->SB }, { S-->AA }]
C[{ C-->SS }]

word='abbbbaabaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [] [S][A][] [] [] [] [] [] 
[A][C][] [S][A][] [] [] [] [] 
[A][C][] [S][] [B][] [] [] [] 
[A][C][] [S][] [] [B][] [] [] 
[S][B][] [] [] [] [] [A][] [] 
[S][] [] [] [] [] [] [] [B][] 
[S][] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }]
S[{ S-->SA }, { S-->CC }, { S-->CS }]
C[{ C-->AA }]

word='abbbbaabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[]       [C]      [A]      []       []       []       []       []       []       []       
[S]      []       [C]      [A]      []       []       []       []       []       []       
[S]      [S]      []       [C]      [A]      []       []       []       []       []       
[A, S]   [S]      [S]      []       [C]      [A]      []       []       []       []       
[A, C, S][A, S]   [S]      [S]      []       [C]      [A]      []       []       []       
[A, C, S][A, S, C][A, S]   [S]      [S]      []       [C]      [A]      []       []       
[A, S, C][A, S, C][A, C, S][A, S]   [S]      [S]      []       [C]      [A]      []       
[A, S, C][A, S, C][A, C, S][A, C, S][A, S]   [S]      [S]      []       [C]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A]   [A, S][S]   []    []    []    []    []    []    []    
[]    [A]   [A, S][S]   []    []    []    []    []    []    
[]    []    [A]   [A, S][S]   []    []    []    []    []    
[]    []    []    [A]   [A, S][S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->BB }]
S[{ S-->a }, { S-->SC }]
C[{ C-->a }, { C-->CS }, { C-->b }]

word='abbbbaabaa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[B, S]   [B]      [B, C]   []       []       []       []       []       []       []       
[B, S]   [B]      [B]      [B, C]   []       []       []       []       []       []       
[B, S]   [B]      [B]      [B]      [B, C]   []       []       []       []       []       
[S]      []       []       []       [C]      [S, C]   []       []       []       []       
[S]      []       []       []       [C]      [S, C]   [S, C]   []       []       []       
[B, S]   [B]      [B]      [B]      [B, C]   [B, C, S][B, S]   [B, C]   []       []       
[S]      []       []       []       [C]      [C, S]   [S]      [C]      [S, C]   []       
[S]      []       []       []       [C]      [C, S]   [S]      [C]      [S, C]   [S, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BS }]
B[{ B-->a }, { B-->AA }]
S[{ S-->SA }, { S-->a }]

word='aaaabbbaab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [A]      [B, S]   []       []       []       []       []       []       []       
[A, B]   [S]      [A]      [B, S]   []       []       []       []       []       []       
[A, B, S][A, S]   [A, B]   [S]      [A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   []       [B]      [A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B]      [A]      []       [B, S]   []       []       
[A, B, S][A, B, S][A, B, S][S]      [A]      []       [B]      [A]      [B, S]   []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, B]   [A]      [B]      [A, B]   [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [A]   [S]   []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    []    [A]   [A]   []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SA }]
S[{ S-->AS }, { S-->AC }, { S-->a }, { S-->SS }]
C[{ C-->b }]

word='aaaabbbaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [C]   []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [A]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    [A, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    [A, S][A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   []    [S]   [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->b }, { B-->CA }, { B-->AA }]
S[{ S-->AS }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->BS }]

word='aaaabbbaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [B]   [A]   []    []    []    []    []    []    []    
[]    []    [B]   [A]   []    []    []    []    []    []    
[S, C][C, S][S, C][S]   [B, S][]    []    []    []    []    
[S, C][S]   [S]   []    [C]   [B, S][]    []    []    []    
[S, C][C, S][S, C][S]   [S]   [C]   [B, S][]    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   [A]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A]   []    
[S, C][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   [B, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[]    []    []    [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SB }]
B[{ B-->a }]
S[{ S-->AS }, { S-->BA }, { S-->a }, { S-->SS }, { S-->b }]

word='aaaabbbaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, S][B, S][]    []    []    []    []    []    []    []    
[A, S][A, S][B, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][B, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AC }, { A-->SA }]
S[{ S-->CA }, { S-->CS }, { S-->b }]
C[{ C-->a }]

word='aaaabbbaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[A, S][A, S][A, C][]    []    []    []    []    []    []    
[A, S][A, S][A, S][A, C][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A]   [A, S][]    []    []    
[A, S][A, S][A, S][A, S][A]   [A]   [A]   [A, C][]    []    
[A, S][A, S][A, S][A, S][A]   [A]   [A]   [A, S][A, C][]    
[A, S][A, S][A, S][A, S][A]   [A]   [A]   [A, S][A, S][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->a }, { B-->SC }]
C[{ C-->SB }, { C-->AA }]
S[{ S-->BB }]

word='aaabbbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[C]      [S]      [B]      []       []       []       []       []       []       []       
[A]      [C]      [S]      [B]      []       []       []       []       []       []       
[B]      [A]      [C]      [S]      [B]      []       []       []       []       []       
[S]      [B]      [A]      [C]      [S]      [B]      []       []       []       []       
[A, C]   [S]      [B]      [A]      [C]      [S]      [B]      []       []       []       
[A, C]   [A, C]   [S]      [B]      [A]      [C]      [S]      [B]      []       []       
[A, B]   [A, C]   [A, C]   [S]      [B]      [A]      [C]      [S]      [B]      []       
[A, B, S][A, B]   [A, C]   [A, C]   [S]      [B]      [A]      [C]      [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [B]   [A]   []    []    []    []    []    []    []    
[C]   []    [B]   [A]   []    []    []    []    []    []    
[]    [C]   []    [B]   [A]   []    []    []    []    []    
[B]   []    [C]   []    [B]   [A]   []    []    []    []    
[A, B][B]   []    [C]   []    [B]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->AA }, { S-->BB }, { S-->b }, { S-->AB }]

word='aaabbbbbba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, B]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [S]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [B]      []       [B]      [S]      []       []       []       []       
[B, S]   [B, S]   [S]      [S]      []       [B]      [S]      []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      []       [B]      [S]      []       []       
[B, S]   [B, S]   [B]      []       [B]      [S]      []       [B]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [A]      [B]      [A, S]   []       [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [S]   [S]   []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    [S]   [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->a }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->b }]

word='aaabbbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[]       [C]      [B]      []       []       []       []       []       []       []       
[]       [C]      []       [A, C]   []       []       []       []       []       []       
[C]      [C]      [A]      [C, S]   [A, C]   []       []       []       []       []       
[C]      [A, C]   [A, S]   [S, C]   [C, S]   [A, C]   []       []       []       []       
[A, C]   [A, C, S][A, S]   [S, C]   [S, C]   [C, S]   [A, C]   []       []       []       
[A, C, S][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [C, S]   [A, C]   []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [S, C]   [C, S]   [A, C]   []       
[A, S, C][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [S, C]   [C]      []       [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[A]   [A, S][A]   [S]   []    []    []    []    []    []    
[A]   [A]   [A]   [S]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [S]   [S]   [S]   []    []    []    []    
[A]   [A]   [A]   [S]   [S]   [S]   [S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->SA }, { B-->AA }, { B-->BB }]
S[{ S-->BA }, { S-->SS }, { S-->b }]

word='aaabbbbbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[S]      [B]      [A]      []       []       []       []       []       []       []       
[B, S]   [A]      []       [S]      []       []       []       []       []       []       
[A, B, S][A]      []       [S]      [S]      []       []       []       []       []       
[A, B, S][A]      []       [S]      [S]      [S]      []       []       []       []       
[A, B, S][A]      []       [S]      [S]      [S]      [S]      []       []       []       
[A, B, S][A]      []       [S]      [S]      [S]      [S]      [S]      []       []       
[A, B, S][A]      []       [S]      [S]      [S]      [S]      [S]      [S]      []       
[B, S]   [B]      []       [B]      [B]      [B]      [B]      [B]      [B]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[S][] [] [B][B][B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->BB }, { S-->b }]

word='aaabbbbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    [B]   [S]   []    []    []    []    []    []    []    
[B, S][S]   [B]   [B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AC }]
S[{ S-->CA }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->SS }, { C-->AA }]

word='babababbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[S]      [C]      [S]      []       []       []       []       []       []       []       
[A, C]   [S]      [C]      [S]      []       []       []       []       []       []       
[S]      [A, C]   [S]      [C]      [S]      []       []       []       []       []       
[A, C, S][S]      [A, C]   [S]      [C]      [S]      []       []       []       []       
[S, C]   [A, S, C][S]      [A, C]   [S]      [C]      [S]      []       []       []       
[A, C, S][S, C]   [A, C, S][S]      [A, C]   [S]      [C]      [S]      []       []       
[A, C, S][A, S, C][C, S]   [A, C, S][S]      [A, C]   [S]      [C]      [S]      []       
[A, C, S][A, S, C][A, C, S][C, S]   [A, C, S][S]      [A, C]   [S]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[A, S][]    [A]   []    []    []    []    []    []    []    
[]    [A, S][]    [A]   []    []    []    []    []    []    
[]    []    [A, S][]    [A]   []    []    []    []    []    
[]    []    []    [A, S][]    [A]   []    []    []    []    
[]    []    []    []    [A, S][]    [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SA }]
B[{ B-->b }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->b }]

word='babababbba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[A, S][A]   [A, S][A, S][]    []    []    []    []    []    
[S]   []    [S]   [S]   [B, S][]    []    []    []    []    
[A, S][A]   [A, S][A]   [A, S][A, S][]    []    []    []    
[S]   []    [S]   []    [S]   [S]   [B, S][]    []    []    
[A, S][A]   [A, S][A]   [A, S][A, S][A, S][B, S][]    []    
[A, S][A]   [A, S][A]   [A, S][A, S][A, S][A, S][B, S][]    
[A, S][A]   [A, S][A]   [A, S][A]   [A, S][A, S][A, S][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [S][] [S][] [] [] [] [] 
[S][A][S][A][S][S][] [] [] [] 
[S][A][S][A][S][] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->AB }, { B-->SB }, { B-->a }]
S[{ S-->AA }, { S-->b }]

word='babababbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A]      [A]      [S]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [B]      [B]      []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [A]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, B]   [B]      [B]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A]      [A]      [S]      []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[]       []       []       []       []       []       []       []       [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [B]      [B]      [B]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->AS }]
B[{ B-->b }, { B-->a }]
C[{ C-->AC }, { C-->SA }, { C-->a }]
S[{ S-->BA }]

word='babababbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[S]      [A]      [B]      []       []       []       []       []       []       []       
[A]      [C, S]   [A]      [B, C]   []       []       []       []       []       []       
[A, C]   []       [S]      [A]      [B]      []       []       []       []       []       
[A, C, S][A, C, S][A]      [S, C]   [A]      [B, C]   []       []       []       []       
[A, C]   [S]      [A, C]   []       [S]      [A]      [B]      []       []       []       
[A, C]   [C]      [S]      [A, C]   []       [S]      [A]      [B]      []       []       
[A, C, S][A, C, S][A, C]   [S]      [A, C]   []       [S]      [A]      [B]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      [S, C]   [A]      [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [A, C, S][A, C]   [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->a }]
S[{ S-->AS }, { S-->a }, { S-->b }]
C[{ C-->CB }, { C-->BA }, { C-->AA }, { C-->b }]

word='babababbba'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[A]      []       [S, C]   []       []       []       []       []       []       []       
[A, S]   []       [C]      [B, S]   []       []       []       []       []       []       
[A, S]   [C]      [A]      []       [S, C]   []       []       []       []       []       
[A, S]   [C]      [A, S]   []       [C]      [B, S]   []       []       []       []       
[A, C, S][A, C]   [A, S]   [C]      [A]      []       [S, C]   []       []       []       
[A, C, S][A, S, C][A, C, S][A, C]   [A, S]   [C]      [A]      [S, C]   []       []       
[A, S, C][A, C, S][A, C, S][A, S]   [C, S]   [A]      [S]      [A]      [S, C]   []       
[A, S, C][A, S, C][A, S, C][A, S]   [S, C]   [A, S]   []       [A, S]   [C]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[A, S][A, C][A, S][]    []    []    []    []    []    []    
[]    []    [A, S][A, C][A, S][]    []    []    []    []    
[]    []    [A]   []    [S]   [A]   []    []    []    []    
[]    []    [A]   [A]   [S, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->SA }, { S-->b }]

word='bbaaabbaba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   []    [A]   []    []    []    []    []    []    
[S]   [S]   []    []    [A]   []    []    []    []    []    
[S]   [S]   []    []    []    [A, S][]    []    []    []    
[S]   [S]   []    []    []    [S]   [A, S][]    []    []    
[S]   [S]   []    []    []    [S]   [S]   [A]   []    []    
[S]   [S]   []    []    []    [S]   [S]   []    [A, S][]    
[S]   [S]   []    []    []    [S]   [S]   []    [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
S[{ S-->SB }, { S-->CC }, { S-->BB }]
C[{ C-->b }]

word='bbaaabbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][B]   [B]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->CA }, { B-->a }, { B-->SC }]
C[{ C-->SA }, { C-->b }]
S[{ S-->BA }, { S-->SB }, { S-->CC }, { S-->BC }]

word='bbaaabbaba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, C]   []       []       []       []       []       []       []       []       
[S]      []       [B]      []       []       []       []       []       []       []       
[S]      []       []       [B]      []       []       []       []       []       []       
[S]      []       []       []       [B]      []       []       []       []       []       
[B, C]   []       []       []       [S]      [A, C]   []       []       []       []       
[B, S]   []       []       [S]      [B, C]   [B, S]   [A, C]   []       []       []       
[S]      []       []       [S]      []       [S]      []       [B]      []       []       
[B, S, C][]       [S]      [B, C]   [S]      [B, C]   []       [S]      [A, C]   []       
[S]      []       [S]      []       [S]      []       []       [S]      []       [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->SA }]
B[{ B-->a }]
S[{ S-->CA }, { S-->CB }, { S-->SS }, { S-->AA }, { S-->b }]
C[{ C-->AB }]

word='bbaaabbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [A, B]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][S, C]   [A, B]   []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [S, C]   [A, B]   []       []       []       []       []       
[S]      [S]      [S]      [S]      []       [S]      []       []       []       []       
[S]      [S]      [S]      [S]      []       [S]      [S]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [S]      [A]      [A]      [A, B]   []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       [S]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [A]      [S]      [S]      [S]      [A]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SB }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->BS }]

word='bbaaabbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[B]      [S]      []       [S]      []       []       []       []       []       []       
[S]      []       []       []       [S]      []       []       []       []       []       
[S]      []       []       []       [S]      [A]      []       []       []       []       
[S]      []       []       []       [S]      []       [A]      []       []       []       
[A, B, S][S]      []       [S]      [A]      []       [B]      [S]      []       []       
[A, B, S][S]      []       [S]      [A]      [B]      [B, S]   [S]      [A]      []       
[A, B, S][A, B, S][S]      [A, S]   [A, B, S][B, S]   [S]      [A]      [B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[A]      []       []       []       [A]      []       []       []       []       []       
[]       [A, B, S][]       []       [A, S]   [B]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }, { B-->a }, { B-->CC }]
C[{ C-->BB }, { C-->SS }]
S[{ S-->CS }, { S-->b }, { S-->AB }]

word='aaabbabbba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S, C]   [A, B]   []       []       []       []       []       []       []       []       
[B]      [S, C]   [A, B]   []       []       []       []       []       []       []       
[]       [S, C]   []       [S]      []       []       []       []       []       []       
[S, C]   [B, S, C][]       [C]      [S]      []       []       []       []       []       
[B, S, C][B, C]   []       []       [B]      [A, B]   []       []       []       []       
[S, C]   [S]      []       []       []       []       [S]      []       []       []       
[B, S, C][B, C]   []       []       []       []       [C]      [S]      []       []       
[B, S, C][S]      []       []       []       []       [S]      [C]      [S]      []       
[B, C, S][B, S, C][S, C]   [B, S]   [C]      [S, C]   [B]      []       [B]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }, { B-->CA }, { B-->a }, { B-->AA }, { B-->CS }]
C[{ C-->SB }]
S[{ S-->CB }, { S-->a }, { S-->BC }]

word='aaabbabbba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[B, S]   [C]      [B, S]   []       []       []       []       []       []       []       
[C]      [B]      []       [A]      []       []       []       []       []       []       
[B, C]   [S]      [C]      [B]      [A]      []       []       []       []       []       
[B, S]   [C]      [B, S]   []       [B]      [B, S]   []       []       []       []       
[C]      [B]      []       []       []       []       [A]      []       []       []       
[B, S, C][B, S]   [C]      [S]      []       [C]      [B]      [A]      []       []       
[B, S]   [C]      [B, S]   []       []       [B]      []       [B]      [A]      []       
[B, S, C][B, C, S][B, S, C][C]      [B]      [S]      []       []       [B]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [C]   [B, C][]    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AS }, { B-->CA }, { B-->a }, { B-->AA }, { B-->CS }]
S[{ S-->SA }, { S-->BA }]
C[{ C-->a }]

word='aaabbabbba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[]       [B, C]   []       []       []       []       []       []       []       []       
[]       []       [B, C]   []       []       []       []       []       []       []       
[]       [B]      [B, S]   [A]      []       []       []       []       []       []       
[B]      [B, S]   [S]      [B]      [A]      []       []       []       []       []       
[B]      [B, S]   [S]      [B]      [A]      [B, C]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [A, B, S][A, B]   [B, S]   [A]      []       []       []       
[B, S]   [B, S]   [B, S]   [A, B, S][A, B, S][S]      [B]      [A]      []       []       
[B, S]   [B, S]   [B, S]   [A, B, S][A, B, S][B, S]   [A, S]   [B]      [A]      []       
[B, S]   [B, S]   [B, S]   [A, B, S][A, B, S][B, S]   [A, S]   [B]      [A]      [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[B]   [B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B]   [A, B][]    []    []    []    []    []    
[B, S][B, S][B]   []    [A, S][]    []    []    []    []    
[B, S][B, S][B]   []    [S]   [B]   []    []    []    []    
[B, S][B, S][B]   []    [S]   [B]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=35

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->BC }]
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->SS }, { S-->SC }]
C[{ C-->BB }]

word='aaabbabbba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S, C][B, S]   []       []       []       []       []       []       []       []       
[A, S]   [A, S, C][B, S]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [C]      [B]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [C]      [B]      []       []       []       []       []       
[A, S]   [A, S]   [S]      [A]      [A, C]   [B, S]   []       []       []       []       
[A, S]   [A, S]   [S]      []       [A]      [C]      [B]      []       []       []       
[A, S]   [A, S]   [S]      []       [A]      [A, S]   [C]      [B]      []       []       
[A, S]   [A, S]   [S]      []       []       []       [A]      [C]      [B]      []       
[A, S]   [A, S]   [S]      []       [A]      [S]      []       [A]      [A, C]   [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][S][] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [A][] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->SC }]
S[{ S-->AS }, { S-->a }, { S-->BB }]
C[{ C-->a }, { C-->b }]

word='aaabbabbba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [S, C][]    []    []    []    []    []    []    []    
[A]   [B]   [S, C][]    []    []    []    []    []    []    
[S]   [A]   [B]   [C]   []    []    []    []    []    []    
[B]   []    [A]   []    [C]   []    []    []    []    []    
[A]   []    [S]   []    []    [S, C][]    []    []    []    
[S]   []    [B]   []    []    [B]   [C]   []    []    []    
[B]   []    [A]   []    []    [A]   []    [C]   []    []    
[A]   []    []    []    []    []    []    []    [C]   []    
[S]   []    []    []    []    []    []    []    []    [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }]
B[{ B-->b }, { B-->a }]
S[{ S-->BA }, { S-->SB }, { S-->BS }]

word='ababbbaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, B][]    []    []    []    []    []    []    
[S]   [S]   []    [B]   []    []    []    []    []    []    
[S]   [S]   []    []    [B]   []    []    []    []    []    
[S]   [S]   []    []    []    [B]   []    []    []    []    
[A, S][A, S][S]   [S]   [S]   [S]   [A, B][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->AC }, { C-->AA }, { C-->SS }]
S[{ S-->CA }, { S-->b }]

word='ababbbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[C, S][C]   [A]   []    []    []    []    []    []    []    
[S, C][S, C][C]   [A, S][]    []    []    []    []    []    
[S, C][S, C][C, S][C]   [A, S][]    []    []    []    []    
[C, S][S, C][C, S][C, S][C]   [A, S][]    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   [A]   []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   [A]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   [A]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SA }, { S-->BB }, { S-->AA }, { S-->b }]

word='ababbbaaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[S]      [A]      [B]      []       []       []       []       []       []       []       
[S]      [A]      [B]      [S]      []       []       []       []       []       []       
[S]      [A]      [B]      []       [S]      []       []       []       []       []       
[S]      [A]      [B]      []       []       [S]      []       []       []       []       
[A, B, S][A, S]   [B, S]   []       [S]      [A]      [B]      []       []       []       
[A, B, S][A, S]   [A, B, S][S]      [A]      []       [S]      [B]      []       []       
[A, B, S][A, S]   [A, B, S][A]      [S]      [A, S]   [A, B]   [S]      [B]      []       
[A, B, S][A, S]   [A, B, S][S]      [A, S]   [A, S]   [S]      [A, B]   [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[A, B][A, S][]    []    []    []    []    []    []    []    
[A]   []    [A, S][]    []    []    []    []    []    []    
[A]   []    [A, B][A]   []    []    []    []    []    []    
[A]   []    [A, S][]    [A]   [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->AS }, { A-->BA }]
B[{ B-->a }]
S[{ S-->b }, { S-->AB }]

word='ababbbaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A, S][S]   [A, B][]    []    []    []    []    []    []    
[A]   []    [A]   [A, S][]    []    []    []    []    []    
[A]   []    [A]   [A]   [A, S][]    []    []    []    []    
[A]   []    [A]   [A]   [A]   [A, S][]    []    []    []    
[A, S][A]   [A, S][A, S][A, S][S]   [A, B][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A, S][A, B][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[A, S][]    [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->CB }]
S[{ S-->a }, { S-->BC }]
C[{ C-->BB }, { C-->SS }, { C-->CS }]

word='ababbbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[]       [C]      []       [B]      []       []       []       []       []       []       
[C]      [B, S]   []       [C]      [B]      []       []       []       []       []       
[B, C]   [B, C, S][C]      [B, S]   [C]      [B]      []       []       []       []       
[B, C]   [B, S, C][C]      [B, S, C][C]      [B]      [S]      []       []       []       
[B, C, S][B, S, C][C]      [B, S, C][B, C]   [B, S]   [C]      [S]      []       []       
[B, C, S][B, C, S][C]      [B, S, C][B, S, C][B, S, C][C]      [C]      [S]      []       
[B, C, S][B, C, S][C]      [B, S, C][B, S, C][B, S, C][C]      [C]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B, C][]    [B, C][]    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    [B, C][]    []    []    []    
[]    [B, C][]    []    []    [B, C][C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
S[{ S-->AA }, { S-->SS }, { S-->b }]

word='aabaabaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][S]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AS }, { S-->SS }, { S-->b }]
C[{ C-->SA }, { C-->CS }]

word='aabaabaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S, C][S, C][S, C][S]   [S]   [A, S][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->BA }]
B[{ B-->b }]
C[{ C-->SA }, { C-->SB }, { C-->CC }, { C-->AB }]
S[{ S-->CB }, { S-->a }]

word='aabaabaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[C]   [A]   []    [S]   []    []    []    []    []    []    
[A]   []    []    []    [S]   []    []    []    []    []    
[C]   []    []    []    [C]   [B]   []    []    []    []    
[A]   [C]   [A]   [C]   [A]   []    [S]   []    []    []    
[C]   [A, C][A]   [A]   []    []    []    [S]   []    []    
[A, C][A]   []    []    []    []    []    []    [S]   []    
[C, S][C]   []    []    []    []    []    []    [C]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, C][A]   []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->CA }, { B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->CB }, { S-->BA }]
C[{ C-->b }]

word='aabaabaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[A, S]   [A]      [S]      [B]      []       []       []       []       []       []       
[A, B, S][A, B]   [B, S]   [B]      [B]      []       []       []       []       []       
[A, S]   [S]      []       []       []       [C]      []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, S]   [A]      [S]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [B]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [B]      [B]      [B]      []       
[A, B, S][A, B, S][B, S]   [A, S]   [S]      []       []       []       []       [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[]    []    []    [A, S][A, B][]    []    []    []    []    
[]    []    []    [A]   []    [S]   []    []    []    []    
[]    [S]   [B]   [S]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BS }]
S[{ S-->AC }, { S-->AA }, { S-->CS }, { S-->b }]
C[{ C-->SB }, { C-->BB }]

word='aabaabaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[C]      []       [B, S]   []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[S, C]   []       [B]      [S]      [A]      []       []       []       []       []       
[S, C]   [S]      [B, C]   [C]      []       [B, S]   []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[S, C]   [S]      [B, C, S][C, S]   []       [B]      [S]      [A]      []       []       
[]       []       []       []       []       []       []       [S]      [A]      []       
[S, C]   [S]      [B, C, S][C, S]   []       [B]      [S]      [C]      []       [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    [B, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AS }]
S[{ S-->AC }, { S-->SC }]
C[{ C-->CA }, { C-->a }, { C-->b }]

word='babbaabaab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [C]      [A, C]   []       []       []       []       []       []       []       
[A, S]   [C]      [C, S]   [A, C]   []       []       []       []       []       []       
[A, S]   [C]      [A, S]   [S]      [C]      []       []       []       []       []       
[A, S]   [C]      [A, S]   [S]      []       [C]      []       []       []       []       
[A, S]   [C]      [A, S]   [S]      []       [C]      [A, C]   []       []       []       
[A, S]   [C]      [A, C, S][A, S]   []       []       [S]      [C]      []       []       
[A, S]   [C]      [A, C, S][A, S]   []       []       [S]      []       [C]      []       
[A, S]   [C]      [A, C, S][A, S]   []       []       [S]      []       [C]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    [S]   []    []    []    []    []    []    []    
[A]   []    [S]   []    []    []    []    []    []    []    
[A]   []    [C, S][]    []    []    []    []    []    []    
[A]   []    [S]   []    []    []    []    []    []    []    
[A]   []    [S]   []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }, { B-->BB }]
C[{ C-->a }, { C-->b }, { C-->BS }]
S[{ S-->CS }, { S-->b }]

word='babbaabaab'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[S, C]   [B, S]   [C, S]   []       []       []       []       []       []       []       
[B, S, C][C, S]   [B, S]   [C, S]   []       []       []       []       []       []       
[B]      [B]      []       [B]      [C]      []       []       []       []       []       
[B]      []       [B]      []       [B]      [C]      []       []       []       []       
[B, S, C][B, C, S][B, S, C][B, S, C][S, C]   [B, S]   [C, S]   []       []       []       
[B]      [B]      [B]      [B]      [B]      []       [B]      [C]      []       []       
[B]      [B]      [B]      [B]      []       [B]      []       [B]      [C]      []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [B, S]   [C, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->SA }, { A-->CB }]
B[{ B-->a }]
S[{ S-->AS }, { S-->BA }, { S-->CC }]
C[{ C-->a }]

word='babbaabaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[A]   [A]   []    [A]   []    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][B, C][]    []    []    []    
[A, S][A, S][A]   [A]   [A]   [S]   [A]   []    []    []    
[]    []    []    []    []    []    []    [B, C][]    []    
[A, S][A, S][S]   [S]   [S]   [A]   [S]   [A, S][B, C][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   [S]   [S]   [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->SC }]
S[{ S-->CA }, { S-->a }]

word='babbaabaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C, S][S, C][A]   []    []    []    []    []    []    []    
[S, C][S, C][]    [A]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [S, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[C, S][C, S][C, S][C, S][C, S][S, C][A]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][S, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->SB }, { C-->a }]
S[{ S-->SS }, { S-->BC }]

word='babbaabaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[C]   []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [S]   [B, C][]    []    []    []    []    
[S]   []    [S]   [C]   [S]   [B, C][]    []    []    []    
[C]   [S]   [C]   [S]   [C]   []    [B]   []    []    []    
[S]   [C]   [S]   [C]   [S]   []    [S]   [B, C][]    []    
[C]   [S]   [C]   [S]   [C]   [S]   [C]   [S]   [B, C][]    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [C]   []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [C][S][] [] [] [] [] [] 
[S][C][S][C][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[S][C][S][C][S][C][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->CA }]
C[{ C-->AS }, { C-->BB }, { C-->b }]
S[{ S-->SC }, { S-->b }, { S-->BC }]

word='bbaabbaaba'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[A]      [B]      [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       [S]      []       [C]      [S, C]   []       []       []       []       []       
[]       [S]      []       [C]      [S]      [S, C]   []       []       []       []       
[S]      [C]      []       [A, B]   [A]      [B]      [A]      []       []       []       
[A]      [B]      []       []       []       []       []       [A]      []       []       
[C, S]   [S]      [C]      [S]      []       [S]      []       [C]      [S, C]   []       
[B, S]   [A, S, C][B]      [C]      [S]      [C]      []       [B]      [B]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       [A, S, C][B]      [C]      []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SC }, { A-->CS }]
B[{ B-->b }, { B-->CB }, { B-->SS }]
C[{ C-->a }]
S[{ S-->BC }, { S-->AB }]

word='bbaabbaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       [A]      [A]      [C]      []       []       []       []       []       []       
[S]      [A, S]   [B, S]   [B]      [B]      []       []       []       []       []       
[]       [S]      [A]      [A]      [A]      [B]      []       []       []       []       
[A, B, S][A, B]   [B]      []       []       [S]      [C]      []       []       []       
[A, S]   [S]      [S]      []       []       [A]      [A]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [S]      [A, S]   [B, S]   [B]      [B]      []       
[A, B, S][A, B, S][A, B, S][A]      [A]      [A, B]   [A, S]   [A, S]   [S]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[A]      [A, S]   [A, S]   []       []       [A]      []       []       []       []       
[]       []       [A, B, S][A]      [A]      [A]      [A, S]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
C[{ C-->CB }, { C-->b }]
S[{ S-->SB }, { S-->BB }, { S-->CS }, { S-->SC }]

word='bbaabbaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       [C]      [B]      []       []       []       []       []       []       []       
[S]      [C, S]   [S]      [B]      []       []       []       []       []       []       
[S]      [S]      [S]      []       [C]      []       []       []       []       []       
[S]      [S]      [S]      []       []       [C]      []       []       []       []       
[S]      [S]      [S]      []       []       [C]      [B]      []       []       []       
[B, S, C][B, S, C][B, S]   []       [S]      [S, C]   [S]      [B]      []       []       
[B, S, C][B, S, C][B, S]   []       [S]      [S]      [S]      []       [C]      []       
[B, S, C][B, S, C][B, S]   []       [S]      [S]      [S]      []       [C]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->AS }, { C-->a }, { C-->CS }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

word='bbaabbaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [A]   [C]   []    []    []    []    []    []    
[S]   [S]   [A, C][C]   [S]   []    []    []    []    []    
[S]   [S]   [A, C][C]   [S]   [S]   []    []    []    []    
[S]   [S]   [A, C][A, C][S]   [S]   [C]   []    []    []    
[S]   [S]   [A, C][A, C][S]   [S]   [A]   [C]   []    []    
[S]   [S]   [A, C][A, C][S]   [S]   [A, C][C]   [S]   []    
[S]   [S]   [A, C][A, C][S]   [S]   [A, C][A, C][S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][A][] [] [] [] [] [] 
[] [] [C][A][] [] [] [] [] [] 
[] [] [C][A][] [] [] [] [] [] 
[] [] [C][A][] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
B[{ B-->b }]
C[{ C-->AC }, { C-->a }, { C-->BS }]
S[{ S-->CS }, { S-->BC }]

word='bbaabbaaba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[C, S]   [C, S]   [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      [A, C]   []       []       []       []       []       []       
[A]      [A]      []       []       [A, B]   []       []       []       []       []       
[]       []       []       []       []       [A, B]   []       []       []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [A, C]   []       []       []       
[A, S, C][A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][C]      [A, C]   []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       [A, B]   []       
[S, C]   [S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->a }]
S[{ S-->BB }, { S-->b }]

word='baaabbbaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [B]   [S]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->SA }, { B-->a }, { B-->BB }]
S[{ S-->SB }, { S-->AA }, { S-->b }]

word='baaabbbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [A, B]   []       []       []       []       []       []       []       []       
[B, S]   [A, B, S][A, B]   []       []       []       []       []       []       []       
[B, S]   [A, B, S][A, B, S][A, B]   []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       [S]      [B, S]   [A, B]   []       []       
[]       []       []       []       [S]      [B, S]   [B, S]   [A, B, S][A, B]   []       
[B, S]   [A, B, S][A, B, S][A, B]   [B, S]   [B, S]   [B, S]   [A, B, S][A, B, S][A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->SC }, { B-->CS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->a }, { C-->CC }]

word='baaabbbaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[B]   [C]   [C]   []    []    []    []    []    []    []    
[B]   [C]   [C]   [C]   []    []    []    []    []    []    
[B, S][B]   [B]   [B]   [B, S][]    []    []    []    []    
[B, S][B]   [B]   [B]   [B, S][B, S][]    []    []    []    
[B, S][B]   [B]   [B]   [B, S][B, S][B, S][]    []    []    
[B, S][B]   [B]   [B]   [B, S][B, S][B]   [C]   []    []    
[B, S][B]   [B]   [B]   [B, S][B, S][B]   [C]   [C]   []    
[B, S][B]   [B]   [B]   [B, S][B, S][B]   [C]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    [B]   []    []    []    []    
[B]   [B]   [B]   []    []    [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BA }, { B-->SS }]
S[{ S-->AS }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->SB }, { C-->SC }]

word='baaabbbaaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[B, S]   [S]      [S]      [S]      [A, S]   []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B, S]   [B, S]   [A, S]   []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [A, S]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B]      []       [A]      []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B]      []       []       [A]      []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B]      []       []       []       [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->BS }, { B-->AS }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->b }]

word='baaabbbaaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[B]      []       [S]      []       []       []       []       []       []       []       
[B]      []       []       [S]      []       []       []       []       []       []       
[A, B]   []       []       [S]      [A, S]   []       []       []       []       []       
[A, B, S][]       []       [S]      [B, S]   [A, S]   []       []       []       []       
[A, B, S][]       []       [S]      [A, B, S][B, S]   [A, S]   []       []       []       
[B, S]   []       []       []       [B, S]   [B]      [B]      [S]      []       []       
[B, S]   []       []       []       [B, S]   [B]      [B]      []       [S]      []       
[B, S]   []       []       []       [B, S]   [B]      [B]      []       []       [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][B][] [] [] [] 
[] [] [] [] [B][B][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CC }]
C[{ C-->a }, { C-->CS }, { C-->b }]

word='babaaabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[C, S][S]   [C]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][]    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    []    
[S, C][S, C][S, C][S, C][C, S][S]   [C]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][C]   [S]   [C]   []    []    
[S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   [C]   []    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AC }, { B-->AA }, { B-->SC }]
S[{ S-->CA }, { S-->BB }, { S-->BS }]
C[{ C-->SB }, { C-->b }, { C-->BC }]

word='babaaabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[B]      [B]      [C]      []       []       []       []       []       []       []       
[]       []       [S]      [A]      []       []       []       []       []       []       
[S]      [S]      []       [B]      [A]      []       []       []       []       []       
[B]      [B]      [C]      []       [B]      [A]      []       []       []       []       
[S, C]   [S, C]   [B]      [B, S]   [C]      [B]      [C]      []       []       []       
[B, C, S][B, C, S][C]      [B, C]   [B]      [C]      []       [C]      []       []       
[B, C, S][B, C, S][B]      [B, C]   [C]      []       []       []       [C]      []       
[S]      [S]      []       [S]      [S]      []       []       []       [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[S]   [C, S][]    [B]   [B]   []    []    []    []    []    
[]    [B]   [B]   [B]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->BA }, { B-->a }]
S[{ S-->a }, { S-->BS }]

word='babaaabbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[A, B, S][A, S]   [S]      [B, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       [B]      []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[]       []       []       []       []       []       []       []       [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      [S]      [S]      [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }]
B[{ B-->a }]
C[{ C-->AS }, { C-->CA }, { C-->BA }]
S[{ S-->SB }, { S-->a }, { S-->CS }, { S-->AB }]

word='babaaabbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S, C]   [B, S]   []       []       []       []       []       []       []       []       
[C]      [C]      [A]      []       []       []       []       []       []       []       
[A, S, C][A, S]   [S, C]   [B, S]   []       []       []       []       []       []       
[A, S, C][S, C]   [A, C, S][S]      [B, S]   []       []       []       []       []       
[A, S, C][A, S, C][A, C, S][S]      [S]      [B, S]   []       []       []       []       
[C]      [C]      [C]      []       []       [C]      [A]      []       []       []       
[C]      [C]      [C]      []       []       [C]      []       [A]      []       []       
[C]      [C]      [C]      []       []       [C]      []       []       [A]      []       
[A, S, C][A, S, C][A, S, C][]       [C]      [A, S]   []       [C]      [S, C]   [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->a }, { C-->BS }]

word='babaaabbba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[C, S][S]   [S, C][S, C][]    []    []    []    []    []    
[S, C][S]   [C, S][S]   [S, C][]    []    []    []    []    
[S, C][S]   [C, S][S]   [S]   [S, C][]    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[S, C][S]   [C, S][S]   [S]   [S]   [C]   [B, S][]    []    
[]    []    []    []    []    []    [S]   [C]   [B, S][]    
[S, C][S]   [C, S][S]   [S]   [S]   [S, C][S, C][S, C][S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][]    [C, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->SB }, { C-->CB }]
S[{ S-->BB }, { S-->CS }, { S-->b }, { S-->BC }]

word='aaaaaabaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[C]   [S]   [B]   []    []    []    []    []    []    []    
[C, S][C]   [S]   [B]   []    []    []    []    []    []    
[S, C][C, S][C]   [S]   [B]   []    []    []    []    []    
[S, C][S, C][S, C][C]   [S]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   []    []    [S]   []    []    []    
[S, C][S, C][S, C][C]   []    [S]   [C]   [B]   []    []    
[S, C][S, C][S, C][C]   [S]   [S, C][C]   [S]   [B]   []    
[S]   [S]   [S]   [S]   []    [S]   [S]   []    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C]   [C, S][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[C]   [C]   [S, C][C]   []    [S, C][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }]
B[{ B-->BS }, { B-->AS }]
S[{ S-->CB }, { S-->a }, { S-->BC }]
C[{ C-->b }]

word='aaaaaabaab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [A, S]   []       []       []       []       []       []       []       []       
[B]      [A, B]   [A, S]   []       []       []       []       []       []       []       
[B]      [B]      [A, B]   [A, S]   []       []       []       []       []       []       
[B]      [B]      [B]      [A, B]   [A, S]   []       []       []       []       []       
[B]      [B]      [B]      [B]      [A, B]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       [A, C]   []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A]      []       [B]      [A, S]   []       []       
[B]      [B]      [B]      [B]      [B]      [A, B]   [B, S]   [A, B]   [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S]      []       [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    
[A, B][A, B][A, B][A, B][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=40

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }]
S[{ S-->AS }, { S-->CB }, { S-->AA }, { S-->SS }, { S-->b }]
C[{ C-->SC }, { C-->BS }]

word='aaaaaabaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A]   [A]   []    []    
[S, C][S, C][S, C][S, C][S, C][S]   [S, C][S]   [A]   []    
[C, S][S, C][S, C][S, C][S, C][S]   [S, C][S]   [S]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
C[{ C-->AS }, { C-->AA }, { C-->b }]
S[{ S-->CA }, { S-->CC }, { S-->SC }]

word='aaaaaabaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[S]      [C]      [A]      []       []       []       []       []       []       []       
[C, S]   [S]      [C]      [A]      []       []       []       []       []       []       
[S, C]   [S, C]   [S]      [C]      [A]      []       []       []       []       []       
[A, S, C][S, C]   [C, S]   [S]      [C]      [A]      []       []       []       []       
[A, S, C][A, S, C][C, S]   [C, S]   [S]      []       [C]      []       []       []       
[A, S, C][A, S, C][A, C, S][A, S]   []       [C]      [S]      [A]      []       []       
[A, C, S][A, S, C][A, C, S][A, C, S][C, S]   [C, S]   [S]      [C]      [A]      []       
[A, C, S][A, S, C][A, C, S][A, C, S][A, C, S][C, S]   [S]      [S]      []       [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [C, S][]    []    []    []    []    []    []    
[]    [C]   [C]   [C, S][]    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    [C, S][]    []    []    []    
[]    []    []    []    [C]   [C, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->CA }, { B-->a }]
S[{ S-->SA }, { S-->CB }, { S-->AB }, { S-->BS }]
C[{ C-->BB }, { C-->CC }, { C-->BC }]

word='aaaaaabaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C, S]   [C]      [B]      []       []       []       []       []       []       []       
[S, C]   [S, C]   [C]      [B]      []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [C]      [B]      []       []       []       []       []       
[C, S]   [C, S]   [S, C]   [C, S]   [C]      [B]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, C, S][B]      []       [A]      []       []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [S, C]   [S]      [S]      [B]      []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [C, S]   []       []       [C]      [B]      []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S]      [S]      [B]      []       [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B, C]   []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B, S, C][]       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->SC }, { S-->BB }]
C[{ C-->b }, { C-->BS }]

word='abaaaabbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[S, C]   [C]      [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[B, S]   [S]      [B]      [B]      [B]      [B, S]   [B, C]   []       []       []       
[B, S, C][B, S, C][B, S]   [B, S]   [B, S]   [B, S]   [S]      [B, C]   []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       [C]      [S]      []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, C]   [S, C]   [B, S]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S, C][B]   [B]   [B]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }]
S[{ S-->BA }, { S-->CB }, { S-->BS }]
C[{ C-->a }]

word='abaaaabbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[B]   []    [B, C][]    []    []    []    []    []    []    
[B, S][S]   [S]   [B, C][]    []    []    []    []    []    
[B, S][B, S][B, S][S]   [B, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [A, B][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, B][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    [B, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }, { B-->BA }]
S[{ S-->AC }, { S-->SC }, { S-->BC }, { S-->BS }]
C[{ C-->a }, { C-->b }]

word='abaaaabbab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[B, S][]    [A, C][]    []    []    []    []    []    []    
[B, S][]    [S]   [A, C][]    []    []    []    []    []    
[B, S][]    [B, S][S]   [A, C][]    []    []    []    []    
[B, S][]    [B, S][B, S][S]   [A, C][]    []    []    []    
[S]   []    [S]   [S]   [S]   [S]   [C]   []    []    []    
[S]   []    [S]   [S]   [S]   [S]   []    [C]   []    []    
[B, S][]    [B, S][B, S][B, S][B, S][]    []    [A, C][]    
[S]   []    [S]   [S]   [S]   [S]   []    []    [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   [S]   [S]   []    []    []    []    []    
[]    []    [B, S][B, S][B, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->BS }, { B-->AA }]
S[{ S-->SB }, { S-->b }, { S-->AB }]

word='abaaaabbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[B]      [A]      [A]      []       []       []       []       []       []       []       
[S]      [B, S]   [B]      [A]      []       []       []       []       []       []       
[A, B]   [A, S]   [S]      [B]      [A]      []       []       []       []       []       
[B, S]   [A, B, S][A]      [S]      [B]      [A]      []       []       []       []       
[B, S]   [B, S]   []       [S]      [B]      []       [S]      []       []       []       
[B, S]   [B, S]   []       [S]      [B]      []       []       [S]      []       []       
[A, B, S][A, B, S][B, S]   [A]      [S]      [B]      [A]      [A]      [A]      []       
[B, S]   [B, S]   [B, S]   []       [S]      [B]      []       []       []       [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B]   [A, S][]    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    [A]   [S]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->SS }, { C-->CC }, { C-->b }]

word='abaaaabbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][C]   [S]   []    []    []    []    []    []    []    
[C, S][S, C][C]   [S]   []    []    []    []    []    []    
[S, C][C]   [S]   [C]   [S]   []    []    []    []    []    
[C, S][S, C][C]   [S]   [C]   [S]   []    []    []    []    
[S, C][C, S][S, C][S, C][S, C][S, C][S, C][]    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C]   [S]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->b }]
S[{ S-->AC }, { S-->a }, { S-->SS }, { S-->BC }]
C[{ C-->SC }, { C-->b }]

word='babbbaaaab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[A, S]   [S, C]   [B, C]   []       []       []       []       []       []       []       
[A, S, C][A, C, S][A, S]   [B, C]   []       []       []       []       []       []       
[A, S, C][A, S, C][S, C]   [A, S]   [B, C]   []       []       []       []       []       
[S]      [S]      [S]      [S]      []       [A, S]   []       []       []       []       
[S]      [S]      [S]      [S]      []       [S]      [A, S]   []       []       []       
[S]      [S]      [S]      [S]      []       [S]      [S]      [A, S]   []       []       
[S]      [S]      [S]      [S]      []       [S]      [S]      [S]      [A, S]   []       
[A, C, S][A, C, S][A, C, S][S, C]   [A, S]   [S, C]   [S, C]   [S, C]   [S, C]   [B, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][C][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->b }]
B[{ B-->b }, { B-->a }]
S[{ S-->AB }]

word='babbbaaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[S]   [A, S][A, B][]    []    []    []    []    []    []    
[A]   [S]   [A, S][A, B][]    []    []    []    []    []    
[A, S][A]   [S]   [A, S][A, B][]    []    []    []    []    
[A, S][A, S][A]   [S]   [A, S][A, B][]    []    []    []    
[A, S][A, S][A, S][A]   [S]   [A, S][A, B][]    []    []    
[A, S][A, S][A, S][A, S][A]   [S]   [A, S][A, B][]    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [A, S][A, B][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A, S][A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->AB }]
B[{ B-->BS }, { B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->CB }, { S-->b }]
C[{ C-->b }]

word='babbbaaaab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B, S]   [A, B]   [S, C]   []       []       []       []       []       []       []       
[A, B, S][A, B]   [A, B]   [S, C]   []       []       []       []       []       []       
[A, B, S][A, B]   [A, B, S][A, B]   [S, C]   []       []       []       []       []       
[A, B, S][A, B]   [A, B, S][A, B]   [S]      [B]      []       []       []       []       
[A, B, S][A, B]   [A]      [A]      []       []       [B]      []       []       []       
[A, B, S][A, B]   [A]      [A]      []       []       []       [B]      []       []       
[A, B, S][A, B]   [A]      [A]      []       []       []       []       [B]      []       
[A, B, S][A, B]   [A]      [A]      []       []       []       [B]      [A, B]   [S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   [A]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [A]   []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SB }, { B-->AA }]
S[{ S-->AC }, { S-->SA }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->a }]

word='babbbaaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[A]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [A]      [A]      [S]      []       []       []       []       []       []       
[A, B]   [S]      [S]      [A]      [S]      []       []       []       []       []       
[S]      [A]      [A]      [S]      []       [C]      []       []       []       []       
[A]      [S]      [S]      []       []       []       [C]      []       []       []       
[S]      []       []       []       []       []       []       [C]      []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A, B, S][A, B, S][A, B, S][A, S]   [A]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AC }, { A-->AS }]
S[{ S-->SA }, { S-->b }]
C[{ C-->a }, { C-->CC }]

word='babbbaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[A, S][A]   [A, S][]    []    []    []    []    []    []    
[A, S][A]   [A, S][A, S][]    []    []    []    []    []    
[A, S][A]   [A, S][A, S][A, S][]    []    []    []    []    
[A, S][A]   [A, S][A, S][A, S][A, C][]    []    []    []    
[A, S][A]   [A, S][A, S][A, S][A, C][A, C][]    []    []    
[A, S][A]   [A, S][A, S][A, S][A, C][A, C][A, C][]    []    
[A, S][A]   [A, S][A, S][A, S][A, C][A, C][A, C][A, C][]    
[A, S][A]   [A, S][A, S][A, S][A]   [A]   [A]   [A]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->SA }, { B-->SS }]
S[{ S-->CA }, { S-->b }, { S-->BS }]
C[{ C-->a }, { C-->BC }]

word='bbbabaabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[S][B][S][] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[B][A][B][A][B][S][A][B][S][] 
[S][B][S][] [S][B][] [S][B][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][B][] [] [S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->CS }, { C-->b }]

word='bbbabaabbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[C, S][C, S][C]   [S]   []    []    []    []    []    []    
[C, S][C, S][C]   [S]   [S, C][]    []    []    []    []    
[C, S][C, S][C]   [S]   [C]   [S]   []    []    []    []    
[C, S][C, S][C]   [S]   [C]   []    [S]   []    []    []    
[C, S][C, S][C]   [S]   [C]   []    [S]   [S, C][]    []    
[C, S][C, S][C]   [S]   [C]   []    [S]   [S, C][S, C][]    
[C, S][C, S][C]   [S]   [C]   []    [S]   [S, C][S, C][S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }]
S[{ S-->AC }, { S-->AS }]
C[{ C-->b }]

word='bbbabaabbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[A, S][S]   [A, C][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][S]   [A, C][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[A, S][A, S][A, S][S]   [A, S][S]   [S]   [A, C][]    []    
[A, S][A, S][A, S][S]   [A, S][S]   [S]   [S]   [A, C][]    
[A, S][A, S][A, S][S]   [A, S][S]   [S]   [A, S][S]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][S][A][S][] [] [] [] 
[A][A][A][S][A][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SB }]
B[{ B-->b }, { B-->BB }]
S[{ S-->BA }, { S-->a }, { S-->BS }]

word='bbbabaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A]   [S]   [S]   []    []    []    []    
[A, S][A, S][A, S][A]   [A, S][A]   [S]   []    []    []    
[A, S][A, S][A]   []    [A]   []    [A]   [B]   []    []    
[A, S][A, S][A]   []    [A]   []    [A]   [B]   [B]   []    
[A, S][A, S][A]   []    [A]   []    [A]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [A, S][A]   []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->SB }, { B-->a }]
C[{ C-->a }]
S[{ S-->BB }, { S-->CS }]

word='bbbabaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [B]   [S]   [B, C][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->CA }]
S[{ S-->a }, { S-->SC }, { S-->BC }]
C[{ C-->a }, { C-->SS }]

word='bbaaaaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S, C][S, C][S, C][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][]    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   [B]   []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][C]   [S]   [S, C][]    
[S, C][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SB }]
B[{ B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SC }]
C[{ C-->a }, { C-->SS }, { C-->BC }]

word='bbaaaaabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[S]      [S]      [C]      []       []       []       []       []       []       []       
[S]      [S]      []       [C]      []       []       []       []       []       []       
[S]      [S]      []       []       [C]      []       []       []       []       []       
[S]      [S]      []       []       []       [C]      []       []       []       []       
[S]      [S]      []       []       []       []       [C]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[A, C, S][A, C]   []       []       []       []       [B]      [S]      [C]      []       
[A, S, C][A, S, C][]       []       []       []       [B, C]   [S]      []       [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    [B, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }]
C[{ C-->SB }, { C-->CB }, { C-->AA }, { C-->SS }]
S[{ S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]

word='bbaaaaabaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[S, C][C]   [B]   []    []    []    []    []    []    []    
[C, S][C]   []    [B]   []    []    []    []    []    []    
[C, S][C]   []    []    [B]   []    []    []    []    []    
[C, S][C]   []    []    []    [B]   []    []    []    []    
[C, S][C]   []    []    []    []    [B]   []    []    []    
[C, S][S, C][S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S, C][C, S][C]   [C]   [C]   [C]   [C]   [C]   [B]   []    
[S, C][C, S][C]   [C]   [C]   [C]   [C]   [C]   []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][C][C][C][C][] [] [] [] 
[] [C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->SA }, { S-->a }, { S-->b }]

word='bbaaaaabaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [A]   [S]   []    []    []    []    []    []    
[A, S][A]   [S]   [A]   [S]   []    []    []    []    []    
[A, S][S]   [A]   [S]   [A]   [S]   []    []    []    []    
[A, S][A]   [S]   [A]   [S]   [A]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A]   []    [S]   []    []    []    []    []    []    []    
[]    [A, S][]    [A, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->BA }, { B-->a }]
C[{ C-->AS }]
S[{ S-->SA }, { S-->AA }]

word='bbaaaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[S]   [A]   []    [B]   []    []    []    []    []    []    
[S]   [A]   []    []    [B]   []    []    []    []    []    
[S]   [A]   []    []    []    [B]   []    []    []    []    
[S]   [A]   []    []    []    []    [B]   []    []    []    
[S, C][A, S][]    []    []    []    [B]   [A]   []    []    
[S, C][A, S][]    []    []    []    [B]   [A]   [B]   []    
[S, C][A, S][]    []    []    []    [B]   [A]   []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->SB }, { C-->b }]
S[{ S-->a }, { S-->SS }, { S-->CS }]

word='aabaabbbaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][B, S][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][B, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AC }]
S[{ S-->CA }, { S-->CS }, { S-->b }]
C[{ C-->a }]

word='aabaabbbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [A]   [C]   []    []    []    []    []    []    
[S]   [S]   [A]   []    [C]   []    []    []    []    []    
[A, S][A, S][A]   [S]   [S]   [A, S][]    []    []    []    
[A, S][A, S][A]   [A, S][A, S][A]   [A, S][]    []    []    
[A, S][A, S][A]   [A, S][A]   []    [A]   [A, S][]    []    
[A, S][A, S][A]   [A, S][A]   []    [A]   [A]   [C]   []    
[A, S][A, S][A]   [A, S][A]   []    [A]   [A]   []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [A, S][A]   []    []    []    []    []    []    []    
[S]   [A, S][A]   [S]   []    []    []    []    []    []    
[S]   [A, S][A]   [A, S][]    []    []    []    []    []    
[S]   [A, S][A]   [A, S][]    []    []    []    []    []    
[S]   [A, S][A]   [A, S][]    []    [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=31

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->SC }, { B-->AA }]
S[{ S-->CA }, { S-->BA }, { S-->CC }]
C[{ C-->a }, { C-->SS }, { C-->AB }]

word='aabaabbbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    [S]   [A]   [S]   [C]   []    []    []    []    []    
[B]   [S]   [C]   []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A, S][C]   [B]   []    [S]   [A]   [S]   [A]   [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->b }, { S-->BS }]

word='aabaabbbaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }]
S[{ S-->a }, { S-->BB }, { S-->b }, { S-->BC }]
C[{ C-->BS }]

word='aabaabbbaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S, C][B, S]   []       []       []       []       []       []       []       []       
[S, C]   [C]      [S]      []       []       []       []       []       []       []       
[B, S, C][B, S]   [B]      [B, S]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S]   []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [C]      [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [B]      [B]      [B]      [B, S]   []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->BA }, { S-->b }]

word='aaaaababbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [A, S]   []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [S]      [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B]   [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->SB }, { B-->AA }]
S[{ S-->AS }, { S-->BA }, { S-->SS }, { S-->b }]

word='aaaaababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[S]   [B]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [A]   []    []    []    []    []    []    
[B, S][S]   [S]   [B]   [A]   []    []    []    []    []    
[B, S][B, S][S]   [S]   [B, S][A, S][]    []    []    []    
[B, S][B, S][B, S][S]   [S]   [B]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   [B, S][A, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->CB }, { S-->SB }, { S-->CS }, { S-->SC }, { S-->BC }]
C[{ C-->a }, { C-->b }]

word='aaaaababbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->SA }]
S[{ S-->AS }, { S-->SB }, { S-->AB }]
C[{ C-->CC }, { C-->CS }, { C-->b }]

word='aaaaababbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [B, C]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      []       [A]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A]      [C]      [S]      [B, C]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [C]      [S]      [A, C]   [B, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [A, C]   [B, S]   [C, S]   [A, C]   [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [S]      []       []       []       []       []       
[]       []       []       [A, B, S][S]      [A]      [B, S]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AS }, { S-->b }]

word='aaaaababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->SA }, { A-->CA }]
B[{ B-->b }]
S[{ S-->BA }, { S-->a }, { S-->CS }]
C[{ C-->SB }]

word='babaababba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[A, S, C][A, C]   [A, B]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [S]      [A, S]   []       []       []       []       []       []       
[A, S]   [A]      [A, S]   [A]      [A, S]   []       []       []       []       []       
[A, C, S][A]      [A, S, C][A]      [A, C]   [A, B]   []       []       []       []       
[A, S]   [A]      [A, S]   [A]      [A, S]   [S]      [A, S]   []       []       []       
[A, C, S][A]      [A, S, C][A]      [A, C]   [A, S, C][A, C]   [A, B]   []       []       
[A, C, S][A]      [A, S, C][A]      [A]      [A, S, C][A]      [S]      [A, B]   []       
[A, S]   [A]      [A, S]   [A]      [A, S]   [A, S]   [A, S]   [A]      [S]      [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C, S][A]   [S, C][]    []    []    []    []    []    []    
[S]   [A]   [S]   [A]   []    []    []    []    []    []    
[C, S][A]   [S, C][A]   [C]   []    []    []    []    []    
[C, S][A]   [S, C][A]   []    [S, C][]    []    []    []    
[S]   [A]   [S]   [A]   [A, S][]    [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=33

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->a }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->b }]

word='babaababba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B, C][]    []    []    []    []    []    []    
[S]   [B]   [S]   [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[S]   [B]   [S]   [B]   [S]   [B, C][]    []    []    []    
[]    []    []    []    [B]   [S]   [B]   []    []    []    
[S]   [B]   [S]   [B]   [S]   [B]   [S]   [B, C][]    []    
[B]   [S]   [B]   [S]   [B]   [S]   [B]   [S]   [B, C][]    
[S]   [B]   [S]   [B]   []    [B]   []    [B]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[B][S][B][S][B][S][] [] [] [] 
[S][B][S][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AC }, { B-->CA }]
C[{ C-->a }, { C-->SS }]
S[{ S-->SC }, { S-->b }]

word='babaababba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[C]   []    [B, S][]    []    []    []    []    []    []    
[B, C][]    [S]   [A, C][]    []    []    []    []    []    
[B, C][]    [S]   [B]   [A, C][]    []    []    []    []    
[S]   [B]   [C]   []    []    [B, S][]    []    []    []    
[S]   [B]   [B, C][]    []    [S]   [A, C][]    []    []    
[C]   []    [S]   []    [B]   [C]   []    [B, S][]    []    
[S]   [B]   [C]   []    []    [S]   [B]   [C]   [B, S][]    
[S]   [B]   [B, C][]    []    [S]   [B]   [B, C][S]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 
[S][B][] [] [] [S][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }, { A-->CB }]
B[{ B-->AC }, { B-->BA }, { B-->SS }]
C[{ C-->a }, { C-->b }]
S[{ S-->BB }]

word='babaababba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[B]      []       [A, C]   []       []       []       []       []       []       []       
[S]      [A]      [B]      [C]      []       []       []       []       []       []       
[A]      [B]      []       []       [C]      []       []       []       []       []       
[A, B]   [B]      []       []       []       [A, C]   []       []       []       []       
[A, B, S][A, S]   [B]      []       [A]      [B]      [C]      []       []       []       
[A, B, S][A, B, S][B, S]   [A]      [A, B]   [B]      []       [A, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [B, S]   [A]      [B]      [A, C]   []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, B, S][A, B, S][B]      [A]      [B]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[]    [A, S][S]   []    [A, B][]    []    []    []    []    
[]    []    []    [A, B][A, B][S]   []    []    []    []    
[]    []    []    [A]   [A]   [A, B][B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AC }, { B-->BA }, { B-->a }, { B-->SC }]
S[{ S-->SA }, { S-->CC }, { S-->CS }]
C[{ C-->AA }]

word='babaababba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[B]   [B, C][A]   []    []    []    []    []    []    []    
[B, S][B]   [C]   [A, B][]    []    []    []    []    []    
[B, S][B, S][B]   [B, C][A, B][]    []    []    []    []    
[B, S][B, S][B, S][B]   [B, C][A]   []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [C]   [A, B][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B, C][A]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [C]   [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [C]   [A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=56

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=56

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AA }, { A-->AC }]
C[{ C-->SA }, { C-->SC }, { C-->b }]
S[{ S-->a }, { S-->CS }]

word='aababababa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, C][A, C][A, C][C]   [C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AC }, { S-->SA }, { S-->b }]
C[{ C-->AA }]

word='aababababa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[S]   [C]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S, C][A]   []    []    []    []    []    []    
[S]   [S]   [S]   [C]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->CC }, { S-->AB }]
C[{ C-->CA }, { C-->CS }, { C-->b }]

word='aababababa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [C]      [A, B]   []       []       []       []       []       []       
[B, S]   [S]      [S]      []       [C]      []       []       []       []       []       
[A, B, S][S]      [S]      []       [C]      [A, B]   []       []       []       []       
[]       []       [C]      [S]      [S]      []       [C]      []       []       []       
[]       []       [C]      [S]      [S]      []       [C]      [A, B]   []       []       
[A, B, S][A, B, S][B, S]   []       [C]      [S]      [S]      []       [C]      []       
[A, B, S][A, B, S][A, B, S][]       [C]      [S]      [S]      []       [C]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->a }]
S[{ S-->BB }, { S-->AA }, { S-->b }]

word='aababababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    []    []    []    []    []    []    
[A, B][S]   [A]   [B]   []    []    []    []    []    []    
[A, B][S]   [A, B][B]   [S]   []    []    []    []    []    
[S]   [A, B][S]   [S]   [A]   [B]   []    []    []    []    
[S]   [A, B][S]   [S]   [A, B][B]   [S]   []    []    []    
[A, B][S]   [A, B][A, B][S]   [S]   [A]   [B]   []    []    
[A, B][S]   [A, B][A, B][S]   [S]   [A, B][B]   [S]   []    
[S]   [A, B][S]   [S]   [A, B][A, B][S]   [S]   [A]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    [A, B][S]   []    []    []    []    []    []    []    
[S]   [A]   [S]   [S]   []    []    []    []    []    []    
[A, B][]    [B]   [A, B][S]   []    []    []    []    []    
[A]   [S]   [A, B][A]   [S]   [S]   []    []    []    []    
[]    [A, B][S]   []    [B]   [A, B][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=31

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->b }, { B-->SA }, { B-->BA }, { B-->CC }]
C[{ C-->CA }, { C-->a }]
S[{ S-->SB }, { S-->a }]

word='aababababa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [S, C]   []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[B, C]   [A]      []       [S, C]   []       []       []       []       []       []       
[]       []       []       [S]      [B]      []       []       []       []       []       
[S]      [B, S]   [B]      [A]      []       [S, C]   []       []       []       []       
[S]      [S]      []       []       []       [S]      [B]      []       []       []       
[A, B, C][A, S]   []       [B, S]   [B]      [A]      []       [S, C]   []       []       
[]       [S]      []       [S]      []       []       []       [S]      [B]      []       
[B, S, C][A, B, S][B]      [A, S]   []       [B, S]   [B]      [A]      []       [S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->a }]
S[{ S-->a }, { S-->SC }, { S-->b }]

word='abbaababba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [A]   [A, S][]    []    []    []    []    []    []    
[A, S][C, S][S, C][S, C][]    []    []    []    []    []    
[S, C][A, S][A, S][A, S][S, C][]    []    []    []    []    
[]    [A]   [A]   [A]   []    [A, S][]    []    []    []    
[A, S][C, S][S, C][S, C][A, S][S, C][S, C][]    []    []    
[A]   []    []    []    [A]   []    []    [A, S][]    []    
[A]   []    []    []    [A]   []    []    [A]   [A, S][]    
[S, C][A, S][A, S][A, S][S, C][A, S][A, S][S, C][S, C][S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   [S]   [S, C][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    [S, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->b }, { B-->a }]
S[{ S-->SB }, { S-->a }]

word='abbaababba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[S]   [A]   [A, B][]    []    []    []    []    []    []    
[S]   []    [A]   [B, S][]    []    []    []    []    []    
[S]   []    []    [A, S][B, S][]    []    []    []    []    
[S]   []    []    [S]   [A, S][A, B][]    []    []    []    
[S]   []    []    [S]   [S]   [A]   [B, S][]    []    []    
[S]   []    []    [S]   [S]   []    [A, S][A, B][]    []    
[S]   []    []    [S]   [S]   []    [S]   [A]   [A, B][]    
[S]   []    []    [S]   [S]   []    [S]   []    [A]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }, { B-->SS }]
C[{ C-->CB }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->SB }, { S-->a }, { S-->BC }]

word='abbaababba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[B, S]   [C]      [C]      []       []       []       []       []       []       []       
[B, C]   []       []       [S]      []       []       []       []       []       []       
[B, S, C][C]      [C]      [B]      [S]      []       []       []       []       []       
[B, C, S][C]      [C]      [S]      [B]      [C]      []       []       []       []       
[B, S, C][C]      [C]      [B]      [C]      []       [S]      []       []       []       
[B, C, S][C]      [C]      [B, S]   [B, C]   [C]      [B]      [C]      []       []       
[B, C, S][C]      [C]      [B, S]   [B, C, S][C]      [B, S]   [C]      [C]      []       
[B, C, S][C]      [C]      [B, S, C][B, S, C][C]      [B, C]   []       []       [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][B][] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->BS }, { B-->AC }, { B-->a }]
S[{ S-->CA }, { S-->a }]
C[{ C-->SB }]

word='abbaababba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[]    [A]   [A]   [B, S][]    []    []    []    []    []    
[C]   [A, B][A, B][B, C][B, S][]    []    []    []    []    
[S]   [A]   [A]   [S]   []    [A]   []    []    []    []    
[S, C][A, B][A, B][S, C][]    [A]   [B, S][]    []    []    
[S]   [A]   [A]   [S]   []    [A]   []    [A]   []    []    
[S]   [A]   [A]   [S]   []    [A]   []    [A]   [A]   []    
[S, C][A, B][A, B][S, C][]    [A]   []    [A]   [A]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[S][B][A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[S][] [A][] [] [] [] [] [] [] 
[S][B][A][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SB }]
B[{ B-->b }, { B-->CS }]
S[{ S-->BA }]
C[{ C-->a }, { C-->b }]

word='abbaababba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[]       [B, C]   []       []       []       []       []       []       []       []       
[]       [A]      [B, C]   []       []       []       []       []       []       []       
[]       [B]      [S]      [A, C]   []       []       []       []       []       []       
[B]      [S]      []       []       [A, C]   []       []       []       []       []       
[A]      [A]      []       []       []       [B, C]   []       []       []       []       
[B]      [A, S]   [A]      []       [B]      [S]      [A, C]   []       []       []       
[A, B, S][A, S]   []       []       [A]      [A]      []       [B, C]   []       []       
[A, B, S][A, S]   [A]      [B]      [S]      []       []       [A]      [B, C]   []       
[A, B, S][A, S]   [B]      [S]      [A]      [A]      []       [B]      [S]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A, S][]    []    []    []    []    []    []    []    
[A, B][]    []    []    [A]   []    []    []    []    []    
[A, B][A, S][]    []    []    []    []    []    []    []    
[A, B][S]   [B]   []    [A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->SA }]
B[{ B-->SB }, { B-->AA }, { B-->SS }]
S[{ S-->BA }, { S-->BB }, { S-->b }]

word='abaabaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[B]      [A]      [A]      []       []       []       []       []       []       []       
[S]      [B]      [B]      [A]      []       []       []       []       []       []       
[B]      [A]      [A]      []       [S]      []       []       []       []       []       
[A, S]   [B, S]   [B, S]   [B]      [A]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [S]      [B]      [B]      [A]      []       []       []       
[A, B, S][A, B, S][B, S]   [B]      [A]      [A]      []       [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [S]      []       [B]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [A, S]   [A]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [B, S][B, S][]    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   [A]   []    []    []    []    []    
[]    []    []    [B]   [B, S][]    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
C[{ C-->AC }, { C-->AS }, { C-->CC }, { C-->SS }, { C-->b }]
S[{ S-->CA }, { S-->AA }]

word='abaabaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[C, S]   [S]      [A]      []       []       []       []       []       []       []       
[A, S]   [A]      [S]      [A]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [C, S]   [S]      [A]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [A]      [S]      [A]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [S]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AA }, { A-->b }]
S[{ S-->AC }, { S-->a }]
C[{ C-->SA }, { C-->SC }, { C-->b }]

word='abaabaabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [A, C]   []       []       []       []       []       []       []       []       
[A, C]   [A]      [S]      []       []       []       []       []       []       []       
[A]      []       []       [S]      []       []       []       []       []       []       
[A, S]   [S]      [C]      [C]      [A, C]   []       []       []       []       []       
[A, S, C][A, S]   [A, C]   [A, C]   [A]      [S]      []       []       []       []       
[A, C]   [A, S]   [A, C]   [A]      []       []       [S]      []       []       []       
[A, S, C][A, C, S][A, C, S][A, S]   [S]      [C]      [C]      [A, C]   []       []       
[A, C, S][A, S, C][A, C, S][A, C, S][S, C]   [C]      [C]      [A, S]   [A, C]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [A]      [A]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][A, C][]    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[C]   []    [C, S][A, S][]    []    []    []    []    []    
[]    []    []    [A]   [S]   [C]   []    []    []    []    
[]    []    []    []    [A, S][A, C][A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AS }]
C[{ C-->a }, { C-->b }]
S[{ S-->CC }, { S-->AA }, { S-->b }]

word='abaabaabba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C, S][]    []    []    []    []    []    []    []    
[A]   [A, S][C]   []    []    []    []    []    []    []    
[]    [A]   [S]   [C]   []    []    []    []    []    []    
[A]   [A]   [A]   [S]   [C, S][]    []    []    []    []    
[S]   [A, S][]    [A]   [A, S][C]   []    []    []    []    
[A]   [A, S][A]   []    [A]   [S]   [C]   []    []    []    
[A, S][A, S][A, S][A]   [A]   [A]   [S]   [C, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [A, S][C, S][]    
[A, S][A, S][A, S][A, S][A, S][A, S][]    [A]   [A, S][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [A][] [A][] [] [] [] [] 
[] [] [] [] [A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->SA }, { B-->CS }]
S[{ S-->a }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->SS }]

word='abaabaabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, C]   [A, S]   []       []       []       []       []       []       []       []       
[B]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [B]      [C]      [S]      []       []       []       []       []       []       
[B, C]   [A, S]   [B]      [B, C]   [A, S]   []       []       []       []       []       
[B]      [C]      [S]      [B]      [C]      [S]      []       []       []       []       
[S]      [B]      [C]      [S]      [B]      [C]      [S]      []       []       []       
[B, C]   [A, S]   [B]      [B, C]   [A, S]   [B]      [B, C]   [A, S]   []       []       
[A, B, C][B, S, C][A, B, S][A, B, C][B, S, C][A, B, S][A, B]   [B, C]   [A, S]   []       
[B, S]   [B, C]   [C, S]   [B, S]   [B, C]   [C]      [S]      [B]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[B]   []    [S]   []    []    []    []    []    []    []    
[S]   [B]   []    [S]   []    []    []    []    []    []    
[]    [A, S][B]   []    [A, S][]    []    []    []    []    
[A, C][]    [B, S][A, C][]    [B, S][]    []    []    []    
[B]   []    []    [B]   [B, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->a }]
S[{ S-->BB }, { S-->BC }]
C[{ C-->SC }, { C-->CC }, { C-->BS }]

word='bababbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[C]      [S]      [B]      []       []       []       []       []       []       []       
[S]      [A, C]   [S]      [A, B]   []       []       []       []       []       []       
[C]      [S]      [C]      [S]      [B]      []       []       []       []       []       
[C, S]   [A, C]   [S]      [A, C]   [S]      [B]      []       []       []       []       
[C, S]   [C, S]   [C]      [S]      [C]      [S]      [B]      []       []       []       
[C, S]   [A, C, S][S, C]   [A, C]   [S]      [C]      [S]      [A, B]   []       []       
[C, S]   [A, C, S][S, C]   [S, C]   [C]      [S]      [C]      [S]      [B]      []       
[C, S]   [A, C, S][S, C]   [A, S, C][S, C]   [C]      [S]      [A, C]   [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   [A, C][S]   []    []    []    []    []    []    []    
[S]   [S]   [C]   [S]   []    []    []    []    []    []    
[S]   [A, S][S]   [A, C][S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [C]   [S]   []    []    []    []    
[S]   [S]   [S]   [A, S][S]   [C]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->SB }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->SS }, { C-->SC }, { C-->CS }, { C-->BC }]

word='bababbbabb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [S, C][B, S][]    []    []    []    []    []    []    
[C, S][C]   [C]   [S]   []    []    []    []    []    []    
[S, C][S, C][C]   [S, C][B, S][]    []    []    []    []    
[S, C][S, C][C, S][C, S][S, C][B, S][]    []    []    []    
[S, C][S, C][C, S][C, S][C, S][S, C][B, S][]    []    []    
[S, C][S, C][C, S][C, S][C, S][C]   [C]   [S]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   [S, C][B, S][]    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][S, C][B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BA }, { B-->CB }]
S[{ S-->SB }, { S-->BB }]
C[{ C-->SS }, { C-->BC }]

word='bababbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[S]      []       [B]      []       []       []       []       []       []       []       
[S]      []       [B]      [A]      []       []       []       []       []       []       
[S]      []       [S]      []       [B]      []       []       []       []       []       
[C, S]   []       [S]      []       [S]      [B]      []       []       []       []       
[B, C, S][]       [C, S]   []       [S]      [S]      [B]      []       []       []       
[B, C, S][]       [C, S]   []       [S]      [S]      [B]      [A]      []       []       
[B, C, S][]       [B, C, S][]       [C, S]   [S]      [S]      []       [B]      []       
[B, S, C][]       [B, S, C][]       [B, C, S][C, S]   [S]      []       [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [S]   [S]   []    []    []    []    
[]    []    []    []    [B, S][S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->b }, { B-->AB }]
C[{ C-->BA }, { C-->a }, { C-->BC }]
S[{ S-->BB }, { S-->b }, { S-->BS }]

word='bababbbabb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[S]   [B]   [B, S][]    []    []    []    []    []    []    
[C]   [A, C][C]   [A, C][]    []    []    []    []    []    
[S]   [B, S][S]   [B]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[C]   [A, C][C]   [A, C][C]   [C]   [C]   [A, C][]    []    
[S]   [B, S][S]   [B, S][S]   [S]   [S]   [B]   [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[C]   [A, C][C]   [A, C][C]   []    []    []    []    []    
[S]   [B, S][S]   [B, S][S]   [S]   []    []    []    []    
[S]   []    [S]   []    [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=30

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->BS }]
C[{ C-->AA }, { C-->SC }]

word='bababbbabb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B]      [B]      [A, B]   []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [A, B]   []       []       []       []       []       
[B]      [B]      [B]      [B]      [B, C]   [A, B]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C]   [A, B]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      [B]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      [B]      [A, B]   []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B]      [B]      [B]      [B, C]   [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CA }, { S-->SC }]

word='abbbbbbaba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[C, S]   [C]      [C]      [C]      [C]      [C]      [C]      [A, C]   []       []       
[A, S]   [S]      [S]      [S]      [S]      [S]      [S]      [S]      [A]      []       
[A, S, C][S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      [A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->BB }, { C-->b }]
S[{ S-->CC }, { S-->SC }]

word='abbbbbbaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B, C][]    []    []    []    []    []    []    []    
[S]   [C, S][B, C][]    []    []    []    []    []    []    
[S]   [S]   [C, S][B, C][]    []    []    []    []    []    
[S]   [S]   [S]   [C, S][B, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [C, S][B, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C, S][B, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   [B, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    [C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->AS }, { C-->a }, { C-->AA }, { C-->SS }]
S[{ S-->CA }, { S-->CS }]

word='abbbbbbaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A]      [C]      [A]      []       []       []       []       []       []       []       
[C, S]   [S]      [C]      [A]      []       []       []       []       []       []       
[A, S, C][A, C]   [S]      [C]      [A]      []       []       []       []       []       
[A, C, S][S, C]   [A, C]   [S]      [C]      [A]      []       []       []       []       
[A, C, S][A, S, C][C, S]   [A, C]   [S]      [C]      [A]      []       []       []       
[A, C, S][A, S, C][A, C]   [A, S]   [C]      [A]      []       [C]      []       []       
[A, C, S][A, S, C][A, C, S][A, C, S][A, C, S][S, C]   [C]      [S]      [A]      []       
[A, C, S][A, S, C][A, C, S][A, C, S][A, C, S][A, C]   [A]      []       []       [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    [A]   [S]   [C]   []    []    []    []    []    
[]    []    []    [A, S][C]   [S, C][]    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AC }, { S-->CS }, { S-->SC }]
C[{ C-->AS }, { C-->CA }, { C-->a }]

word='abbbbbbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C]   []    [A]   []    []    []    []    []    []    []    
[C]   []    []    [A]   []    []    []    []    []    []    
[C]   []    []    []    [A]   []    []    []    []    []    
[C]   []    []    []    []    [A]   []    []    []    []    
[C]   []    []    []    []    []    [A]   []    []    []    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [C]   []    []    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [C]   [A]   []    
[S]   [S, C][C, S][C, S][C, S][C, S][C, S][S]   [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    [C]   []    [C]   []    []    []    []    
[]    [C]   [C]   [C]   [C]   [C]   [C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->a }, { C-->SC }, { C-->b }, { C-->BC }]
S[{ S-->CC }]

word='abbbbbbaba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][S]   [C]   []    []    []    []    []    []    []    
[C, S][C]   [S]   [C]   []    []    []    []    []    []    
[C, S][S]   [C]   [S]   [C]   []    []    []    []    []    
[C, S][C]   [S]   [C]   [S]   [C]   []    []    []    []    
[C, S][S]   [C]   [S]   [C]   [S]   [C]   []    []    []    
[C, S][C]   [S]   [C]   [S]   [C]   [S]   [B, C][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C, S][C]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C, S][S]   [B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[C, S][]    [C]   []    []    []    []    []    []    []    
[]    [C]   []    [C]   []    []    []    []    []    []    
[]    [C]   [S]   [C]   [S]   [C]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }]
S[{ S-->AC }, { S-->SC }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->BC }]

word='abbabbbbaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[C]   [A]   [B]   []    []    []    []    []    []    []    
[C, S][S, C][C]   [A, C][]    []    []    []    []    []    
[C, S][S, C][C]   [C]   [B]   []    []    []    []    []    
[C, S][S, C][C]   [C]   [A]   [B]   []    []    []    []    
[C, S][S, C][C]   [C]   []    [A]   [B]   []    []    []    
[C, S][S, C][C]   [C]   []    []    [A]   [B]   []    []    
[S, C][S, C][C]   [S, C][C, S][C, S][C, S][C]   [A, C][]    
[S, C][S, C][C]   [S, C][C, S][C, S][C, S][C]   [C, S][A, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [S, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->b }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->BS }]
C[{ C-->SB }, { C-->SC }, { C-->b }]

word='abbabbbbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[S]   [S]   [B, C][]    []    []    []    []    []    []    
[S]   [A, S][A]   [A]   []    []    []    []    []    []    
[C]   [C]   []    []    [B, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    []    
[C, S][C, S][S, C][S, C][S, C][S]   [B, C][]    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S]   [B, C][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AS }]
C[{ C-->AC }, { C-->a }, { C-->b }]
S[{ S-->CC }, { S-->AA }]

word='abbabbbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A]      [S]      [C]      []       []       []       []       []       []       []       
[C]      [A]      [S]      [C]      []       []       []       []       []       []       
[A, S]   [C]      [A]      [S]      [C]      []       []       []       []       []       
[A, S, C][A, S]   [C]      [A]      [S]      [C]      []       []       []       []       
[A, C, S][A, S, C][A, S]   [C]      [A]      [S]      [C]      []       []       []       
[A, S, C][A, C, S][A, S, C][A, S]   [C]      [A]      [S]      [C]      []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S]   [C]      [A]      [S]      [C]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S]   [C]      [A]      [S]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[C][A][C][] [] [] [] [] [] [] 
[] [C][A][C][] [] [] [] [] [] 
[] [] [C][A][C][] [] [] [] [] 
[] [] [] [C][A][C][] [] [] [] 
[] [] [] [] [C][A][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->b }]
C[{ C-->a }]

word='abbabbbbaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [A]   [S, C][]    []    []    []    []    []    
[S]   [S]   []    [S]   [A, S][]    []    []    []    []    
[S]   [S]   []    [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   []    [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   []    [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   []    [S]   [S]   [S]   [S]   [A]   [S, C][]    
[S]   [S]   []    [S]   [S]   [S]   [S]   [A]   []    [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 
[S][] [] [S][S][S][] [] [] [] 
[S][] [] [S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->b }, { B-->SB }]
S[{ S-->AA }, { S-->b }]

word='abbabbbbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [B]   [B, S][]    []    []    []    []    []    []    
[S]   [A]   [A]   [A]   []    []    []    []    []    []    
[B]   []    []    []    [B, S][]    []    []    []    []    
[B]   []    []    []    [B]   [B, S][]    []    []    []    
[B]   []    []    []    [B]   [B]   [B, S][]    []    []    
[B]   []    []    []    [B]   [B]   [B]   [B, S][]    []    
[A]   [S]   [S]   [S]   [A]   [A]   [A]   [A]   [A]   []    
[S]   [A]   [A]   [A]   [S]   [S]   [S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[A][] [] [] [A][A][] [] [] [] 
[] [] [] [A][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->b }, { B-->a }]
S[{ S-->SB }, { S-->a }, { S-->BS }]

word='abaabbaabb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[A, S][S]   [B, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][B, S][]    []    []    []    []    []    
[A, S][A, S][A, S][S]   [A, B][]    []    []    []    []    
[A, S][A, S][A, S][S]   []    [A, B][]    []    []    []    
[A, S][A, S][A, S][A, S][S]   [S]   [B, S][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][B, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A, B][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->AC }, { S-->AS }, { S-->SA }]
C[{ C-->AA }, { C-->CC }, { C-->b }]

word='abaabbaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[S]   [C]   [C]   [A]   []    []    []    []    []    []    
[S]   [C]   [S, C][S]   [C]   []    []    []    []    []    
[S]   [C]   [S, C][S]   [C]   [C]   []    []    []    []    
[S]   []    [S]   [S]   []    []    [A]   []    []    []    
[S]   [C]   [S, C][S]   [C]   [C]   [C]   [A]   []    []    
[S]   [C]   [S, C][S]   [C]   [C]   [S, C][S]   [C]   []    
[S]   [C]   [S, C][S]   [C]   [C]   [S, C][S]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    [S, C][]    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[S]   []    [S, C][S]   []    []    []    []    []    []    
[S]   []    [S, C][S]   []    []    []    []    []    []    
[S]   []    [S, C][S]   []    []    [S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->SA }, { S-->a }]

word='abaabbaabb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   []    [A, S][]    []    []    []    []    []    []    
[S]   []    [S]   [A, S][]    []    []    []    []    []    
[S]   []    [S]   [S]   [A]   []    []    []    []    []    
[S]   []    [S]   [S]   []    [A]   []    []    []    []    
[S]   []    [S]   [S]   []    []    [A, S][]    []    []    
[S]   []    [S]   [S]   []    []    [S]   [A, S][]    []    
[S]   []    [S]   [S]   []    []    [S]   [S]   [A]   []    
[S]   []    [S]   [S]   []    []    [S]   [S]   []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
C[{ C-->AC }, { C-->a }, { C-->SC }, { C-->CS }]
S[{ S-->SA }, { S-->a }, { S-->AA }]

word='abaabbaabb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S, C]   [A, C]   [S, C]   []       []       []       []       []       []       []       
[C, S]   [A, C]   [C]      [S, C]   []       []       []       []       []       []       
[C, S]   [A, C, S][C]      [S]      [A]      []       []       []       []       []       
[C, S]   [A, C, S][C]      [C, S]   [S]      [A]      []       []       []       []       
[C, S]   [A, C, S][C]      [C, S]   [S, C]   [A, C]   [S, C]   []       []       []       
[C, S]   [A, C, S][C]      [C, S]   [S, C]   [A, C]   [C]      [S, C]   []       []       
[C, S]   [A, C, S][C]      [S, C]   [A, S, C][A, C, S][C]      [S]      [A]      []       
[C, S]   [A, C, S][C]      [S, C]   [A, S, C][A, C, S][C]      [C, S]   [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [A, S][]    [S]   []    []    []    []    []    []    
[]    [A, S][]    [S]   []    []    []    []    []    []    
[]    [A, S][]    []    [A]   [A, S][]    []    []    []    
[]    [A, S][]    []    []    [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->SA }, { S-->a }, { S-->b }]

word='abaabbaabb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->CA }]
S[{ S-->CB }, { S-->BA }, { S-->CS }, { S-->BS }]
C[{ C-->a }]

word='abbbbabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][A, B][]    []    []    []    []    []    []    []    
[S]   [S]   [A, B][]    []    []    []    []    []    []    
[B, S][A, S][S]   [A, B][]    []    []    []    []    []    
[B, S][A, S][A, S][S]   [A, B][]    []    []    []    []    
[B, S][A, S][A, S][S]   [A]   [C]   []    []    []    []    
[B, S][A, S][A, S][A, S][A, S][B, S][A, B][]    []    []    
[B, S][A, S][A, S][A, S][A, S][S]   [S]   [A, B][]    []    
[B, S][A, S][A, S][A, S][A, S][B, S][A, S][S]   [A, B][]    
[B, S][A, S][A, S][A, S][A, S][B, S][A, S][S]   [A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[B]   [S]   [S]   []    []    []    []    []    []    []    
[B]   [S]   [S]   [A, S][]    []    []    []    []    []    
[B]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[B]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[B]   [S]   [S]   [S]   [S]   [B]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=31

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->a }]
S[{ S-->BB }]

word='abbbbabbba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[S][B][S][B][S][B][] [] [] [] 
[B][S][B][S][B][S][B][] [] [] 
[S][B][S][B][S][B][S][B][] [] 
[B][S][B][S][B][S][B][S][B][] 
[S][B][S][B][S][B][S][B][S][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[B][] [B][] [B][] [] [] [] [] 
[] [B][] [B][] [B][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AB }, { B-->AS }, { B-->SA }, { B-->a }]
S[{ S-->BA }, { S-->a }, { S-->b }, { S-->BS }]

word='abbbbabbba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[B, S][B]   [A, S][]    []    []    []    []    []    []    
[B, S][B, S][B]   [A, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B]   [A, S][]    []    []    []    []    
[S]   [B, S][B, S][B, S][B]   [B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, S][]    
[S]   [B, S][B, S][B, S][B, S][S]   [B, S][B, S][B]   [B, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[B, S][B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[]    [B]   [B]   [B]   [B]   []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->BC }, { B-->AC }]
S[{ S-->AS }, { S-->a }, { S-->CS }]
C[{ C-->b }]

word='abbbbabbba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[B]   []    [C]   []    []    []    []    []    []    []    
[B]   []    []    [C]   []    []    []    []    []    []    
[B]   []    []    []    [C]   []    []    []    []    []    
[A, S][S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[B]   []    []    []    []    [B]   [C]   []    []    []    
[B]   []    []    []    []    [B]   []    [C]   []    []    
[B]   []    []    []    []    [B]   []    []    [C]   []    
[A, S][S]   [S]   [S]   [S]   [A, S][S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }, { A-->BA }]
B[{ B-->b }, { B-->BB }]
C[{ C-->CA }, { C-->a }, { C-->AA }]
S[{ S-->CC }]

word='abbbbabbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A]   [B]   [B]   []    []    []    []    []    []    []    
[A]   [B]   [B]   [B]   []    []    []    []    []    []    
[A]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[C]   [A]   [A]   [A]   [A]   [A, C][]    []    []    []    
[A, C][A]   [A]   [A]   [A]   [A]   [B]   []    []    []    
[A, C][A]   [A]   [A]   [A]   [A]   [B]   [B]   []    []    
[A, C][A]   [A]   [A]   [A]   [A]   [B]   [B]   [B]   []    
[C, S][C]   [C]   [C]   [C]   [C]   [A]   [A]   [A]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->CB }, { B-->CC }, { B-->BB }]
S[{ S-->AC }, { S-->CA }, { S-->b }]
C[{ C-->a }, { C-->CS }]

word='abbbbbabaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[C]      []       [S]      []       []       []       []       []       []       []       
[C]      []       []       [S]      []       []       []       []       []       []       
[C]      []       []       []       [S]      []       []       []       []       []       
[C]      []       []       []       []       [S]      []       []       []       []       
[B, S]   [A]      [A]      [A]      [A]      [A]      [A, C]   []       []       []       
[B]      []       []       []       []       []       [C]      [S]      []       []       
[A, B, C][]       []       []       []       []       [B, S]   [A]      [A, C]   []       
[B, S]   [A]      [A]      [A]      [A]      [A]      [A, B, C][S]      [B, S]   [A, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       [A, B, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AB }, { B-->AS }, { B-->SC }]
S[{ S-->SB }, { S-->CS }, { S-->CC }, { S-->b }]
C[{ C-->a }]

word='abbbbbabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    [B]   [A, S][]    []    []    []    []    []    []    
[S]   [B, S][B]   [A, S][]    []    []    []    []    []    
[S]   [B, S][B, S][B]   [A, S][]    []    []    []    []    
[S]   [B, S][B, S][B, S][B]   [A, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][A, B][C]   []    []    []    
[S]   [B, S][B, S][B, S][B, S][B]   [S]   [A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, B][C]   []    
[B, S][B, S][B, S][B, S][B, S][B]   []    [A, B][S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[]    [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->a }, { C-->b }]

word='abbbbbabaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->BC }]
S[{ S-->SC }, { S-->CC }, { S-->b }]

word='abbbbbabaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[C]      [C]      [B]      [S]      []       []       []       []       []       []       
[]       [S]      [C]      [B]      [S]      []       []       []       []       []       
[C]      [B, C]   [S]      [C]      [B]      [S]      []       []       []       []       
[C]      [B, C, S][S, C]   [B, C]   [S]      [C]      [B]      []       []       []       
[C]      [B, C]   [B, S]   [C]      [B]      []       []       [S]      []       []       
[S, C]   [B, C, S][B, S, C][B, S, C][B, C, S][S]      [C]      [C]      [B]      []       
[S, C]   [B, C, S][B, S, C][B, S, C][S, C]   [C]      []       []       []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[C]      [B]      []       [B, C]   []       []       []       []       []       []       
[C]      []       [B]      [C]      []       []       []       []       []       []       
[C]      [B]      []       [B, C]   [B, C, S][]       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->AC }]
B[{ B-->a }]
C[{ C-->AS }, { C-->b }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->SC }]

word='abbbbbabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   [A]   [A, C][]    []    []    []    []    []    []    
[S]   [A]   [A]   [A, C][]    []    []    []    []    []    
[S]   [A]   [A]   [A]   [A, C][]    []    []    []    []    
[S]   [A]   [A]   [A]   [A]   [A, C][]    []    []    []    
[S]   [A, C][A, C][A, C][A, C][C]   [B, S][]    []    []    
[S]   [A, C][A, C][A, C][A, C][C]   [S]   [A, C][]    []    
[S]   [A, C][A, C][A, C][A, C][C]   [S]   [C]   [B, S][]    
[S]   [A, C][A, C][A, C][A, C][C]   [S]   []    [A]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][A][] [] [] [] [] [] [] 
[] [C][C][C][] [] [] [] [] [] 
[] [C][C][C][C][] [] [] [] [] 
[] [C][C][C][C][C][] [] [] [] 
[] [C][C][C][C][C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }]
B[{ B-->AB }, { B-->SA }, { B-->a }]
S[{ S-->BA }, { S-->a }]
C[{ C-->BS }]

word='abaaabaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[C]   [B]   [B, S][]    []    []    []    []    []    []    
[A]   [C]   [C]   [B, S][]    []    []    []    []    []    
[B, S][A]   [A]   [C]   [B, S][]    []    []    []    []    
[B, S][A]   [A]   [C]   [B, S][A]   []    []    []    []    
[C]   [B, S][B, S][A]   [C]   [B]   [B, S][]    []    []    
[A]   [C]   [C]   [B, S][A]   [C]   [C]   [B, S][]    []    
[B, S][A]   [A]   [C]   [B, S][A]   [A]   [C]   [B, S][]    
[B, S][A]   [A]   [C]   [B, S][A]   [A]   [C]   [B, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[]    [S]   [B, S][A]   []    []    []    []    []    []    
[A]   [C]   []    [B, S][A]   []    []    []    []    []    
[B, S][A]   [A]   []    [B, S][A]   []    []    []    []    
[]    [A]   [A]   [C]   []    [A]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AS }, { B-->BA }]
S[{ S-->b }, { S-->BS }]

word='abaaabaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [B, S][]    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[B]   [B]   []    [A]   []    []    []    []    []    []    
[B]   [B]   []    []    [A]   []    []    []    []    []    
[B, S][S]   []    []    [B]   [B, S][]    []    []    []    
[B]   []    []    []    [B]   [B]   [A]   []    []    []    
[B]   []    []    []    [B]   [B]   []    [A]   []    []    
[B]   []    []    []    [B]   [B]   []    []    [A]   []    
[B, S][S]   []    [B]   [B, S][S]   []    []    [B]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[B][] [] [] [B][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->SS }]

word='abaaabaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[S, C][S, C][S]   []    []    []    []    []    []    []    
[C, S][C, S][C]   [S]   []    []    []    []    []    []    
[S, C][S, C][S]   [C]   [S]   []    []    []    []    []    
[C, S][C, S][C]   [S]   [C]   [A, S][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][C]   [S]   []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   [C]   [S]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][C]   [S]   [C]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
S[{ S-->AS }, { S-->AA }]
C[{ C-->b }]

word='abaaabaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][A, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->b }]
S[{ S-->AS }, { S-->AA }, { S-->BS }]

word='abaaabaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[S]   [A, S][A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][A, B][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->a }]
S[{ S-->BB }]
C[{ C-->b }]

word='bbbbaabbbb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B, S][B, C][]    []    []    []    []    []    []    []    
[B, S][B, S][B, C][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, C][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][B, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][B, S][B, C][]    []    
[S]   [S]   [S]   [S]   [S]   [B, S][B, S][B, S][B, C][]    
[S]   [S]   [S]   [S]   [S]   [B, S][B, S][B, S][B, S][B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][B][] [] [] [] 
[S][S][S][S][S][B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->b }, { B-->AC }, { B-->SB }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->BS }]
C[{ C-->a }]

word='bbbbaabbbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[]       []       [A, B]   []       []       []       []       []       []       []       
[]       []       []       [A, B]   []       []       []       []       []       []       
[S]      [S]      [S]      [B, S]   [S, C]   []       []       []       []       []       
[S]      [S]      [S]      [S]      []       [S, C]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, B, S][A, B, S][A, B]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       [A, B]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       []       [A, B]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       []       []       [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SA }, { A-->CB }]
B[{ B-->CC }]
S[{ S-->CA }, { S-->BS }]
C[{ C-->a }, { C-->BB }, { C-->b }]

word='bbbbaabbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A]      [B]      [C]      []       []       []       []       []       []       []       
[S, C]   [A]      [B]      [C]      []       []       []       []       []       []       
[B]      [C, S]   [A]      [B]      [C]      []       []       []       []       []       
[A, S]   [B]      [S, C]   [A]      [B]      [C]      []       []       []       []       
[A, S, C][A, S]   [B]      [S, C]   [A]      [B]      [C]      []       []       []       
[B, S]   [A, C, S][A, S]   [B]      [S, C]   [A]      [B]      [C]      []       []       
[A, S]   [B, S]   [A, S, C][A, S]   [B]      [S, C]   [A]      [B]      [C]      []       
[A, S, C][A, S]   [B, S]   [A, S, C][A, S]   [B]      [S, C]   [A]      [B]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[A, S][]    [S, C][]    []    []    []    []    []    []    
[S, C][A, S][]    [S, C][]    []    []    []    []    []    
[]    [C, S][A, S][]    [S, C][]    []    []    []    []    
[A]   []    [S, C][A, S][]    [S, C][]    []    []    []    
[S, C][A]   []    [S, C][A, S][]    [S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=36

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=36

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->a }]
S[{ S-->SA }, { S-->b }]

word='bbbbaabbbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [C]   []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    [A, S][]    []    []    
[A, S][A, S][A, S][A, S][]    []    [A, S][A, S][]    []    
[A, S][A, S][A, S][A, S][]    []    [A, S][A, S][A, S][]    
[A, S][A, S][A, S][A, S][]    []    [A, S][A, S][A, S][A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
C[{ C-->a }, { C-->b }]
S[{ S-->SC }, { S-->b }, { S-->BS }]

word='bbbbaabbbb'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [C, S][]    []    []    []    []    []    []    []    
[S]   [S]   [C, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [C, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [B, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->CA }]
S[{ S-->AS }, { S-->SA }, { S-->BC }]
C[{ C-->SB }, { C-->b }]

word='bababbaabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[A, S][B]   [B, C][]    []    []    []    []    []    []    
[S]   []    [B]   [A]   []    []    []    []    []    []    
[C]   [S]   [A, S][B]   [B, C][]    []    []    []    []    
[A, S][B, C][B, C][S]   [A, S][B, C][]    []    []    []    
[A, S][B, C][B, C][S]   [A, S][B]   [A]   []    []    []    
[A, S][B]   [B]   [S]   [S]   []    []    [A]   []    []    
[B, C][A, S][A, S][B, C][C]   []    []    [B]   [B, C][]    
[A, S][B, C][B, C][A, S][A, S][]    [S]   [S]   [A, S][B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   [B, C][]    []    []    []    []    []    []    
[A, S][B, C][B, C][]    []    []    []    []    []    []    
[A, S][B]   [B]   [S]   []    []    []    []    []    []    
[B, C][A, S][A]   [B, C][]    []    []    []    []    []    
[]    []    [B, C][A, S][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SB }]
S[{ S-->AS }, { S-->BA }, { S-->a }, { S-->CC }]
C[{ C-->CB }, { C-->CS }, { C-->BS }]

word='bababbaabb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[B, C]   [B]      [A, B]   []       []       []       []       []       []       []       
[C, S]   [C]      [S, C]   [S]      []       []       []       []       []       []       
[B, C, S][B, C]   [B, C]   [B]      [A, B]   []       []       []       []       []       
[B, C, S][C, S]   [S, C]   [S]      [S]      [A, B]   []       []       []       []       
[S, C]   [S, C]   [S, C]   [C]      [S, C]   [S, C]   [S]      []       []       []       
[S, C]   [S, C]   [S, C]   [C]      [C]      [C]      []       [S]      []       []       
[B, C, S][B, S, C][B, S, C][B, C]   [B, C]   [B, C]   [B]      [B]      [A, B]   []       
[B, C, S][B, C, S][B, S, C][C, S]   [S, C]   [S, C]   [S]      [S]      [S]      [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[B][] [S][] [] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [] [C][C][C][] [] [] [] [] 
[] [] [] [B][B][B][] [] [] [] 
[] [] [B][] [] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->b }, { B-->BB }]
C[{ C-->a }, { C-->AA }, { C-->CS }]
S[{ S-->CC }, { S-->BS }]

word='bababbaabb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [A, B]   []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       []       [A, B]   []       []       []       []       []       
[]       [C]      [S]      [S]      [B, C]   [A, B]   []       []       []       []       
[S]      [S]      []       [C]      [S]      []       [C]      []       []       []       
[S]      [C, S]   [A, C, S][A, C, S][S, C]   [S]      [S]      [C]      []       []       
[S]      [S]      [C]      [C]      []       []       []       []       [A, B]   []       
[A, C, S][A, S, C][S]      [C, S]   [A, S]   []       [C]      [S]      [B, C]   [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[S]   [C, S][]    [A]   [S, C][]    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[C, S][S, C][]    [S]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->SC }, { B-->BB }]
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->a }]

word='bababbaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [S, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S, C]   []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S, C]   []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }, { B-->BB }]
S[{ S-->CB }, { S-->a }, { S-->CC }, { S-->BC }]
C[{ C-->CS }, { C-->b }]

word='bababbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[S]      []       [C]      []       []       []       []       []       []       []       
[B, S]   []       [C]      [S]      []       []       []       []       []       []       
[S, C]   [B]      [S]      []       [C]      []       []       []       []       []       
[B, S, C][B, S]   [S, C]   [B]      [S]      [C]      []       []       []       []       
[B, S, C][B, S]   [B, S, C][B]      [B, S]   [C]      [S]      []       []       []       
[B, C, S][B, S]   [B, S, C][B]      [B, S, C][S, C]   [B]      [S]      []       []       
[B, C, S][B, S]   [B, S, C][B, S]   [B, S, C][C, S]   [S]      []       [C]      []       
[B, C, S][B, S]   [B, S, C][B, S]   [B, S, C][B, S, C][]       [B]      [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    [B]   [S, C][]    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [C]   []    [C]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->SA }, { B-->a }]
C[{ C-->AS }, { C-->b }, { C-->BS }]
S[{ S-->BB }, { S-->AB }]

word='babaaababa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [A]   [A, B][]    []    []    []    []    []    
[C]   [C]   [S]   [S]   [A, B][]    []    []    []    []    
[A, S][A, S][B, C][B, C][S]   [A, B][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[B, C][B, C][A, S][A, S][B]   []    [A]   [A, B][]    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A, S][A, S][B]   [B]   []    []    []    []    [A]   [A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A, S][B, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->CS }]
C[{ C-->SB }, { C-->a }, { C-->SS }]
S[{ S-->BB }, { S-->BC }]

word='babaaababa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[C]      []       [B]      []       []       []       []       []       []       []       
[S, C]   [B]      [S]      [C]      []       []       []       []       []       []       
[B]      [S]      []       []       [C]      []       []       []       []       []       
[S]      []       []       []       []       [C]      []       []       []       []       
[C]      []       []       []       []       []       [B]      []       []       []       
[S, C]   [C]      []       []       []       [B]      [S]      [C]      []       []       
[B, C, S][S, C]   [C]      []       [B]      [S]      [C]      []       [B]      []       
[B, C, S][B, C]   [S, C]   [B]      [S]      [B]      [S, C]   [B]      [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[B]   []    [S, C][]    []    [B]   [S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BC }, { B-->AC }, { B-->SA }, { B-->CB }, { B-->SB }]
C[{ C-->a }, { C-->CS }, { C-->b }]
S[{ S-->AB }]

word='babaaababa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[B]   []    [A, C][]    []    []    []    []    []    []    
[B, S][B]   [B]   [C]   []    []    []    []    []    []    
[B, S][B]   [B]   []    [C]   []    []    []    []    []    
[B, S][B]   [B]   []    []    [C]   []    []    []    []    
[B, S][B]   [B]   []    []    []    [A, C][]    []    []    
[B, S][B, C][B, S][B]   [B]   [B]   [B]   [C]   []    []    
[B, S][B, C][B, S][B]   [B]   [B]   [B]   []    [A, C][]    
[B, S][B, C][B, S][B]   [B]   [B, C][B, S][B]   [B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B, C][B, S][]    []    []    []    []    []    []    
[S]   []    [S]   [B]   [B]   [B]   []    []    []    []    
[S]   []    [S]   [B]   []    [B, C][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BC }, { B-->CB }, { B-->a }]
S[{ S-->AC }, { S-->SA }]
C[{ C-->a }, { C-->CC }, { C-->AB }]

word='babaaababa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C, S]   [B, C]   []       []       []       []       []       []       []       []       
[S]      []       [A]      []       []       []       []       []       []       []       
[C, S]   [B, C]   [C, S]   [B, C]   []       []       []       []       []       []       
[B, C, S][B, C]   [B, C, S][B, C]   [B, C]   []       []       []       []       []       
[B, C, S][B, C]   [B, C, S][B, C]   [B, C]   [B, C]   []       []       []       []       
[S]      []       [S]      []       []       []       [A]      []       []       []       
[B, C, S][B, C]   [B, C, S][B, C]   [B, C]   [B, C]   [C, S]   [B, C]   []       []       
[S]      []       [S]      []       []       []       [S]      []       [A]      []       
[B, C, S][B, C]   [B, C, S][B, C]   [B, C]   [B, C]   [C, S]   [B, C]   [C, S]   [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       [B, C, S][]       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       [B, C, S][]       []       []       [C, S]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }, { S-->b }]
C[{ C-->a }, { C-->b }]

word='babaaababa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->SB }]
B[{ B-->b }, { B-->BS }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->AA }, { S-->b }]

word='ababbaaaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[A, S]   [B]      [S]      []       []       []       []       []       []       []       
[A, S]   [B, S]   [A]      [B, S]   []       []       []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, B]   [B, S]   []       []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, B, S][B]      [S]      []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, B, S][B]      []       [S]      []       []       []       
[A, S]   [A, B, S][A, S]   [A, B, S][B]      []       []       [S]      []       []       
[A, S]   [A, B, S][A, S]   [A, B, S][B]      []       [S]      [A]      [B, S]   []       
[A, S]   [A, B, S][A, S]   [A, B, S][B]      []       [S]      [A, S]   [B]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    [B, S][]    []    []    []    []    []    
[]    [A]   []    [B, S][]    []    []    []    []    []    
[]    [A]   []    [B, S][]    []    []    []    []    []    
[]    [A]   []    [B, S][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->SS }, { C-->SC }, { C-->b }]

word='ababbaaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S]   []    []    []    []    []    []    []    
[S, C][S, C][C]   [S, C][]    []    []    []    []    []    
[S, C][S, C][C, S][S, C][S, C][]    []    []    []    []    
[S, C][S, C][C, S][S, C][C]   [S]   []    []    []    []    
[S, C][S, C][C, S][S, C][S, C][C]   [S]   []    []    []    
[S, C][S, C][C, S][S, C][S, C][C]   [C]   [S]   []    []    
[C, S][C, S][C, S][S, C][S, C][C, S][C, S][C]   [S, C][]    
[C, S][C, S][C, S][S, C][S, C][C, S][C, S][C]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->SB }, { A-->BA }]
B[{ B-->a }, { B-->BB }]
S[{ S-->AS }, { S-->SA }, { S-->b }]

word='ababbaaaba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, B][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][A, B][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, B][A, B][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, B][A, B][A, B][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CB }, { C-->a }, { C-->SC }, { C-->BC }]
S[{ S-->CC }, { S-->b }]

word='ababbaaaba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[C, S][C]   [B, C][]    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[C, S][S, C][C, S][C]   [C]   [B, C][]    []    []    []    
[C, S][S, C][C, S][C, S][C, S][C, S][B, C][]    []    []    
[C, S][S, C][C, S][C, S][C, S][C, S][C, S][B, C][]    []    
[]    []    []    []    []    []    []    []    [S]   []    
[C, S][S, C][C, S][C, S][C, S][C, S][C, S][C, S][C]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CS }]
S[{ S-->BA }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->a }]

word='ababbaaaba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A, B][S]   []    []    []    []    []    []    []    []    
[]    [A]   [S, C][]    []    []    []    []    []    []    
[S]   []    [A, B][S]   []    []    []    []    []    []    
[A]   []    []    [A]   [S]   []    []    []    []    []    
[]    [A]   [S]   []    [A]   [S, C][]    []    []    []    
[S]   []    [A, B][S]   []    [A, B][S, C][]    []    []    
[A, B][S]   []    [A]   [S]   []    [A, B][S, C][]    []    
[]    [A]   [S]   []    [A]   [S]   []    [A, B][S]   []    
[S]   []    [A, B][S]   []    [A, B][S]   []    [A]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [B][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }, { B-->a }]
S[{ S-->SS }, { S-->BB }, { S-->b }, { S-->BS }]

word='ababbabbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[S]   [B, S][S]   [A, S][]    []    []    []    []    []    
[S]   [B, S][S]   [B, S][A, S][]    []    []    []    []    
[S]   [B, S][S]   [S]   []    [B]   []    []    []    []    
[S]   [B, S][S]   [B, S][B, S][S]   [A, S][]    []    []    
[S]   [B, S][S]   [B, S][B, S][S]   [B, S][A, S][]    []    
[S]   [B, S][S]   [B, S][B, S][S]   [S]   []    [B]   []    
[S]   [B, S][S]   [B, S][B, S][S]   [B, S][B, S][S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[] [B][] [B][B][] [] [] [] [] 
[] [B][] [B][B][] [] [] [] [] 
[] [B][] [B][B][] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AB }, { A-->SB }]
B[{ B-->b }, { B-->a }]
S[{ S-->BA }, { S-->AA }, { S-->b }]

word='ababbabbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[A, S][A]   [B]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [B, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A]   [B, S][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [B]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [B, S][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [B, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AA }, { B-->BB }, { B-->SC }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->BC }]
S[{ S-->CC }]

word='ababbabbaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[C]      [B]      [A, C]   []       []       []       []       []       []       []       
[B, S]   [C]      [B]      [A]      []       []       []       []       []       []       
[C]      [B]      [C]      [B]      [A]      []       []       []       []       []       
[B, S]   [C]      [B, S]   [C]      [B]      [A, C]   []       []       []       []       
[B, C]   [B, S]   [C]      [B]      [C]      [B]      [A]      []       []       []       
[B, S, C][C]      [B, S]   [C]      [B]      [C]      [B]      [A]      []       []       
[B, C, S][B, S]   [B, C]   [B, S]   [C]      [B, S]   [C]      [B]      [A, C]   []       
[B, C, S][B, C]   [B, S, C][B, C]   [B, S]   [B, C]   [B, S]   [C]      [B, S]   [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B]   [C]   [B]   []    []    []    []    []    []    []    
[C]   [B]   [C]   [B]   []    []    []    []    []    []    
[B]   [C]   [B]   [C]   [B]   []    []    []    []    []    
[C, S][B]   [C]   [B]   [C]   [B]   []    []    []    []    
[]    []    []    [C]   [B]   [C]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
S[{ S-->SB }, { S-->CC }, { S-->b }]
C[{ C-->a }, { C-->SS }]

word='ababbabbaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       [S]      [B, C]   []       []       []       []       []       []       []       
[B, S]   [C]      []       [S]      []       []       []       []       []       []       
[B, C, S][C, S]   [B, S]   [C]      [S]      []       []       []       []       []       
[B, C, S][C, S]   [B, S]   [C, S]   [S]      [B, C]   []       []       []       []       
[B, C, S][S, C]   [B, S, C][C]      [C]      []       [S]      []       []       []       
[B, C, S][C, S]   [B, S, C][C, S]   [C, S]   [B, S]   [C]      [S]      []       []       
[B, C, S][C, S]   [B, S, C][C, S]   [C, S]   [B, S]   [C, S]   [S]      [B, C]   []       
[B, C, S][C, S]   [B, C, S][C, S]   [C, S]   [B, S, C][C, S]   [C, S]   [B, S]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [C, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S, C][C]   []    []    []    []    []    []    
[]    []    []    [C]   [C, S][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CB }, { C-->SC }, { C-->CC }, { C-->BS }, { C-->BC }]
S[{ S-->a }, { S-->SS }, { S-->b }]

word='ababbabbaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S]   [B, S][]    []    []    []    []    []    []    
[S, C][S, C][S, C][S]   []    []    []    []    []    []    
[S, C][S, C][S, C][S]   [S]   []    []    []    []    []    
[S, C][S, C][S, C][S]   [S]   [B, S][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   [S]   []    []    
[C, S][S, C][S, C][S, C][S, C][S, C][S]   [S]   [B, S][]    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->BS }]
B[{ B-->CA }, { B-->CC }, { B-->SC }]
C[{ C-->a }, { C-->b }]
S[{ S-->BC }]

word='babbbabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [A, C]   []       []       []       []       []       []       []       []       
[S]      [B]      [C]      []       []       []       []       []       []       []       
[B]      [A, S]   [B]      [C]      []       []       []       []       []       []       
[A, S]   [B]      [S]      [B]      [C]      []       []       []       []       []       
[A, B]   [A, S]   [B]      [S]      [B]      [A, C]   []       []       []       []       
[A, B, S][A, B]   [A, S]   [B]      [S]      [B]      [C]      []       []       []       
[A, B, S][A, S]   [B]      [A, S]   [B]      [A, S]   [B]      [C]      []       []       
[A, B, S][A, B]   [A, S]   [B]      [A, S]   [B]      [S]      [B]      [C]      []       
[A, B, S][A, B, S][A, B]   [A, B, S][A, B]   [A, S]   [B]      [S]      [B]      [A, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[B]      [A, S]   [B]      []       []       []       []       []       []       []       
[B, S]   [B]      [A, S]   [B]      []       []       []       []       []       []       
[B, S]   [S]      [B]      [A, S]   [B]      []       []       []       []       []       
[B, S]   [B]      [A, S]   [B]      [A, S]   [B]      []       []       []       []       
[B, S]   [B, S]   [B]      [A, B, S][B]      [A, S]   [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=42

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=42

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }, { B-->CS }]
C[{ C-->a }, { C-->SS }]
S[{ S-->BC }]

word='babbbabbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       [B]      [B]      []       []       []       []       []       []       
[]       []       [B]      [B]      [B]      []       []       []       []       []       
[B, C]   [B]      [S]      [S]      [S]      [C]      []       []       []       []       
[B]      [B]      []       []       []       []       [B]      []       []       []       
[B]      [B]      []       []       []       []       [B]      [B]      []       []       
[B]      [B]      []       []       []       []       [B]      [B]      [B]      []       
[B, S, C][B, S]   [B, S, C][B, S, C][B, C]   [B]      [S]      [S]      [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }, { B-->CS }]
S[{ S-->CC }]
C[{ C-->SC }, { C-->BB }, { C-->b }]

word='babbbabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [S]   [C]   []    []    []    []    []    []    
[S]   [C]   [B, C][S]   [C]   []    []    []    []    []    
[B]   []    [C]   [B]   []    [B]   []    []    []    []    
[]    []    [S]   []    []    []    [C]   []    []    []    
[S]   [C]   [B, C][]    []    []    [S]   [C]   []    []    
[B, C][S]   [S]   [B, C][S]   [C]   [B, C][S]   [C]   []    
[C, S][B, C][B, S][C]   [B]   []    [C]   [B]   []    [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[]    [C]   [B, S][]    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
C[{ C-->AC }, { C-->a }, { C-->SC }, { C-->AA }, { C-->b }]
S[{ S-->CC }]

word='babbbabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[C]      [S]      [C]      []       []       []       []       []       []       []       
[A, S]   [C]      [S]      [C]      []       []       []       []       []       []       
[C]      [A, S]   [C]      [S]      [C]      []       []       []       []       []       
[A, S]   [C]      [A, S]   [C]      [S]      [C]      []       []       []       []       
[C]      [A, S]   [C]      [A, S]   [C]      [S]      [C]      []       []       []       
[A, S, C][C]      [A, S]   [C]      [A, S]   [C]      [S]      [C]      []       []       
[C, S]   [A, S, C][C]      [A, S]   [C]      [A, S]   [C]      [S]      [C]      []       
[A, C, S][C, S]   [A, S, C][C]      [A, S]   [C]      [A, S]   [C]      [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[A]   []    [A]   []    []    []    []    []    []    []    
[]    [A]   []    [A]   []    []    []    []    []    []    
[A, C][]    [A]   []    [A]   []    []    []    []    []    
[]    [A, C][]    [A]   []    [A]   []    []    []    []    
[]    []    [A, C][]    [A]   []    [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
C[{ C-->CB }, { C-->SC }, { C-->BB }, { C-->SS }, { C-->b }]
S[{ S-->a }, { S-->BC }]

word='babbbabbba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [C]   [B, C][]    []    []    []    []    []    []    
[C, S][C]   [S, C][B, C][]    []    []    []    []    []    
[C, S][C]   [S, C][S, C][B, C][]    []    []    []    []    
[C, S][C]   [S, C][C]   []    [S]   []    []    []    []    
[C, S][C]   [S, C][C]   [S]   [C]   [B, C][]    []    []    
[C, S][C]   [S, C][S, C][S, C][C]   [S, C][B, C][]    []    
[C, S][C]   [S, C][S, C][S, C][C]   [S, C][S, C][B, C][]    
[C, S][C]   [S, C][S, C][S, C][C]   [S, C][C]   []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[S]   [C]   [S]   [C]   []    []    []    []    []    []    
[S]   [C]   [S]   [S, C][S]   []    []    []    []    []    
[S]   [C]   [S]   [S]   [S]   [C]   []    []    []    []    
[S]   [C]   [S]   [S]   [S]   [C]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=29

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SA }]

word='abaaaabaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[C]   [C]   [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->BC }, { B-->a }]
S[{ S-->AS }, { S-->AC }, { S-->SA }, { S-->a }, { S-->b }]
C[{ C-->CB }, { C-->b }]

word='abaaaabaab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[B]      [C]      [B, S]   []       []       []       []       []       []       []       
[B]      [C]      []       [B, S]   []       []       []       []       []       []       
[B]      [C]      []       []       [B, S]   []       []       []       []       []       
[B]      [C]      []       []       []       [B, S]   []       []       []       []       
[B, S]   [A, C]   []       []       []       [B]      [S, C]   []       []       []       
[B, S]   [A, C, S][]       []       []       [B]      [C]      [B, S]   []       []       
[B, S]   [A, C, S][]       []       []       [B]      [C]      []       [B, S]   []       
[B, S]   [A, C, S][]       []       []       [B, S]   [A, C]   []       [B]      [S, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->SA }, { S-->b }, { S-->BS }]

word='abaaaabaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [B, S][A, B][]    []    []    []    []    []    []    
[S]   [B, S][A, B][A, B][]    []    []    []    []    []    
[S]   [B, S][A, B][A, B][A, B][]    []    []    []    []    
[S]   [B, S][A, B][A, B][A, B][A, B][]    []    []    []    
[B, S][B, S][S]   [S]   [S]   [S]   [B, S][]    []    []    
[B, S][B, S][S]   [S]   [S]   [S]   [B, S][A, B][]    []    
[B, S][B, S][S]   [S]   [S]   [S]   [B, S][A, B][A, B][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [S][S][S][] [] [] [] [] 
[] [] [S][S][S][S][] [] [] [] 
[] [] [S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }, { S-->BS }]

word='abaaaabaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   []    [B]   []    []    []    []    []    []    
[S]   [S]   []    []    [B]   []    []    []    []    []    
[S]   [S]   []    []    []    [B]   []    []    []    []    
[B, S][B, S][S]   [S]   [S]   [S]   [B, S][]    []    []    
[B, S][B, S][S]   [S]   [S]   [S]   [S]   [B]   []    []    
[B, S][B, S][S]   [S]   [S]   [S]   [S]   []    [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][S][S][] [] [] [] [] 
[] [] [S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SC }, { C-->b }]
S[{ S-->CC }]

word='aababbabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[S][C][S][C][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[S][C][S][C][S][C][] [] [] [] 
[C][S][C][S][C][S][C][] [] [] 
[S][C][S][C][S][C][S][C][] [] 
[C][S][C][S][C][S][C][S][C][] 
[S][C][S][C][S][C][S][C][S][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[C][] [C][] [C][] [] [] [] [] 
[] [C][] [C][] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->a }]
S[{ S-->AS }, { S-->b }, { S-->BS }]

word='aababbabab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SA }, { B-->SC }]
S[{ S-->CB }]
C[{ C-->a }]

word='aababbabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[S]   [B]   []    [C]   []    []    []    []    []    []    
[]    [A]   [A]   [S]   [B]   []    []    []    []    []    
[S]   [B, S][B]   []    []    [B]   []    []    []    []    
[B, S][B]   []    []    []    []    [C]   []    []    []    
[A]   [A]   [A]   [B]   []    [A]   [S]   [B]   []    []    
[B, S][B, S][B]   []    []    [B]   [B]   []    [C]   []    
[B, S][B]   []    [A]   []    []    [A]   [A]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->SA }, { B-->a }, { B-->BB }, { B-->AA }]
S[{ S-->AC }, { S-->BA }, { S-->CB }]
C[{ C-->SB }]

word='aababbabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A, S]   [S]      [A]      []       []       []       []       []       []       []       
[C]      [C]      []       [B]      []       []       []       []       []       []       
[]       []       []       [S]      [A]      []       []       []       []       []       
[A, C, S][C, S]   []       [B]      [B]      [A]      []       []       []       []       
[A, C, S][C, S]   []       [B]      [B]      []       [B]      []       []       []       
[B]      [B]      [B]      [A, S]   [A, S]   []       [S]      [A]      []       []       
[A, B, S][A, B]   [B, S]   [C]      [C]      [S]      [C]      []       [B]      []       
[A, B, S][A, B, S][A, B, S][C]      []       [B]      []       []       [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C]   []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A]      []       [B, S]   [C]      [C]      []       []       []       []       []       
[]       []       [A, B, S][]       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }, { B-->SS }]
S[{ S-->CB }, { S-->BB }, { S-->b }]
C[{ C-->SB }, { C-->a }]

word='aababbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[S]      [B]      [S]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[B, C]   [S]      [C]      [B]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [B]      [S]      [B]      [S]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[B, C, S][B, S, C][C, S]   [B, C]   [S]      [C]      [B]      [S]      []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[B, C, S][B, S, C][B, C, S][B, S]   [B, C]   [B, S]   [S]      [C]      [B]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->BC }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->SS }]
S[{ S-->CB }]
C[{ C-->b }]

word='baabbaaaab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[A, S]   [B]      [B]      [B, C]   []       []       []       []       []       []       
[A, B]   [A]      [A]      [A, S]   [B, C]   []       []       []       []       []       
[]       []       []       [A]      []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[A, B, S][B]      [B]      [B]      [A, S]   [B]      [B]      [B]      [B]      [B, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
S[{ S-->a }, { S-->b }, { S-->BS }]
C[{ C-->a }, { C-->CS }, { C-->BB }]

word='baabbaaaab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [S, C]   []       []       []       []       []       []       []       []       
[B, S]   [C]      [S, C]   []       []       []       []       []       []       []       
[B, S, C][C]      [C]      [B, S]   []       []       []       []       []       []       
[B, S, C][C]      [C]      [S, C]   [B, S]   []       []       []       []       []       
[B, S, C][C]      [C]      [S, C]   [B, S]   [S, C]   []       []       []       []       
[B, S, C][C]      [C]      [S, C]   [B, S]   [C]      [S, C]   []       []       []       
[B, S, C][C]      [C]      [S, C]   [B, S]   [C]      [C]      [S, C]   []       []       
[B, S, C][C]      [C]      [S, C]   [B, S]   [C]      [C]      [C]      [S, C]   []       
[B, C, S][C]      [C]      [B, S, C][B, S, C][C]      [C]      [C]      [C]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[S, C][C]   []    [S]   []    []    []    []    []    []    
[S, C][C]   []    [S]   [S]   []    []    []    []    []    
[S, C][C]   []    [S]   [S]   [C]   []    []    []    []    
[C, S][C]   []    [B, S][S, C][C]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->SS }]
S[{ S-->SB }, { S-->AA }, { S-->BB }]

word='baabbaaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[B]      [S]      [A]      []       []       []       []       []       []       []       
[B, S]   [S]      []       [B]      []       []       []       []       []       []       
[B, S]   [B, S]   [A]      [S]      [B]      []       []       []       []       []       
[B, S]   [A, B, S][S]      [B]      []       [A]      []       []       []       []       
[B, S]   [B, S]   [A, B]   [B, S]   [B]      [S]      [A]      []       []       []       
[B, S]   [A, B, S][A, B, S][B, S]   [S]      [A, B]   [S]      [A]      []       []       
[B, S]   [A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [A, B]   [S]      [A]      []       
[B, S]   [A, B, S][A, B, S][B, S]   [B, S]   [A, B, S][A, S]   [S]      []       [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [A, S][S]   []    []    []    []    []    []    []    
[]    []    [A]   [B]   []    []    []    []    []    []    
[]    [A]   []    [S]   []    []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    [A, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SC }, { S-->SS }, { S-->b }]

word='baabbaaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [B]   [C]   []    []    []    []    []    []    []    
[S]   [B]   [C]   [S]   []    []    []    []    []    []    
[S]   [B]   [C]   [S]   [S]   []    []    []    []    []    
[S]   [B]   [B, C][S]   [S]   [C]   []    []    []    []    
[S]   [B]   [B, C][S]   [S]   [B]   [C]   []    []    []    
[S]   [B]   [B, C][S]   [S]   []    [B]   [C]   []    []    
[S]   [B]   [B, C][S]   [S]   []    []    [B]   [C]   []    
[S]   [B]   [B, C][S]   [S]   []    []    [B]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][B][] [] [] [] [] [] [] 
[S][B][B][] [] [] [] [] [] [] 
[S][B][B][] [] [] [] [] [] [] 
[S][B][B][] [] [] [] [] [] [] 
[S][B][B][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->a }]
C[{ C-->CA }, { C-->CB }, { C-->b }]
S[{ S-->CC }]

word='baabbaaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[C]   []    [B]   []    []    []    []    []    []    []    
[S, C][]    [A]   [C]   []    []    []    []    []    []    
[S]   []    []    [S]   [C]   []    []    []    []    []    
[S]   []    []    [S]   [C]   [B]   []    []    []    []    
[S]   []    []    [S]   [C]   []    [B]   []    []    []    
[S]   []    []    [S]   [C]   []    []    [B]   []    []    
[S]   []    []    [S]   [C]   []    []    []    [B]   []    
[S]   []    []    [S]   [C, S][]    []    []    [A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
S[{ S-->AA }]

word='aababbabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][S][A][] [] [] [] [] [] 
[A][S][A][S][A][] [] [] [] [] 
[S][A][S][A][S][A][] [] [] [] 
[A][S][A][S][A][S][A][] [] [] 
[S][A][S][A][S][A][S][A][] [] 
[A][S][A][S][A][S][A][S][A][] 
[S][A][S][A][S][A][S][A][S][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[] [A][] [A][] [] [] [] [] [] 
[A][] [A][] [A][] [] [] [] [] 
[] [A][] [A][] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->SB }, { S-->a }, { S-->BC }, { S-->BS }]
C[{ C-->SS }, { C-->b }]

word='aababbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[C]      [S]      [B]      [S]      []       []       []       []       []       []       
[B]      [C]      [S]      []       [C]      []       []       []       []       []       
[S]      []       []       []       []       [C]      []       []       []       []       
[B, C]   [C]      [S]      []       []       [B]      [S]      []       []       []       
[S, C]   [B, S]   [B, C]   [S]      [B]      [S]      []       [C]      []       []       
[B, S, C][C, S]   [B, S]   [C]      [S]      [B, C]   [S]      [B]      [S]      []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [C]      [S]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [B, S][B]   []    []    []    []    []    []    []    
[S]   []    [B]   []    []    [B]   []    []    []    []    
[]    []    [B]   [S, C][B]   [B]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SA }, { B-->SB }, { B-->BA }]
S[{ S-->a }, { S-->AA }, { S-->BS }]

word='aababbabaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][A, S][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][A, S][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->AA }]
S[{ S-->BB }, { S-->b }]

word='aababbabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B, S][B]   [B, S][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[B, S][B, S][S]   [B]   [B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [B, S][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->CS }]
C[{ C-->b }]

word='aababbabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[B, S][B]   [S]   [B, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[B, S][B, S][B]   [B]   [S]   [S]   [B, S][]    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[B, S][B, S][B, S][B, S][B]   [B]   [B]   [S]   [B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->CB }, { C-->SB }, { C-->a }]
S[{ S-->BC }]

word='bbbaabbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [S]   [B, C][]    []    []    []    []    []    
[]    [S]   [S, C][C, S][B, C][]    []    []    []    []    
[S]   [C, S][S, C][S, C][C]   [B]   []    []    []    []    
[C, S][C, S][S, C][S, C][C]   []    [B]   []    []    []    
[C, S][C, S][S, C][S, C][C]   []    [S]   [B, C][]    []    
[C, S][C, S][S, C][S, C][C]   [S]   [S, C][C, S][B, C][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][C, S][B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C, S][S, C][]    []    []    []    []    []    []    
[C, S][C, S][S, C][S, C][]    []    []    []    []    []    
[C, S][C, S][S, C][S, C][]    []    []    []    []    []    
[C, S][C, S][S, C][S, C][C]   []    []    []    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=43

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=43

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
C[{ C-->CA }, { C-->SS }]
S[{ S-->a }, { S-->CC }, { S-->b }]

word='bbbaabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    [C]   [S]   []    []    []    []    []    []    []    
[S]   [C]   [C]   [A, S][]    []    []    []    []    []    
[C, S][S, C][C]   [A, C][A, S][]    []    []    []    []    
[C]   [S, C][S]   []    [C]   [S]   []    []    []    []    
[S, C][S, C][C, S][S]   []    [C]   [S]   []    []    []    
[C, S][S, C][C, S][C, S][S]   [C]   [C]   [A, S][]    []    
[C, S][S, C][C, S][C, S][C, S][S, C][C]   [A, C][A, S][]    
[C, S][S, C][C, S][C, S][C, S][C, S][S, C][A, C][A, C][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[C][] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AA }]
C[{ C-->SA }, { C-->CS }, { C-->b }, { C-->BC }]
S[{ S-->CB }, { S-->a }, { S-->b }, { S-->BS }]

word='bbbaabbaaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, S][]    []    []    []    []    []    
[S, C][S, C][S, C][B, C][A, S][]    []    []    []    []    
[C]   [C]   [C]   [S, C][]    [S, C][]    []    []    []    
[C]   [C]   [C]   [C]   []    [C]   [S, C][]    []    []    
[C]   [C]   [C]   [C]   []    [C]   [C]   [A, S][]    []    
[C, S][C, S][C, S][S, C][]    [C, S][S, C][B, C][A, S][]    
[C, S][C, S][C, S][S, C][]    [C, S][C, S][S, C][B, C][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[S][S][S][] [] [S][] [] [] [] 
[S][S][S][] [] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }, { B-->SS }, { B-->AA }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->b }]

word='bbbaabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    [B]   [S]   []    []    []    []    []    []    []    
[S]   [B]   [B, S][A, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][A, S][]    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [S]   []    []    []    []    
[B, S][B, S][B, S][S]   []    [B]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   [B, S][A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][B][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AA }]
B[{ B-->SA }, { B-->BB }]
S[{ S-->SB }, { S-->b }, { S-->BS }]

word='bbbaabbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[B]      [A]      [S]      []       []       []       []       []       []       []       
[A, B]   [A, S]   [B]      [A]      []       []       []       []       []       []       
[A, B, S][A, B, S][B]      [A]      [A]      []       []       []       []       []       
[A, B, S][A, S]   [S]      []       []       [S]      []       []       []       []       
[A, B, S][A, B, S][A, B]   [A]      [A]      [A]      [S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [A]      [A, S]   [B]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][A]      [A]      [A, B, S][B]      [A]      [A]      []       
[A, B, S][A, B, S][A, B, S][A]      [A]      [A, B, S][B]      [A]      [A]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    [S]   []    []    [A, B][]    []    []    []    
[]    []    [S]   []    []    [A]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]
S[{ S-->CS }, { S-->SC }, { S-->b }]

word='ababbbabba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C, S][]    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [C, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->AS }, { C-->a }, { C-->AA }]
S[{ S-->a }, { S-->SC }]

word='ababbbabba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [C]   [S, C][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[S]   [C]   [S]   [C]   [A]   []    []    []    []    []    
[]    []    []    []    [C]   [A]   []    []    []    []    
[S]   [C]   [S]   []    []    [C]   [S, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[S]   [C]   [S]   []    []    [C]   [S]   [C]   [A]   []    
[S]   [C]   [S]   []    []    [C]   [S]   []    [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CA }, { S-->CS }, { S-->CC }, { S-->b }]

word='ababbbabba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [C]   [C]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [A, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A]   [A, S][]    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [A, S][]    []    []    []    
[C, S][S, C][S, C][C]   [C]   [C]   [C]   []    []    []    
[A, S][A, S][A, S][S]   [S]   [S]   [S]   [A, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, S][]    
[C, S][S, C][S, C][C, S][C, S][C, S][S, C][C]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AB }, { B-->SA }, { B-->a }, { B-->SS }]
S[{ S-->AA }, { S-->b }, { S-->BS }]

word='ababbbabba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[B, S]   [B]      [A, B]   []       []       []       []       []       []       []       
[A, B, S][B, S]   [A, S]   [S]      []       []       []       []       []       []       
[A, B, S][B, S]   [A, B]   [B]      [S]      []       []       []       []       []       
[A, B, S][B, S]   [A, B, S][S]      [B]      [S]      []       []       []       []       
[A, B, S][B]      [B, S]   [B]      []       [B]      [A, B]   []       []       []       
[A, B, S][B, S]   [A, B, S][B, S]   [B, S]   [B, S]   [A, S]   [S]      []       []       
[A, B, S][B, S]   [A, B, S][B, S]   [B, S]   [B, S]   [A, B]   [B]      [S]      []       
[A, B, S][B, S]   [A, B, S][B]      [B, S]   [B]      [B, S]   []       [B]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[A, S][]    [S]   []    []    []    []    []    []    []    
[]    [B]   [A]   [B]   []    []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    [A, S][]    [B, S][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->a }, { C-->SC }]
S[{ S-->SS }, { S-->CC }, { S-->b }]

word='ababbbabba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [C]   [B, C][]    []    []    []    []    []    []    
[S]   []    []    [S]   []    []    []    []    []    []    
[S]   []    []    [S]   [S]   []    []    []    []    []    
[S]   []    []    [S]   [S]   [S]   []    []    []    []    
[C]   [S]   [S]   [C]   [C]   [C]   [B, C][]    []    []    
[]    [S]   [S]   []    []    []    []    [S]   []    []    
[]    [S]   [S]   []    []    []    []    [S]   [S]   []    
[S]   [C]   [C]   [S]   [S]   [S]   [S]   [C]   [C]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->CB }, { S-->a }, { S-->BS }]
C[{ C-->BB }, { C-->CS }, { C-->BC }]

word='ababbbabbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S, C][S, C][B, S][]    []    []    []    []    []    []    
[S, C][S, C][C]   [B]   []    []    []    []    []    []    
[S, C][S, C][C, S][C]   [B]   []    []    []    []    []    
[C, S][C, S][S, C][C, S][C]   [B]   []    []    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][B, S][]    []    []    
[C, S][C, S][S, C][S, C][S, C][C, S][C]   [B]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][C, S][C]   [B]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C, S][C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->b }, { A-->AS }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CA }, { S-->SC }]

word='ababbbabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [C]      [C]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [S]      [A]      []       []       []       []       []       []       
[A, S]   [A, S]   [S]      [A]      [A]      []       []       []       []       []       
[A, S]   [A, S]   [S]      [A]      [A]      [A]      []       []       []       []       
[A, S, C][A, C, S][S]      [C]      [C]      [C]      [C]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A]      []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A]      [A]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A]      [A]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    []    [S]   [A]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->a }, { S-->SC }, { S-->CS }]
C[{ C-->a }, { C-->AA }, { C-->b }]

word='ababbbabbb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[A, S]   [S]      [S, C]   []       []       []       []       []       []       []       
[A, S, C][S]      [S]      [A, C]   []       []       []       []       []       []       
[A, S, C][S]      [S]      [C]      [A, C]   []       []       []       []       []       
[A, S, C][S]      [S]      []       [C]      [A, C]   []       []       []       []       
[A, S]   [A, S, C][A, S]   [S]      [S]      [S]      [S, C]   []       []       []       
[A, C, S][A, S, C][A, S, C][S]      [S]      [S]      [S]      [A, C]   []       []       
[A, C, S][A, S, C][A, S, C][S]      [S]      [S]      [S]      [C]      [A, C]   []       
[A, C, S][A, S, C][A, S, C][S]      [S]      [S]      [S]      []       [C]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    [S, C][S]   []    []    []    []    []    []    []    
[]    []    [S, C][S]   [S]   []    []    []    []    []    
[]    []    [C]   [S]   [S]   [S]   []    []    []    []    
[]    []    [C]   [S]   [S]   [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->AC }]
C[{ C-->a }, { C-->CC }, { C-->SC }, { C-->b }]

word='ababbbabbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C]   [A, C][]    []    []    []    []    []    []    
[C, S][C]   [C, S][C]   []    []    []    []    []    []    
[C, S][C]   [C, S][C]   [C]   []    []    []    []    []    
[C, S][C]   [C, S][C]   [C]   [C]   []    []    []    []    
[C, S][C]   [C, S][C]   [C]   [C]   [A, C][]    []    []    
[C, S][C]   [C, S][C]   [C]   [C]   [C, S][C]   []    []    
[C, S][C]   [C, S][C]   [C]   [C]   [C, S][C]   [C]   []    
[C, S][C]   [C, S][C]   [C]   [C]   [C, S][C]   [C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }]
B[{ B-->AB }, { B-->SA }]
S[{ S-->AC }, { S-->CA }, { S-->BB }]
C[{ C-->b }]

word='ababbbabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[B]      [S]      [A]      []       []       []       []       []       []       []       
[A, B]   [B]      [S]      [A, C]   []       []       []       []       []       []       
[B, S]   [A, B]   [B]      [S]      [A, C]   []       []       []       []       []       
[B, S]   [B, S]   [A, B]   [B]      [S]      [A, C]   []       []       []       []       
[A, B, S][B, S]   [B]      [A, B]   [B]      [S]      [A]      []       []       []       
[A, B, S][A, B, S][B, S]   [B, S]   [A, B]   [B]      [S]      [A, C]   []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A, B]   [B]      [S]      [A, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A, B]   [B]      [S]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[B]   []    [A, B][]    []    []    []    []    []    []    
[B]   [B]   []    [A, B][]    []    []    []    []    []    
[]    [B]   [B]   []    [A, B][]    []    []    []    []    
[]    []    [B]   [B]   []    [A, B][]    []    []    []    
[]    []    []    [B]   [B]   []    [A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->SB }, { B-->CS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->b }]

word='baabbbabaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][S]   [S]   []    []    []    []    []    []    []    
[B, S][S]   [S]   [S, C][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [S, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->AC }, { B-->BB }]
S[{ S-->SA }, { S-->SC }, { S-->b }]
C[{ C-->CB }, { C-->a }, { C-->CS }]

word='baabbbabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   [B]   [A, C][]    []    []    []    []    []    []    
[S]   [A, B][C]   [S]   []    []    []    []    []    []    
[S]   [A, B][C]   []    [S]   []    []    []    []    []    
[S]   [A, B][C]   []    []    [S]   []    []    []    []    
[S]   [A, B][C]   []    []    [S]   [A, C][]    []    []    
[S]   [A, B][C]   []    []    [S]   [C]   [S]   []    []    
[S]   [A, B][C]   []    []    [S]   [C]   [S]   [A, C][]    
[S]   [A, B][C]   []    []    [S]   [C]   [S]   [B]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->CC }, { B-->BB }]
C[{ C-->AC }, { C-->a }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->CS }]

word='baabbbabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[B, S][B, S][S, C][]    []    []    []    []    []    []    
[B, S][B, S][S]   [A]   []    []    []    []    []    []    
[B, S][B, S][S]   []    [A]   []    []    []    []    []    
[B, S][B, S][S]   []    []    [A]   []    []    []    []    
[S]   [S]   [B]   [C]   [C]   [C]   [S, C][]    []    []    
[S]   [S]   [B]   []    []    []    [S]   [A]   []    []    
[B, S][B, S][S]   [B]   [B]   [B]   [B]   [C]   [S, C][]    
[S]   [S]   [B, S][S]   [S]   [S]   [S]   [B, S][B, S][S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[S]   [S]   [B, S][S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->SA }]
B[{ B-->b }]
S[{ S-->a }, { S-->AA }, { S-->b }]

word='baabbbabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A]   [B, S][]    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [B, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A, S][]    []    []    
[]    []    []    []    []    []    []    [B, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, S][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }]
S[{ S-->a }, { S-->BB }, { S-->b }, { S-->BS }]

word='baabbbabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [B]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AB }, { B-->SS }]
S[{ S-->BA }, { S-->b }]

word='aabababbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [A]      [S]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       [A]      [S]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       [A]      [S]      []       []       []       
[B]      [B]      []       [B]      []       [A, B]   [B]      [S]      []       []       
[B]      [B]      []       [B]      []       [A, B]   []       [B]      [S]      []       
[A, B, S][A, B, S][B]      [A, B, S][B]      [A, B, S][B]      [S]      []       [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [A, B, S][]       [A, B, S][]       [A, S]   []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BC }, { B-->SA }]
S[{ S-->CA }, { S-->a }, { S-->BS }]
C[{ C-->SS }, { C-->b }]

word='aabababbba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B, C][A, S][]    []    []    []    []    []    []    []    
[B]   [A]   [B, C][]    []    []    []    []    []    []    
[S]   [C]   [S]   [A, S][]    []    []    []    []    []    
[S]   [C]   [S]   [A]   [B, C][]    []    []    []    []    
[B, C][A, S][B, C][C]   [S]   [A, S][]    []    []    []    
[B, C][A, S][B, C][C]   [S]   [A]   [B, C][]    []    []    
[B, C][A, S][B, C][C]   [S]   [A]   [B]   [B, C][]    []    
[B, C][A, S][B, C][C]   [S]   [A]   [B]   [B]   [B, C][]    
[A, S][B, C][S]   [A, S][B, C][C]   [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    [A, S][B, C][]    []    []    []    []    []    []    
[B, C][S]   [C]   [C]   []    []    []    []    []    []    
[B, C][S]   [C]   [C]   [S]   []    []    []    []    []    
[B, C][S]   [C]   [C]   [S]   []    []    []    []    []    
[A, S][B]   []    [A, S][B, C][C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->CA }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->SA }, { C-->a }]

word='aabababbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [C]      []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [A]      [A]      []       []       []       []       []       
[A]      [A]      [A]      [S]      [S]      [C]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [S, C]   [A]      [A]      []       []       []       
[A, S, C][A, S, C][A, S, C][A, C]   [A, C]   [S]      [S]      [A]      []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, C]   [A, C]   [S]      [A]      []       
[A, S, C][A, S, C][A, S, C][A, C, S][A, C, S][S]      [S]      [A]      [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [S, C][]    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    [C]   [C]   [A]   []    []    []    []    
[]    []    []    []    [C, S][S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
S[{ S-->CA }, { S-->SC }, { S-->b }]
C[{ C-->a }]

word='aabababbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [C]   []    []    []    []    []    []    
[]    [S]   [A]   []    [S]   []    []    []    []    []    
[]    [S]   [A]   []    [S]   [C]   []    []    []    []    
[S]   [A, S][A]   [S]   [A]   []    [S]   []    []    []    
[A, S][A, S][A]   [A, S][A]   [S]   [A]   [S]   []    []    
[A, S][A]   []    [A]   []    [A]   []    [A]   [S]   []    
[A, S][A]   []    [A]   []    [A]   []    [A]   [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [A, S][A]   []    []    []    []    []    []    []    
[S]   [A, S][A]   [A, S][A]   []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->a }]
S[{ S-->CA }, { S-->b }]
C[{ C-->a }, { C-->BB }, { C-->AA }]

word='aabababbba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [B, C]   []       []       []       []       []       []       []       []       
[A, S]   [A, C]   [B, S]   []       []       []       []       []       []       []       
[S]      [A]      [C]      [B, C]   []       []       []       []       []       []       
[C, S]   [C, S]   [A]      [A, C]   [B, S]   []       []       []       []       []       
[A, C, S][A, C, S][]       [A]      [C]      [B, C]   []       []       []       []       
[A, S]   [A, C, S][S, C]   [S, C]   [A]      [A, C]   [B, S]   []       []       []       
[C, S]   [A, C, S][A, C]   [A, C, S][]       [A]      [C]      [B, S]   []       []       
[A, C, S][A, C, S][A]      [A, C]   [S]      [S]      [A]      [C]      [B, S]   []       
[A, C, S][A, C, S][S]      [A, S]   [C]      [C, S]   []       [A]      [C]      [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[C, S]   [S]      []       []       []       []       []       []       []       []       
[A, C]   []       []       []       []       []       []       []       []       []       
[A]      [A, C, S][]       [S]      []       []       []       []       []       []       
[S]      [A]      [A, C]   []       []       []       []       []       []       []       
[A, C]   [A]      [A]      [A, C]   []       [S]      []       []       []       []       
[A]      [A, C, S][S]      [A, S]   [C]      []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=30

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->SS }]
S[{ S-->SA }, { S-->b }]

word='bbaabbbbaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[B, S][S]   [A]   []    []    []    []    []    []    []    
[B, S][S]   []    [A]   []    []    []    []    []    []    
[B, S][B, S][]    []    [A, S][]    []    []    []    []    
[B, S][B, S][]    []    [B, S][A, S][]    []    []    []    
[B, S][B, S][]    []    [B, S][B, S][A, S][]    []    []    
[B, S][B, S][]    []    [B, S][B, S][B, S][A, S][]    []    
[B, S][B, S][]    []    [B, S][B, S][B, S][S]   [A]   []    
[B, S][B, S][]    []    [B, S][B, S][B, S][S]   []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [S][] [] [] [] [] 
[S][] [] [] [S][S][] [] [] [] 
[S][] [] [] [S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->CB }]
B[{ B-->AB }, { B-->CA }, { B-->BA }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CS }, { S-->BC }]

word='bbaabbbbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [C]      []       []       []       []       []       []       
[A]      [A]      [A]      [B]      [A]      []       []       []       []       []       
[A]      [A]      [A]      [B]      []       [A]      []       []       []       []       
[A]      [A]      [A]      [B]      []       []       [A]      []       []       []       
[A]      [A]      [A]      [B]      []       []       []       [A]      []       []       
[B, S, C][B, S, C][B, S, C][A, S]   [C]      [C]      [C]      [C]      [C]      []       
[A, S]   [A, S]   [A, S]   [B, C]   [A]      [A]      [A]      [A]      [A]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[S]      [S]      [B, S, C][A]      []       []       []       []       []       []       
[A]      [A]      []       [B, C]   [A]      [A]      [A]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AA }, { A-->AC }]
S[{ S-->CA }, { S-->a }]
C[{ C-->CS }, { C-->b }]

word='bbaabbbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[A]      [C]      []       [S]      []       []       []       []       []       []       
[A, S]   [A]      []       []       [C]      []       []       []       []       []       
[A, S, C][A, S]   []       []       [A]      [C]      []       []       []       []       
[A, S, C][A, S, C][]       []       [A, S]   [A]      [C]      []       []       []       
[A, S, C][A, S, C][]       []       [A, S, C][A, S]   [A]      [C]      []       []       
[A, S, C][A, S, C][]       []       [A, S, C][A, S]   [A]      [C]      [S]      []       
[A, S, C][A, S, C][]       []       [A, S, C][A, S]   [A]      [C]      []       [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->BB }]
C[{ C-->SB }, { C-->b }]
S[{ S-->CC }, { S-->SC }]

word='bbaabbbbaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[B, C]   [B]      [B]      []       []       []       []       []       []       []       
[B, C]   [B]      [B]      [B]      []       []       []       []       []       []       
[B, S, C][B]      [B]      [B]      [B, C]   []       []       []       []       []       
[B, C, S][B]      [B]      [B]      [B, S]   [B, C]   []       []       []       []       
[B, S, C][B]      [B]      [B]      [B, C, S][B, S]   [B, C]   []       []       []       
[B, C, S][B]      [B]      [B]      [B, S, C][B, C, S][B, S]   [B, C]   []       []       
[B, C, S][B]      [B]      [B]      [B, S, C][B, S, C][B, C]   [B]      [B]      []       
[B, C, S][B]      [B]      [B]      [B, S, C][B, S, C][B, C]   [B]      [B]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
S[{ S-->AS }, { S-->AA }, { S-->SC }, { S-->SS }]
C[{ C-->SA }, { C-->a }, { C-->b }]

word='bbaabbbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[]       [A]      [C]      []       []       []       []       []       []       []       
[S]      []       [A]      [C]      []       []       []       []       []       []       
[S]      [S]      []       [A]      [C]      []       []       []       []       []       
[C, S]   [S]      [S]      []       [A]      [C]      []       []       []       []       
[A, C, S][S, C]   [S]      [S]      []       [A]      [C]      []       []       []       
[A, S, C][A, S, C][S, C]   [S]      [S]      []       [A]      [C]      []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [S]      [S]      []       [A]      [C]      []       
[A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [S]      [S]      []       [A]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->BC }]
S[{ S-->BB }, { S-->b }, { S-->BS }]

word='bbaabbbbab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[B, S][B, S][B]   [B]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->BB }]

word='bbaabbbbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   []    [S]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [S]   []    []    []    []    []    []    
[B, S][S]   [B, S][S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    [S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CB }]
B[{ B-->b }]
S[{ S-->SA }, { S-->b }]
C[{ C-->BA }, { C-->a }, { C-->SC }]

word='bbaabbbbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [B, S]   []       []       []       []       []       []       []       []       
[C]      [C, S]   [A, C]   []       []       []       []       []       []       []       
[C]      [C, S]   [A]      [A, C]   []       []       []       []       []       []       
[A, C, S][A, S, C][A]      [A]      [B, S]   []       []       []       []       []       
[A, C, S][A]      []       []       []       [B, S]   []       []       []       []       
[A]      []       []       []       []       []       [B, S]   []       []       []       
[]       []       []       []       []       []       []       [B, S]   []       []       
[C]      [C]      []       []       [C]      [C]      [C]      [C, S]   [A, C]   []       
[A, C, S][A, S, C][A]      [A]      [A, C, S][A, C, S][A, C, S][A, C, S][A]      [B, S]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][A, C]   []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][A, S, C][]       []       [A, C, S][A, C, S][A, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->AA }, { S-->b }]

word='bbaabbbbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [B, S]   []       []       []       []       []       []       []       []       
[B]      [A]      [B]      []       []       []       []       []       []       []       
[A]      [B]      []       [B]      []       []       []       []       []       []       
[B, S]   []       []       []       [B, S]   []       []       []       []       []       
[A, B, S][]       []       []       [A, B]   [B, S]   []       []       []       []       
[A, B, S][]       []       []       [A, B, S][A, B]   [B, S]   []       []       []       
[A, B, S][]       []       []       [A, B, S][A, B, S][A, B]   [B, S]   []       []       
[A, B, S][]       []       []       [A, B, S][A, B, S][B]      [A]      [B]      []       
[A, B, S][]       []       []       [A, B, S][A, B, S][A, B]   [B, S]   []       [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->BB }, { S-->b }, { S-->BS }]

word='bbaabbbbab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->a }, { C-->AA }, { C-->b }]
S[{ S-->CS }, { S-->b }]

word='baabbbabab'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[]       [A, C]   [A, C]   []       []       []       []       []       []       []       
[S]      [A, S, C][A, S]   [C, S]   []       []       []       []       []       []       
[S]      [A, S, C][A, S]   [S]      [C, S]   []       []       []       []       []       
[S]      [A, S, C][A, S]   [S]      [S]      [C, S]   []       []       []       []       
[]       [A, C]   [A, C]   []       []       []       [A, C]   []       []       []       
[S]      [A, S, C][A, S, C][S]      [S]      [S]      [A, S]   [C, S]   []       []       
[]       [A, C]   [A, C]   []       []       []       [A, C]   []       [A, C]   []       
[S]      [A, C, S][A, S, C][S]      [S]      [S]      [A, S, C][S]      [A, S]   [C, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A]   [A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->SS }]
S[{ S-->AC }, { S-->AA }, { S-->b }]
C[{ C-->a }]

word='baabbbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[A]   [S]   [A, C][]    []    []    []    []    []    []    
[A]   [A, S][A]   [S]   []    []    []    []    []    []    
[S]   [A]   [S]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][]    [A]   [S]   []    []    []    []    
[A, S][A, S][S]   [A]   [S]   []    [A, C][]    []    []    
[A, S][A, S][A, S][A]   [A, S][]    [A]   [S]   []    []    
[A, S][A, S][A, S][A, S][S]   [A]   [S]   []    [A, C][]    
[A, S][A, S][A, S][A, S][A, S][A]   [A, S][]    [A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A, S][A]   []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [A, S][A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->a }]
C[{ C-->AS }, { C-->CS }]
S[{ S-->AC }, { S-->BB }]

word='baabbbabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A]      [S]      [B]      []       []       []       []       []       []       []       
[B]      [A]      [S]      [B]      []       []       []       []       []       []       
[C, S]   [B]      [A]      [S]      [B]      []       []       []       []       []       
[A]      [C, S]   [B]      [A]      [S]      [B]      []       []       []       []       
[B, C]   [A]      [S, C]   [B]      [A]      [S]      [B]      []       []       []       
[S, C]   [B, C]   [A]      [S, C]   [B]      [A]      [S]      [B]      []       []       
[A, C]   [S, C]   [B, C]   [A]      [S, C]   [B]      [A]      [S]      [B]      []       
[B, S, C][A, C]   [S, C]   [B, C]   [A]      [S, C]   [B]      [A]      [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[A]   [C]   [B]   []    []    []    []    []    []    []    
[B, C][A]   [C]   [B]   []    []    []    []    []    []    
[C]   [B, C][A]   [C]   [B]   []    []    []    []    []    
[A]   [C]   [B, C][A]   [C]   [B]   []    []    []    []    
[B, C][A]   [C]   [B, C][A]   [C]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=33

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->a }]
S[{ S-->BA }, { S-->AA }, { S-->CS }, { S-->SS }, { S-->CC }]
C[{ C-->AB }, { C-->BC }]

word='baabbbabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[S]   []    [S]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[S]   []    [S]   []    [S]   [A]   []    []    []    []    
[]    []    []    [S]   [A]   [C]   [B]   []    []    []    
[S]   []    [S]   []    [S]   []    [S]   [A]   []    []    
[S]   []    [S]   [S]   [A, S][A, S][C]   [C]   [B]   []    
[S]   []    [S]   [S]   [S]   [S]   [S]   []    [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CS }, { B-->BB }]
C[{ C-->CB }, { C-->a }]
S[{ S-->CC }, { S-->SS }, { S-->b }]

word='baabbbabab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[S]      [S]      [C]      []       []       []       []       []       []       []       
[S]      [S, C]   [B, C]   [B, S]   []       []       []       []       []       []       
[B, S]   [B, S, C][B, C]   [B, S]   [B, S]   []       []       []       []       []       
[B, S]   [B, S, C][B, C]   [B, S]   [B, S]   [B, S]   []       []       []       []       
[B, S]   [B, S]   [S]      []       []       []       [C]      []       []       []       
[B, S]   [B, C, S][B, C, S][B]      [B]      [B]      [B, C]   [B, S]   []       []       
[B, S]   [B, S, C][B, S]   [S]      [S]      [S]      [S]      []       [C]      []       
[B, S]   [B, C, S][B, C, S][B, S]   [B, S]   [B, S]   [B, C, S][B]      [B, C]   [B, S]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [C]      [B, C, S][]       []       []       []       []       []       []       
[]       []       []       [S]      [S]      [S]      []       []       []       []       
[]       []       [C]      [B]      [B]      [B]      [B, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }]
B[{ B-->a }]
C[{ C-->AS }, { C-->SS }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->b }]

word='aabbabbbbb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [B, S]   []       []       []       []       []       []       []       []       
[A, C]   [C]      [S]      []       []       []       []       []       []       []       
[C]      [A]      [C]      [S]      []       []       []       []       []       []       
[A, S]   [C]      [A]      [C]      [B, S]   []       []       []       []       []       
[S, C]   [A, S]   [C]      [A]      [C]      [S]      []       []       []       []       
[A, S, C][S, C]   [A, S]   [C]      [A]      [C]      [S]      []       []       []       
[A, S, C][A, S, C][C, S]   [A, S]   [C]      [A]      [C]      [S]      []       []       
[A, C, S][A, S, C][A, C, S][C, S]   [A, S]   [C]      [A]      [C]      [S]      []       
[A, S, C][A, S, C][A, C, S][A, C, S][C, S]   [A, S]   [C]      [A]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[]    [A, S][C]   []    []    []    []    []    []    []    
[S]   []    [A, S][C]   []    []    []    []    []    []    
[]    [S]   []    [A, S][C]   []    []    []    []    []    
[]    []    [S]   []    [A, S][C]   []    []    []    []    
[]    []    []    [S]   []    [A, S][C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->BA }, { B-->BB }]
S[{ S-->CB }, { S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->a }, { C-->CC }]

word='aabbabbbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A, S][A, S][B, S][]    []    []    []    []    []    []    
[A, S][A, S][B, S][B, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[A, S][A, S][B, S][B, S][A, S][B, S][]    []    []    []    
[A, S][A, S][B, S][B, S][A, S][B, S][B, S][]    []    []    
[A, S][A, S][B, S][B, S][A, S][B, S][B, S][B, S][]    []    
[A, S][A, S][B, S][B, S][A, S][B, S][B, S][B, S][B, S][]    
[A, S][A, S][B, S][B, S][A, S][B, S][B, S][B, S][B, S][B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [A][] [] [] [] [] 
[A][A][] [] [A][] [] [] [] [] 
[A][A][] [] [A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->BS }, { B-->CA }, { B-->AA }]
C[{ C-->AS }]
S[{ S-->SA }, { S-->a }, { S-->SS }]

word='aabbabbbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [A]      []       []       []       []       []       []       []       
[S]      [S]      [B]      [A]      []       []       []       []       []       []       
[S]      [S]      [B]      [C]      [S]      []       []       []       []       []       
[S]      [S]      [A, B]   [B, C]   [S]      [A]      []       []       []       []       
[S]      [S]      [A, B]   [A, B, C][S]      [B]      [A]      []       []       []       
[S]      [S]      [A, B]   [A, B, C][S]      [A]      [B]      [A]      []       []       
[S]      [S]      [A, B]   [A, B, C][S]      [B]      [A]      [B]      [A]      []       
[S]      [S]      [A, B]   [A, B, C][S]      [A]      [B]      [A]      [B]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [A]   [S]   []    []    []    []    []    
[]    []    []    [A]   []    [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
S[{ S-->AC }, { S-->CA }]
C[{ C-->a }, { C-->b }]

word='aabbabbbbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[A]   [S]   [A, C][]    []    []    []    []    []    []    
[S]   [A]   [S]   [A, C][]    []    []    []    []    []    
[A]   [S]   [A]   [S]   [A, C][]    []    []    []    []    
[S]   [A]   [S]   [A]   [S]   [A, C][]    []    []    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A, C][]    []    []    
[S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, C][]    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, C][]    
[S]   [A]   [S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[S][A][S][] [] [] [] [] [] [] 
[A][S][A][S][] [] [] [] [] [] 
[S][A][S][A][S][] [] [] [] [] 
[A][S][A][S][A][S][] [] [] [] 
[S][A][S][A][S][A][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->SB }, { S-->BB }]

word='aabbabbbbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][S][B][] [] [] [] [] [] [] 
[S][S][S][B][] [] [] [] [] [] 
[S][S][S][S][B][] [] [] [] [] 
[S][S][S][S][S][B][] [] [] [] 
[S][S][S][S][S][S][B][] [] [] 
[S][S][S][S][S][S][S][B][] [] 
[S][S][S][S][S][S][S][S][B][] 
[S][S][S][S][S][S][S][S][S][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->CA }]
S[{ S-->SA }, { S-->b }]
C[{ C-->CS }, { C-->b }]

word='bbabbbaaab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[C]      [S, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, S]   [A]      []       []       []       []       []       []       []       
[A, C, S][A, S]   [A]      [S, C]   []       []       []       []       []       []       
[A, C, S][A, S]   [A]      [C]      [S, C]   []       []       []       []       []       
[A, C, S][A, S]   [A]      [C]      [C]      [S, C]   []       []       []       []       
[A, C, S][A, S]   [A]      [A, S, C][A, S, C][A, S]   [A]      []       []       []       
[A, C, S][A, S]   [A]      [A, S, C][A, C, S][S]      []       [A]      []       []       
[A, C, S][A, S]   [A]      [A, S, C][A, C, S][S]      []       []       [A]      []       
[A, C, S][A, S]   [A]      [A, S, C][A, C, S][S]      []       []       [A]      [S, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][A][] [] [] [] [] [] [] 
[] [A][] [S][] [] [] [] [] [] 
[] [A][] [] [S][] [] [] [] [] 
[] [A][] [] [S][] [] [] [] [] 
[] [A][] [] [S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->AS }, { A-->SA }]
S[{ S-->CA }, { S-->a }, { S-->SS }]
C[{ C-->b }]

word='bbabbbaaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[A, S][A]   [S]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [A, C][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, C][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, C][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [S]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [A]   [A, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AS }, { A-->CB }]
B[{ B-->AB }, { B-->a }]
C[{ C-->SB }, { C-->SC }]
S[{ S-->SS }, { S-->CS }, { S-->b }]

word='bbabbbaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[S]      [S]      []       [S]      []       []       []       []       []       []       
[S]      [S]      []       [S]      [S]      []       []       []       []       []       
[S]      [S]      []       [S]      [S]      [S]      []       []       []       []       
[A, C]   [A, C]   []       [C]      [C]      [C]      [B]      []       []       []       
[A, B, C][A, B]   []       [A]      [A]      [A]      []       [B]      []       []       
[A, B, C][A, B, C][]       [B, C]   [B, C]   [B]      []       []       [B]      []       
[A, S]   [A, S]   []       [S]      [S]      []       []       []       []       [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[C][] [] [A][A][] [] [] [] [] 
[C][] [] [C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->a }]
C[{ C-->AC }, { C-->CA }, { C-->AB }, { C-->BS }]
S[{ S-->CB }, { S-->SS }, { S-->b }]

word='bbabbbaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[C]   [C]   [A, B][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, S][]    []    []    []    []    []    
[C]   [C]   [C]   [S]   [A, S][]    []    []    []    []    
[C]   [C]   [C]   [S]   [S]   [A, S][]    []    []    []    
[S, C][S, C][C, S][C]   [C]   [C]   [A, B][]    []    []    
[S, C][S, C][C, S][S, C][S, C][C, S][C]   [A, B][]    []    
[S, C][S, C][C, S][S, C][S, C][S, C][C, S][C]   [A, B][]    
[S, C][S, C][C, S][S, C][S, C][S, C][C, S][C]   [C]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[S, C][S, C][C, S][C]   []    []    []    []    []    []    
[C]   [C]   [C]   [S, C][S, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=34

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->CB }, { C-->SB }, { C-->b }]
S[{ S-->SC }, { S-->BC }]

word='bbabbbaaab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C, S][B, C][]    []    []    []    []    []    []    []    
[S, C][C]   [B]   []    []    []    []    []    []    []    
[C, S][C]   [S]   [B, C][]    []    []    []    []    []    
[S, C][C, S][S, C][C, S][B, C][]    []    []    []    []    
[S, C][C, S][S, C][S, C][C, S][B, C][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][C]   [B]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][C]   []    [B]   []    []    
[S, C][S, C][S, C][S, C][S, C][C]   []    []    [B]   []    
[S, C][S, C][S, C][S, C][S, C][C]   []    []    [S]   [B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C, S][]    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->BA }, { B-->a }, { B-->SC }]
S[{ S-->a }, { S-->BB }, { S-->b }]
C[{ C-->b }]

word='abbbabbaba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[S]      [B]      [S, C]   []       []       []       []       []       []       []       
[B, S]   [A]      [B]      [S, C]   []       []       []       []       []       []       
[S]      [B]      [S]      [A]      [B, S]   []       []       []       []       []       
[B, S]   [A, B]   [B, S]   [A]      [B]      [S, C]   []       []       []       []       
[B, S]   [A, S]   [B]      []       [S]      [B]      [S, C]   []       []       []       
[B, S]   [A, B]   [B, S]   [A]      [B]      [S]      [A]      [B, S]   []       []       
[B, S]   [A, B, S][B, S]   [A]      [B, S]   [B, S]   [A]      [B]      [S, C]   []       
[B, S]   [A, B, S][B, S]   [A]      [B, S]   [S]      [A]      [B, S]   [A]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[B, S][A, B][B, S][]    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [A, B][S]   []    [B]   []    []    []    []    []    
[]    [A, B][S]   [A]   [B]   [B, S][]    []    []    []    
[]    [A, B][S]   [A]   [B, S][S]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=30

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->BA }]
B[{ B-->CA }, { B-->CS }]
S[{ S-->CC }, { S-->AB }]
C[{ C-->b }]

word='abbbabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [B]   [S]   [C]   []    []    []    []    []    []    
[S]   [A]   []    [B]   [A]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[S]   [A]   []    [B]   [A]   [S]   [C]   []    []    []    
[]    []    [B]   [A]   []    []    [B]   [A]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A, S][A]   [B]   [B, S][A]   []    [B]   [S]   [B]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AS }, { S-->a }]

word='abbbabbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [A, C][]    []    []    []    []    []    []    []    
[A, C][C]   [A, C][]    []    []    []    []    []    []    
[A, C][C]   [C]   [A, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [A, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AA }, { A-->BC }]
B[{ B-->b }]
S[{ S-->SA }, { S-->BB }, { S-->b }, { S-->AB }]
C[{ C-->SB }]

word='abbbabbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[C]      [S, C]   [B, S]   []       []       []       []       []       []       []       
[A]      [A, C]   [S, C]   [B, S]   []       []       []       []       []       []       
[A]      [A]      [S]      [S]      [A]      []       []       []       []       []       
[A, S]   [A, S]   [A, C]   [C]      [S]      [B, S]   []       []       []       []       
[S, C]   [S, C]   [A, S]   [A]      [C]      [S, C]   [B, S]   []       []       []       
[S]      [S]      [A, S]   [A]      []       [S]      [S]      [A]      []       []       
[A, C, S][A, S, C][A, S, C][A, S]   [A]      [A, C]   [C]      [S]      [B, S]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A]      [A]      []       [S]      [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S, C][C]   [S]   [A]   []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [S]   []    [C]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->SS }, { A-->b }]
S[{ S-->SA }, { S-->AA }]
C[{ C-->b }]

word='abbbabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A, C][]    []    []    []    []    []    []    
[A, S][A, S][S]   [A, C][]    []    []    []    []    []    
[A, S][A, S][A, S][S]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [A, C][]    []    []    []    
[A, S][A, S][A, S][A, S][S]   [S]   [A, C][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A, C][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AS }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->CC }]
C[{ C-->AC }, { C-->SA }]

word='baaaaabaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S, C][S]   [A]   []    []    []    []    []    []    []    
[C, S][C, S][S]   [A]   []    []    []    []    []    []    
[S, C][S, C][S, C][S]   [A]   []    []    []    []    []    
[S, C][S, C][C, S][S, C][S]   [A]   []    []    []    []    
[S, C][S, C][C, S][C, S][S, C][S]   [A]   []    []    []    
[S, C][S, C][C, S][C, S][C, S][S, C][S]   [A]   []    []    
[S, C][S, C][C, S][C, S][C, S][C, S][S, C][S]   [A]   []    
[S, C][S, C][C, S][C, S][C, S][C, S][C, S][S, C][S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->SS }, { S-->b }]

word='baaaaabaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[S]   []    []    [A]   []    []    []    []    []    []    
[S]   []    []    []    [A]   []    []    []    []    []    
[S]   []    []    []    []    [A]   []    []    []    []    
[S]   []    []    []    []    [B]   [A, S][]    []    []    
[S]   []    []    []    [B]   [B, S][S]   [A]   []    []    
[S]   []    []    [B]   [B, S][B, S][S]   []    [A]   []    
[S]   []    [B]   [B, S][B, S][B, S][S]   []    []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [B, S][B]   []    []    []    []    
[]    []    []    [B, S][B]   [B]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
S[{ S-->a }, { S-->SC }, { S-->CC }]
C[{ C-->SS }, { C-->BB }, { C-->b }]

word='baaaaabaaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[S]      [C]      [S]      []       []       []       []       []       []       []       
[C]      [S]      [C]      [S]      []       []       []       []       []       []       
[S]      [S, C]   [S]      [C]      [S]      []       []       []       []       []       
[C, S]   [S, C]   [C, S]   [S]      [C]      [S]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][S, C]   [B, C, S][S]      [B, C]   []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [C]      []       [S]      []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [C, S]   [S]      [C]      [S]      []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [C]      [S]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C, S][]    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->BS }, { B-->a }, { B-->BB }]
C[{ C-->SB }, { C-->CS }]
S[{ S-->b }, { S-->AB }]

word='baaaaabaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C]      [B]      [B]      []       []       []       []       []       []       []       
[C]      [B]      [B]      [B]      []       []       []       []       []       []       
[C]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[C]      [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[C]      [B]      [B]      [B]      [B]      [B]      [S]      []       []       []       
[A, C]   [B]      [B]      [B]      [B]      [B]      [C]      [B]      []       []       
[A, S, C][B]      [B]      [B]      [B]      [B]      [C]      [B]      [B]      []       
[A, S, C][B]      [B]      [B]      [B]      [B]      [C]      [B]      [B]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    [B]   []    []    []    []    
[A]   []    []    []    []    [B]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->BB }]

word='baaaaabaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A]      [S]      [B]      []       []       []       []       []       []       []       
[B, S]   [A]      [S]      [B]      []       []       []       []       []       []       
[A, S]   [B, S]   [A]      [S]      [B]      []       []       []       []       []       
[A, B, S][A, S]   [B, S]   [A]      [S]      [B]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [B, S]   [A]      [S]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A]      [S]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A]      [S]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A]      [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[A]   []    [B, S][]    []    []    []    []    []    []    
[]    [A]   []    [B, S][]    []    []    []    []    []    
[]    []    [A]   []    [B, S][]    []    []    []    []    
[]    []    []    [A]   []    [B, S][]    []    []    []    
[]    []    []    []    [A]   []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->SS }, { S-->BC }]
C[{ C-->b }]

word='babbbabbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B, C][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, C][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->b }]
S[{ S-->AS }, { S-->BA }, { S-->SS }, { S-->AB }]

word='babbbabbab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, S][S]   [A, B][]    []    []    []    []    []    []    
[A, S][A, S][S]   [A, B][]    []    []    []    []    []    
[A, S][A, S][A, S][S]   [A, B][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A, B][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A, B][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }, { B-->CC }]
S[{ S-->a }, { S-->BB }]
C[{ C-->a }, { C-->CS }]

word='babbbabbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [S, C]   []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[S]      [B, C]   [S]      [B]      []       []       []       []       []       []       
[]       [S]      []       [S]      [B]      []       []       []       []       []       
[S]      [B, C]   [S]      [B]      []       [S, C]   []       []       []       []       
[]       [S]      []       [S]      []       []       [B]      []       []       []       
[B]      [C]      [B]      []       [S]      [B, C]   [S]      [B]      []       []       
[B, S]   [B, S, C][B]      [S]      [B, S]   [B, C]   [B]      []       [S, C]   []       
[B, S]   [B, C, S][B, S]   [B]      [S]      [B, C, S][S]      []       []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[B]      [B, S, C][B]      []       [B, S]   [B, C]   []       []       []       []       
[]       []       [B]      []       []       [B, S]   []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->a }]
C[{ C-->SA }, { C-->BC }]
S[{ S-->SB }, { S-->a }, { S-->BS }]

word='babbbabbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[S]      [S]      []       [B]      []       []       []       []       []       []       
[S]      [S]      []       []       [B]      []       []       []       []       []       
[A, S]   [A, S]   [S]      [S]      [S]      [B, S]   []       []       []       []       
[A, S]   [A, S]   [S]      [S]      [S]      [S]      [B]      []       []       []       
[A, S]   [A, S]   [S]      [S]      [S]      [S]      []       [B]      []       []       
[A, C, S][A, C, S][A, S]   [A, S]   [A, S]   [A, S]   [S]      [S]      [B, S]   []       
[A, C, S][A, C, S][A, S]   [A, S]   [A, S]   [A, S]   [S]      [S]      [S]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SA }]
B[{ B-->b }]
C[{ C-->CA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->b }]
S[{ S-->CC }]

word='babbbabbab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[C]      [S]      [B, C]   []       []       []       []       []       []       []       
[A, S]   [C]      [A, S]   [B, C]   []       []       []       []       []       []       
[C]      [A, S]   [C]      [A, S]   [B, C]   []       []       []       []       []       
[S]      []       [S]      []       [S]      [C]      []       []       []       []       
[C]      [S]      [C]      [S]      [C]      [S]      [B, C]   []       []       []       
[A, S, C][C, S]   [A, S, C][C]      [A, S]   [C]      [A, S]   [B, C]   []       []       
[S]      [S]      [S]      [S]      []       [S]      []       [S]      [C]      []       
[S, C]   [C, S]   [S, C]   [C]      [S]      [C]      [S]      [C]      [S]      [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    [C]   []    []    []    []    []    []    []    
[A, C][C, S][A, C][C]   [A]   []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S, C][C, S][S, C][C]   []    [C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AA }]
S[{ S-->CA }, { S-->CS }, { S-->b }]
C[{ C-->b }]

word='bbbabababb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A, S][S, C][]    []    []    []    []    []    []    []    
[A, S][A, S][S, C][]    []    []    []    []    []    []    
[A, S][A, S][S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A]   []    [S, C][]    []    []    []    []    
[A, S][A, S][A]   []    [S]   [A]   []    []    []    []    
[A, S][A, S][S]   [A]   [A]   []    [S, C][]    []    []    
[A, S][A, S][S]   [A]   [A]   []    [S]   [A]   []    []    
[A, S][A, S][A]   []    [S]   [A]   [A]   []    [S, C][]    
[A, S][A, S][S]   [A]   [A]   []    [S]   [A]   [A, S][S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [A, S][S]   []    []    []    []    []    []    []    
[S]   [A, S][S]   []    []    []    []    []    []    []    
[S]   [S]   []    []    [S]   []    []    []    []    []    
[S]   [A, S][S]   []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SB }, { B-->AA }]
C[{ C-->a }, { C-->SS }, { C-->b }]
S[{ S-->CC }, { S-->SC }]

word='bbbabababb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, C]   []       []       []       []       []       []       []       []       
[S]      [B, S]   [A, C]   []       []       []       []       []       []       []       
[S, C]   [S]      [S]      [C]      []       []       []       []       []       []       
[C, S]   [C, S]   [S]      [S]      [A, C]   []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [S]      [S]      [C]      []       []       []       []       
[C, S]   [C, S]   [S, C]   [C, S]   [S]      [S]      [A, C]   []       []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [C, S]   [S]      [S]      [C]      []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [S, C]   [C, S]   [S]      [S]      [A, C]   []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C, S][S]      [B, S]   [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->SA }, { B-->SB }]
S[{ S-->AB }]

word='bbbabababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    [A]   [S]   [B]   []    []    []    []    []    
[]    []    []    [B]   []    [A]   []    []    []    []    
[]    []    []    []    [A]   [S]   [B]   []    []    []    
[]    [A]   [S]   [B]   []    [B]   []    [A]   []    []    
[A]   [S]   [B]   []    []    []    [A]   [S]   [B]   []    
[S]   [A, B][S]   [A, B][S]   [B]   [S]   [B]   []    [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][S]   []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->SA }, { S-->b }]

word='bbbabababb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   []    [A, S][]    []    []    []    []    
[S]   [S]   [S]   []    [S]   [A]   []    []    []    []    
[S]   [S]   [S]   []    [S]   []    [A, S][]    []    []    
[S]   [S]   [S]   []    [S]   []    [S]   [A]   []    []    
[S]   [S]   [S]   []    [S]   []    [S]   []    [A, S][]    
[S]   [S]   [S]   []    [S]   []    [S]   []    [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->b }, { B-->a }, { B-->SS }]
S[{ S-->a }, { S-->BB }, { S-->AB }]

word='bbbabababb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[A, S][A, S][A, B][]    []    []    []    []    []    []    
[B, S][B, S][S]   [B, S][]    []    []    []    []    []    
[B, S][B, S][]    [S]   [A, B][]    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [B, S][]    []    []    []    
[B, S][B, S][S]   [B, S][]    [S]   [A, B][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   [B, S][]    []    
[B, S][B, S][B, S][B, S][S]   [B, S][]    [S]   [A, B][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, S][A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->SS }]
S[{ S-->AS }, { S-->b }]
C[{ C-->a }]

word='bababbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[A]   [A, S][S]   []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[A, S][A, S][A]   [A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [S]   []    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[A, S][A, S][A, S][A, S][S]   [A]   [A, S][S]   []    []    
[]    []    []    []    []    []    []    []    [A, C][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, S][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
C[{ C-->CB }, { C-->SB }, { C-->BB }, { C-->b }]
S[{ S-->CC }]

word='bababbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S]      []       [C]      []       []       []       []       []       []       []       
[C, S]   []       [C]      [B]      []       []       []       []       []       []       
[S, C]   [B]      [S]      []       [C]      []       []       []       []       []       
[C, S]   []       [C]      [B]      [S]      [C]      []       []       []       []       
[C, S]   [B]      [C, S]   [B, C]   [S, C]   [C]      [B]      []       []       []       
[C, S]   [B]      [C, S]   [B, S]   [S]      [S]      []       [C]      []       []       
[C, S]   [B, C]   [C, S]   [B, S, C][S, C]   [S, C]   []       [C]      [B]      []       
[C, S]   [B, S]   [C, S]   [B, C, S][S, C]   [C, S]   [B]      [S]      []       [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    [C]   []    []    []    []    []    []    
[S]   []    [S]   [S]   [S]   []    []    []    []    []    
[]    [C]   []    [S, C][S, C][]    []    []    []    []    
[S]   []    []    [C]   [C]   [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->SC }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->b }]

word='bababbabab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S, C][A, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S, C][A, C][]    []    []    []    []    
[S]   [S]   [S]   [S, C][C]   [A, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][A, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SC }, { C-->b }]
S[{ S-->CC }]

word='bababbabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[S][C][S][C][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[S][C][S][C][S][C][] [] [] [] 
[C][S][C][S][C][S][C][] [] [] 
[S][C][S][C][S][C][S][C][] [] 
[C][S][C][S][C][S][C][S][C][] 
[S][C][S][C][S][C][S][C][S][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[C][] [C][] [C][] [] [] [] [] 
[] [C][] [C][] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }]
C[{ C-->BA }, { C-->SB }, { C-->b }, { C-->AB }]
S[{ S-->CC }]

word='bababbabab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[S]   [C]   [B, C][]    []    []    []    []    []    []    
[S]   []    [C]   [A]   []    []    []    []    []    []    
[C]   [S]   [S]   [C]   [B, C][]    []    []    []    []    
[S]   [C]   [C]   [S]   [S]   [B, C][]    []    []    []    
[S]   []    []    [S]   [S]   [C]   [A]   []    []    []    
[C]   [S]   [S]   [C]   [C]   [S]   [C]   [B, C][]    []    
[]    []    []    []    []    [S]   []    [C]   [A]   []    
[S]   []    []    [S]   [S]   [C]   [S]   [S]   [C]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[C][] [] [C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->CB }, { S-->a }, { S-->BC }]
C[{ C-->a }, { C-->SS }, { C-->b }]

word='abbbbbaaaa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[S]      [B]      [S]      [B]      [S]      [B]      [S, C]   []       []       []       
[B, C]   [S]      [B, C]   [S]      [B, C]   [S]      [B, C]   [S, C]   []       []       
[B, S, C][B, S, C][B, S]   [B, S, C][B, S]   [B, S, C][B, S]   [B, C]   [S, C]   []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [B, C]   [S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    [B]   []    [B]   []    []    []    []    []    
[C]   [B, S][]    [B, S][]    [B, S][]    []    []    []    
[]    []    [B]   []    [B]   []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->a }, { B-->SC }]
C[{ C-->SB }]
S[{ S-->a }, { S-->BS }]

word='abbbbbaaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [A, B]   []       []       []       []       []       []       []       []       
[]       []       [A, B]   []       []       []       []       []       []       []       
[]       []       []       [A, B]   []       []       []       []       []       []       
[]       []       []       []       [A, B]   []       []       []       []       []       
[]       []       []       []       []       [A, B]   []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B, S]   []       []       []       
[B, C, S][C, S]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [B, S]   []       []       
[B, S, C][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [B, S]   []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][C, S][S, C][S, C][S, C][]    []    []    []    []    
[]    [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->SA }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->AA }, { S-->CC }]

word='abbbbbaaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[C]   [S]   [A, C][]    []    []    []    []    []    []    
[S]   [C]   [S]   [A, C][]    []    []    []    []    []    
[C]   [S]   [C]   [S]   [A, C][]    []    []    []    []    
[S]   [C]   [S]   [C]   [S]   [A, C][]    []    []    []    
[C]   [S]   [C]   [S]   [C]   [S]   [A, C][]    []    []    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [A, C][]    []    
[C]   [S]   [C]   [S]   [C]   [S]   [C]   [S]   [A, C][]    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [C]   [S]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[C][] [C][] [C][] [] [] [] [] 
[] [C][] [C][] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->SB }, { A-->BA }]
B[{ B-->a }]
S[{ S-->b }, { S-->AB }]

word='abbbbbaaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[A][A][A][A][A][A][B][] [] [] 
[S][S][S][S][S][S][] [B][] [] 
[A][A][A][A][A][A][] [] [B][] 
[S][S][S][S][S][S][] [] [] [B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AS }]
B[{ B-->BS }, { B-->a }, { B-->AA }]
S[{ S-->CB }]
C[{ C-->a }, { C-->b }]

word='abbbbbaaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[S]   [B]   [A, C][]    []    []    []    []    []    []    
[A, B][S]   [B]   [A, C][]    []    []    []    []    []    
[B]   [A]   [S]   [B]   [A, C][]    []    []    []    []    
[S]   [B]   [A]   [S]   [B]   [A, C][]    []    []    []    
[B]   [A]   [S]   [B]   [A]   [S]   [B, C][]    []    []    
[S]   [B]   [A]   [S]   [B]   [A]   [S]   [B, C][]    []    
[A, B][A, S][B, S][A, B][A, S][B, S][A, B][S]   [B, C][]    
[S]   [B]   [A]   [S]   [B]   [A]   [S]   [A, B][S]   [B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[B]   [A]   [S]   [B]   []    []    []    []    []    []    
[S]   []    [A]   [S]   []    []    []    []    []    []    
[A, B][A, S][S]   [A, B][A, S][S]   []    []    []    []    
[S]   []    [A]   [S]   []    [A]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->BS }, { B-->CA }]
C[{ C-->SB }, { C-->AA }, { C-->SC }]
S[{ S-->BB }, { S-->AB }]

word='bbaaaabaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[C]      []       [C]      [A]      []       []       []       []       []       []       
[B, C]   [S]      [B]      [C]      [A]      []       []       []       []       []       
[B, S]   [B]      [S]      [B]      [C]      [A]      []       []       []       []       
[B, C, S][S]      [A, B, C][C, S]   [A]      [S]      [B]      []       []       []       
[B, S, C][B, S]   [B, S, C][B]      [C]      []       []       [A]      []       []       
[B, C]   [C, S]   [A, B]   [S, C]   [B]      [C]      []       [C]      [A]      []       
[B, S, C][B, C, S][B, C, S][A, B, C][C, S]   []       []       [A]      [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[C, S][]    [A, B][C, S][]    []    []    []    []    []    
[]    [B, S][B, C][B]   []    []    []    []    []    []    
[]    []    [A]   [C]   [B]   []    []    []    []    []    
[C]   [B, S][B]   [A, B][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->AB }, { B-->SB }, { B-->CC }, { B-->SC }]
S[{ S-->CB }]
C[{ C-->AA }, { C-->b }]

word='bbaaaabaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[B, C, S][B, C]   [C]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [C]      [A]      []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [A]      [C]      [A]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [B]      []       [C]      []       []       []       
[A, B, S][A, B, S][A, B]   [B, C]   [A]      [C]      [A]      [A]      []       []       
[B, C, S][B, C, S][B, C, S][A, B, S][B, C, S][A, B]   [B, C]   [C]      [A]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B, S]   [B]      []       [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][C, S][B]   []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [B, C][A]   []    []    []    []    []    
[C, S][C, S][S]   [A]   [S]   [A]   []    []    []    []    
[]    []    []    [S]   []    []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->SC }]
C[{ C-->BB }]
S[{ S-->BC }, { S-->BS }]

word='bbaaaabaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S]      [C]      [B]      []       []       []       []       []       []       []       
[S]      [S]      [C]      [B]      []       []       []       []       []       []       
[B, S]   [S]      [S]      [C]      [B]      []       []       []       []       []       
[B, C, S][B, S]   [S]      [S]      [C]      [B]      []       []       []       []       
[B, S, C][B, C, S][B, S]   [S]      [S]      [C]      [B]      []       []       []       
[B, S, C][B, S, C][B, C, S][B, S]   [S]      [S]      [C]      [B]      []       []       
[B, S, C][B, S, C][B, C, S][B, C, S][B, S]   [S]      [S]      [C]      [B]      []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, C, S][B, S]   [S]      [S]      [C]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B]   [B, S][S]   []    []    []    []    []    []    []    
[]    [B]   [B, S][S]   []    []    []    []    []    []    
[]    []    [B]   [B, S][S]   []    []    []    []    []    
[]    []    []    [B]   [B, S][S]   []    []    []    []    
[]    []    []    []    [B]   [B, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->BS }, { B-->AC }, { B-->AA }]
C[{ C-->SA }, { C-->CS }, { C-->b }]
S[{ S-->CB }, { S-->a }, { S-->SC }]

word='bbaaaabaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[A]      [C]      []       [S]      []       []       []       []       []       []       
[A]      [C]      []       []       [S]      []       []       []       []       []       
[A]      [C]      []       []       []       [S]      []       []       []       []       
[A, B]   [A, C]   []       []       []       [S]      [C]      []       []       []       
[A, B]   [A, C]   []       []       []       [S]      [C]      [S]      []       []       
[A, B]   [A, C]   []       []       []       [S]      [C]      []       [S]      []       
[A, B, S][A, B, C][]       []       [S]      [S, C]   [A, C]   []       [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AB }, { A-->BS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->a }]
S[{ S-->CA }]
C[{ C-->SC }, { C-->b }]

word='bbaaaabaab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[A, S]   [A]      [B]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [B]      []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [A]      [B]      []       []       []       []       []       
[A, S]   [A, S]   [A]      [A]      [A]      [B]      []       []       []       []       
[A, C, S][A, C, S][A]      [A]      [A]      [A]      [B, C]   []       []       []       
[A, S]   [A, S]   [A]      [A]      [A]      [A]      [A]      [B]      []       []       
[A, S]   [A, S]   [A]      [A]      [A]      [A]      [A, S]   [A]      [B]      []       
[A, C, S][A, C, S][A]      [A]      [A]      [A]      [A, S, C][A]      [A]      [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, S]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      []       []       []       []       []       []       []       
[A, S]   [A, C, S][A]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A, S]   [A, S]   [A]      [A]      [A]      [A]      []       []       []       []       
[A, S]   [A, C, S][A]      [A]      [A]      [A]      [A, S, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=43

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=43

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

word='babbaaabab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[A]      [C]      []       [S]      []       []       []       []       []       []       
[A]      [C, S]   [C]      [A]      [C]      []       []       []       []       []       
[A, C]   [A, C, S][S]      []       [S]      [C]      []       []       []       []       
[A, S, C][A, C, S][A, C]   [A, C]   [A, C]   [S]      [C]      []       []       []       
[A, S, C][A, C, S][A, C]   [A, C]   [A, C]   [S]      [C]      [S]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [A]      [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [A]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, C][A, S][]    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    [A]   [A]   [A]   []    []    []    []    []    
[]    []    [A]   [A]   [A]   [C, S][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
S[{ S-->a }, { S-->CS }, { S-->AA }]
C[{ C-->SS }, { C-->b }]

word='babbaaabab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[]       []       [A, C]   []       []       []       []       []       []       []       
[C]      [C]      [A, S]   [A, C]   []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S]      [S]      []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [C]      [C]      [S]      []       []       []       []       
[S, C]   [S, C]   [S, C]   [S]      [S]      [C]      [S]      []       []       []       
[A, S]   [A]      [A]      []       []       [A]      []       [A, C]   []       []       
[S, C]   [S, C]   [S, C]   [C]      [C]      [S]      [C]      [S]      [S]      []       
[A, S, C][A, C]   [A, S]   [A, S]   [A]      []       [A]      []       []       [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S, C][S, C][]    []    [S]   []    []    []    []    
[S, C][]    []    [S]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->AB }]
B[{ B-->b }]
S[{ S-->SB }, { S-->BA }, { S-->a }, { S-->AA }, { S-->b }]
C[{ C-->a }]

word='babbaaabab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[A]   [S]   [B, S][]    []    []    []    []    []    []    
[A]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [A]   [A, S][A]   [S, C][]    []    []    []    []    
[A, S][]    [A]   [S]   [A]   [S, C][]    []    []    []    
[A, S][S]   [S]   [A, S][]    [A]   [S, C][]    []    []    
[A, S][S]   [S]   [A, S][]    [A]   [S]   [B, S][]    []    
[A, S][A]   [A, S][A, S][S]   [S]   [A]   [A]   [S, C][]    
[A, S][A]   [A, S][A, S][S]   [S]   [A]   [A]   [S]   [B, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][S]   [S]   []    []    []    []    []    []    []    
[A]   [A]   [A, S][A, S][]    []    []    []    []    []    
[A]   [A]   [A]   [A, S][S]   [S]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->b }, { A-->SA }]
S[{ S-->AC }]
C[{ C-->CS }, { C-->b }]

word='babbaaabab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A, C, S][A, S]   [A, C]   []       []       []       []       []       []       []       
[A, S, C][A, S]   [A, S]   [A, C]   []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       []       
[A, C, S][A, S]   [A, C, S][A, C, S][A, S]   [A, S]   [A, S]   [A, C]   []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      []       
[A, C, S][A, S]   [A, C, S][A, C, S][A, S]   [A, S]   [A, S]   [A, C, S][A, S]   [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    [C]   [C, S][S]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    [C]   [C, S][S]   [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
S[{ S-->AC }, { S-->SA }]
C[{ C-->CA }, { C-->AA }, { C-->b }]

word='babbaaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [C]      []       []       []       []       []       []       []       
[S]      []       []       [C]      []       []       []       []       []       []       
[S]      []       []       [C]      [A]      []       []       []       []       []       
[S]      []       []       [C]      [C]      [A]      []       []       []       []       
[A, C, S][S]      [C]      [A, C]   [S, C]   [C]      [A]      []       []       []       
[A, C, S][S, C]   [A, C]   [A, C, S][A]      []       [S]      [C]      []       []       
[A, C, S][S, C]   [A, C]   [A, C, S][A, C]   []       [S]      [C]      [A]      []       
[A, C, S][A, S, C][A, C, S][A, C, S][S, C]   [S, C]   [C]      [A]      [S]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       [C]      []       []       []       []       []       []       
[C]      [C]      []       [A, S]   []       []       []       []       []       []       
[C]      []       []       [A]      []       []       []       []       []       []       
[]       []       []       [C]      [C]      []       [C]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->AB }, { B-->AA }]
S[{ S-->a }, { S-->SS }, { S-->b }]

word='babbaaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [A, S]   []       []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, S]   [B, S]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][A]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->a }, { C-->SC }, { C-->SS }]
S[{ S-->CC }, { S-->b }]

word='babbaaabaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[C, S][S]   [C]   [A, S][]    []    []    []    []    []    
[C, S][C, S][C, S][C]   [C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][S]   [C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C]   [S]   [C]   []    []    []    
[C, S][C, S][C, S][C, S][S]   [C]   []    [A, S][]    []    
[C, S][C, S][C, S][C, S][S, C][C, S][S]   [C]   [C]   []    
[C, S][C, S][C, S][C, S][S, C][S, C][S, C][C, S][S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   [C, S][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->a }, { S-->CC }, { S-->BS }]
C[{ C-->CS }, { C-->SC }, { C-->b }]

word='babbaaabaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][C]   [B, C][]    []    []    []    []    []    []    
[S, C][S]   [S]   [B, C][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S]   []    []    []    []    []    
[S, C][S, C][S, C][C]   []    [S]   []    []    []    []    
[S, C][S, C][S, C][C]   []    []    [S]   []    []    []    
[C, S][S, C][S, C][S, C][C]   [C]   [C]   [B, C][]    []    
[C, S][S, C][S, C][S, C][C]   [C]   [C]   [S, C][S]   []    
[C, S][S, C][S, C][S, C][C]   [C]   [C]   [C]   []    [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][C][] [] [] [] 
[] [] [] [] [C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->a }, { S-->b }, { S-->BC }]
C[{ C-->a }, { C-->CS }, { C-->CC }]

word='babbaaabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [C]   [B, S][]    []    []    []    []    []    []    
[S]   [C]   []    [B, S][]    []    []    []    []    []    
[S]   [C]   []    [S]   [S, C][]    []    []    []    []    
[S]   [C]   []    [S]   [C]   [S, C][]    []    []    []    
[S]   [C]   []    [S]   [C]   [C]   [S, C][]    []    []    
[S]   [C]   []    [S]   [C]   [C]   [C]   [B, S][]    []    
[S]   [C]   []    [S]   [C]   [C]   [C]   [S]   [S, C][]    
[S]   [C]   []    [S]   [C]   [C]   [C]   [S]   [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AB }, { B-->CB }, { B-->AA }]
C[{ C-->CA }, { C-->a }, { C-->b }]
S[{ S-->BC }]

word='babbaaabaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [A, C]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [C]      [A, C]   []       []       []       []       []       
[B]      [B]      [B]      [B, C]   [B, C]   [A, C]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, C, S][B, C, S][B, C]   [A, C]   []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       [C]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       [C]      [A, C]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B, C]   [B, C]   [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B]   [C]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CB }]
B[{ B-->b }, { B-->SA }, { B-->a }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->AB }]

word='abaaabbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[A]      [C]      [B]      []       []       []       []       []       []       []       
[S]      [A]      [C]      [B]      []       []       []       []       []       []       
[C]      [S]      [A]      [C]      [B]      []       []       []       []       []       
[A]      [C]      [S]      [A]      [C]      [B]      []       []       []       []       
[B, S]   [A]      [C]      [S]      [A]      [C]      [B]      []       []       []       
[A, C]   [B, S]   [A]      [C]      [S]      [A]      [C]      [B]      []       []       
[A, S]   [A, C]   [B, S]   [A]      [C]      [S]      [A]      [C]      [B]      []       
[B, S, C][A, S]   [A, C]   [B, S]   [A]      [C]      [S]      [A]      [C]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[A]   [C]   [S]   []    []    []    []    []    []    []    
[B, S][A]   [C]   [S]   []    []    []    []    []    []    
[]    [B, S][A]   [C]   [S]   []    []    []    []    []    
[A, S][]    [B, S][A]   [C]   [S]   []    []    []    []    
[S, C][A, S][]    [B, S][A]   [C]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }]
C[{ C-->a }, { C-->CS }, { C-->b }]

word='abaaabbbba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [C]   [S, C][]    []    []    []    []    []    []    
[S]   [C]   [S, C][S, C][]    []    []    []    []    []    
[S]   [C]   [S, C][S, C][S, C][]    []    []    []    []    
[S]   [C]   [S, C][C, S][S]   [C]   []    []    []    []    
[S]   [C]   [S, C][C, S][S]   []    [C]   []    []    []    
[S]   [C]   [S, C][C, S][S]   []    []    [C]   []    []    
[S]   [C]   [S, C][C, S][S]   []    []    []    [C]   []    
[S]   [C]   [S, C][C, S][S]   []    []    []    [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SB }, { B-->a }]
S[{ S-->BA }, { S-->BB }]
C[{ C-->a }, { C-->SS }]

word='abaaabbbba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[B]   [S]   [B, C][]    []    []    []    []    []    []    
[S, C][B]   [S]   [B, C][]    []    []    []    []    []    
[B]   [C, S][B]   [S]   [B, C][]    []    []    []    []    
[S, C][B]   [S, C][B]   [S]   [A, B][]    []    []    []    
[B]   [C, S][B]   [S, C][B]   [S]   [A, B][]    []    []    
[S, C][B]   [S, C][B]   [S, C][B]   [S]   [A, B][]    []    
[B]   [C, S][B]   [S, C][B]   [S, C][B]   [S]   [A, B][]    
[S, C][B]   [S, C][B]   [S, C][B]   [S, C][B]   [S]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[C][B][C][] [] [] [] [] [] [] 
[B][C][B][C][] [] [] [] [] [] 
[C][B][C][B][C][] [] [] [] [] 
[B][C][B][C][B][C][] [] [] [] 
[C][B][C][B][C][B][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->AB }, { B-->SA }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->b }]

word='abaaabbbba'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [A, S]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [A, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [B, S]   [A, S]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A, B][B]   [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }, { S-->CC }]
C[{ C-->SC }, { C-->b }]

word='abaaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[C, S][C, S][C]   [C]   [C]   [C]   []    []    []    []    
[S, C][S, C][S]   [S]   [S]   [S]   [C]   []    []    []    
[C, S][C, S][C, S][C, S][C, S][S, C][S]   [C]   []    []    
[C, S][C, S][C, S][C, S][C, S][S, C][S, C][S]   [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }, { B-->CC }]
C[{ C-->BA }, { C-->AB }]
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->BC }]

word='baaaabbbba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[]    []    []    []    [C]   [A, B][]    []    []    []    
[]    []    []    []    []    [C]   [A, B][]    []    []    
[S]   [S]   [S]   [S, C][B, S][S]   [C]   [A, B][]    []    
[S]   [S]   [S]   [S]   [C, S][B]   [S]   [C]   [A, B][]    
[B, S][S]   [S, C][B, S][S]   [C, S][B, S][S]   [C]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C, S][B]   []    []    []    []    
[B]   []    [C]   [B]   []    [C, S][B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->SA }]
S[{ S-->AS }, { S-->SB }, { S-->a }]

word='baaaabbbba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[B]      []       [S]      []       []       []       []       []       []       []       
[B]      []       []       [S]      []       []       []       []       []       []       
[B]      []       []       []       [S]      []       []       []       []       []       
[A, B]   []       []       [S]      [B, S]   [A, B]   []       []       []       []       
[A, B]   []       [S]      [B, S]   [A, B, S][A]      [A, B]   []       []       []       
[A, B, S][S]      [B, S]   [A, B, S][A, B, S][A]      [A]      [A, B]   []       []       
[A, B, S][B, S]   [A, B, S][A, B, S][A, B, S][A]      [A]      [A]      [A, B]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [S][] [] [] [] [] 
[A][] [] [] [S][A][] [] [] [] 
[] [] [] [] [] [B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
S[{ S-->SA }, { S-->a }, { S-->b }]

word='baaaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][A, S][]    []    []    []    []    []    []    
[S]   [A, S][A, S][A, S][]    []    []    []    []    []    
[S]   [A, S][A, S][A, S][A, S][]    []    []    []    []    
[S]   [A, S][A, S][A, S][A]   [S]   []    []    []    []    
[S]   [A, S][A, S][A, S][A]   []    [S]   []    []    []    
[S]   [A, S][A, S][A, S][A]   []    []    [S]   []    []    
[S]   [A, S][A, S][A, S][A]   []    []    []    [S]   []    
[S]   [A, S][A, S][A, S][A]   []    []    []    [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->AB }, { A-->CB }]
B[{ B-->b }]
C[{ C-->AS }]
S[{ S-->a }, { S-->AA }, { S-->CC }, { S-->BC }]

word='baaaabbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [A, S]   []       []       []       []       []       []       []       []       
[A, S, C][S, C]   [A, S]   []       []       []       []       []       []       []       
[S, C]   [C]      [S, C]   [A, S]   []       []       []       []       []       []       
[A, S, C][S]      [C]      [S, C]   [A, S]   []       []       []       []       []       
[A, S, C][S, C]   [A, S, C][A, S]   [A]      [B]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A]      []       [B]      []       []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A]      []       []       [B]      []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A]      []       []       []       [B]      []       
[A, S, C][S, C]   [C, S]   [C, S]   [S, C]   []       []       []       [A]      [A, S]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[A, S, C][]       []       []       []       []       []       []       []       []       
[A]      [S, C]   [A, S, C][]       []       []       []       []       []       []       
[A]      [A, C]   [A]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[A]      []       []       [S]      []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SC }, { C-->b }]
S[{ S-->CC }, { S-->SS }, { S-->b }]

word='baaaabbbba'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[S, C][S]   [C]   []    []    []    []    []    []    []    
[C, S][C]   [S]   [C]   []    []    []    []    []    []    
[S, C][S]   [C]   [S]   [C]   []    []    []    []    []    
[C, S][C, S][S]   [C, S][S]   [C, S][]    []    []    []    
[C, S][C, S][S, C][S, C][S, C][C, S][C, S][]    []    []    
[C, S][C, S][S, C][S, C][S, C][C, S][C, S][C, S][]    []    
[C, S][C, S][S, C][S, C][S, C][C, S][C, S][C, S][C, S][]    
[C, S][C, S][S, C][S, C][S, C][C, S][C, S][C, S][C, S][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->CB }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->SB }, { C-->SS }, { C-->b }, { C-->BC }]

word='aabababbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[S, C][S, C][S, C][B]   []    []    []    []    []    []    
[S, C][S, C][S, C][C]   [S, C][]    []    []    []    []    
[S, C][S, C][S, C][C, S][S, C][B]   []    []    []    []    
[S, C][S, C][S, C][C, S][S, C][C]   [S, C][]    []    []    
[S, C][S, C][S, C][C, S][S, C][C, S][S, C][S, C][]    []    
[S, C][S, C][S, C][C, S][S, C][C, S][S, C][S, C][B]   []    
[C, S][C, S][C, S][C, S][S, C][C, S][S, C][S, C][C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->CA }, { C-->a }]

word='aabababbab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S, C][A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S, C][A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=27

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AC }, { S-->a }, { S-->AA }, { S-->CC }]
C[{ C-->SA }, { C-->SS }]

word='aabababbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S, C][A, S][]    []    []    []    []    []    []    []    
[S, C][S, C][A]   []    []    []    []    []    []    []    
[C, S][C]   [S]   [A, S][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][A]   []    []    []    []    []    
[S, C][S, C][S, C][C]   [S]   [A, S][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][A]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][C]   [S]   [A]   []    []    
[C, S][S, C][S, C][S, C][S, C][S, C][C]   [S]   [A, S][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->BS }]
B[{ B-->b }, { B-->CB }, { B-->a }]
C[{ C-->SA }, { C-->AA }]
S[{ S-->BA }]

word='aabababbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A]      [S]      [A, B]   []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[A]      [S]      [A]      [S]      [A, B]   []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[A]      [S]      [A]      [S]      [A]      [S]      [A, B]   []       []       []       
[C, S]   [A, C]   [S, C]   [A, C]   [S, C]   [A, C]   [S, C]   [A, B]   []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       [B]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A]      [S]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A, C][S]   [A, C][S]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->SB }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->a }, { C-->SS }]

word='aabababbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B, C][]    []    []    []    []    []    
[C]   [C]   [C]   [S]   [S]   []    []    []    []    []    
[C]   [C]   [C]   [S]   [S]   [B, C][]    []    []    []    
[S]   [S]   [S]   [C]   [C]   [S]   [S]   []    []    []    
[C]   [C]   [C]   [S]   [S]   [C]   [C]   [S]   []    []    
[C]   [C]   [C]   [S]   [S]   [C]   [C]   [S]   [B, C][]    
[S]   [S]   [S]   [C]   [C]   [S]   [S]   [C]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[S][S][S][C][] [] [] [] [] [] 
[C][C][] [S][S][] [] [] [] [] 
[C][C][C][S][] [C][] [] [] [] 
[S][S][S][C][] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AC }]
B[{ B-->CB }, { B-->AA }]
S[{ S-->CA }, { S-->a }, { S-->BS }]
C[{ C-->BA }, { C-->a }]

word='aababaaabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    [S]   [A]   [S, C][]    []    []    []    []    []    
[B]   [B]   [B]   [S]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][S]   [A]   [S, C][]    []    []    []    
[B, S][B, S][B, S][S]   [A]   []    [S, C][]    []    []    
[B, S][B, S][B, S][S]   [A]   []    []    [S, C][]    []    
[S, C][S, C][S, C][B]   [B]   []    []    [S]   [A]   []    
[A, S][A, S][A, S][C]   [C]   [B]   [B]   [B]   [B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [S]   []    []    []    []    []    []    
[B]   [B]   [B]   [S]   []    []    []    []    []    []    
[C]   [C]   [S, C][B]   []    []    []    []    []    []    
[A]   [A]   [A, S][C]   [C]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->CB }, { S-->SB }]
C[{ C-->a }, { C-->b }]

word='aababaaabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [S]   [B, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CC }, { A-->AA }]
B[{ B-->CA }, { B-->BA }]
S[{ S-->SA }, { S-->a }, { S-->SS }, { S-->CS }]
C[{ C-->b }]

word='aababaaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [C]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, B]   [A]      [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A, S]   [A, S]   [A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A]      [C]      []       
[A, S]   [A, S]   [A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [S]      [A]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A, B][A]   [A, B][A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }, { S-->CC }]
C[{ C-->SS }, { C-->b }]

word='aababaaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[C, S][C]   [S]   [S]   []    []    []    []    []    []    
[S, C][S]   []    []    [C]   []    []    []    []    []    
[S, C][S, C][S, C][C]   [S]   [S]   []    []    []    []    
[C, S][S, C][S, C][C, S][S, C][C]   [S]   []    []    []    
[C, S][S, C][S, C][C, S][S, C][S]   [C]   [S]   []    []    
[C, S][S, C][S, C][C, S][S, C][C]   [S]   []    [C]   []    
[C, S][S, C][S, C][C, S][S, C][C, S][S]   [C]   [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->CA }]
S[{ S-->AS }, { S-->a }, { S-->AA }, { S-->SC }, { S-->CS }]
C[{ C-->AC }, { C-->SS }]

word='aababaaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A]      []       [A]      []       []       []       []       []       []       []       
[S]      [C]      [S]      [S]      []       []       []       []       []       []       
[]       [A]      []       []       [A]      []       []       []       []       []       
[A, C]   [S]      [C]      [C]      [S]      [S]      []       []       []       []       
[S]      [A, C]   [S]      [S]      [C]      [C]      [S]      []       []       []       
[A, S, C][S, C]   [A, S, C][A, C]   [S]      [S]      [C]      [S]      []       []       
[A, S]   [A, C]   [A, S]   [A, S]   []       []       [A]      []       [A]      []       
[A, C, S][A, C, S][S, C]   [S, C]   [A, S, C][A, C]   [S]      [C]      [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [A]   []    [S]   []    []    []    []    []    []    
[A]   []    [A, C][A]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BS }, { B-->a }]
S[{ S-->BB }]

word='abaaabbbbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [A, B][]    []    []    []    []    []    []    
[S]   [B]   [S]   [A, B][]    []    []    []    []    []    
[B]   [S]   [B]   [S]   [A, B][]    []    []    []    []    
[S]   [B]   [S]   [B]   [S]   [B]   []    []    []    []    
[B]   [S]   [B]   [S]   [B]   [S]   [B]   []    []    []    
[S]   [B]   [S]   [B]   [S]   [B]   [S]   [B]   []    []    
[B]   [S]   [B]   [S]   [B]   [S]   [B]   [S]   [B]   []    
[S]   [B]   [S]   [B]   [S]   [B]   [S]   [B]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[B][] [B][] [B][] [] [] [] [] 
[] [B][] [B][] [B][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->SB }, { S-->b }]
C[{ C-->BB }, { C-->AB }]

word='abaaabbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       [A]      [A]      []       []       []       []       []       []       
[]       []       [A]      [A]      [A]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[C]      [B]      [S, C]   [S, C]   [C]      [B]      [S]      []       []       []       
[C]      [B, S]   [B, C]   [B]      []       [S]      [B]      [S]      []       []       
[S, C]   [B, C]   [S, C]   [S, C]   [S, C]   [B, C]   [S]      [B]      [S]      []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, C]   [B, S]   [B, C]   [S]      [B]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [B, S][B, C][]    []    []    []    []    []    []    
[S, C][C]   [S, C][S, C][]    [C]   []    []    []    []    
[C]   [B, S][C]   [C]   [C]   [B, S][C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AC }]
B[{ B-->AB }, { B-->AS }, { B-->CA }, { B-->a }]
C[{ C-->CC }, { C-->b }]
S[{ S-->b }, { S-->BC }]

word='abaaabbbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[A]      [B]      [A]      [B]      []       []       []       []       []       []       
[B]      [A]      [B]      [A]      [B]      []       []       []       []       []       
[A, B, S][A, B]   [A, B, S][A, B]   [S]      [S, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [C]      [S, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [C]      [C]      [S, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [C]      [C]      [C]      [S, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [C]      [C]      [C]      [C]      [S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B, S][A]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [A, S][S]   []    []    []    []    []    
[S]   [S]   [S]   [A, S][S]   []    []    []    []    []    
[S]   [S]   [S]   [A, S][S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=29

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->SS }]
C[{ C-->a }, { C-->BB }]
S[{ S-->CC }, { S-->b }, { S-->BC }]

word='abaaabbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       [B]      [S]      [C]      []       []       []       []       []       []       
[]       [S]      []       [S]      [C]      []       []       []       []       []       
[]       [B]      []       [B]      []       [S]      []       []       []       []       
[]       [B]      []       [B]      []       [B]      [S]      []       []       []       
[S]      [B, C]   [S]      [B, C]   []       [B]      [B]      [S]      []       []       
[B, S]   [B, C]   [B, S]   [B, C]   [S]      [B, C]   [B]      [B]      [S]      []       
[B, S]   [B, C, S][B, S]   [B, C, S][B, S]   [B, C]   [B, C]   [B]      [B]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B, S][]    [B, S][C]   []    [B]   []    []    []    []    
[]    [S]   []    [S]   [B, S][B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SC }, { B-->SS }]
C[{ C-->CB }, { C-->a }, { C-->BB }]
S[{ S-->CC }]

word='abaaabbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S]      []       [C]      []       []       []       []       []       []       []       
[B]      []       [S]      [C]      []       []       []       []       []       []       
[B, S, C][C]      [B]      [S]      [C]      []       []       []       []       []       
[B, C, S][C]      [B, C]   [S]      [C]      [B]      []       []       []       []       
[B, S, C][S, C]   [B, C]   [B, S]   [S, C]   [C]      [B]      []       []       []       
[B, S, C][S, C]   [B, C, S][B, S, C][S, C]   [C]      [C]      [B]      []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, S, C][S, C]   [C]      [C]      [B]      []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, S, C][S, C]   [S, C]   [C]      [C]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[C]      []       [B, C]   []       []       []       []       []       []       []       
[C]      []       [B]      [S]      []       []       []       []       []       []       
[C]      []       [B]      [S, C]   [C]      []       []       []       []       []       
[]       []       []       []       [C]      [C]      []       []       []       []       
[]       []       []       []       [C]      [C]      [C]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CS }]
S[{ S-->a }, { S-->BB }, { S-->SS }]
C[{ C-->a }, { C-->CC }, { C-->BC }]

word='ababababbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [S, C][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   []    [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->CA }, { A-->CB }]
B[{ B-->a }]
C[{ C-->SA }, { C-->b }]
S[{ S-->a }, { S-->SC }]

word='ababababbb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S, C]   [A, C]   []       []       []       []       []       []       []       []       
[A, C]   [A]      [B, S]   []       []       []       []       []       []       []       
[A, S]   []       [S, C]   [A, C]   []       []       []       []       []       []       
[A, C, S][A]      [A, C]   [A]      [B, S]   []       []       []       []       []       
[A, S, C][A]      [A, S]   []       [S, C]   [A, C]   []       []       []       []       
[A, S, C][A]      [A, C, S][A]      [A, C]   [A]      [B, S]   []       []       []       
[A, C, S][A]      [A, C, S][A]      [A, S]   []       [S, C]   [A, C]   []       []       
[A, C, S][A]      [A, C, S][A]      [A, C, S][A]      [A, C, S][A]      [A, C]   []       
[A, C, S][A]      [A, C, S][A]      [A, C, S][A]      [A, C, S][A]      [A]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A]   [A, S][]    []    []    []    []    []    []    
[S]   [A]   [S]   [A]   []    []    []    []    []    []    
[S]   [A]   [S]   [A]   [A, S][]    []    []    []    []    
[S]   [A]   [S]   [A]   [S]   [A]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SC }, { B-->CS }, { B-->CC }]
S[{ S-->SB }, { S-->a }, { S-->BB }]
C[{ C-->b }]

word='ababababbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][B, C][]    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, C][]    []    []    []    []    []    
[S]   [B, S][S]   [B]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, C][]    []    []    []    
[S]   [B, S][S]   [B, S][S]   [B]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[]    [B, S][]    [B, S][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AC }, { B-->a }]
C[{ C-->SS }, { C-->BB }, { C-->b }, { C-->BS }]
S[{ S-->b }, { S-->BC }]

word='ababababbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, S, C][S, C]   []       []       []       []       []       []       []       []       
[C]      []       [A, B]   []       []       []       []       []       []       []       
[B, S, C][C]      [B, S, C][S, C]   []       []       []       []       []       []       
[C, S]   []       [C]      []       [A, B]   []       []       []       []       []       
[B, S, C][C]      [B, S, C][C]      [B, S, C][S, C]   []       []       []       []       
[B, S, C][C]      [S, C]   []       [C]      []       [A, B]   []       []       []       
[B, S, C][C]      [B, S, C][C]      [B, S, C][C]      [B, S, C][S, C]   []       []       
[B, S, C][C]      [B, S, C][C]      [B, S, C][C]      [B, S, C][C]      [S, C]   []       
[B, S, C][C]      [B, S, C][C]      [B, S, C][C]      [S, C]   []       [C]      [S, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       [B, S, C][]       []       []       []       []       []       []       
[B, C]   [C]      []       []       []       []       []       []       []       []       
[B, C]   [C]      [B, S, C][]       [B, S, C][]       []       []       []       []       
[B, C]   [C]      [B, C]   [C]      [B, C]   [C]      []       []       []       []       
[B, C]   [C]      [B, C]   [C]      [B, C]   [C]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=39

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=39

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->SB }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->a }, { C-->SC }, { C-->SS }]

word='ababababbb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S, C][C, S][B, C][]    []    []    []    []    []    []    
[C, S][C]   [S]   [S]   []    []    []    []    []    []    
[C, S][C, S][S, C][C, S][B, C][]    []    []    []    []    
[C, S][C, S][S, C][C]   [S]   [S]   []    []    []    []    
[C, S][C, S][S, C][C, S][S, C][C, S][B, C][]    []    []    
[C, S][C, S][S, C][C, S][S, C][C]   [S]   [S]   []    []    
[C, S][C, S][S, C][C, S][S, C][C, S][S, C][C]   [S]   []    
[C, S][C, S][S, C][C, S][S, C][C, S][S, C][C]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AC }]
S[{ S-->CA }, { S-->CC }, { S-->b }]
C[{ C-->SS }, { C-->b }]

word='bbbaababbb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, S, C][S, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, S, C][S, C]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][S]      [A]      []       []       []       []       []       []       
[A, S, C][S]      []       []       [A]      []       []       []       []       []       
[A, S, C][S, C]   []       []       [A]      [S, C]   []       []       []       []       
[A, C, S][C, S]   []       []       []       [S]      [A]      []       []       []       
[A, S, C][A, S, C][]       []       [A]      [S, C]   [A]      [S, C]   []       []       
[A, C, S][A, S, C][]       []       [A]      [A, S, C][A]      [A, S, C][S, C]   []       
[A, C, S][A, S, C][]       []       [A]      [A, S, C][A]      [A, S, C][A, S, C][S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->SB }, { B-->AA }]
S[{ S-->AC }, { S-->a }, { S-->BC }]
C[{ C-->b }]

word='bbbaababbb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[B]   [S]   [B, C][]    []    []    []    []    []    []    
[A]   [A]   [A]   [A, S][]    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, S][]    []    []    []    []    
[S]   [B, S][S]   [B, S][B, S][B, C][]    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   [A, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B, S][B, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B, S][S]   [B, C][]    
[B, S][B, S][B, S][B, S][B, S][S]   [B, S][B]   [S]   [B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[S]   [B, S][S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=29

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BS }, { B-->SA }]
S[{ S-->BA }, { S-->AA }, { S-->b }]

word='bbbaababbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[B, S][B, S][A, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][A]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [A, S][]    []    []    []    
[B, S][B, S][B, S][S]   [B]   [B, S][A]   []    []    []    
[B, S][B, S][B, S][B]   [B, S][B, S][S]   [A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][A, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [B, S][B]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=31

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->SB }, { S-->b }]
C[{ C-->BS }]

word='bbbaababbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][B, S][]    []    []    []    []    []    []    []    
[C, S][S, C][B, S][]    []    []    []    []    []    []    
[S, C][S, C][S]   [B]   []    []    []    []    []    []    
[S, C][S, C][S]   []    [B]   []    []    []    []    []    
[S, C][S, C][S]   []    [C]   [B, S][]    []    []    []    
[S, C][S, C][S]   []    [C]   [S]   [B]   []    []    []    
[S, C][S, C][S]   []    [C]   [S]   [C]   [B, S][]    []    
[S, C][S, C][S]   []    [C]   [S]   [C]   [S, C][B, S][]    
[S, C][S, C][S]   []    [C]   [S]   [C]   [C, S][S, C][B, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][]    []    [C]   []    []    []    []    []    
[S, C][S, C][]    []    [C]   [S]   []    []    []    []    
[S, C][S, C][]    []    [C]   [S]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=32

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->b }]
C[{ C-->b }]

word='bbbaababbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[S]   [A]   [S, C][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[A]   [S]   [A]   [S]   [S]   [S, C][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[S]   [A]   [S]   []    []    [A]   [S]   [S, C][]    []    
[A]   [S]   [A]   [S]   [S]   [S]   []    [A]   [S, C][]    
[S]   [A]   [S]   []    []    [A]   [S]   [S]   [A]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][] [] [] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
S[{ S-->CB }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->SS }, { C-->BC }]

word='baabababaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[B]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [B]      [C]      [S]      []       []       []       []       []       []       
[C, S]   [S]      [B]      [C]      [S]      []       []       []       []       []       
[B, C]   [S, C]   [S]      [B]      [C]      [S]      []       []       []       []       
[B, S]   [B, C]   [C, S]   [S]      [B]      [C]      [S]      []       []       []       
[C, S]   [B, S]   [B, C]   [C, S]   [S]      [B]      [C]      [S]      []       []       
[B, C, S][S, C]   [B, S]   [B, C]   [C, S]   [S]      [B]      [C]      [S]      []       
[B, S, C][B, S, C][C, S]   [B, S]   [B, C]   [C, S]   [S]      [B]      [C]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[B][] [S][S][] [] [] [] [] [] 
[S][B][] [S][S][] [] [] [] [] 
[] [S][B][] [S][S][] [] [] [] 
[] [] [S][B][] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BS }, { A-->CB }]
B[{ B-->AC }, { B-->SA }, { B-->CS }]
S[{ S-->CA }, { S-->SB }, { S-->b }]
C[{ C-->a }]

word='baabababaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B]   [A]   [C]   []    []    []    []    []    []    []    
[A, B][A]   [B]   [S]   []    []    []    []    []    []    
[B, S][B]   []    []    [C]   []    []    []    []    []    
[A, B][A]   [B]   [S]   [B]   [S]   []    []    []    []    
[B, S][B]   []    []    []    []    [C]   []    []    []    
[A, B][A]   [B]   [S]   [B]   [S]   [B]   [S]   []    []    
[B, S][B]   []    []    []    []    []    []    [C]   []    
[S]   [S]   [A]   [B]   [A]   [B]   [A]   [B]   [A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->AS }, { S-->a }, { S-->CS }]
C[{ C-->SA }, { C-->SC }]

word='baabababaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [S]      []       []       []       []       []       []       []       
[C]      [C]      [C]      [A]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [S]      [S]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [A]      []       []       []       []       
[A, S, C][A, S, C][A, C, S][A, S]   [A, S]   [S]      [S]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [A]      []       []       
[A, S, C][A, S, C][A, C, S][A, S, C][A, C, S][A, S]   [A, S]   [S]      [S]      []       
[A, S, C][A, S, C][A, C, S][A, S, C][A, C, S][A, S, C][A, C, S][A]      [A]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][A, C][A, C][A]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->AS }, { C-->CA }, { C-->AA }]
S[{ S-->CC }]

word='baabababaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C]   [C]   [A]   []    []    []    []    []    []    []    
[C, S][C]   [C]   [A]   []    []    []    []    []    []    
[S, C][S, C][C]   [C]   [A]   []    []    []    []    []    
[S, C][S, C][S, C][C]   [C]   [A]   []    []    []    []    
[S, C][S, C][C, S][S, C][C]   [C]   [A]   []    []    []    
[S, C][S, C][C, S][C, S][S, C][C]   [C]   [A]   []    []    
[S, C][S, C][C, S][C, S][C, S][S, C][C]   [C]   [A]   []    
[S, C][S, C][C, S][C, S][C, S][C, S][S, C][C]   [C]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
C[{ C-->AC }, { C-->CA }, { C-->a }]
S[{ S-->CC }, { S-->SS }, { S-->b }]

word='baabababaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[S, C]   [S]      [C]      []       []       []       []       []       []       []       
[A, S]   [S, C]   [A]      [S]      []       []       []       []       []       []       
[A, C, S][A, S]   [C]      [A]      [C]      []       []       []       []       []       
[A, S]   [C, S]   [A]      []       [A]      [S]      []       []       []       []       
[A, C, S][A, S]   [C]      [A]      [C]      [A]      [C]      []       []       []       
[A, S]   [C, S]   [A]      []       [A]      []       [A]      [S]      []       []       
[A, C, S][A, S]   [C]      [A]      [C]      [A]      [C]      [A]      [C]      []       
[A, C, S][A, C, S][A, S]   [S, C]   [A, S]   [S, C]   [A, S]   [S, C]   [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[A, C][]    [C]   []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[A, C][]    [C]   []    [C]   []    []    []    []    []    
[]    [A, C][]    [S, C][]    [S, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AB }, { A-->SA }]
B[{ B-->b }, { B-->BB }]
C[{ C-->CB }, { C-->a }, { C-->BC }]
S[{ S-->AA }]

word='bbaabaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[C]   [C]   [A, C][]    []    []    []    []    []    []    
[A]   [A]   [A, S][A, C][]    []    []    []    []    []    
[A]   [A]   [A, S][A, C][B]   []    []    []    []    []    
[S]   [S]   [A, S][A, S][C]   [A, C][]    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A, S][A, C][]    []    []    
[A, S][A, S][A, S][A, S][A]   [A, S][A, C][B]   []    []    
[A, S][A, S][A, S][A, S][A]   [A, S][A, C][B]   [B]   []    
[A, S][A, S][A, S][A, S][A]   [A, S][A, C][B]   [B]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->AS }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->b }]
C[{ C-->CS }, { C-->b }]

word='bbaabaabbb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [S, C]   []       []       []       []       []       []       []       []       
[A, C]   [C]      [S]      []       []       []       []       []       []       []       
[A, C]   [C]      []       [S]      []       []       []       []       []       []       
[A, S, C][A, S, C][]       [A]      [S, C]   []       []       []       []       []       
[A, S, C][A, S, C][]       [A]      [C]      [S]      []       []       []       []       
[A, S, C][A, S, C][]       [A]      [C]      []       [S]      []       []       []       
[A, S, C][A, S, C][]       [A, S]   [A, S, C][]       [A]      [S, C]   []       []       
[A, C, S][A, S, C][]       [A, S]   [A, S, C][]       [A]      [A, C]   [S, C]   []       
[A, C, S][A, C, S][]       [A, S]   [A, S, C][]       [A, S]   [A, S, C][A, C]   [S, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
C[{ C-->CB }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }]

word='bbaabaabbb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S, C][B, C][]    []    []    []    []    []    []    []    
[S, C][C]   [S, C][]    []    []    []    []    []    []    
[S, C][C]   [S, C][S, C][]    []    []    []    []    []    
[S, C][C]   [S, C][S, C][B, C][]    []    []    []    []    
[S, C][C]   [S, C][S, C][C]   [S, C][]    []    []    []    
[S, C][C]   [S, C][S, C][C]   [S, C][S, C][]    []    []    
[S, C][C]   [S, C][S, C][C]   [S, C][S, C][B, C][]    []    
[C, S][C]   [S, C][S, C][C]   [S, C][S, C][S, C][B, C][]    
[C, S][C]   [C, S][S, C][C]   [S, C][S, C][C, S][S, C][B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [C][] [] [] [] [] [] 
[C][] [] [C][] [] [] [] [] [] 
[C][] [] [C][] [] [] [] [] [] 
[C][] [] [C][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BS }]
B[{ B-->b }, { B-->a }]
S[{ S-->SA }, { S-->BA }]

word='bbaabaabbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[A, S][S]   [A]   [S]   [A, B][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[A, S][A, S][A, S][A, S][S]   [A]   [S]   [A, B][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A, B][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->SB }]
C[{ C-->CA }, { C-->b }]
S[{ S-->CB }]

word='bbaabaabbb'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[B]      [C]      [A]      []       []       []       []       []       []       []       
[B]      [C]      [A]      [A]      []       []       []       []       []       []       
[A, B]   [C, S]   [A]      [A]      [B, C]   []       []       []       []       []       
[A, B]   [C]      [A]      [A]      [C]      [A]      []       []       []       []       
[A, B]   [C]      [A]      [A]      [C]      [A]      [A]      []       []       []       
[A, B]   [C, S]   [A]      [A]      [C, S]   [A]      [A]      [B, C]   []       []       
[A, B, S][B, C, S][A]      [A]      [B, C, S][A]      [A]      [B, S]   [B, C]   []       
[A, B, S][B, C, S][A]      [A]      [B, C, S][A]      [A]      [A, B, S][B, S]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    [A]   []    []    []    []    []    []    
[]    [S]   []    [A]   [S]   []    []    []    []    []    
[S]   [B, S][]    []    [B, S][]    []    []    []    []    
[S]   [B, S][]    []    [B, S][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }]
S[{ S-->AC }, { S-->AS }, { S-->SA }]
C[{ C-->a }, { C-->SS }]

word='abbaaaabba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, C][]    []    []    []    []    
[C, S][C, S][S, C][S]   [S]   [A, C][]    []    []    []    
[C, S][C, S][S, C][S, C][S]   [S]   [A, C][]    []    []    
[C, S][C, S][S, C][S, C][S]   [S]   []    [A, B][]    []    
[C, S][C, S][S, C][S, C][S]   [S]   []    []    [A, B][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S]   [S]   [S]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CC }, { S-->b }]

word='abbaaaabba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[S]   [C]   [C]   [B, C][]    []    []    []    []    []    
[C]   [S]   [S]   [S]   [B, C][]    []    []    []    []    
[S]   [C]   [C]   [C]   [S]   [B, C][]    []    []    []    
[C]   [S]   [S]   [S]   [C]   [S]   [B, C][]    []    []    
[]    []    []    []    []    []    []    [B, S][]    []    
[]    []    []    []    []    []    []    []    [B, S][]    
[S]   [C]   [C]   [C]   [S]   [C]   [S]   [C]   [C]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->SC }]
S[{ S-->AA }, { S-->AB }, { S-->BS }]
C[{ C-->b }]

word='abbaaaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [B, C]   []       []       []       []       []       []       []       []       
[A, B]   []       [B, C]   []       []       []       []       []       []       []       
[S]      []       []       [A]      []       []       []       []       []       []       
[A, S]   [S]      [S]      [S]      [A]      []       []       []       []       []       
[S]      []       []       [A]      [S]      [A]      []       []       []       []       
[A, S]   [S]      [S]      [S]      [A]      [S]      [A]      []       []       []       
[A, B, S][A, B]   [A, B]   [A, B]   [S]      [A, B]   [S]      [B, C]   []       []       
[A, B, S][S]      [S]      [S]      [A, B]   [S]      [A, B]   []       [B, C]   []       
[S]      []       []       [A]      [S]      [A]      [S]      []       []       [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[B]   []    []    []    [A, B][]    []    []    []    []    
[]    []    []    [A]   []    [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
S[{ S-->a }, { S-->SC }, { S-->CS }, { S-->CC }]
C[{ C-->BB }, { C-->SS }]

word='abbaaaabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[S]   [C]   [B]   []    []    []    []    []    []    []    
[C]   [S]   []    [S]   []    []    []    []    []    []    
[S, C][S, C][B]   [C]   [S]   []    []    []    []    []    
[C, S][S, C][]    [S]   [C]   [S]   []    []    []    []    
[S, C][S, C][B]   [C, S][S]   [C]   [S]   []    []    []    
[]    [B]   [C]   []    []    []    []    [B]   []    []    
[S, C][S, C][B]   [S, C][S, C][C, S][S]   [C]   [B]   []    
[S, C][S, C][B]   [S, C][S, C][S, C][C]   [S]   []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S, C][]    [S]   []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[]    [S, C][]    []    []    [C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->a }, { C-->b }]
S[{ S-->CC }, { S-->CS }]

word='abbaaaabba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->SB }, { B-->a }]
S[{ S-->AC }, { S-->CC }, { S-->SC }]
C[{ C-->SA }, { C-->CS }, { C-->b }]

word='baabbabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [A]      [B]      []       []       []       []       []       []       []       
[C]      [S]      []       [C]      []       []       []       []       []       []       
[S, C]   [S]      []       [S]      [C]      []       []       []       []       []       
[B]      [B]      [A]      [B]      []       [B]      []       []       []       []       
[]       []       [S]      []       []       []       [C]      []       []       []       
[]       []       [S]      []       []       []       [S]      [C]      []       []       
[]       []       [S]      []       []       []       [C, S]   [S]      [C]      []       
[A, C, S][A, S, C][B]      [A, C]   []       [A]      [B]      [B]      []       [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }]
S[{ S-->CA }, { S-->AA }, { S-->CC }]
C[{ C-->b }]

word='baabbabbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [S]   [A, C][]    []    []    []    []    []    
[A]   [S]   [A]   [S]   [A, C][]    []    []    []    []    
[S]   []    [S]   []    [S]   [A]   []    []    []    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A, C][]    []    []    
[S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, C][]    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, C][]    
[S]   []    [S]   []    [S]   []    [S]   []    [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[] [A][] [A][] [] [] [] [] [] 
[A][] [A][] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }, { A-->SB }]
B[{ B-->SC }]
S[{ S-->BA }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->a }]

word='baabbabbba'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [A, C]   []       []       []       []       []       []       []       []       
[S]      []       [A, C]   []       []       []       []       []       []       []       
[A]      [S]      [S]      [A, S]   []       []       []       []       []       []       
[A, S]   [A]      [A]      [A]      [A, S]   []       []       []       []       []       
[A, B, S][A, S]   [A, S]   [A, S]   [A, B]   [A, C]   []       []       []       []       
[A, S]   [A]      [A]      [A]      [S]      [S]      [A, S]   []       []       []       
[A, S]   [A]      [A]      [A]      [A, S]   [A]      [A]      [A, S]   []       []       
[A, S]   [A]      [A]      [A]      [A, S]   [A]      [A]      [A]      [A, S]   []       
[A, B, S][A, S]   [A, S]   [A, S]   [A, B, S][A, S]   [A, S]   [A, S]   [A, B]   [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[S]   [A]   [A]   [A]   [S]   []    []    []    []    []    
[S]   [A]   [A]   [A]   [S]   [A]   []    []    []    []    
[B, S][A, S][A, S][A]   [B, S][A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=34

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SS }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->BB }]

word='baabbabbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[B, S]   [A, B, S][A, S]   []       []       []       []       []       []       []       
[S]      [B, S]   [B]      [B]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [B]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [A, S]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [S]      [B]      [B]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [B]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      []       [S]      [B]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [] [S][S][] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CA }]
B[{ B-->a }]
S[{ S-->AC }, { S-->SA }, { S-->AB }]
C[{ C-->AS }, { C-->AA }, { C-->b }]

word='baabbabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [A, B]   []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, B]   []       []       []       []       []       []       []       
[S, C]   [S, C]   [S]      [C]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [A]      [A]      [A, B]   []       []       []       []       
[C, S]   [C, S]   [C]      [S]      [S]      [S]      [C]      []       []       []       
[]       []       []       []       []       []       []       [C]      []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A, C, S][A, C, S][A, C, S][C, S]   [C, S]   [C, S]   [A]      [A]      [A]      [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][C][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
C[{ C-->AS }, { C-->SS }]
S[{ S-->SA }, { S-->SC }, { S-->CC }, { S-->b }]

word='abbbaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    [C]   [S]   []    []    []    []    []    []    []    
[C, S][S]   [C]   [S]   []    []    []    []    []    []    
[S, C][S]   [C]   [S]   [A]   []    []    []    []    []    
[S, C][S]   [C]   [S]   []    [A]   []    []    []    []    
[S, C][S]   [C]   [S]   []    []    [A]   []    []    []    
[S, C][S, C][S, C][S, C][]    []    [C]   [S]   []    []    
[S, C][S, C][S, C][S, C][]    []    [C]   [S]   [A]   []    
[S, C][S, C][S, C][S, C][]    []    [C]   [S]   []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [C][] [] [] [] [] [] [] 
[S][] [C][] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
C[{ C-->SB }, { C-->a }, { C-->BB }]
S[{ S-->a }, { S-->SS }, { S-->BC }]

word='abbbaaabaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [C]   [B]   []    []    []    []    []    []    
[S]   [S]   []    [S]   [S, C][]    []    []    []    []    
[S]   [S]   []    [S]   [S]   [S, C][]    []    []    []    
[S]   [S]   []    [S]   [S]   [S]   [S, C][]    []    []    
[C]   [C]   [S]   [S, C][C]   [C]   [C]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   []    [S, C][C]   []    []    []    []    []    
[S]   [S]   []    []    [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->SS }, { C-->SC }]

word='abbbaaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [S]   []    []    []    []    []    []    []    
[C, S][C]   [C]   [S]   []    []    []    []    []    []    
[S, C][S, C][C]   [C]   [S]   []    []    []    []    []    
[S, C][S, C][C, S][C]   [C]   [S]   []    []    []    []    
[S, C][S, C][C, S][C, S][C]   [C]   [S]   []    []    []    
[S, C][S, C][C, S][C, S][C, S][C]   [C]   [S]   []    []    
[S, C][S, C][C, S][C, S][C, S][C, S][C]   [C]   [S]   []    
[C, S][S, C][C, S][C, S][C, S][C, S][C, S][C]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->a }, { S-->SS }, { S-->SC }, { S-->BC }, { S-->BS }]
C[{ C-->a }, { C-->CS }]

word='abbbaaabaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[S, C][S]   [S]   [S]   [S, C][]    []    []    []    []    
[S, C][S]   [S]   [S]   [S, C][S, C][]    []    []    []    
[S, C][S]   [S]   [S]   [S, C][S, C][S, C][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[S, C][S]   [S]   [S]   [S, C][S, C][S, C][S]   [S, C][]    
[C, S][S]   [S]   [S]   [S, C][S, C][S, C][S]   [S, C][S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][B][B][] [] [] [] [] [] 
[C][] [] [] [C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->SB }, { S-->a }, { S-->b }, { S-->AB }]

word='abbbaaabaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[A, B]   [A]      [A]      [A]      [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A]      [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->SA }]
B[{ B-->b }, { B-->a }]
C[{ C-->SB }]
S[{ S-->BB }, { S-->CC }, { S-->BC }]

word='aabbbbbbab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[A, C][S]   [A, B][]    []    []    []    []    []    []    
[S]   [A, C][S]   [A, B][]    []    []    []    []    []    
[A, C][S]   [A, C][S]   [A, B][]    []    []    []    []    
[S]   [A, C][S]   [A, C][S]   [A, B][]    []    []    []    
[A, C][S]   [A, C][S]   [A, C][S]   [A, B][]    []    []    
[S]   [A, C][S]   [A, C][S]   [A, C][S]   [A, B][]    []    
[A, C][S]   [A, C][S]   [A, C][S]   [A, C][S]   [A, B][]    
[S]   [A, C][S]   [A, C][S]   [A, C][S]   [A, C][S]   [A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[A, C][]    [A, C][]    []    []    []    []    []    []    
[]    [A, C][]    [A, C][]    []    []    []    []    []    
[A, C][]    [A, C][]    [A, C][]    []    []    []    []    
[]    [A, C][]    [A, C][]    [A, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->BB }]
S[{ S-->BA }, { S-->CS }]
C[{ C-->SB }, { C-->a }, { C-->BS }]

word='aabbbbbbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       [B]      [B]      []       []       []       []       []       []       
[]       []       [B]      [B]      [B]      []       []       []       []       []       
[]       []       [B]      [B]      [B]      [B]      []       []       []       []       
[]       []       [B]      [B]      [B]      [B]      [B]      []       []       []       
[]       []       [B]      [B]      [B]      [B]      [B]      [B]      []       []       
[S]      [S]      [A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A]      [C]      []       
[C, S]   [C, S]   [A, C, S][A, C, S][A, S, C][A, C]   [C]      []       []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[C, S]   [C, S]   [A, C]   [A, C]   [A, S, C][A, C]   []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
B[{ B-->SA }, { B-->a }]
S[{ S-->BA }, { S-->a }, { S-->BC }]
C[{ C-->CB }, { C-->BS }]

word='aabbbbbbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[C]      [B, S]   [A]      []       []       []       []       []       []       []       
[C]      [B, S]   []       [A]      []       []       []       []       []       []       
[C]      [B, S]   []       []       [A]      []       []       []       []       []       
[C]      [B, S]   []       []       []       [A]      []       []       []       []       
[C]      [B, S]   []       []       []       []       [A]      []       []       []       
[C]      [B, S]   []       []       []       []       []       [A]      []       []       
[C, S]   [B, S, C][]       []       []       []       []       [A]      [B, S]   []       
[B, C, S][B, S, C][]       []       []       []       []       [A]      [B, S]   [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->a }, { B-->AA }]
S[{ S-->BA }, { S-->SS }, { S-->BS }]

word='aabbbbbbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [B]   [A]   []    []    []    []    []    
[B, S][B, S][B]   [S]   [B]   [A]   []    []    []    []    
[B, S][B, S][S]   [B]   [S]   [B]   [A]   []    []    []    
[B, S][B, S][B, S][S]   [B]   [S]   [B]   [A]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B, S][B]   []    []    []    []    []    []    []    
[B]   [B]   [S]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [S]   [B]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->CB }]
B[{ B-->SA }]
S[{ S-->SB }, { S-->AA }, { S-->SC }, { S-->BC }]
C[{ C-->a }, { C-->CC }]

word='aabbbbbbab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[C, S]   [A, C]   []       []       []       []       []       []       []       []       
[B]      [S]      [A]      []       []       []       []       []       []       []       
[A]      [B]      [S]      [A]      []       []       []       []       []       []       
[A, S]   [A]      [B]      [S]      [A]      []       []       []       []       []       
[B, S]   [S]      []       [B]      [S]      [A]      []       []       []       []       
[A, B]   [B]      [S]      []       [B]      [S]      [A]      []       []       []       
[A, S]   [A]      [B]      [S]      []       [B]      [S]      [A]      []       []       
[B, S]   [S]      [S]      [B, S]   [S]      [S]      [B, S]   [S]      [A, C]   []       
[A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A]   [A]   [B]   []    []    []    []    []    []    []    
[B, S][S]   [S]   [B, S][]    [S]   []    []    []    []    
[A]   [A, B][B]   [B]   [B]   [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
C[{ C-->a }, { C-->BC }]
S[{ S-->SC }, { S-->BB }, { S-->b }]

word='babaabbaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[B]   []    [B, S][]    []    []    []    []    []    []    
[C, S][]    [C, S][C]   []    []    []    []    []    []    
[S]   []    [S]   []    [C]   []    []    []    []    []    
[B]   []    [B]   []    []    [B, S][]    []    []    []    
[B, S][]    [B, S][]    []    [B, S][B, S][]    []    []    
[S, C][]    [S, C][]    []    [C, S][C, S][C]   []    []    
[S]   []    [S]   []    []    [S]   [S]   []    [C]   []    
[S]   []    [S]   []    []    [S]   [S]   []    []    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
S[{ S-->CB }, { S-->CC }, { S-->BB }, { S-->BS }]
C[{ C-->a }]

word='babaabbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [C]   []    []    []    []    []    []    
[S]   [S]   [B, S][S]   [C]   []    []    []    []    []    
[S]   []    [S]   []    [S]   [B]   []    []    []    []    
[S]   []    [S]   []    []    [S]   [B]   []    []    []    
[S]   []    [S]   []    []    [S]   [B]   [C]   []    []    
[S]   []    [S]   []    []    [S]   [B, S][S]   [C]   []    
[S]   []    [S]   []    []    [S]   [B, S][]    [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AC }, { A-->CA }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->b }]
C[{ C-->SS }, { C-->CC }]

word='babaabbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[S, C]   [A]      [C]      [S]      []       []       []       []       []       []       
[A, C]   [C, S]   [A]      [C]      [S]      []       []       []       []       []       
[A, C, S][A, C]   [S, C]   [A]      [C]      [S]      []       []       []       []       
[A, C, S][A, C, S][A, C]   [S, C]   [A]      [C]      [S]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [S, C]   [A]      [C]      [S]      []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [S, C]   [A]      [C]      [S]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [S, C]   [A]      [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[S]   []    [S, C][]    []    []    []    []    []    []    
[]    [S]   []    [S, C][]    []    []    []    []    []    
[]    []    [S]   []    [S, C][]    []    []    []    []    
[]    []    []    [S]   []    [S, C][]    []    []    []    
[]    []    []    []    [S]   []    [S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AC }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->AS }, { C-->a }]

word='babaabbaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S]   [A, S][]    []    []    []    []    []    []    
[S, C][S]   [S, C][S, C][]    []    []    []    []    []    
[S, C][S]   [S, C][S]   [S, C][]    []    []    []    []    
[S, C][S]   [S, C][S]   [S]   [A, S][]    []    []    []    
[S, C][S]   [S, C][S]   [S]   [S, C][A, S][]    []    []    
[S, C][S]   [S, C][S]   [S]   [S, C][S, C][S, C][]    []    
[S, C][S]   [S, C][S]   [S]   [S, C][S, C][S]   [S, C][]    
[S, C][S]   [S, C][S]   [S]   [S, C][S, C][S]   [S]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [C][] [] [] [] 
[C][] [C][] [] [C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }]
B[{ B-->CB }, { B-->a }, { B-->AA }, { B-->SC }]
S[{ S-->BB }]
C[{ C-->b }]

word='babaabbaaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[]       []       [A, C]   []       []       []       []       []       []       []       
[A, S]   [S]      [B]      [B]      []       []       []       []       []       []       
[]       []       [A, S]   [S]      [B]      []       []       []       []       []       
[A, S]   [S]      [B]      [B]      []       [A, C]   []       []       []       []       
[B]      [B]      []       []       [S]      [B]      [A, C]   []       []       []       
[A, S]   [S]      [A, S]   [S]      [S]      [B, S]   [B]      [B]      []       []       
[A, B, S][S]      [B]      []       [S]      [A, B, S][A, S]   [S]      [B]      []       
[S]      []       [S]      []       []       [S]      []       []       [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       [S]      []       []       []       []       []       
[A, B, S][S]      []       []       [S]      [A, B, S][]       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->a }, { C-->b }]

word='bbabaabbaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->a }, { S-->BB }, { S-->b }]

word='bbabaabbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[B, S][B]   [B, S][]    []    []    []    []    []    []    
[B, S][B]   [B]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AA }]
B[{ B-->b }]
S[{ S-->AC }, { S-->a }]
C[{ C-->SS }, { C-->b }]

word='bbabaabbaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[A]      []       [A, S]   []       []       []       []       []       []       []       
[S]      []       [S]      [B, C]   []       []       []       []       []       []       
[C, S]   [A]      [C]      []       [A, S]   []       []       []       []       []       
[A, C]   [A]      [A]      [A]      [A, C]   [A, S]   []       []       []       []       
[A, C, S][A, S]   [A, C, S][A, S]   [A, C, S][S]      [B, C]   []       []       []       
[A, C, S][A, S]   [A, C, S][A, S]   [A, S]   [A]      [A]      [B, C]   []       []       
[A, S, C][A, C]   [A, S, C][A, C]   [A, C]   [A]      [A]      []       [A, S]   []       
[A, C, S][A, S]   [A, C, S][A, S]   [A, S, C][A, C, S][A, S]   [A]      [A, C]   [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[A, C][]    [A]   []    []    []    []    []    []    []    
[C, S][]    [C, S][]    []    []    []    []    []    []    
[S]   []    [S]   [S]   [S]   []    []    []    []    []    
[C]   []    [C]   [C]   [C]   []    []    []    []    []    
[S]   []    [S]   []    [C]   [C, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CC }]
C[{ C-->a }, { C-->SS }, { C-->b }]

word='bbabaabbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[C]   [S]   [S, C][]    []    []    []    []    []    []    
[S, C][]    [S]   [C]   []    []    []    []    []    []    
[S, C][C, S][C]   [S]   [S, C][]    []    []    []    []    
[S, C][C, S][S, C][S, C][S, C][S, C][]    []    []    []    
[S, C][C, S][S, C][S, C][C, S][S]   [C]   []    []    []    
[S, C][C, S][S, C][S, C][S, C][C]   [S]   [C]   []    []    
[S, C][C, S][S, C][S, C][S, C][S, C][C]   [S]   [S, C][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CB }]
B[{ B-->b }, { B-->a }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }, { S-->BA }, { S-->SS }, { S-->BC }]

word='bbabaabbaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, S][B, C][]    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[S]   [C, S][A, S][B, C][]    []    []    []    []    []    
[S]   [A]   [S]   [A]   [B]   []    []    []    []    []    
[S]   [S]   []    [S]   [A]   [B]   []    []    []    []    
[S, C][S]   [C, S][S]   [S, C][A, S][B, C][]    []    []    
[A, S][C, S][A, S][S, C][A, S][S, C][A, S][B, C][]    []    
[S]   [A, S][S]   [A, S][S]   [A]   [S]   [A]   [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   []    [S]   [A]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[A][C][A][C][A][] [] [] [] [] 
[] [A][] [A][S][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }, { S-->SS }]
C[{ C-->b }, { C-->BS }]

word='babbbbabaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   [B]   [B, C][]    []    []    []    []    []    []    
[B, C][S]   [S]   [B, C][]    []    []    []    []    []    
[S]   [B, C][B, C][S]   [B, C][]    []    []    []    []    
[B, C][S]   [S]   [B, C][S]   [B, C][]    []    []    []    
[C]   [S]   [S]   [C]   [S]   [C]   [S]   []    []    []    
[S]   [B, C][B, C][S]   [B, C][S]   [B]   [B, C][]    []    
[S]   [C]   [C]   [S]   [C]   [S]   [C]   [C]   [S]   []    
[S]   [C]   [C]   [S]   [C]   [S]   [C]   [C]   [S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[S]   [C]   [B, C][S]   [B, C][]    []    []    []    []    
[S]   [C]   []    [S]   []    [S]   []    []    []    []    
[S]   [C]   [C]   [S]   [C]   [S]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->AC }]
S[{ S-->AS }, { S-->SA }, { S-->b }]
C[{ C-->a }]

word='babbbbabaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[S]   []    [A, S][]    []    []    []    []    []    []    
[S]   []    [S]   [A, S][]    []    []    []    []    []    
[S]   []    [S]   [S]   [A, S][]    []    []    []    []    
[S]   []    [S]   [S]   [S]   [A, S][]    []    []    []    
[A, S][]    [A, S][A, S][A, S][A]   [C]   []    []    []    
[S]   []    [S]   [S]   [S]   [S]   []    [A, S][]    []    
[A, S][]    [A, S][A, S][A, S][A]   []    [A]   [C]   []    
[A, S][]    [A, S][A, S][A, S][A]   []    [A]   []    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][A][A][] [] [] [] [] 
[] [] [A][A][A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->AS }, { B-->a }, { B-->BB }]
S[{ S-->CB }]
C[{ C-->a }, { C-->b }]

word='babbbbabaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [B, C]   []       []       []       []       []       []       []       []       
[]       [A]      [C]      []       []       []       []       []       []       []       
[]       []       [A]      [C]      []       []       []       []       []       []       
[]       []       []       [A]      [C]      []       []       []       []       []       
[]       []       []       []       [A]      [C]      []       []       []       []       
[B]      []       [S]      [B]      []       [A, S]   [B, C]   []       []       []       
[A]      []       []       [A]      []       []       [A]      [C]      []       []       
[S]      [B, S]   [B]      []       [S]      [B]      []       [A, S]   [B, C]   []       
[B, S]   [A, B, S][A, B, S][B]      [S]      [A, B, S][B]      [S]      [A, B, S][B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, S][A, S][A, S][]    [S]   [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->AS }, { A-->BA }]
B[{ B-->SC }]
C[{ C-->AA }, { C-->CS }, { C-->BC }]
S[{ S-->CC }]

word='babbbbabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[]       [C]      [A]      []       []       []       []       []       []       []       
[S]      []       [C]      [A]      []       []       []       []       []       []       
[A]      [S]      []       [C]      [A]      []       []       []       []       []       
[B, C]   [A]      [S]      []       [C]      [A]      []       []       []       []       
[A]      [B, C]   [A]      [S]      []       [C]      [A]      []       []       []       
[C, S]   [A]      [B, C]   [A]      [S]      []       [C]      [A]      []       []       
[A]      [S, C]   [A]      [B, C]   [A]      [S]      []       [C]      [A]      []       
[B, C, S][A]      [C, S]   [A]      [B, C]   [A]      [S]      []       [C]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[A]   [B]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [B]   [A]   []    []    []    []    []    []    
[A]   [S]   [A]   [B]   [A]   []    []    []    []    []    
[B, S][A]   [S]   [A]   [B]   [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->b }, { B-->BC }, { B-->AS }]
S[{ S-->CB }, { S-->a }, { S-->SS }]
C[{ C-->b }]

word='babbbbabaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[]       [A]      [B, C]   []       []       []       []       []       []       []       
[S]      [A, B, S][B, S]   [B, C]   []       []       []       []       []       []       
[S]      [A, B, S][B, S]   [B, S]   [B, C]   []       []       []       []       []       
[S]      [A, B, S][B, S]   [B, S]   [B, S]   [B, C]   []       []       []       []       
[S]      [B, S]   [S]      [S]      [S]      []       [A, S]   []       []       []       
[S]      [B]      []       []       []       []       [A]      [B, C]   []       []       
[S]      [B, S]   [S]      [S]      []       [S]      [B]      []       [A, S]   []       
[S]      [B, S]   [S]      [S]      [S]      [S]      [B, S]   [S]      [B, S]   [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BA }]
C[{ C-->SA }, { C-->SB }, { C-->CS }]
S[{ S-->a }, { S-->BB }, { S-->SC }, { S-->CC }]

word='abbaabbaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[S]   [C, S][B]   [A, S][]    []    []    []    []    []    
[C, S][S, C][B]   [C]   [A, S][]    []    []    []    []    
[S, C][S, C][S]   [S]   [C]   [B]   []    []    []    []    
[C, S][S, C][C]   [C]   []    [S]   [B]   []    []    []    
[S, C][S, C][C]   [S, C][S]   [S, C][B]   [A, S][]    []    
[S, C][S, C][C, S][S, C][S, C][S, C][B]   [C]   [A, S][]    
[S, C][S, C][C, S][S, C][S, C][S, C][B]   [S, C][C]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[] [C][] [S][] [] [] [] [] [] 
[] [] [] [] [C][S][] [] [] [] 
[] [] [] [] [] [S][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->b }, { S-->AB }]

word='abbaabbaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B]   [B, S][]    []    []    []    []    []    []    
[B, S][B]   [B]   [A, B][]    []    []    []    []    []    
[B, S][B]   [B]   [B, S][A, B][]    []    []    []    []    
[B, S][B]   [B]   [B, S][B, S][B, S][]    []    []    []    
[B, S][B]   [B]   [B, S][B, S][B]   [B, S][]    []    []    
[B, S][B]   [B]   [B, S][B, S][B]   [B]   [A, B][]    []    
[B, S][B]   [B]   [B, S][B, S][B]   [B]   [B, S][A, B][]    
[B, S][B]   [B]   [B, S][B, S][B]   [B]   [B, S][B, S][A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->SB }, { B-->CS }, { B-->SS }]
S[{ S-->CB }, { S-->AA }, { S-->CC }]
C[{ C-->a }]

word='abbaabbaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[B]   [S]   [A]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[S]   [B]   []    [S]   [C]   []    []    []    []    []    
[S]   [B]   []    []    []    [A]   []    []    []    []    
[B, S][B]   []    [B, S][B]   [S]   [A]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[B, S][B]   []    [B]   [S]   [B]   []    [S]   [C]   []    
[B, S][B]   []    [B]   [S]   [B]   []    [B]   [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [B][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
S[{ S-->a }, { S-->AA }, { S-->SS }]

word='abbaabbaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[S][S][A][] [] [] [] [] [] [] 
[S][S][] [S][] [] [] [] [] [] 
[S][S][] [S][S][] [] [] [] [] 
[A][A][S][A][A][A][] [] [] [] 
[S][S][A][S][S][S][A][] [] [] 
[S][S][] [S][S][S][] [S][] [] 
[S][S][] [S][S][S][] [S][S][] 
[S][S][] [S][S][S][] [S][S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[S][] [A][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->b }]

word='abbaabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[B, S][B, S][B]   [S]   []    []    []    []    []    []    
[B, S][B, S][S]   [B]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [B]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CA }]
S[{ S-->AC }]
C[{ C-->a }, { C-->b }]

word='bababbaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, S][A]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [C]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [C]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=56

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=56

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->b }]
C[{ C-->CA }, { C-->SS }]
S[{ S-->BA }, { S-->CB }, { S-->BS }]

word='bababbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[C]   []    [S]   [A]   []    []    []    []    []    []    
[S]   []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[C, S][A]   [C]   []    [S]   [S]   [A]   []    []    []    
[C, S][A]   [C]   []    []    []    []    [A]   []    []    
[C, S][A]   [C]   []    []    []    []    []    [A]   []    
[C, S][A]   [C]   []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
C[{ C-->AS }, { C-->AC }, { C-->CS }]
S[{ S-->SA }, { S-->a }, { S-->b }]

word='bababbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[]       [C]      [S]      []       []       []       []       []       []       []       
[S]      [A, C]   [S]      [A, S]   []       []       []       []       []       []       
[]       [C]      []       [C]      [S]      []       []       []       []       []       
[]       [C]      []       [C]      []       [S]      []       []       []       []       
[S]      [A, C]   [S]      [A, C]   []       [S]      [A, S]   []       []       []       
[S]      [A, C]   [S]      [A, C]   []       [S]      [S, C]   [A, S]   []       []       
[S]      [A, C]   [S]      [A, C]   []       [S]      [A, C, S][S, C]   [A, S]   []       
[S]      [A, C]   [S]      [A, C]   []       [S]      [A, S, C][A, C, S][S, C]   [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->SB }, { B-->a }]
S[{ S-->BA }]

word='bababbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, B][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, B][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->SA }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->CA }, { S-->SS }, { S-->b }]
C[{ C-->BA }, { C-->a }]

word='bababbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [B, C]   []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       [B, C]   []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       [S]      [S]      []       []       []       []       
[]       []       []       []       []       []       [B, C]   []       []       []       
[]       []       [S]      [C, S]   [A]      [A]      [A]      [B, C]   []       []       
[]       []       []       []       [S]      [S]      [C, S]   [A]      [B, C]   []       
[S]      [C, S]   [A, S]   [A, C, S][A, B]   [A, B]   [A, B]   [C, S]   [A]      [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [B]   [B]   [A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->SA }]
S[{ S-->AS }, { S-->a }]

word='bbbaabaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SA }]
C[{ C-->CA }, { C-->a }, { C-->b }]
S[{ S-->AA }, { S-->SC }]

word='bbbaabaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[C]      [A]      [C]      []       []       []       []       []       []       []       
[A, S]   [C]      [A]      [C]      []       []       []       []       []       []       
[C, S]   [A, S]   [C]      [A]      [C]      []       []       []       []       []       
[A, S]   [C, S]   [A, S]   [C]      [A]      [C]      []       []       []       []       
[A, C, S][A, S]   [C, S]   [A, S]   [C]      [A]      [C]      []       []       []       
[A, S, C][A, C, S][A, S]   [C, S]   [A, S]   [C]      [A]      [C]      []       []       
[A, C, S][A, S, C][A, C, S][A, S]   [C, S]   [A, S]   [C]      [A]      [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [C, S]   [A, S]   [C]      [A]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[C][] [C][S][] [] [] [] [] [] 
[] [C][] [C][S][] [] [] [] [] 
[] [] [C][] [C][S][] [] [] [] 
[] [] [] [C][] [C][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }]
B[{ B-->b }, { B-->SA }, { B-->a }, { B-->SS }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->a }]

word='bbbaabaaaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[B]      [S]      [A, B]   []       []       []       []       []       []       []       
[A, B, S][]       [A, S]   [B, C]   []       []       []       []       []       []       
[A, S]   [B]      []       [A, S]   [B, C]   []       []       []       []       []       
[B, S]   [S]      [B, S]   [B]      [S]      [A, B]   []       []       []       []       
[A, B, S][B]      [A, S]   [A, B, S][]       [A, S]   [B, C]   []       []       []       
[A, B, S][A, B, S][B]      [A, S]   [B]      []       [A, S]   [B, C]   []       []       
[A, B, S][A, S]   [A, B, S][B]      [A, S]   [B]      []       [A, S]   [B, C]   []       
[A, B, S][B]      [A, S]   [A, B, S][]       [A, S]   [B]      []       [A, S]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, B][]    [A]   []    []    []    []    []    []    []    
[A]   [A, B][]    [A]   []    []    []    []    []    []    
[A, S][A]   [A, B][]    [A]   []    []    []    []    []    
[A, B][]    [A]   []    []    [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->SA }, { B-->SB }, { B-->a }]
S[{ S-->CA }, { S-->a }, { S-->CC }]
C[{ C-->b }]

word='bbbaabaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       [B]      []       [B, S]   []       []       []       []       []       []       
[S]      [A, B]   [S]      [A, B]   [B, S]   []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       []       [B, S]   []       []       []       
[]       []       []       []       []       [S]      [A, B]   [B, S]   []       []       
[B, S]   [A, B]   [B, S]   [A, B]   [A, B]   [B, S]   [A, B]   [A, B]   [B, S]   []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [A, B, S][A, B]   [A, B]   [A, B]   [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[S]   [B, S][S]   [B]   [B]   [S]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->SB }, { S-->b }, { S-->BS }]

word='bbbaabaaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[S]   [S]   [S]   []    [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SS }, { C-->b }]
S[{ S-->CC }, { S-->CS }]

word='babbabbbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S, C][S]   [S]   [C]   []    []    []    []    []    []    
[C, S][C, S][S]   [S]   [C]   []    []    []    []    []    
[C, S][C, S][S, C][S]   [S]   [C]   []    []    []    []    
[C, S][C, S][S, C][S, C][S]   [S]   [C]   []    []    []    
[C, S][C, S][S, C][S, C][S, C][S]   [S]   [C]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S]   [S]   [C]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S]   [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CB }]
B[{ B-->SA }]
S[{ S-->AC }]
C[{ C-->AS }, { C-->BA }, { C-->b }, { C-->BC }]

word='babbabbbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       []       [A]      [C]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       [S]      [C]      []       [S]      [C]      []       []       []       []       
[]       []       [A]      []       []       [A]      [C]      []       []       []       
[A]      [B, C]   [S]      [A]      [B, C]   [S]      [A]      [C]      []       []       
[A]      [B, C]   [B, S]   [A]      [C]      [B]      []       []       [A]      []       
[A, C, S][A, C, S][A, C]   [C, S]   [A, S]   [A, C]   [C]      []       [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A]   [B, C][S]   [A]   [C]   []    []    []    []    []    
[A]   [S]   [A]   [S]   [S]   [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->CA }, { B-->a }]
S[{ S-->AS }, { S-->SC }, { S-->BB }, { S-->b }]
C[{ C-->SS }]

word='babbabbbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[C]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [C]      [C]      [S]      []       []       []       []       []       []       
[C]      [A, B, S][B]      []       [A, B]   []       []       []       []       []       
[C, S]   [S, C]   [S]      [C]      [S]      [S]      []       []       []       []       
[S, C]   [C, S]   [C]      [S]      [C]      [C]      [S]      []       []       []       
[C, S]   [S, C]   [S]      [C]      [S]      [S]      [C]      [S]      []       []       
[B]      [B]      []       [B]      []       []       [B]      []       [A, B]   []       
[S, C]   [C, S]   [C]      [S]      [C]      [C]      [S]      [C]      [S]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[C, S]   []       [S]      []       []       []       []       []       []       []       
[]       [C]      []       [S]      []       []       []       []       []       []       
[]       [S]      [S]      []       [S]      []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[S, C]   [C, S]   []       [S]      []       []       [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }, { A-->BA }]
B[{ B-->SC }]
C[{ C-->AS }, { C-->AC }, { C-->CB }]
S[{ S-->BB }, { S-->b }]

word='babbabbbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[B, C]   [C]      [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[B, S, C][C]      [B, C]   [B, C]   [C]      [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      []       
[B, S, C][C]      [B, C, S][B, C, S][C]      [B, C]   [B, C]   [B, C]   [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    [B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    [B, S][B, S][]    [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->AS }, { B-->a }]
S[{ S-->SB }, { S-->b }]

word='babbabbbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[B, S]   [B]      [B, S]   []       []       []       []       []       []       []       
[B, S]   [B]      [S]      [B, S]   []       []       []       []       []       []       
[A, B, S][A, B]   [A, S]   [A, S]   [A, B]   []       []       []       []       []       
[B, S]   [B]      [B, S]   [B, S]   [B]      [B, S]   []       []       []       []       
[B, S]   [B]      [B, S]   [B, S]   [B]      [S]      [B, S]   []       []       []       
[B, S]   [B]      [B, S]   [B, S]   [B]      [S]      [S]      [B, S]   []       []       
[A, B, S][A, B]   [A, B, S][A, B, S][A, B]   [A, S]   [A, S]   [A, S]   [A, B]   []       
[B, S]   [B]      [B, S]   [B, S]   [B]      [B, S]   [B, S]   [B, S]   [B]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A, S][]    []    []    []    
[B]   []    []    [B]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AS }, { A-->SB }]
B[{ B-->SC }]
S[{ S-->AA }]
C[{ C-->b }]

word='aaaaaaaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [A]      []       []       []       []       []       []       []       
[S]      [A]      [S]      [A]      []       []       []       []       []       []       
[A]      [S]      [A]      [S]      [A]      []       []       []       []       []       
[S]      [A]      [S]      [A]      [S]      [A]      []       []       []       []       
[A]      [S]      [A]      [S]      [A]      [S]      [A]      []       []       []       
[S]      [A]      [S]      [A]      [S]      [A]      [S]      [A]      []       []       
[A]      [S]      [A]      [S]      [A]      [S]      [A]      [S]      [A]      []       
[A, S]   [A, B, S][A, S]   [A, B, S][A, S]   [A, B, S][A]      [B]      []       [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[A]      []       [A]      []       []       []       []       []       []       []       
[]       [A]      []       [A]      []       []       []       []       []       []       
[A]      []       [A]      []       [A]      []       []       []       []       []       
[]       [A, B, S][]       [A, B, S][]       [A, B, S][]       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
B[{ B-->b }, { B-->AA }]
S[{ S-->AS }, { S-->CC }]
C[{ C-->BB }]

word='aaaaaaaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[]       [B]      [A]      []       []       []       []       []       []       []       
[C]      []       [B]      [A]      []       []       []       []       []       []       
[A]      [C]      []       [B]      [A]      []       []       []       []       []       
[B]      [A]      [C]      []       [B]      [A]      []       []       []       []       
[]       [B]      [A]      [C]      []       [B]      [A]      []       []       []       
[S, C]   []       [B]      [A]      [C]      []       [B]      [A]      []       []       
[A, S]   [C, S]   []       [B]      [A]      [C]      []       [B]      [A]      []       
[B, S]   [A, B, S][A, S, C][C, S]   [B]      [A, B]   [A, C]   [C]      [B]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[A]   []    []    []    [A]   []    []    []    []    []    
[]    [A, B][]    [S]   []    [A, B][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->SA }, { S-->a }]

word='aaaaaaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->BB }]
C[{ C-->BA }]
S[{ S-->BC }, { S-->BS }]

word='aaaaaaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][C]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
S[{ S-->AA }]

word='aaaaaaaaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][S][A][] [] [] [] [] [] 
[A][S][A][S][A][] [] [] [] [] 
[S][A][S][A][S][A][] [] [] [] 
[A][S][A][S][A][S][A][] [] [] 
[S][A][S][A][S][A][S][A][] [] 
[A][S][A][S][A][S][A][S][A][] 
[S][A][S][A][S][A][S][A][S][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[] [A][] [A][] [] [] [] [] [] 
[A][] [A][] [A][] [] [] [] [] 
[] [A][] [A][] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->CB }]
B[{ B-->b }, { B-->BB }]
S[{ S-->CA }, { S-->SA }, { S-->BA }]
C[{ C-->a }, { C-->SC }]

word='bbaabaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, C][]    []    []    []    []    []    []    
[C, S][C, S][S]   [A, C][]    []    []    []    []    []    
[A, S][A, S][S]   [A]   [B]   []    []    []    []    []    
[C, S][C, S][C, S][]    [S]   [A, C][]    []    []    []    
[C, S][C, S][C, S][]    [C, S][S]   [A, C][]    []    []    
[C, S][C, S][C, S][]    [C, S][C, S][S]   [A, C][]    []    
[C, S][C, S][C, S][]    [C, S][C, S][C, S][S]   [A, C][]    
[A, S][A, S][A, S][S]   [A, S][A, S][A, S][S]   [A]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   []    []    [S]   []    []    []    []    []    
[S]   [S]   []    []    [S]   [S]   []    []    []    []    
[A]   [A]   [A, S][]    [A]   [A]   [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->SB }]
S[{ S-->CB }, { S-->a }]
C[{ C-->BB }, { C-->b }, { C-->BS }]

word='bbaabaaaab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, S, C][B, C]   []       []       []       []       []       []       []       []       
[B, C]   [C]      [S]      []       []       []       []       []       []       []       
[C]      []       []       [S]      []       []       []       []       []       []       
[B, S, C][S, C]   [B]      [B]      [B, C]   []       []       []       []       []       
[B, C, S][B]      [C]      [C]      [C]      [S]      []       []       []       []       
[B, C]   [C]      []       []       []       []       [S]      []       []       []       
[C]      []       []       []       []       []       []       [S]      []       []       
[]       []       []       []       []       []       []       []       [S]      []       
[B, C, S][B, S, C][C, S]   [C, S]   [S, C]   [B]      [B]      [B]      [B]      [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[]       [B]      [C]      []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CS }, { C-->b }]
S[{ S-->CC }]

word='bbaabaaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[S][C][S][C][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[S][C][S][C][S][C][] [] [] [] 
[C][S][C][S][C][S][C][] [] [] 
[S][C][S][C][S][C][S][C][] [] 
[C][S][C][S][C][S][C][S][C][] 
[S][C][S][C][S][C][S][C][S][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[C][] [C][] [C][] [] [] [] [] 
[] [C][] [C][] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->a }]
S[{ S-->BA }, { S-->SS }, { S-->b }, { S-->BS }]

word='bbaabaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[]    [A]   []    [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    [B]   []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    [B]   []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->CS }]
S[{ S-->SB }, { S-->SS }, { S-->b }]
C[{ C-->a }, { C-->CC }]

word='bbaabaaaab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, B, S][A, S]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [C]      [C]      []       []       []       []       []       []       
[A, B, S][S]      [B]      [B]      [A, S]   []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       [C]      [C]      []       []       []       
[]       []       []       []       []       [C]      [C]      [C]      []       []       
[]       []       []       []       []       [C]      [C]      [C]      [C]      []       
[A, B, S][A, S]   [A, B]   [A, B]   [S]      [B]      [B]      [B]      [B]      [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AS }]
B[{ B-->SA }, { B-->SC }, { B-->a }]
S[{ S-->CB }, { S-->CC }, { S-->SS }, { S-->CS }]
C[{ C-->a }, { C-->BS }, { C-->b }, { C-->BC }]

word='baaaaaabbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[S]         [B, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [A, C, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][B, S, C]   [A, C, S]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, C, S]   [A, C, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C, S]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C, S]   [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C, S]      [A, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [S]         [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [S]         [A, C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->AC }]
B[{ B-->SB }, { B-->CS }, { B-->a }, { B-->AA }]
S[{ S-->CC }, { S-->BB }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->b }]

word='baaaaaabbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, S]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S]   [A, C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->CA }, { B-->CB }, { B-->CC }]
C[{ C-->AC }, { C-->a }, { C-->b }, { C-->AB }]
S[{ S-->BA }, { S-->SS }, { S-->SC }, { S-->BC }]

word='baaaaaabbb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [C]         []          []          []          []          []          []          []          []          
[B, S]      [B]         [C]         []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [B]         [C]         []          []          []          []          []          []          
[A, B, C, S][B, S]      [B, S]      [B]         [C]         []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S]      [B, S]      [B]         [C]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [B, S]      [B]         [C]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [B]         [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [B, S]      [B, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [B, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [B][B][] [] [] [] [] [] [] 
[] [B][B][B][] [] [] [] [] [] 
[] [] [B][B][B][] [] [] [] [] 
[] [] [] [B][B][B][] [] [] [] 
[] [] [] [] [] [B][B][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->AS }, { S-->b }]

word='baaaaaabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [S][S][S][S][S][S][S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]

word='baaaaaabbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }]
B[{ B-->CA }, { B-->SB }, { B-->SC }]
C[{ C-->AC }, { C-->a }, { C-->AB }]
S[{ S-->CB }]

word='bbbaaabbab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          []          [A]         []          []          []          []          []          []          []          
[C]         [C]         [C]         [A, C]      []          []          []          []          []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [A, C]      []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, C, S]   [B, C, S]   [B, C]      [A, C]      []          []          []          []          
[B, S, C]   [B, S, C]   [B, C, S]   [B, C, S]   [B, C, S]   [B]         [A]         []          []          []          
[B, S, C]   [B, S, C]   [B, C, S]   [B, C, S]   [B]         []          []          [A]         []          []          
[B, S, C]   [B, S, C]   [B, C, S]   [B, C, S]   [B, C]      [C]         [C]         [C]         [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C]      [B, C]      [B]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][B, C][]    []    []    []    []    []    []    []    
[B, C][B, C][B, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [B, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [B, C][B, C][B, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=34

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AS }]
B[{ B-->SA }, { B-->a }]
C[{ C-->a }, { C-->SC }, { C-->CC }, { C-->AA }]
S[{ S-->b }]

word='bbbaaabbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [B, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [B, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B, C][]    []    []    []    
[]    []    []    []    []    [A]   [S]   []    []    []    
[]    []    []    []    []    [A]   []    [S]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   []    [B]   [A]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SC }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->BB }, { C-->BS }]

word='bbbaaabbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S, C]   [B, S]   []       []       []       []       []       []       []       []       
[B, S, C][S, C]   [B, S]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][S, C]   [S]      []       []       []       []       []       []       
[B, S, C][B, S, C][S, C]   [S]      [S]      []       []       []       []       []       
[B, S, C][B, S, C][S, C]   [S]      [S]      [S]      []       []       []       []       
[B, C, S][B, S, C][S, C]   [S]      [S]      [S]      [B, S]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S]   [B, S]   [B, S]   [S, C]   [B, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [S]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [S]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [B, C][B]   [B]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->CA }]
C[{ C-->SB }, { C-->AA }, { C-->BC }]
S[{ S-->BB }, { S-->CC }]

word='bbbaaabbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[C]         [S]         [B]         []          []          []          []          []          []          []          
[B]         []          []          [A]         []          []          []          []          []          []          
[S, C]      [C]         [C]         [C]         [A]         []          []          []          []          []          
[B, C, S]   [B, C, S]   [B, S]      [B]         [C]         [A]         []          []          []          []          
[B, C, S]   [B, C, S]   [B, S, C]   [B, S]      [C]         [A]         [B]         []          []          []          
[B, S, C]   [B, C, S]   [B, C, S]   [B, C, S]   [C]         [A]         [S]         [B]         []          []          
[B, S, C]   [B, C, S]   [B, S]      [A, B, S]   [B]         [C]         []          []          [A]         []          
[B, S, C]   [B, C, S]   [B, C, S]   [A, B, S, C][B, S]      [C]         []          []          [A]         [B]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[B]      [B, C, S][B, S]   []       []       []       []       []       []       []       
[B]      [B]      [B]      [B, S]   []       []       []       []       []       []       
[B]      [B]      [B]      [B, S]   [C]      []       []       []       []       []       
[B]      [B]      []       [A, B]   [B]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B, S]   []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=29

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }]
C[{ C-->CS }, { C-->b }]

word='bbbaaabbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][S][] [] [] [] [] [] 
[] [] [C][] [S][] [] [] [] [] 
[] [] [C][] [] [S][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [C][S][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

word='aabaabbbbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BC }, { A-->AC }, { A-->SA }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->CA }, { S-->a }, { S-->AA }]
C[{ C-->CB }, { C-->a }, { C-->b }]

word='aabaabbbbb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B]         [S, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [A, S]      [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, S]      [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][B]         [S, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      [A, C]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      [A, C]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S]   [A, S]      [A, S]      [A, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, S]      [A, S]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, S]      [A, S]      [A, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->SB }]
B[{ B-->AB }, { B-->CS }, { B-->SC }, { B-->CC }]
S[{ S-->AC }, { S-->BA }, { S-->b }]
C[{ C-->AS }, { C-->CA }, { C-->a }]

word='aabaabbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[A, C]   [A]      [B]      [C]      []       []       []       []       []       []       
[B, S, C][A, S, C][A]      [B]      [C]      []       []       []       []       []       
[A, B, S][B, C]   [A, C]   []       [B]      [S]      []       []       []       []       
[A, C]   [B]      [B, C]   []       []       []       [S]      []       []       []       
[A, B, C][]       [B]      []       []       []       []       [S]      []       []       
[B, C]   []       []       []       []       []       []       []       [S]      []       
[B]      []       []       []       []       []       []       []       []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, S, C][]       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->b }, { B-->AB }, { B-->BA }, { B-->AA }]
S[{ S-->b }]

word='aabaabbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   [B]   [B, S][]    []    []    []    []    []    []    
[B]   [B]   [B]   [A]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A]   []    []    []    []    []    
[]    []    []    [B]   [B]   [B, S][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A]   [B, S][]    []    []    
[]    []    []    [B]   [B]   [B]   [A]   [B, S][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A]   [B, S][]    
[]    []    []    [B]   [B]   [B]   [B]   [B]   [A]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][B][] [] [] [] [] 
[] [] [] [B][B][B][] [] [] [] 
[] [] [] [B][B][B][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
C[{ C-->AS }]
S[{ S-->AA }, { S-->b }]

word='aabaabbbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[S][A][] [S][A][] [] [] [] [] 
[] [C][] [] [C][S][] [] [] [] 
[S][A][] [S][A][] [S][] [] [] 
[] [C][] [] [C][] [] [S][] [] 
[S][A][] [S][A][] [] [] [S][] 
[] [C][] [] [C][] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->AS }, { C-->a }]
S[{ S-->SA }, { S-->a }, { S-->b }]

word='abaaabbabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    [C]   [S, C][]    []    []    []    []    []    []    
[]    []    []    [S, C][]    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    [S]   [A, S][]    []    []    []    
[]    []    []    []    [S]   [S, C][A, S][]    []    []    
[]    []    []    []    []    []    [C]   [S, C][]    []    
[]    []    []    []    []    []    [C]   [S]   [A, S][]    
[]    []    []    []    []    []    [C]   [S]   [S, C][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AC }]
B[{ B-->CS }, { B-->SC }, { B-->a }]
S[{ S-->AS }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->SA }, { C-->SB }, { C-->a }]

word='abaaabbabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [B, C]      []          []          []          []          []          []          []          
[A, S, C]   [A, C]      [A]         [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, S]      [A]         [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [S]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [S]         [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, C]      [B, C]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [B, C, S]   [B, S]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S]      [S]         [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    [A]   [A, B][]    []    []    []    []    []    []    
[]    []    [B]   [B]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CC }]
B[{ B-->AC }]
C[{ C-->SB }, { C-->a }, { C-->CS }]
S[{ S-->a }, { S-->AA }, { S-->b }]

word='abaaabbabb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[A, C]      [A]         [S, C]      []          []          []          []          []          []          []          
[A, B, C]   [A, B]      [A, C]      [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [S, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [C]         [S]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [C]         []          [S]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, C]      []          [A]         [S, C]      []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, C]      []          [A]         [C]         [S]         []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, C]      []          [A]         [C]         []          [S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [C]      [C]      []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [C]      []       []       [A]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->a }, { B-->AA }]
C[{ C-->AS }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }]
S[{ S-->a }, { S-->CS }]

word='abaaabbabb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[C]      [S, C]   [B, S]   []       []       []       []       []       []       []       
[S, C]   [A, S, C][C]      [B, S]   []       []       []       []       []       []       
[C, S]   [C, S]   [S]      [C]      [B, S]   []       []       []       []       []       
[C]      [C]      []       [C]      []       [A, C]   []       []       []       []       
[C]      [A, C]   [C]      [C]      [C]      [A, B, C][A, C]   []       []       []       
[S, C]   [A, C, S][C, S]   [C, S]   [C, S]   [A, S, C][S, C]   [B, S]   []       []       
[C]      [A, B, C][C]      [C]      [C]      [A, B, C][C]      []       [A, C]   []       
[C]      [A, B, C][C]      [C]      [C]      [A, B, C][A, C]   [C]      [A, B, C][A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [B][] [] [] [] 
[] [B][] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->AS }, { B-->SB }, { B-->SC }]
S[{ S-->AC }, { S-->CA }, { S-->BS }]
C[{ C-->AA }, { C-->SS }, { C-->BC }]

word='abaaabbabb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[S]         [C]         [A]         []          []          []          []          []          []          []          
[A, B]      [S]         [C]         [A]         []          []          []          []          []          []          
[A, B, C]   [A, B]      [S]         [C]         [A]         []          []          []          []          []          
[A, C, S]   [A, B, C]   [A, B]      [S]         [C]         [A]         []          []          []          []          
[A, B, C, S][A, S, C]   [A, B, C]   [A, B]      [S]         [C]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [A, B]      [S]         [C]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [A, B]      [S]         [C]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [A, B]      [S]         [C]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[]    [B]   [A, B][]    []    []    []    []    []    []    
[]    []    [B]   [A, B][]    []    []    []    []    []    
[]    []    []    [B]   [A, B][]    []    []    []    []    
[]    []    []    []    [B]   [A, B][]    []    []    []    
[]    []    []    []    []    [B]   [A, B][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->a }]
C[{ C-->AA }, { C-->b }]

word='bbabaaabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    [A, C][A, B][]    []    []    []    
[]    []    []    []    [A, C][A, C][A, B][]    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    [A, C][A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->CA }]
C[{ C-->AA }]

word='bbabaaabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[A][C][A][] [] [] [] [] [] [] 
[C][A][C][A][] [] [] [] [] [] 
[A][C][A][C][A][] [] [] [] [] 
[C][A][C][A][C][A][] [] [] [] 
[A][C][A][C][A][C][A][] [] [] 
[C][A][C][A][C][A][C][A][] [] 
[A][C][A][C][A][C][A][C][A][] 
[C][A][C][A][C][A][C][A][C][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[] [A][] [A][] [] [] [] [] [] 
[A][] [A][] [A][] [] [] [] [] 
[] [A][] [A][] [A][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SB }, { B-->CS }, { B-->SC }, { B-->a }, { B-->AA }]
S[{ S-->AS }, { S-->CB }, { S-->a }]
C[{ C-->SS }, { C-->b }, { C-->AB }]

word='bbabaaabaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B]      [A, C]   []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][B]      [A, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, C]   [B, S, C][B, S]   []       []       []       []       []       
[B, S, C][B, S, C][B, C, S][B, S, C][B, C]   [B, S]   []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S]   [B, C]   [B, S]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S]   [B]      [B]      [A, C]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [B, C]   [B, S, C][B, S]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C]   [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [S]   [B, S][]    []    []    []    
[]    []    []    []    []    [S]   [C]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CB }]
B[{ B-->a }]
S[{ S-->CA }, { S-->CS }]
C[{ C-->SB }, { C-->a }, { C-->CC }]

word='bbabaaabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[]       []       [B, C]   []       []       []       []       []       []       []       
[A]      [A]      [S]      [A]      []       []       []       []       []       []       
[]       []       [C]      []       [B, C]   []       []       []       []       []       
[A]      [A]      [A, S, C][A]      [A, C]   [B, C]   []       []       []       []       
[A]      [A]      [A, S, C][A]      [A, C, S][A, C]   [B, C]   []       []       []       
[A]      [A]      [A, S]   [A]      [A, S]   [A, S]   [S]      [A]      []       []       
[]       []       [C]      []       [C]      [C]      [C]      []       [B, C]   []       
[A]      [A]      [A, S, C][A]      [A, C, S][A, C, S][A, S, C][A]      [A, C]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   [C]   []    []    []    []    
[]    []    [A, C][]    [A]   [A]   [A, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->BS }]
B[{ B-->b }, { B-->SA }]
S[{ S-->AS }, { S-->BA }, { S-->a }, { S-->BB }, { S-->b }, { S-->AB }]

word='bbabaaabaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [B, S]   []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [B, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }]
C[{ C-->CS }, { C-->b }]

word='baabbbbbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][] [S][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [C][S][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }]
S[{ S-->SA }, { S-->a }, { S-->CC }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->b }]

word='baabbbbbab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[A, C]   [A, S]   [S, C]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, C]   []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [A, C]   []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [A, C]   []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][S, C]   [A, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][S, C]   [A, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, S]   [S]      [S, C]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->a }]
S[{ S-->CB }, { S-->BB }, { S-->CS }]
C[{ C-->a }, { C-->CC }]

word='baabbbbbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[A, B, S][B, C, S][B, C]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [S]      [B]      []       []       []       []       []       []       
[A]      [A, S]   [A, S]   [S]      [B]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [S]      [B]      []       []       []       []       
[A]      [A]      []       []       [A]      [S]      [B]      []       []       []       
[A]      [A]      [A]      []       []       [A]      [S]      [B]      []       []       
[A]      [A]      [A]      [A]      []       [A]      [A, S]   [B, S]   [B, C]   []       
[A]      [A]      [A]      [A]      [A]      []       [A]      [A, S]   [S]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->SA }, { C-->SS }]
S[{ S-->CB }, { S-->a }, { S-->b }]

word='baabbbbbab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[C]         [B, S]      []          []          []          []          []          []          []          []          
[A, S]      [C]         [B, S]      []          []          []          []          []          []          []          
[B, C]      [A, S]      [C]         [B, S]      []          []          []          []          []          []          
[A, C, S]   [B, C]      [A, S]      [C]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, C, S]   [B, C]      [A, S]      [C]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, C, S]   [B, C]      [A, S]      [C]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A, S]      [C]         [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A, S]      [C]         [B, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A, S]      [C]         [B, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[A, S][C]   [B]   []    []    []    []    []    []    []    
[]    [A, S][C]   [B]   []    []    []    []    []    []    
[]    []    [A, S][C]   [B]   []    []    []    []    []    
[]    []    []    [A, S][C]   [B]   []    []    []    []    
[]    []    []    []    [A, S][C]   [B]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->a }]
S[{ S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->a }, { C-->BB }]

word='baabbbbbab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [C]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S]   [C]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S]   [C]         [B, S]      []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, C]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->SB }]
B[{ B-->SA }, { B-->BA }, { B-->CC }]
C[{ C-->AC }, { C-->CA }, { C-->CB }, { C-->b }]
S[{ S-->AA }, { S-->BB }]

word='baaaabbaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[A, C]      [S]         [A]         []          []          []          []          []          []          []          
[A, C, S]   [B]         [S]         [A]         []          []          []          []          []          []          
[A, B, C, S][B]         [B]         [S]         [A]         []          []          []          []          []          
[B, C]      [C]         [C]         [C]         [C]         [C]         []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, S]   [A, B]      [B]         [B]         [C]         []          []          []          
[A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [B]         [B]         [C]         [A]         []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][B, C]      [B, C]      [A, C]      [S]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C]   [B, C]      [B, C]      [B, C]      [C]         [C]         [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[]       [C]      [C]      []       []       []       []       []       []       []       
[]       [B, S]   [A, B, S][A, B]   []       []       []       []       []       []       
[]       []       []       [A, B]   [B]      []       []       []       []       []       
[]       []       []       [B]      [B, C]   [C]      []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AS }]
C[{ C-->CB }, { C-->a }, { C-->AA }, { C-->b }, { C-->BC }]
S[{ S-->SB }, { S-->a }, { S-->CS }]

word='baaaabbaab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [S, C]      []          []          []          []          []          []          []          []          
[B, S, C]   [S]         [S, C]      []          []          []          []          []          []          []          
[B, S, C]   [S]         [S]         [S, C]      []          []          []          []          []          []          
[B, S, C]   [S]         [S]         [S]         [S, C]      []          []          []          []          []          
[C]         []          []          []          []          [A, C]      []          []          []          []          
[C]         []          []          []          []          [C]         [A, C]      []          []          []          
[B, S, C]   [S]         [S]         [S]         [S, C]      [A, B, S, C][B, S]      [S, C]      []          []          
[B, S, C]   [S]         [S]         [S]         [S, C]      [A, B, S, C][B, S, C]   [S]         [S, C]      []          
[C]         []          []          []          []          [C]         [C]         []          []          [A, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B, C][S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->CB }, { B-->CC }]
C[{ C-->b }]

word='baaaabbaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->AC }, { A-->SB }]
B[{ B-->BC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->CC }, { S-->SS }, { S-->SC }]
C[{ C-->AA }]

word='baaaabbaab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A, B]      []          []          []          []          []          []          []          []          
[A, B]      [B, C]      [A, B]      []          []          []          []          []          []          []          
[B, C, S]   [A, B]      [B, C]      [A, B]      []          []          []          []          []          []          
[A, B]      [B, S, C]   [A, B]      [B, C]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B]      [B, C, S]   [A, B]      [C]         [A]         []          []          []          []          
[A, B, C]   [A, B, S, C][A, B]      [B, C, S]   [A, B]      [C]         [A]         []          []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, B]      [B, C, S]   [A, B]      [C]         [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][A, B]      [B, C, S]   [A, B]      [B, C]      [A, B]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][A, B]      [C, S]      [A, B]      [C]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[A, S][]    [S]   []    []    []    []    []    []    []    
[]    [A, S][]    [S]   []    []    []    []    []    []    
[]    []    [A, S][]    [S]   []    []    []    []    []    
[]    []    []    [A, S][]    [S]   []    []    []    []    
[]    []    []    []    [A, S][]    [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->BS }, { B-->CA }]
C[{ C-->a }, { C-->SS }, { C-->b }]
S[{ S-->BB }, { S-->SC }]

word='baaaabbaab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[B]         [A]         [C]         []          []          []          []          []          []          []          
[S]         [B]         [A]         [C]         []          []          []          []          []          []          
[S]         []          [B]         [A]         [C]         []          []          []          []          []          
[S]         []          [S]         [B]         [A]         [B, C]      []          []          []          []          
[B, C, S]   [S]         [B, S]      [S]         [B]         [A, S]      [B, C]      []          []          []          
[A, B, C, S][S]         [B, S]      [S]         []          [B, S]      [A]         [C]         []          []          
[A, B, C, S][S]         [B, S]      [S]         []          [S]         [B]         [A]         [C]         []          
[A, B, S, C][A, B, S]   [B, S, C]   [B, S]      [S]         [B, S]      [S]         [B]         [A]         [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    [B, S][]    []    []    []    []    []    []    
[A, S][S]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [S]   []    []    []    []    []    []    []    
[A]   [A, B][]    [B, S][]    [B, S][]    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->BS }, { A-->BA }]
B[{ B-->b }]
S[{ S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->CB }, { C-->a }, { C-->AA }, { C-->CC }]

word='babbabaaab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, C]   []       []       []       []       []       []       []       []       
[A, S]   [A, C]   [B, S]   []       []       []       []       []       []       []       
[A, S, C][A, C]   [A]      [B, S]   []       []       []       []       []       []       
[A, C, S][A, C]   [A, C]   [A, S]   [A, C]   []       []       []       []       []       
[A, C, S][A, C]   [A, C]   [A, S]   [A, C]   [B, S]   []       []       []       []       
[A, C, S][A, C]   [A, S, C][A, S, C][A, C]   [A, S]   [A, C]   []       []       []       
[A, C, S][A, C]   [A, S, C][A, S, C][A, C]   [S, C]   [C]      [A, C]   []       []       
[A, C, S][A, C]   [A, S, C][A, S, C][A, C]   [S, C]   [C]      [C]      [A, C]   []       
[A, C, S][A, C]   [A, S, C][A, S, C][A, C]   [A, S, C][A, C]   [A, C]   [A, C]   [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][] [S][A][] [] [] [] [] [] 
[A][] [] [A][] [] [] [] [] [] 
[A][] [] [A][] [] [] [] [] [] 
[A][] [] [A][] [A][A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->a }]

word='babbabaaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SB }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->a }]
S[{ S-->BB }]

word='babbabaaab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A, B, S][B, S]   [A, B]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [A, B]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [S]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A]      [S]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }]
S[{ S-->AS }, { S-->AA }]
C[{ C-->a }, { C-->SC }]

word='babbabaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[]    []    []    []    []    []    [S]   [A, C][]    []    
[]    []    []    []    []    []    [S, C][S]   [A, C][]    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->CC }]
C[{ C-->SB }, { C-->b }]
S[{ S-->CB }, { S-->a }]

word='babbabaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[B][C][B][C][] [] [] [] [] [] 
[B][C][B][] [S][] [] [] [] [] 
[S][B][] [] [] [C][] [] [] [] 
[S][B][] [] [] [] [S][] [] [] 
[S][B][] [] [] [] [] [S][] [] 
[S][B][] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->a }]

word='bbbbabbbba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]

word='bbbbabbbba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->SC }, { A-->b }]
B[{ B-->a }, { B-->CC }]
S[{ S-->SA }, { S-->CB }, { S-->BA }, { S-->BB }]
C[{ C-->CA }, { C-->a }, { C-->b }, { C-->AB }, { C-->BC }]

word='bbbbabbbba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->AS }]
S[{ S-->SB }, { S-->a }]

word='bbbbabbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[B]   [B]   [B]   [B]   [B, S][B]   [B]   [B]   [B]   [A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->BC }]
B[{ B-->b }]
C[{ C-->SA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BS }]
S[{ S-->AC }, { S-->SC }, { S-->b }]

word='bbbbabbbba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[A, S]   [C]      [B, S]   []       []       []       []       []       []       []       
[C]      [A, S]   [C]      [B, S]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C]   [A]      [B, S]   []       []       []       []       
[A, C, S][A, S, C][A, C, S][A, C, S][S]      [C]      [B, S]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [C]      [B, S]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][C]      [A, S]   [C]      [B, S]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    []    []    [C, S][A]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->AB }]
B[{ B-->b }, { B-->SA }, { B-->CC }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->b }]
C[{ C-->SS }]

word='aaaabbbbbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[A]         [C]         [S]         []          []          []          []          []          []          []          
[B, S]      [A]         [C]         [S]         []          []          []          []          []          []          
[A, B, C]   [A, B, S, C][A, S]      [C]         [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, S]      [C]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, S]      [C]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         [B, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [A, B, C][]       []       []       []       []       []       []       []       
[C]      []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->a }]
S[{ S-->BA }, { S-->a }, { S-->b }, { S-->AB }]

word='aaaabbbbbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[S]   [A]   [B, S][]    []    []    []    []    []    []    
[]    [S]   [A]   [B, S][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->CB }]
B[{ B-->b }]
S[{ S-->SB }, { S-->b }]
C[{ C-->a }, { C-->AA }, { C-->AB }]

word='aaaabbbbbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[]    [C]   [A, C][]    []    []    []    []    []    []    
[]    []    [C]   [A, C][]    []    []    []    []    []    
[]    [C]   [A, C][A, C][B, S][]    []    []    []    []    
[C]   [A, C][A, C][A, C][S]   [B, S][]    []    []    []    
[A, C][A, C][A, C][A, C][S]   [S]   [B, S][]    []    []    
[A, C][A, C][A, C][A, C][S]   [S]   [S]   [B, S][]    []    
[A, C][A, C][A, C][A, C][S]   [S]   [S]   [S]   [B, S][]    
[A, C][A, C][A, C][A, C][S]   [S]   [S]   [S]   [S]   [B, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, C][A]   []    []    []    []    []    []    []    
[A, C][A]   [A]   [C]   []    []    []    []    []    []    
[A]   [A]   [A]   [C]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [C]   [S]   [S]   []    []    []    []    
[A]   [A]   [A]   [C]   [S]   [S]   [S]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AC }, { A-->CB }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->CA }]
S[{ S-->a }, { S-->CS }]
C[{ C-->a }, { C-->BB }]

word='aaaabbbbbb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [S, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, S]   [S, C]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [S, C]   []       []       []       []       []       []       
[A, B, C][A, C]   [B]      [A]      [B]      []       []       []       []       []       
[A, B, C][A, B]   [A, B, C][A]      [C]      [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [A]      [C]      [B]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      [A]      [C]      [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      [A]      [C]      [B]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      [A]      [C]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, C][A]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    [B]   []    [A, B][]    []    []    []    []    []    
[]    []    []    [B, C][A]   []    []    []    []    []    
[]    []    []    []    [A, B][A]   []    []    []    []    
[]    []    []    []    [B]   [A, B][A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->b }]

word='aaaabbbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [A, C][]    
[]    []    []    []    []    []    []    []    []    [A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->BB }]
C[{ C-->b }, { C-->BS }]

word='aaaabbbaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][B, S][]    []    []    []    []    []    []    []    
[C]   [S, C][B, S][]    []    []    []    []    []    []    
[]    [C]   [S, C][B, S][]    []    []    []    []    []    
[]    []    [C]   [S]   [B, C][]    []    []    []    []    
[]    []    []    [C]   [S]   [B, C][]    []    []    []    
[]    []    []    []    [C]   [S]   [B, C][]    []    []    
[]    []    []    []    []    [C]   [S, C][B, S][]    []    
[]    []    []    []    []    []    [C]   [S]   [B, C][]    
[]    []    []    []    []    []    []    [C]   [S, C][B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->BC }]
B[{ B-->BS }, { B-->AC }]
S[{ S-->AS }, { S-->a }, { S-->SC }]
C[{ C-->BA }, { C-->SS }, { C-->b }]

word='aaaabbbaba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [B]         [A]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, C]      [A, S]      []          [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, S]      []          [B, S]      [C]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A]         [B, C]      []          [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [B, C, S][]       []       []       []       []       []       
[]       []       []       [B, C]   []       []       []       []       []       []       
[]       []       []       [A, B, S][A]      []       []       []       []       []       
[]       []       []       []       [S, C]   [B]      []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->CC }]
C[{ C-->b }]

word='aaaabbbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, C][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A, B][A, C][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][A, C][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }]
B[{ B-->b }, { B-->AS }]
C[{ C-->SA }]
S[{ S-->BB }]

word='aaaabbbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    [B]   [S]   [A, B][]    []    []    []    
[]    []    [B]   [S]   [B, C][S]   [A, B][]    []    []    
[]    []    []    [C]   [A]   [C]   []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->AC }, { B-->CS }]
S[{ S-->SA }, { S-->CB }]
C[{ C-->BA }, { C-->a }, { C-->CC }, { C-->AA }, { C-->BS }, { C-->b }, { C-->AB }, { C-->BC }]

word='aaaabbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C]         [C]         []          []          []          []          []          []          []          []          
[C]         [C]         [C]         []          []          []          []          []          []          []          
[C]         [C]         [C]         [C]         []          []          []          []          []          []          
[C]         [C]         [C]         [C]         [A, C]      []          []          []          []          []          
[B, C, S]   [B, C, S]   [B, C, S]   [C, S]      [B, C]      [A, C]      []          []          []          []          
[B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [B, C]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [B, C]      [C]         [A, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [B, C]      [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }]
B[{ B-->b }, { B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->AB }, { S-->BC }]
C[{ C-->CA }, { C-->CS }, { C-->AA }, { C-->CC }]

word='aabbbbabbb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[C, S]      [A, B]      []          []          []          []          []          []          []          []          
[B]         [S]         [B]         []          []          []          []          []          []          []          
[A, S, C]   [B]         [S]         [B]         []          []          []          []          []          []          
[B, S, C]   [A, S]      [B]         [S]         [B]         []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, S]      [B]         [S]         [B]         []          []          []          []          
[A, B, S, C][A, B, S, C][B, C, S]   [A, S]      [B]         [S]         [A, B]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A, S]      [B]         [S]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A, S]      [B]         [S]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [A, S]      [B]         [S]         [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[]    [B, S][A]   []    []    []    []    []    []    []    
[]    []    [B, S][A]   []    []    []    []    []    []    
[]    []    []    [B, S][A]   []    []    []    []    []    
[]    []    []    []    [B, S][A]   []    []    []    []    
[]    []    []    []    []    [B, S][A]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }]
S[{ S-->b }]

word='aabbbbabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->SB }, { B-->a }]
S[{ S-->a }, { S-->SS }, { S-->b }]

word='aabbbbabbb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, S]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->SB }, { A-->BA }]
B[{ B-->AS }, { B-->CB }, { B-->SC }, { B-->CS }]
S[{ S-->a }, { S-->BB }, { S-->b }]
C[{ C-->a }]

word='aabbbbabbb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[A, B]   [B]      [S]      []       []       []       []       []       []       []       
[B]      []       []       [S]      []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [B]      [S, C]   []       []       []       
[A, B, S][A, B, S][A, B]   [A, B]   [A, B]   [A]      [B]      [S]      []       []       
[A, B, S][A, B, S][A, B]   [A, B]   [A, B]   [B]      []       []       [S]      []       
[A, B, S][A, B, S][A, B]   [A, B]   [B]      []       []       []       []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S]   [A, B, S][A, B]   [A, B]   [A, B]   []       []       []       []       []       
[]       [B]      [B]      [B]      [A, B]   []       []       []       []       []       
[]       [B]      [B]      [A, B]   []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }, { B-->AA }]
C[{ C-->AC }, { C-->AS }, { C-->SC }, { C-->a }, { C-->CC }, { C-->b }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

word='aabbbbabbb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, C]   []       []       []       []       []       []       []       []       
[B, C, S][C]      [C, S]   []       []       []       []       []       []       []       
[B, C, S][C]      [C, S]   [C, S]   []       []       []       []       []       []       
[B, C, S][C]      [C, S]   [C, S]   [C, S]   []       []       []       []       []       
[B, C, S][C]      [C, S]   [C, S]   [C, S]   [C, S]   []       []       []       []       
[B, C]   [C]      [C]      [C]      [C]      [C]      [A, C]   []       []       []       
[B, C, S][C]      [C]      [C]      [C]      [C]      [C]      [C, S]   []       []       
[B, C, S][C]      [C]      [C]      [C]      [C]      [C]      [C, S]   [C, S]   []       
[B, C, S][C]      [C]      [C]      [C]      [C]      [C]      [C, S]   [C, S]   [C, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }]
S[{ S-->AC }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->b }]

word='bbbbbaabab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [S, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, S]   [S, C]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [S, C]   []       []       []       []       []       []       
[A, S, C][A, C, S][A, S, C][A, S]   [S, C]   []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [C]      [A]      []       []       []       []       
[A, S, C][A, S, C][S, C]   [C]      []       []       [A]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][C, S]   [A]      [A, S]   [S, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S]   [S, C]   [C]      [A]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, S, C][A, S]   [A, S, C][A, S, C][A, S]   [S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->a }]
C[{ C-->SA }, { C-->CA }, { C-->CB }, { C-->SC }, { C-->BB }]
S[{ S-->SB }, { S-->BC }]

word='bbbbbaabab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->b }, { B-->SB }]
S[{ S-->AS }, { S-->BA }, { S-->AB }]

word='bbbbbaabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    [S]   [A]   []    []    []    []    
[]    []    []    []    [S]   [A]   [A]   []    []    []    
[]    []    []    []    [B]   [S]   [S]   [B]   []    []    
[]    []    []    []    [S]   [S]   [S]   [S]   [A]   []    
[]    []    []    []    [B]   [B, S][B, S][B]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 
[] [] [] [] [] [S][S][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->CA }]
C[{ C-->a }, { C-->b }, { C-->BC }, { C-->AB }]

word='bbbbbaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [B]   [A, C][]    []    []    []    
[]    []    []    []    [B, C][A, B][A, C][]    []    []    
[]    []    []    []    [C]   [C]   []    [C]   []    []    
[]    []    []    []    [B, C][B, C][C]   [B]   [A, C][]    
[]    []    []    []    [C]   [C]   []    [C]   []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [B, C][B, C][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AB }, { A-->AC }]
B[{ B-->b }, { B-->AA }]
S[{ S-->CB }, { S-->a }]
C[{ C-->AS }, { C-->SC }, { C-->a }, { C-->CC }, { C-->b }]

word='bbbbbaabab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [B, C]      []          []          []          []          []          []          []          []          
[A, C, S]   [A, S, C]   [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, S, C]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, C]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, C]      [C]         [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [C, S]      [S, C]      [B, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [C]         [C]         [A, C]      [S, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C, S]      [A, C, S]   [S, C]      [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   [S]   [S]   []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    [B, S][S]   [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->a }, { B-->CS }]
C[{ C-->CB }, { C-->b }]
S[{ S-->AA }]

word='bbbbbaabaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, C]      []          []          []          []          []          []          []          []          
[B, C]      [A, C]      [B, C]      []          []          []          []          []          []          []          
[A, C, S]   [B, C]      [A, C]      [B, C]      []          []          []          []          []          []          
[B, C]      [A, S, C]   [B, C]      [A, C]      [B, C]      []          []          []          []          []          
[A, B, C, S][B, C]      [A, C, S]   [B, C]      [A, C]      [B]         []          []          []          []          
[A, B, C]   [A, B, S, C][B, C]      [A, C, S]   [B, C]      [A]         [B]         []          []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][B, C]      [A, C, S]   [B]         [A]         [B, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][B, C]      [A, S]      [B]         [A, C]      [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][B]         [A, S]      [B, C]      [A]         [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[B, S][C]   [S]   []    []    []    []    []    []    []    
[]    [B, S][C]   [S]   []    []    []    []    []    []    
[]    []    [B, S][C]   [S]   []    []    []    []    []    
[]    []    []    [B, S][C]   [S]   []    []    []    []    
[]    []    []    []    [B, S][]    [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->AC }]
B[{ B-->b }, { B-->CA }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->b }]
C[{ C-->CS }, { C-->CC }, { C-->AB }]

word='bbbbbaabaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [B, S]      []          []          []          []          []          []          []          []          
[S, C]      [A]         [B, S]      []          []          []          []          []          []          []          
[A, S, C]   [C, S]      [A]         [B, S]      []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S, C]      [A]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, S]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, S]      [S]         [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A]         [C]         [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [B, S, C]   [A, S]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      [S]         [A, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [C]   [A, C][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->BB }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->b }, { S-->BS }]

word='bbbbbaabaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->a }]
C[{ C-->CB }, { C-->a }, { C-->BB }]
S[{ S-->CC }, { S-->SC }]

word='bbbbbaabaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[C, S]   [C]      [C]      [B]      []       []       []       []       []       []       
[B, S, C][S, C]   [C]      [C]      [B]      []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][C, S]   [C]      [B, C]   []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, C]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [C]      [B]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [C]      [B, C]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[]    [B]   [B, C][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->BS }, { B-->SA }, { B-->BA }]
S[{ S-->AS }, { S-->AA }, { S-->CS }]
C[{ C-->CB }, { C-->BB }, { C-->b }]

word='bbbbbaabaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[S]         [A, C]      []          []          []          []          []          []          []          []          
[B, S]      [S]         [A, C]      []          []          []          []          []          []          []          
[B, C, S]   [B, S]      [S]         [A, C]      []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, S]      [S]         [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [S]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [S]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [S]         [A, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [B, S]      [S]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, S]      [B, S]      [S]         [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [S][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->SB }, { C-->CB }, { C-->CC }]
S[{ S-->a }, { S-->CS }]

word='bbaaaaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    [C]   [B, S][]    []    []    []    []    []    
[]    []    [S, C][C]   [B, S][]    []    []    []    []    
[]    []    [C, S][S, C][C]   [B, S][]    []    []    []    
[]    []    [S, C][C, S][S, C][C]   [B, S][]    []    []    
[]    []    [S, C][S, C][C, S][S, C][C]   [B, S][]    []    
[]    []    [S, C][S, C][S, C][C, S][S, C][C]   [B, S][]    
[]    []    [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]
C[{ C-->CS }, { C-->b }]

word='bbaaaaaaab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S]   []    []    []    []    []    []    []    
[C]   [C]   []    [S]   []    []    []    []    []    []    
[C]   [C]   []    []    [S]   []    []    []    []    []    
[C]   [C]   []    []    []    [S]   []    []    []    []    
[C]   [C]   []    []    []    []    [S]   []    []    []    
[C]   [C]   []    []    []    []    []    [S]   []    []    
[C]   [C]   []    []    []    []    []    []    [S]   []    
[C]   [C]   []    []    []    []    []    []    []    [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }]
S[{ S-->BA }]

word='bbaaaaaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->CA }]
C[{ C-->a }, { C-->SC }]
S[{ S-->AA }, { S-->b }]

word='bbaaaaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A, S][A, S][A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->a }, { B-->AA }]
S[{ S-->a }]

word='bbaaaaaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][A, B][]    []    []    []    []    []    []    []    
[A, B][A]   [B, S][]    []    []    []    []    []    []    
[A, B][A, B][A]   [B, S][]    []    []    []    []    []    
[A, B][A, B][A]   [A]   [B, S][]    []    []    []    []    
[A, B][A, B][A, B][A]   [A]   [B, S][]    []    []    []    
[A, B][A, B][A, B][A, B][A]   [A]   [B, S][]    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   [A]   [B, S][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   [A]   [B, S][]    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]

word='aaababaaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->CB }, { B-->a }]
C[{ C-->BA }, { C-->AA }, { C-->b }]

word='aaababaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[B]   [C]   [A, B][]    []    []    []    []    []    []    
[]    [B]   []    [B, C][]    []    []    []    []    []    
[]    [B, C][]    [B, C][A, B][]    []    []    []    []    
[]    [B]   []    [B]   []    [B, C][]    []    []    []    
[]    [B, C][]    [B, C][]    [B, C][A, B][]    []    []    
[]    [B, C][]    [B, C][]    [B, C][C]   [A, B][]    []    
[]    [B, C][]    [B, C][]    [B, C][B]   [C]   [A, B][]    
[]    [B, C][]    [B, C][]    [B, C][C]   [B]   [C]   [A, B]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    [B, C][C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AS }]
B[{ B-->b }, { B-->CS }, { B-->a }]
S[{ S-->AC }, { S-->SA }, { S-->CB }, { S-->BA }, { S-->SB }, { S-->BC }]
C[{ C-->a }]

word='aaababaaaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [B, C]   []       []       []       []       []       []       []       []       
[B, S]   [A, S]   [B, C]   []       []       []       []       []       []       []       
[A, B, S][B, S]   [A, S]   [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [A, S]   [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [A, S]   [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, S]   [B, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, B, S][S]      [A, S]   [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [B, S]   [A, S]   [B, C]   []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, B, S][B, S]   [A, S]   [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B]      [B]      [A, B, S][]       []       []       []       []       []       []       
[B]      [B]      [B]      [A]      []       []       []       []       []       []       
[B]      [B]      [B]      []       [A, B, S][]       []       []       []       []       
[B]      [B]      [B]      []       [B]      [A]      []       []       []       []       
[B]      [B]      [B]      []       [B]      []       [B]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]

word='aaababaaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AS }]
B[{ B-->b }, { B-->a }, { B-->SS }]
C[{ C-->SA }, { C-->BS }, { C-->BC }]
S[{ S-->CA }, { S-->a }, { S-->b }]

word='aaababaaaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, C]      [B, C]      [B, S]      []          []          []          []          []          []          []          
[A, C]      [A, C]      [B, C]      [B, S]      []          []          []          []          []          []          
[A, C, S]   [A, C]      [A, C]      [B, C]      [B, S]      []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, C]      [A, C]      [B, C]      [B, S]      []          []          []          []          
[A, B, S, C][A, B, S, C][A, C, S]   [A, C]      [A, C]      [B, C]      [B, S]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [A, C]      [A, C]      [B, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      [A, C]      [B, C]      [B, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      [A, C]      [B, C]      [B, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[]    [A, C][A, C][]    []    []    []    []    []    []    
[]    []    [A, C][A, C][]    []    []    []    []    []    
[]    []    []    [A, C][A, C][]    []    []    []    []    
[]    []    []    []    [A, C][A, C][]    []    []    []    
[]    []    []    []    []    [A, C][A, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }, { B-->CA }, { B-->SC }, { B-->AA }]
S[{ S-->AC }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->BC }, { S-->AB }]
C[{ C-->a }]

word='baaaabbaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B, S][A, C][]    []    []    []    []    []    []    []    
[B, S][B, S][A, C][]    []    []    []    []    []    []    
[B, S][B, S][B, S][A, C][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][A, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][A, B][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][A, B][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->AB }, { B-->CA }, { B-->SB }, { B-->CB }, { B-->a }, { B-->SS }]
S[{ S-->AC }, { S-->CC }, { S-->b }]
C[{ C-->a }, { C-->AA }]

word='baaaabbaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [B, C]      []          []          []          []          []          []          []          []          
[B]         [B, S]      [B, C]      []          []          []          []          []          []          []          
[A, B]      [A, B]      [B, S]      [B, C]      []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B]      [B, S]      [B, C]      []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B]      [A, B]      [A]         [S]         []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [B]         [B]         [S]         []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [B, S]      [B]         [B]         [B]         [B, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B]      [A, B]      [B]         [B, S]      [B, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [A, B]      [B, S]      [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[]    []    [A, S][A]   [A, B][A, B][]    []    []    []    
[]    []    []    []    [S]   [A, S][A, B][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=29

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->CB }]
B[{ B-->a }]
C[{ C-->AC }, { C-->CA }, { C-->AA }, { C-->CC }, { C-->b }]

word='baaaabbaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][A, B][]    []    []    []    []    []    []    []    
[A, C][C]   [A, B][]    []    []    []    []    []    []    
[A, C][A, C][C]   [A, B][]    []    []    []    []    []    
[A, C][A, C][A, C][C]   [A, B][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, B][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [A, B][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }]
B[{ B-->CB }, { B-->AA }]
C[{ C-->b }]

word='baaaabbaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[A]   []    [B]   [A]   []    []    []    []    []    []    
[A, B][A]   []    [B]   [A]   []    []    []    []    []    
[B]   [B]   [A]   []    [B]   [A, C][]    []    []    []    
[A]   []    [B]   [A]   []    [B]   [A, C][]    []    []    
[A, B][A]   [B]   [A, B][A]   [B]   [B]   [A]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   [B]   [A]   []    
[A, B][A, B][A, B][A, B][B]   [A, B][A]   []    [B]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [B][A][] [] [] [] [] [] 
[] [A][B][] [A][B][] [] [] [] 
[] [] [] [B][] [A][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->AC }, { S-->CS }]
C[{ C-->SA }, { C-->a }, { C-->SC }, { C-->SS }, { C-->b }]

word='baaaabbaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S, C][S]   [A, C][]    []    []    []    []    []    []    
[C, S][C, S][S]   [A, C][]    []    []    []    []    []    
[C, S][C, S][S, C][S]   [A, C][]    []    []    []    []    
[C, S][C, S][S, C][S, C][S]   [A, C][]    []    []    []    
[C, S][C, S][S, C][S, C][S, C][S]   [A, C][]    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S]   [A, C][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S]   [A, C][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   [A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }, { B-->CS }]
S[{ S-->CB }, { S-->a }, { S-->b }]
C[{ C-->BS }]

word='baababbbaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, C]   [S]      []       []       []       []       []       []       []       []       
[B, C]   [B]      [S]      []       []       []       []       []       []       []       
[B, S, C][C]      [B]      [B, S]   []       []       []       []       []       []       
[B, S, C][B]      [C]      [B, C]   [S]      []       []       []       []       []       
[B, S, C][B, C, S][B, S]   [B, S, C][B]      [B, S]   []       []       []       []       
[B, S, C][B, C, S][B, S, C][B, S, C][C]      [B, C]   [B, S]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [B, S, C][B, C]   [B, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C]   [B, C]   [S]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C]   [B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[B, C]   [B]      []       []       []       []       []       []       []       []       
[]       [B, S]   []       []       []       []       []       []       []       []       
[]       []       [S]      [B, S, C][]       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       [S]      [B, C]   []       []       []       []       
[]       []       []       []       []       []       [B, C]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }]
B[{ B-->b }, { B-->SB }, { B-->CB }, { B-->SS }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->SC }, { C-->BB }, { C-->CC }]
S[{ S-->a }, { S-->AA }]

word='baababbbaa'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, S, C]   [A, S]      []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [B, S]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S]      [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [S, C]      [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][B, S, C]   [A, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   [S]   []    []    []    []    []    []    
[]    []    []    [S]   [A, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BC }]
B[{ B-->b }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->CC }]

word='baababbbaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A]   [C]   [C]   []    []    []    []    []    []    []    
[A]   [C]   [C]   [A, B][]    []    []    []    []    []    
[A]   [C]   [C]   [A]   [C]   []    []    []    []    []    
[A]   [C]   [C]   [A]   [C]   [A, B][]    []    []    []    
[A]   [C]   [C]   [A]   [C]   [A, C][A, B][]    []    []    
[A]   [C]   [C]   [A]   [C]   [A, C][A, C][A, B][]    []    
[A]   [C]   [C]   [A]   [C]   [A, C][A, C][A]   [C]   []    
[A]   [C]   [C]   [A]   [C]   [A, C][A, C][A]   [C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [A][] [] [] [] [] [] 
[A][] [] [A][] [] [] [] [] [] 
[A][] [] [A][] [] [] [] [] [] 
[A][] [] [A][] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->a }]

word='baababbbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }]
B[{ B-->b }, { B-->SC }]
C[{ C-->CA }, { C-->a }, { C-->SS }, { C-->b }, { C-->AB }]
S[{ S-->SA }, { S-->CC }]

word='baababbbaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][C, S]      [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][B, S]      [C, S]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][C, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, S]      [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][C, S]      [A, C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->a }]
S[{ S-->SA }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->SC }, { C-->AA }]

word='bbbaababab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [B, S]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [B, S]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [A, B]   []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [A, B]   []       []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, C, S][A, S]   [B, S]   []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, C, S][A, S]   [A, B]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, S]   [B, S]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C, S][A, S]   [A, B]   []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C, S][A, S]   [A, S]   [B, S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }]
S[{ S-->b }]

word='bbbaababab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->AA }]
C[{ C-->CB }, { C-->b }]

word='bbbaababab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[B]   [A, C][]    []    []    []    []    []    []    []    
[C]   [B]   [A, C][]    []    []    []    []    []    []    
[C]   []    [C]   [B]   []    []    []    []    []    []    
[C]   []    [C]   []    [B]   []    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    []    [C]   [B]   []    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    [C]   [B]   []    
[]    []    []    []    []    []    []    []    []    [A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SS }]
S[{ S-->CC }, { S-->b }]

word='bbbaababab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[C][S][] [C][] [] [] [] [] [] 
[S][] [C][S][C][] [] [] [] [] 
[C][S][] [C][] [S][] [] [] [] 
[S][] [C][S][] [] [C][] [] [] 
[C][S][] [C][] [] [] [S][] [] 
[S][] [C][S][] [] [] [] [C][] 
[C][S][] [C][] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AS }, { A-->CB }]
B[{ B-->a }]
C[{ C-->CA }, { C-->SA }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->BB }]

word='bbbaababab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[A, C][A, C][A, C][]    []    []    []    []    []    []    
[A, C][A, C][A, C][B]   []    []    []    []    []    []    
[A, C][A, C][A, C][S]   [B]   []    []    []    []    []    
[A, C][A, C][A, C][C]   []    [A, C][]    []    []    []    
[A, C][A, C][A, C][A, C][]    [A, C][B]   []    []    []    
[A, C][A, C][A, C][A, C][]    [A, C][]    [A, C][]    []    
[A, C][A, C][A, C][A, C][]    [A, C][]    [A, C][B]   []    
[A, C][A, C][A, C][A, C][]    [A, C][]    [A, C][]    [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AB }]
B[{ B-->a }, { B-->AA }]
C[{ C-->AS }, { C-->SA }, { C-->b }, { C-->BC }]
S[{ S-->CB }, { S-->BA }, { S-->BB }, { S-->b }]

word='abbbbaabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C]         [S, C]      []          []          []          []          []          []          []          []          
[S]         [A]         [S, C]      []          []          []          []          []          []          []          
[A, C]      [C]         [A]         [S, C]      []          []          []          []          []          []          
[C, S]      [A, B]      [C]         [A]         [S, C]      []          []          []          []          []          
[C, S]      [A, B, S]   [C, S]      [A]         [S]         [B]         []          []          []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, C]      []          [S]         [B]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [A, C]      [C]         [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [A, S]      [S]         [S]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [A, C]      []          []          [S]         [B]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[C]      [A, B]   []       []       []       []       []       []       []       []       
[]       [A, B, S][C, S]   []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       [A, C]   []       []       []       []       []       []       
[]       []       []       [A]      [A, S]   [A, S]   []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->AB }, { B-->a }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->SC }]
S[{ S-->SB }, { S-->b }]

word='abbbbaabaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, S]      [B, S]      []          []          []          []          []          []          []          
[A, B, C]   [A, B, C, S][A, S]      [B, S]      []          []          []          []          []          []          
[A, B, C]   [A, B, C, S][A, B, C, S][A, S]      [B, S]      []          []          []          []          []          
[A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          
[A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [B, C]      []          []          []          
[A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A, C]      [B, S]      []          []          
[A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, B, C]   [A, C, S]   [B, C]      []          
[A, B, C]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C, S]   [A, C]      [B, C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [B, S]   []       []       []       []       []       []       
[]       []       []       []       [A, B, S][]       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BC }, { B-->CA }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }]

word='abbbbaabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[B, C][B, C][C]   [A]   []    []    []    []    []    []    
[B, C][B, C][B, C][C]   [A]   []    []    []    []    []    
[B, C][B, C][B, C][C]   [C]   [C]   []    []    []    []    
[B, C][B]   [B]   []    []    []    [C]   []    []    []    
[B, C][B, C][B, C][C]   [C]   [C]   [B]   [A]   []    []    
[B, C][B, C][B, C][C]   [C]   [C]   [B]   [C]   [C]   []    
[B, C][B, C][B, C][C]   [C]   [C]   [B]   []    []    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][C][C][] [] [] [] [] 
[] [] [C][C][C][] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CS }, { S-->BC }]
C[{ C-->SA }, { C-->SC }]

word='abbbbaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[C]   []    []    [A]   []    []    []    []    []    []    
[S]   []    []    []    [A]   []    []    []    []    []    
[S]   []    []    []    [B]   [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[S, C][]    []    [B]   [S]   [C]   [C]   [A]   []    []    
[S]   []    []    []    [B]   [S]   [S]   [B]   [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }]
C[{ C-->a }]

word='abbbbaabaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][B][] [] [] [] [] [] [] 
[] [B][B][B][] [] [] [] [] [] 
[] [B][B][B][B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->CB }, { B-->BB }]
S[{ S-->a }]
C[{ C-->a }, { C-->b }]

word='aaaabbbaab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    [S, C][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [S, C][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    [S, C][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->CB }]
C[{ C-->AS }, { C-->SB }]
S[{ S-->a }, { S-->BS }]

word='aaaabbbaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [C]   [B]   []    []    []    []    []    
[]    []    [C]   [B]   []    [B]   []    []    []    []    
[]    [C]   [B]   []    []    []    [B]   []    []    []    
[]    [A]   [A, S][A, S][S]   [S]   [S]   [S]   []    []    
[]    [C]   [C]   [C]   []    []    []    []    [S]   []    
[C]   [B, C][B, C][B]   []    []    []    []    [C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
C[{ C-->b }]

word='aaaabbbaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [A]   [A, C][]    []    []    []    []    
[]    []    []    [A]   [A]   [A, C][]    []    []    []    
[]    []    []    [A]   [A]   [A]   [A, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    [A]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BS }, { B-->AA }]
S[{ S-->a }, { S-->SS }, { S-->AB }]

word='aaaabbbaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [B][A][] [] [] [] 
[S][S][S][S][S][B][A][] [] [] 
[S][S][S][S][S][B][] [S][] [] 
[S][S][S][S][S][B][] [S][S][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->AS }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->AA }]
C[{ C-->CS }, { C-->b }, { C-->AB }]

word='aaaabbbaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[B]         [A]         [S]         []          []          []          []          []          []          []          
[S]         [B]         [A]         [S]         []          []          []          []          []          []          
[A, B, C]   [S]         [B, C]      []          [B, C]      []          []          []          []          []          
[A, B, S, C][A, S]      [A, B, S]   [A]         [A, S]      [B, C]      []          []          []          []          
[A, B, S, C][A, B, S, C][B, C, S]   [A, B, C]   [B, S, C]   [A, S]      [B, C]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][A, B]      [C]         [S]         []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][B, C, S]   [S, C]      [A]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      [B, C]      []          [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[A]   [S]   [A, B][]    []    []    []    []    []    []    
[]    [S]   []    [A]   []    []    []    []    []    []    
[]    []    [B, C][]    [B, C][]    []    []    []    []    
[]    []    []    []    []    [C, S][]    []    []    []    
[]    []    []    []    []    [B]   [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SA }]
B[{ B-->b }, { B-->a }]
C[{ C-->CB }, { C-->AA }, { C-->AB }]
S[{ S-->a }, { S-->SC }, { S-->CS }, { S-->BS }]

word='aaabbbbbba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [B, S]   []       []       []       []       []       []       []       []       
[A, S, C][A, S]   [B, S]   []       []       []       []       []       []       []       
[C, S]   [C]      []       [B]      []       []       []       []       []       []       
[C, S]   [C]      []       []       [B]      []       []       []       []       []       
[C, S]   [C]      []       []       []       [B]      []       []       []       []       
[C, S]   [C]      []       []       []       []       [B]      []       []       []       
[C, S]   [C]      []       []       []       []       []       [B]      []       []       
[C, S]   [C]      []       []       []       []       []       []       [B]      []       
[A, C, S][A, S, C][A, S]   [S]      [S]      [S]      [S]      [S]      [S]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->SB }, { S-->a }, { S-->BS }]
C[{ C-->BB }]

word='aaabbbbbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][B][] [] [] [] [] [] 
[] [] [S][C][B][] [] [] [] [] 
[] [] [S][] [C][B][] [] [] [] 
[] [] [S][] [] [C][B][] [] [] 
[] [] [S][] [] [] [C][B][] [] 
[] [] [S][] [] [] [] [C][B][] 
[] [] [] [S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }]
C[{ C-->AC }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->b }]

word='aaabbbbbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C]   [C]   [A, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [C, S][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C, S][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C, S][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C, S][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C, S][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C, S][]    
[]    []    []    []    []    []    []    []    [B]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->a }, { B-->AA }]
S[{ S-->SB }, { S-->SS }, { S-->b }]

word='aaabbbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       [A]      [A, S]   []       []       []       []       []       []       
[]       []       [A, B]   [B, S]   [A, S]   []       []       []       []       []       
[]       []       [A, B]   [A, S]   [B, S]   [A, S]   []       []       []       []       
[]       []       [A, B]   [A, B, S][A, S]   [B, S]   [A, S]   []       []       []       
[]       []       [A, B]   [A, B, S][A, B, S][A, S]   [B, S]   [A, S]   []       []       
[]       []       [A, B]   [A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, S]   []       
[]       []       [A, B]   [A, B, S][A, B, S][A, B, S][A, S]   [S]      [S]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->a }, { C-->b }]

word='aaabbbbbba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [B, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->CA }]
S[{ S-->SA }, { S-->a }, { S-->SC }]
C[{ C-->b }]

word='babababbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][S][C][] [] [] [] [] [] [] 
[A][S][A][S][] [] [] [] [] [] 
[A][S][A][S][C][] [] [] [] [] 
[A][S][A][S][A][S][] [] [] [] 
[A][S][A][S][A][S][C][] [] [] 
[A][S][A][S][A][S][] [C][] [] 
[A][S][A][S][A][S][] [] [C][] 
[A][S][A][S][A][S][A][A][A][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[A][] [A][] [A][] [] [] [] [] 
[A][] [A][] [A][] [] [] [] [] 
[A][] [A][] [A][] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AA }, { A-->b }, { A-->SA }]
C[{ C-->CA }, { C-->a }, { C-->b }]
S[{ S-->a }]

word='babababbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[A, C][A, C][A, C][]    []    []    []    []    []    []    
[A, C][A, C][A]   [S, C][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   [S, C][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   [S, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SA }]
B[{ B-->a }, { B-->AA }]
S[{ S-->SB }, { S-->BA }, { S-->a }, { S-->b }, { S-->AB }]

word='babababbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S]   [B, S]   []       []       []       []       []       []       []       []       
[A]      [A]      [S]      []       []       []       []       []       []       []       
[A, B, S][A, S]   [A, S]   [B, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A]      [A]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [B, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      [A]      [S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [A]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      [A]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [A]   [S]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AC }, { B-->CA }, { B-->CS }, { B-->a }, { B-->BB }]
S[{ S-->SA }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->AA }, { C-->AB }]

word='babababbba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [B, C]      []          []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [A, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [B, C]      [B, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C, S]   [B, C, S]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [B, C, S]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][C, S]      [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [C, S]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->CA }]
B[{ B-->CS }, { B-->a }]
S[{ S-->AC }, { S-->a }, { S-->SS }]
C[{ C-->BS }, { C-->AB }, { C-->BC }]

word='babababbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [B, S]      []          []          []          []          []          []          []          []          
[A]         []          [A]         []          []          []          []          []          []          []          
[A, C, S]   [A, C]      [C]         [B, S]      []          []          []          []          []          []          
[A]         [A]         [A]         []          [A]         []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [A, C]      [C]         [B, S]      []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          [A]         []          []          []          
[]          []          []          []          []          []          []          [A]         []          []          
[]          []          []          []          []          []          []          []          [A]         []          
[]          []          []          []          []          []          []          [S]         [C]         [B, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C]   []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][A, C]   [A, C]   []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BC }, { A-->SB }]
B[{ B-->CB }, { B-->CC }]
C[{ C-->AS }, { C-->AB }]
S[{ S-->a }, { S-->SS }, { S-->CS }]

word='bbaaabbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[C]      [C]      [S]      []       []       []       []       []       []       []       
[S, C]   [S, C]   [S]      [S]      []       []       []       []       []       []       
[S, C]   [S, C]   [S]      [S]      [S]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       [A]      [A]      []       []       []       
[B, C]   [B]      []       []       []       [C]      [C]      [S]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[A, B, C][A, B]   [A]      [A]      [A]      [B, C]   [B]      []       [C]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AB }]
S[{ S-->AC }, { S-->AA }, { S-->BS }]
C[{ C-->CC }, { C-->b }]

word='bbaaabbaba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [B, C][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[]    []    [B]   [B]   [B, S][B, C][]    []    []    []    
[]    []    []    []    [S]   [C]   [B, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][B, C][]    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->b }, { C-->BC }]

word='bbaaabbaba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B, C][B, C][]    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CB }]
B[{ B-->BC }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }]
S[{ S-->AC }, { S-->BS }]
C[{ C-->a }, { C-->b }]

word='bbaaabbaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[B]      [A]      [B, C]   []       []       []       []       []       []       []       
[A, B]   [A, B, S][A, B]   [B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      [C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      []       [C]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B]      [A]      [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [A, S]   [B]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B, S][B]      [A]      [B, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A, S]   []       []       []       []       []       []       
[]       []       []       [S]      [A, B]   []       []       []       []       []       
[]       []       []       []       [A, B, S][]       []       []       []       []       
[]       []       []       []       [S]      [A]      [A, S]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
C[{ C-->a }]

word='bbaaabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [A]   [A, C][]    []    []    []    []    []    
[]    []    []    [A]   [A, C][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->CA }]
C[{ C-->a }, { C-->b }]

word='aaabbabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A, C][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, C][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [C]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }]
B[{ B-->b }, { B-->AB }, { B-->a }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->b }]
C[{ C-->AS }, { C-->BB }, { C-->BC }]

word='aaabbabbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C]         [B]         []          []          []          []          []          []          []          []          
[C]         [C]         [B]         []          []          []          []          []          []          []          
[A, C]      [C]         [C]         [B, S]      []          []          []          []          []          []          
[A, B, C]   [A, C]      [C]         [S, C]      [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      [A, C, S]   [S, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, C, S]   [C]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][C]         [S, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C, S]   [S, C]      [B, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S, C]      [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[]    [B, C][C]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    [B]   [C]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }]
C[{ C-->AC }, { C-->SA }, { C-->BC }]
S[{ S-->CA }, { S-->BA }, { S-->AA }]

word='aaabbabbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [S]   [A]   []    []    []    []    []    []    
[C]   [C]   [C]   [S]   [A]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    [S]   [A]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [S]   [A]   []    []    
[S, C][S, C][C, S][C, S][C, S][C, S][C]   [S]   [A]   []    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][S, C][C, S][C, S][C, S][C, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->b }, { C-->BC }]

word='aaabbabbba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [C][C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->b }]

word='aaabbabbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[A][B][S][] [] [] [] [] [] [] 
[] [A][B][S][] [] [] [] [] [] 
[] [] [A][B][S][] [] [] [] [] 
[] [] [] [A][B][S][] [] [] [] 
[] [] [] [] [A][B][S][] [] [] 
[] [] [] [] [] [A][B][S][] [] 
[] [] [] [] [] [] [A][B][S][] 
[] [] [] [] [] [] [] [A][B][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
C[{ C-->b }]

word='ababbbaaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BA }]
B[{ B-->b }]
C[{ C-->a }, { C-->AA }]

word='ababbbaaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [A]   [A, C][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[A]   [C]   [C]   [A]   [A]   [A]   [A, C][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][C][C][A][A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]

word='ababbbaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->SB }, { B-->BA }]
C[{ C-->AS }, { C-->CA }, { C-->a }]
S[{ S-->BC }]

word='ababbbaaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          [S]         [C]         []          []          []          []          []          []          []          
[]          [B]         []          [B]         []          []          []          []          []          []          
[C]         [A, B, S]   [C]         [A]         [B]         []          []          []          []          []          
[C]         [A, B]      []          [B]         [A]         [B]         []          []          []          []          
[C]         [A, B, C, S][C]         [A, C, S]   [B]         [S]         [C]         []          []          []          
[]          [B, S]      []          [B]         [S]         []          []          [C]         []          []          
[]          [S]         []          [S]         []          []          []          []          [C]         []          
[]          []          []          []          []          []          []          []          []          [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, C][]    [C, S][]    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }]
S[{ S-->a }, { S-->CS }]
C[{ C-->AS }, { C-->AA }, { C-->AB }]

word='ababbbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [A, B]   []       []       []       []       []       []       []       []       
[C]      [C]      [S]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A]      [A, B]   []       []       []       []       []       []       
[A, C]   [A, C]   [C]      [C]      [A, B]   []       []       []       []       []       
[A, C]   [A, C]   [A]      [A]      [C]      [A, B]   []       []       []       []       
[A, S, C][A, S, C][A, C]   [A, C]   [S]      [C]      [S]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [C, S]   [A]      [S]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A]      [S]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   [A]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [C]   []    []    []    []    []    
[]    []    []    []    []    [C, S][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }]
B[{ B-->b }]

word='aabaabaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [A, B][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [A]   [A, B][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    [A]   [A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CA }]
B[{ B-->b }, { B-->BA }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->SB }, { C-->b }]
S[{ S-->SA }, { S-->a }, { S-->SS }, { S-->BS }]

word='aabaabaaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[B, C]      [B, C]      [B, C]      []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S]      [S]         []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S]      [S]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B, C]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [B, S]      [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [B, S]      [S]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, S, C]   [B, S]      [S]         [S]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B, C]      [B, C]      [B, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }]
B[{ B-->AB }, { B-->BC }, { B-->CS }]
C[{ C-->AS }, { C-->CA }, { C-->SB }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->b }]

word='aabaabaaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[C]         [A]         [S]         []          []          []          []          []          []          []          
[B, S]      [C]         [A]         [S]         []          []          []          []          []          []          
[A, C]      [B, S]      [C]         [A]         [S]         []          []          []          []          []          
[A, B, S, C][A, C]      [B, S]      [C]         [A]         [S]         []          []          []          []          
[A, B, S, C][A, B, C, S][A, C]      [B, S]      [C]         [A]         [S]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, C]      [B, S]      [C]         [A]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B, S]      [C]         [A]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B, S]      [C]         [A]         [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[B]   []    [B, S][]    []    []    []    []    []    []    
[]    [B]   []    [B, S][]    []    []    []    []    []    
[]    []    [B]   []    [B, S][]    []    []    []    []    
[]    []    []    [B]   []    [B, S][]    []    []    []    
[]    []    []    []    [B]   []    [B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->a }, { C-->BB }, { C-->b }, { C-->BS }]

word='aabaabaaab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [S, C]   []       []       []       []       []       []       []       []       
[B, S, C][B, S]   [S, C]   []       []       []       []       []       []       []       
[B, S, C][B, C, S][B, S]   [S, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S]   [S, C]   []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->AS }]
B[{ B-->AC }, { B-->SB }, { B-->BA }]
C[{ C-->a }]
S[{ S-->b }]

word='aabaabaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][A][S][] [] [] [] [] [] [] 
[B][B][] [C][] [] [] [] [] [] 
[] [] [] [A][C][] [] [] [] [] 
[B][B][] [A][A][S][] [] [] [] 
[] [] [B][B][B][] [C][] [] [] 
[B][B][] [] [] [] [A][C][] [] 
[] [] [B][B][B][B][B][A][C][] 
[B][B][B][B][B][] [] [A][A][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][B][] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AB }, { A-->CB }]
B[{ B-->SA }, { B-->SB }]
C[{ C-->a }, { C-->BB }]
S[{ S-->b }]

word='babbaabaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[B]   [A]   [B]   [B]   [A]   [C]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[B, C][A]   [B, C][B, C][A]   [A]   [B]   [A]   [C]   []    
[]    []    []    []    []    []    []    []    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->AS }, { B-->CA }, { B-->a }, { B-->SS }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->CS }]
C[{ C-->AA }]

word='babbaabaab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [B, S]      []          []          []          []          []          []          []          []          
[B, S]      [S]         [A]         []          []          []          []          []          []          []          
[S]         []          [C]         [A]         []          []          []          []          []          []          
[A, B, S]   [B, S]      [S]         [B]         [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S, C]   [A, B, C]   [A, B, S]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][B, S]      [B, S, C]   [B, S, C]   [S]         [A]         []          []          []          
[A, B, C, S][A, B, S]   [A, B, S, C][A, B, C, S][A, B, S]   [A, B, S]   [B]         [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, C]   [A, B, S]   [B, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [S]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    [C]   []    [C]   []    []    []    []    []    []    
[]    []    [C]   [C]   []    []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    [C]   [C]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BC }, { A-->AC }, { A-->CA }]
B[{ B-->b }]
S[{ S-->AS }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->AA }]
C[{ C-->a }, { C-->BS }]

word='babbaabaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[C]      [S]      [B]      []       []       []       []       []       []       []       
[S, C]   [S]      [S]      [B]      []       []       []       []       []       []       
[A]      []       []       [A]      [C]      []       []       []       []       []       
[A]      []       []       [A]      []       [C]      []       []       []       []       
[A, S]   [A]      [C]      [S]      []       [S]      [B]      []       []       []       
[A, S]   [A]      [C]      [S]      [A]      [A]      [A]      [C]      []       []       
[A, S]   [A]      [C]      [S]      [A]      [A]      [A]      []       [C]      []       
[A, S, C][A, S]   [A, C, S][A, C, S][S]      [S]      [S]      []       [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    [C]   [S]   []    []    []    []    []    []    
[A]   []    [C]   [S]   [A]   [A]   []    []    []    []    
[C]   []    [C, S][C, S][]    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->SA }]
S[{ S-->a }]

word='babbaabaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    [C]   [A, S][]    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[]    []    []    []    []    []    []    [A, S][]    []    
[]    []    []    []    []    []    []    [C]   [A, S][]    
[]    []    []    []    []    []    []    []    [C]   [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->CB }]
S[{ S-->a }, { S-->CS }, { S-->CC }]
C[{ C-->SS }, { C-->b }, { C-->AB }]

word='babbaabaab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [A, S]      []          []          []          []          []          []          []          []          
[S, C]      [C]         [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B, S]      [B, C]      []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S]      [A, S]      []          []          []          []          []          
[A, S, C]   [S, C]      [A, S, C]   [S, C]      [C]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [C]         [B, C]      []          []          []          
[A, C, S]   [A, S, C]   [A, S, C]   [A, S, C]   [A, C, S]   [C, S]      [A, S]      [A, S]      []          []          
[A, C, S]   [A, S, C]   [A, S, C]   [A, S, C]   [C, S]      [C, S]      [S, C]      [C]         [A, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, S]   [B, S]      [C]         [B, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [S][S][] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=19

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->AB }, { B-->SB }, { B-->a }]
S[{ S-->b }]

word='bbaabbaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [S]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->BB }, { B-->SS }]
S[{ S-->AC }, { S-->BA }, { S-->SB }]
C[{ C-->a }, { C-->CS }]

word='bbaabbaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B, S][B, S][A, C][]    []    []    []    []    []    []    
[B, S][B, S][S]   [A, C][]    []    []    []    []    []    
[B, S][B, S][S]   []    [B]   []    []    []    []    []    
[B, S][B, S][S]   []    [B]   [B]   []    []    []    []    
[B, S][B, S][B, S][C]   [B, S][B, S][A, C][]    []    []    
[B, S][B, S][B, S][C]   [B, S][B, S][S]   [A, C][]    []    
[B, S][B, S][B, S][C]   [B, S][B, S][S]   []    [B]   []    
[B, S][B, S][B, S][C]   [B, S][B, S][B, S][C]   [B, S][A, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   []    []    [S]   []    []    []    []    
[]    []    [S]   []    []    []    [B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->CA }]
S[{ S-->AC }, { S-->SA }]
C[{ C-->a }, { C-->SC }, { C-->b }]

word='bbaabbaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[A]      [A]      [A, C]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, C]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][S]      [C]      []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [C]      []       [C]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A]      [A]      [A, C]   []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [A, S]   [A, S]   [A, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C, S][A, C, S][A, C, S][S]      [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][A]      [A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][S][] [] [] [] [] [] 
[] [] [] [C][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->CC }]
S[{ S-->SB }, { S-->BC }]
C[{ C-->SC }, { C-->b }]

word='bbaabbaaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [S][C][] [] [] [] [] 
[] [] [S][C][B][C][] [] [] [] 
[] [] [S][] [] [] [B][] [] [] 
[] [] [S][] [] [] [] [B][] [] 
[S][B][C][] [] [] [] [S][C][] 
[S][] [] [] [] [] [] [S][] [B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->SB }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->AS }]
S[{ S-->a }, { S-->BB }, { S-->CC }]
C[{ C-->CA }, { C-->b }]

word='bbaabbaaba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [B, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][B]         [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][S]         [A]         [B, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      [A, B]      [A, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [A, B, S]   [B, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S, C][A, B, S, C][B]         [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S, C][A, B, C, S][S]         [A]         [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   [A, B, S, C][A, B, C, S][A, S]      [A, B]      [B, C]      [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[]       [A, C, S][]       []       []       []       []       []       []       []       
[]       [B]      [B]      []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       []       [A, C, S][]       []       []       []       
[]       []       []       []       []       [A, S]   [S]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->a }, { S-->b }]

word='baaabbbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [A, S][]    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    []    [A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SA }]
B[{ B-->b }, { B-->CA }, { B-->a }]
S[{ S-->AS }, { S-->BA }, { S-->CB }, { S-->b }]
C[{ C-->BS }, { C-->AB }]

word='baaabbbaaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, S]      [A, B]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, B]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [A, S, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, C]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B]      

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          []          [A, B, S, C][]          []          []          []          []          []          []          
[]          []          []          [S, C]      []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->SB }]
B[{ B-->b }]
S[{ S-->AS }, { S-->a }, { S-->SS }, { S-->SC }, { S-->BC }]
C[{ C-->CA }, { C-->a }, { C-->CC }]

word='baaabbbaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[S]      [S, C]   [S, C]   []       []       []       []       []       []       []       
[S]      [S, C]   [S, C]   [S, C]   []       []       []       []       []       []       
[A, S]   [A, C, S][A, C]   [A]      [B]      []       []       []       []       []       
[A]      [A]      []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[S]      [S]      []       []       []       []       [S]      [S, C]   []       []       
[S]      [S]      []       []       []       []       [S]      [S, C]   [S, C]   []       
[S]      [S]      []       []       []       []       [S]      [S, C]   [S, C]   [S, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->CA }, { B-->a }]
C[{ C-->AS }, { C-->AA }, { C-->CC }]
S[{ S-->SA }, { S-->b }, { S-->BC }]

word='baaabbbaaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A]         []          [B]         []          []          []          []          []          []          []          
[A]         []          []          [B]         []          []          []          []          []          []          
[C, S]      [A]         [A]         [A]         [A, S]      []          []          []          []          []          
[B, C, S]   [C, S]      [S, C]      [S, C]      [S, C]      [A, S]      []          []          []          []          
[A, B, C, S][B, C, S]   [B, S, C]   [B, S, C]   [B, C, S]   [S, C]      [A, S]      []          []          []          
[A, B, C, S][B, C, S]   [B, S, C]   [B, S, C]   [B, C, S]   [S, C]      [A]         [B]         []          []          
[A, B, C, S][B, C, S]   [B, S, C]   [B, S, C]   [B, C, S]   [S, C]      [A]         []          [B]         []          
[A, B, C, S][B, C, S]   [B, S, C]   [B, S, C]   [B, C, S]   [S, C]      [A]         []          []          [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   [S]   []    []    []    []    []    []    []    
[A, B][B, S][B, S][B, S][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [C]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [C]   []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=30

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->CA }]
C[{ C-->a }]

word='baaabbbaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][] [C][] [] [] [] [] [] [] 
[A][] [] [C][] [] [] [] [] [] 
[] [A][A][A][A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [A][C][] [] 
[] [] [] [] [] [] [A][] [C][] 
[] [] [] [] [] [] [A][] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->BB }]
S[{ S-->a }]
C[{ C-->BS }]

word='babaaabbba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[C][C][C][S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[C][C][C][C][C][C][C][C][C][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->CS }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->SS }]
S[{ S-->SB }, { S-->AA }, { S-->BB }, { S-->b }]

word='babaaabbba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [A, C]      []          []          []          []          []          []          []          []          
[A, S]      [A, B]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [A]         [A, C]      []          []          []          []          []          []          
[A, C, S]   [A, B, C]   [B, C, S]   [C, S]      [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, B, C]   [C, S]      [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      [A]         [A, C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AA }, { A-->SC }]
B[{ B-->BC }, { B-->a }, { B-->SS }]
S[{ S-->SA }, { S-->a }]
C[{ C-->CA }, { C-->BA }, { C-->BS }, { C-->b }]

word='babaaabbba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [B, S]      []          []          []          []          []          []          []          []          
[C]         [A, B]      [C]         []          []          []          []          []          []          []          
[C]         [A, C]      []          [B, S]      []          []          []          []          []          []          
[C]         [A, B, C]   [C]         [A, B, C]   [B, S]      []          []          []          []          []          
[C]         [A, B, C]   [C]         [A, B, S, C][A, B, C]   [B, S]      []          []          []          []          
[C]         [A, B, C]   [C]         [A, B, S, C][A, B, S, C][A, B]      [C]         []          []          []          
[C]         [A, B, C]   [C]         [A, B, S, C][A, B]      [B]         []          [C]         []          []          
[C]         [A, B, C]   [C]         [A, B, S, C][A, B]      [B]         []          []          [C]         []          
[C]         [A, B, C]   [C]         [A, B, S, C][A, B, S, C][A, C]      []          []          []          [B, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, C][]       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[]       [A, C]   []       [B]      [B]      []       []       []       []       []       
[]       [A, C]   []       [B]      [B]      []       []       []       []       []       
[]       [A, C]   []       []       [S]      []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->b }]

word='babaaabbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[] [B][C][] [] [] [] [] [] [] 
[] [] [B][C][] [] [] [] [] [] 
[] [] [] [B][C][] [] [] [] [] 
[] [] [] [] [B][C][] [] [] [] 
[] [] [] [] [] [B][C][] [] [] 
[] [] [] [] [] [] [B][C][] [] 
[] [] [] [] [] [] [] [B][C][] 
[] [] [] [] [] [] [] [] [B][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->b }, { A-->AC }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SC }, { B-->a }]
S[{ S-->CA }, { S-->SA }, { S-->BB }]
C[{ C-->a }]

word='babaaabbba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, B, S][B, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, S]   [A, B]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BC }]
B[{ B-->b }, { B-->CA }, { B-->AA }]
S[{ S-->SA }, { S-->a }]
C[{ C-->AS }, { C-->SC }, { C-->a }, { C-->BB }]

word='aaaaaabaab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, C]      [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [S, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B]         [B, S]      [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [S, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, C]      [B]         [B, S]      [A, B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B, S][B, S][]    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B, S][B]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->SB }]
B[{ B-->b }, { B-->SA }, { B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->BB }, { S-->b }]
C[{ C-->CS }, { C-->a }, { C-->AA }, { C-->AB }]

word='aaaaaabaab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [C, S]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [C, S]      [B, S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->SB }]
B[{ B-->b }, { B-->BS }]
S[{ S-->AS }, { S-->BA }, { S-->AB }]
C[{ C-->SA }, { C-->CS }, { C-->a }, { C-->BC }]

word='aaaaaabaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[]          [A]         [C]         []          []          []          []          []          []          []          
[]          []          [A]         [C]         []          []          []          []          []          []          
[]          []          []          [A]         [C]         []          []          []          []          []          
[]          []          []          []          [A]         [C]         []          []          []          []          
[A, S]      [C]         [A, S]      [C]         [S]         []          [A, B]      []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [C]         [C]         []          []          
[A, C, S]   [A, C]      [A, S, C]   [A, C]      [A, S, C]   [C]         [A, S]      [A]         [C]         []          
[A, S, C]   [A, S, C]   [A, C, S]   [A, C, S]   [A, S, C]   [A, C]      [A, B, S, C][S]         []          [A, B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A, C, S][A, C]   [A, S, C][A, C]   [A, S, C][C]      []       []       []       []       
[]       []       []       []       [S]      []       [A, B, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->AC }]
C[{ C-->CB }, { C-->BA }, { C-->a }, { C-->b }]

word='aaaaaabaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[B]   [A, C][]    []    []    []    []    []    []    []    
[A, C][B]   [A, C][]    []    []    []    []    []    []    
[B]   [A, C][B]   [A, C][]    []    []    []    []    []    
[A, C][B]   [A, C][B]   [A, C][]    []    []    []    []    
[B]   [A, C][B]   [A, C][B]   [A, C][]    []    []    []    
[A, C][B]   [A, C][B]   [A, C][B]   [C]   []    []    []    
[B]   [A, C][B]   [A, C][B]   [C]   []    [A, C][]    []    
[A, C][B]   [A, C][B]   [A, C][B]   [C]   [B]   [A, C][]    
[B]   [A, C][B]   [A, C][B]   [C]   []    [A, C][B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[A, C][]    [A, C][]    []    []    []    []    []    []    
[]    [A, C][]    [A, C][]    []    []    []    []    []    
[A, C][]    [A, C][]    [A, C][B]   []    []    []    []    
[]    [A, C][]    [A, C][]    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->CA }, { A-->SB }]
B[{ B-->AB }, { B-->SA }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->SC }, { S-->BS }]
C[{ C-->b }]

word='aaaaaabaab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[A, B, S][B]      [A, S]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][B]      [A, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      [A, S]   [C]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [A]      [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [B]      [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [B]      [A, S]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       []       [A, B, S][]       []       []       []       []       
[]       []       []       []       []       [A, B]   []       []       []       []       
[]       []       []       []       []       [A, B]   [S]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
C[{ C-->CC }, { C-->b }]

word='abaaaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, C][B, C][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->b }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->BA }, { C-->a }]

word='abaaaabbab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [A, B]   []       []       []       []       []       []       []       []       
[B, C]   [A, C]   [B, C]   []       []       []       []       []       []       []       
[B, C]   [A, B, C][B]      [B, C]   []       []       []       []       []       []       
[B, C]   [A, B, C][]       [B]      [B, C]   []       []       []       []       []       
[B, C]   [A, B, C][]       []       [B]      [B, C]   []       []       []       []       
[B, C]   [A, B, C][]       [B]      [B, C]   [C]      [A, B]   []       []       []       
[B, C]   [A, B, C][B]      [B, C]   [B, C]   [B, C]   [A, C]   [A, B]   []       []       
[B, C]   [A, B, C][B]      [B, C]   [B, C]   [B, C]   [A, B, C][A, C]   [B, C]   []       
[B, C]   [A, B, C][B, C]   [B, C]   [B, C]   [B, C]   [A, B, C][A, C]   [C]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, C][]    [B, C][C]   []    []    []    []    []    
[]    [B, C][B]   [C]   [C]   []    []    []    []    []    
[]    []    [B, C][C]   [C]   []    [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->BS }]
C[{ C-->AC }, { C-->AA }]
S[{ S-->CA }, { S-->SA }, { S-->BA }, { S-->BB }]

word='abaaaabbab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A, B]      []          []          []          []          []          []          []          []          
[A, C, S]   [S, C]      [A]         []          []          []          []          []          []          []          
[A, S, C]   [S, C]      [C]         [A]         []          []          []          []          []          []          
[A, C, S]   [A, B, S, C][C, S]      [C]         [A]         []          []          []          []          []          
[A, C, S]   [A, B, S, C][A, C, S]   [C, S]      [C]         [A]         []          []          []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [C]         [A, B]      []          []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [S, C]      [A, B]      []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, B, C, S][S, C]      [A]         []          
[A, C, S]   [A, B, S, C][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, B, S, C][A, C, S]   [C]         [A, B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       [B, S, C][]       []       []       []       []       []       []       []       
[]       []       [C, S]   []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CA }]
B[{ B-->AB }, { B-->BS }, { B-->AA }]
C[{ C-->SB }, { C-->CB }, { C-->CS }, { C-->b }]
S[{ S-->AC }, { S-->SA }, { S-->SS }]

word='abaaaabbab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[B, S]      [A]         [A]         []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [B]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B]         [B]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B]      [B]         [B]         [A]         []          []          []          []          
[A, B, C, S][B, C, S]   [B, S]      [B]         []          [S]         [C]         []          []          []          
[S]         []          []          []          []          []          []          [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [B]         [B, S]      [A]         [A]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, S]   [B, S]      [B]         [S]         [C, S]      [C, S]      [S]         [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    [C]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CA }, { A-->BA }]
B[{ B-->b }]
C[{ C-->a }, { C-->BB }]
S[{ S-->AA }]

word='abaaaabbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [C]   [B]   []    []    
[A, S][A, S][A]   [A]   [A]   [A]   [A]   [A]   [C]   []    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BS }, { A-->SA }]
B[{ B-->CA }, { B-->BA }, { B-->CS }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->b }]
C[{ C-->AS }, { C-->BC }]

word='babbbaaaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B]      [A, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [B, C]      [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B]         [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      [B]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CA }]
B[{ B-->AB }, { B-->SB }, { B-->a }]
S[{ S-->BA }]
C[{ C-->CS }, { C-->b }]

word='babbbaaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[C]   [S]   [A]   [C]   []    []    []    []    []    []    
[A, C][S]   [A]   [A]   [C]   []    []    []    []    []    
[B]   [B]   [B]   [B]   []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->BB }, { S-->SS }, { S-->b }]

word='babbbaaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   []    [S]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    [S]   [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }]
B[{ B-->b }, { B-->AB }, { B-->SB }, { B-->BA }]
S[{ S-->AS }, { S-->BB }]
C[{ C-->CA }, { C-->CS }, { C-->a }, { C-->BS }, { C-->b }]

word='babbbaaaab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, C]      []          []          []          []          []          []          []          []          
[S]         [B]         [B, C]      []          []          []          []          []          []          []          
[A, B, C]   [S, C]      [S]         [B, C]      []          []          []          []          []          []          
[B, S, C]   [A, B, C]   [A, B, C]   [S]         [B, C]      []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, S]      [B, C]      [A, C]      []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, S]      [B, C]      [C]         [A, C]      []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, S]      [B, C]      [C]         [C]         [A, C]      []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, S]      [B, C]      [C]         [C]         [C]         [A, C]      []          
[A, B, C, S][B, C, S]   [B, C, S]   [A, B, C]   [S]         [B]         [B]         [B]         [B]         [B, C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C]   []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A]      [A]      []       []       []       []       []       []       []       
[]       [A]      [A]      [S]      []       []       []       []       []       []       
[]       [A]      [A]      [S]      [B, C]   []       []       []       []       []       
[]       [A]      [A]      [S]      [B, C]   [C]      []       []       []       []       
[]       []       []       [A, B, C][]       [B]      [B]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }, { B-->AB }, { B-->AA }]

word='babbbaaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A, B][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->SA }]
B[{ B-->CA }, { B-->a }]
S[{ S-->AC }, { S-->a }, { S-->BC }]
C[{ C-->SC }, { C-->b }, { C-->BS }]

word='bbbabaabbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[]          []          []          [B, S]      []          []          []          []          []          []          
[]          []          []          [S, C]      [C]         []          []          []          []          []          
[]          []          [B]         [A]         []          [B, S]      []          []          []          []          
[]          [B]         [A, B, C]   [A, B, C]   [B]         [A, C]      [B, S]      []          []          []          
[]          [S]         [B, S, C]   [A, B, C, S][B, S]      [A, S, C]   [S, C]      [C]         []          []          
[]          [C]         [B, S, C]   [A, S, C]   [S, C]      [S, C]      [C]         []          [C]         []          
[]          []          [S, C]      [S, C]      [C]         [C]         []          []          []          [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [B, C]   [A, B, C][]       []       []       []       []       []       
[]       []       []       [B, S]   [B]      []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->CB }, { B-->BA }, { B-->a }, { B-->CC }]
C[{ C-->b }]

word='bbbabaabbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, B][A, C][]    []    []    []    []    []    []    []    
[A, B][A, B][A, C][]    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A, C][]    []    []    []    []    
[]    []    []    []    [B]   [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [B]   [A, C][]    []    
[]    []    []    []    []    []    [B]   [A, B][A, C][]    
[]    []    []    []    []    []    [B]   [A, B][A, B][A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->SA }, { A-->BA }]
B[{ B-->a }]
S[{ S-->b }]

word='bbbabaabbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A, S][]    []    []    []    []    []    []    
[A]   [A]   [A]   [A, B][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, S][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SA }, { A-->BA }]
B[{ B-->CA }, { B-->CS }]
S[{ S-->AC }, { S-->CB }, { S-->b }]
C[{ C-->a }, { C-->BS }]

word='bbbabaabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[A]         [A]         [A]         [A, C]      []          []          []          []          []          []          
[]          []          []          [B]         [S]         []          []          []          []          []          
[A]         [A]         [A]         [A, B]      [A]         [A, C]      []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, B, C, S][A, S]      [A, B, S]   [A, C]      []          []          []          
[]          []          []          [B, C]      []          [S, C]      [B]         [S]         []          []          
[A, S]      [A, S]      [A, S]      [A, B, C, S][A, S]      [A, B, S]   [C]         []          [S]         []          
[]          []          []          [B, C]      []          [S, C]      [B]         []          []          [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    [B, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S]   []    [B, S][]    []    []    []    
[]    []    []    []    []    [S, C][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->AA }, { S-->b }]

word='bbbabaabbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [B, S][]    []    []    []    []    []    []    []    
[B]   [B]   [B, S][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B, S][]    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    [S]   [A, S][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->CC }, { B-->CS }]
S[{ S-->a }]
C[{ C-->SS }, { C-->b }]

word='bbaaaaabaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[B]   [B]   [S]   []    []    []    []    []    []    []    
[B]   [B]   [C]   [S]   []    []    []    []    []    []    
[B]   [B]   [B]   [C]   [S]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [C]   [S]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [C]   [S]   []    []    []    
[]    []    []    []    []    [B]   []    [B, C][]    []    
[]    []    []    []    []    [B]   []    [B]   [S]   []    
[]    []    []    []    []    [B]   []    [B]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BB }]
B[{ B-->AS }, { B-->BA }, { B-->CS }, { B-->SC }]
S[{ S-->AC }, { S-->a }, { S-->BS }]
C[{ C-->CA }, { C-->a }, { C-->b }]

word='bbaaaaabaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[B, C, S]   [A, B]      [S, C]      []          []          []          []          []          []          []          
[A, B, S]   [B, S, C]   [A, B]      [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B, C, S]   [A, B]      [S, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, C, S]   [A, B]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [B, C, S]   [A, B]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [C, S]      [A, B]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C, S]   [A, B]      [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C, S]   [A, B]      [S, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    []    [C, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }, { A-->BA }]
B[{ B-->SC }]
C[{ C-->AC }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->BB }]
S[{ S-->SA }, { S-->b }, { S-->AB }]

word='bbaaaaabaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, S]      []          []          []          []          []          []          []          []          
[B, C, S]   [S, C]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [C]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         [C]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         [C]         [C]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][C]         [C]         [C]         [C]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][C]         [C]         [C]         [C]         [C]         [A, S]      []          []          
[A, B, C, S][A, B, C, S][C]         [C]         [C]         [C]         [C]         [S, C]      [A]         []          
[A, B, S, C][A, B, C, S][C]         [C]         [C]         [C]         [S, C]      [B, C, S]   [C]         [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->BC }, { B-->AS }, { B-->CS }, { B-->BB }]
S[{ S-->AA }, { S-->SS }, { S-->b }]
C[{ C-->a }, { C-->CC }, { C-->BS }]

word='bbaaaaabaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, B, S][A, S]   []       []       []       []       []       []       []       []       
[B]      []       [C]      []       []       []       []       []       []       []       
[B]      []       [C]      [C]      []       []       []       []       []       []       
[B]      []       [C]      [C]      [C]      []       []       []       []       []       
[B]      []       [C]      [C]      [C]      [C]      []       []       []       []       
[B]      []       [C]      [C]      [C]      [C]      [C]      []       []       []       
[B, C]   []       [B]      [B]      [B]      [B]      [B]      [A, S]   []       []       
[B, C]   []       [B]      [B]      [B]      [B]      [B]      []       [C]      []       
[B, C]   []       [B]      [B]      [B]      [B]      [B]      []       [C]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][B][B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->b }]

word='bbaaaaabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    []    [B, S][]    []    
[]    []    []    []    []    []    []    []    [B, S][]    
[]    []    []    []    []    []    []    []    []    [B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]

word='aabaabbbaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->SB }, { B-->SC }]
S[{ S-->a }, { S-->CC }, { S-->BB }, { S-->b }]
C[{ C-->a }, { C-->b }]

word='aabaabbbaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B, S][S, C][]    []    []    []    []    []    []    []    
[B]   [B, S][S, C][]    []    []    []    []    []    []    
[B, S][B]   [B, S][S, C][]    []    []    []    []    []    
[B, S][B, S][B]   [B, S][S, C][]    []    []    []    []    
[B, S][B, S][B, S][B]   [B, S][S, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B]   [B, S][S, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B, S][S, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][S, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->AB }, { B-->CA }, { B-->a }]
C[{ C-->SA }, { C-->BA }, { C-->a }, { C-->CC }, { C-->b }]
S[{ S-->BB }]

word='aabaabbbaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[C, S]      [B, C]      []          []          []          []          []          []          []          []          
[B, C, S]   [B, C]      [A, C]      []          []          []          []          []          []          []          
[C, S]      [C, S]      [B, C]      [B, C]      []          []          []          []          []          []          
[A, C]      [C]         [C, S]      [C, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [B, C]      [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [B, C]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [B, C]      [B, C]      [A, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C, S]      [B, C, S]   [B, C, S]   [B, C]      [B, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [C, S]      [C, S]      [C, S]      [C, S]      [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, S][B, S][B, S][]    []    []    []    []    []    []    
[]    [B]   [B]   [B]   []    []    []    []    []    []    
[]    []    [B]   [B]   [B]   []    []    []    []    []    
[]    []    [S]   [S]   []    [B]   []    []    []    []    
[]    []    [A]   [A]   []    [S]   [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
B[{ B-->SA }]
S[{ S-->b }]

word='aabaabbbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [A, S][]    []    []    []    []    []    []    
[]    []    [B]   [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [A]   [A, S][]    []    []    []    
[]    []    []    []    [A]   [A, B][A, S][]    []    []    
[]    []    []    []    [A]   [A, B][A, B][A, S][]    []    
[]    []    []    []    []    []    []    [B]   [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->AS }]
S[{ S-->a }, { S-->SC }, { S-->CC }, { S-->BC }]
C[{ C-->b }]

word='aabaabbbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   [C]   []    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[]    []    [B]   []    [S]   []    []    []    []    []    
[]    []    [B, S][]    [S]   [C]   []    []    []    []    
[]    []    [B, S][]    [S]   [S]   [C]   []    []    []    
[]    []    [B, S][]    [S]   [A, S][S]   [C]   []    []    
[]    []    []    []    []    [B]   []    [A]   [S]   []    
[]    []    []    []    []    []    []    [B]   []    [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]

word='aaaaababbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BC }, { B-->AS }, { B-->SA }, { B-->a }]
C[{ C-->BA }, { C-->SC }]
S[{ S-->CB }, { S-->CC }, { S-->b }]

word='aaaaababbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[C]         [A]         [B]         []          []          []          []          []          []          []          
[B, S]      [C]         [A]         [B]         []          []          []          []          []          []          
[A]         [B, S]      [C]         [A]         [B]         []          []          []          []          []          
[A, B, S, C][B, S, C]   [A]         [B]         [C]         [A, S]      []          []          []          []          
[A, S, C]   [A, B, S]   [B, C]      [A]         [S]         []          [B]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B]      [B, S]      [C]         [C]         [A, S]      []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, B, C]   [B]         [A]         [B]         [A, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][B, S, C]   [B, S]      [C]         [B]         [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, S, C][S]      [A]      []       []       []       []       []       []       []       
[]       []       [B, C]   [A]      []       []       []       []       []       []       
[A]      [S]      [B]      [A]      [B, S]   []       []       []       []       []       
[]       []       []       []       [B, C]   [B]      []       []       []       []       
[]       []       []       []       [C]      [B, S, C][B, S]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->CS }]
C[{ C-->BB }]
S[{ S-->b }]

word='aaaaababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    
[]    []    []    []    []    []    []    [B, S][]    []    
[]    []    []    []    []    []    []    [B, C][B, S][]    
[]    []    []    []    []    []    []    [B, C][B, C][B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BA }, { B-->AA }]
S[{ S-->CB }]
C[{ C-->SB }, { C-->b }]

word='aaaaababbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[B]      [B]      [A]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [A]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [A]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [A, C]   []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [A]      []       []       []       
[B]      [B]      [B]      [B]      [B]      [B, S]   [B]      [A, C]   []       []       
[B]      [B]      [B]      [B]      [B]      [B, S]   [B]      [B]      [A, C]   []       
[B]      [B]      [B]      [B]      [B]      [B, S, C][B]      [B, S]   [B]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, S][B]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=30

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->SB }, { B-->a }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->CC }, { S-->BC }]
C[{ C-->CB }, { C-->b }]

word='aaaaababbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[S]      [A]      [B]      []       []       []       []       []       []       []       
[B]      [S]      [A]      [B]      []       []       []       []       []       []       
[A, S]   [B]      [S]      [A]      [B]      []       []       []       []       []       
[B, S]   [A, S]   [B]      [S]      [S]      [C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [C]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S]      [S]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, C]   [B]      [S]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][C, S]   [A, S]   [B]      [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B]   []    []    []    []    []    []    []    
[]    [A]   [B]   [A, S][]    []    []    []    []    []    
[]    []    []    [S]   [B, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    [A]   [C]   [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->AB }, { B-->SS }]
S[{ S-->a }]
C[{ C-->CS }, { C-->SC }, { C-->b }]

word='babaababba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [A, S]   []       []       []       []       []       []       []       []       
[A]      [A, C]   [C]      []       []       []       []       []       []       []       
[A]      [A, C]   [C]      [A, S]   []       []       []       []       []       []       
[A, B]   [A, B, C][C]      [A, B]   [A, S]   []       []       []       []       []       
[A]      [A]      [A]      [A, C]   [A, C]   [C]      []       []       []       []       
[A]      [A]      [A]      [A, C]   [A, C]   [C]      [A, S]   []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A, C]   [C]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [C]      []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [C]      [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   []    [C]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->SB }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->CA }, { C-->AA }, { C-->SS }]

word='babaababba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[A, C]      []          [A, S]      []          []          []          []          []          []          []          
[C]         []          [S]         [B]         []          []          []          []          []          []          
[A, C, S]   [S]         [A, C, S]   [S]         [B]         []          []          []          []          []          
[A, B, S, C][A, C, S]   [A, S, C]   [A, C]      []          [A, S]      []          []          []          []          
[A, B, S, C][C, S]      [A, S, C]   [C]         []          [S]         [B]         []          []          []          
[A, B, C, S][A, S, C]   [A, B, S, C][A, S, C]   [S]         [A, C]      []          [A, S]      []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, S, C]   [A, C, S]   [S]         [A, C]      [A, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [A, C, S]   [S]         [A, C]      [S]         [B]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [A, C]   []       []       []       []       []       []       []       
[]       []       []       [A, S, C][]       []       []       []       []       []       
[]       []       []       []       []       [C, S]   []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }]
B[{ B-->CA }, { B-->CB }, { B-->BA }, { B-->a }]
S[{ S-->AA }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->BS }, { C-->b }]

word='babaababba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B]         [A, B]      []          []          []          []          []          []          []          []          
[B, S, C]   [A, C]      [S, C]      []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [B]         [A, B]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][B, S]      [B]         [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][B, S, C]   [A, C]      [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][B, S]      [B]         [A, B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->b }, { B-->AB }, { B-->SB }]
C[{ C-->SA }, { C-->SC }, { C-->BB }, { C-->SS }, { C-->BS }, { C-->BC }]
S[{ S-->AC }, { S-->CS }]

word='babaababba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B]      [A, B]      []          []          []          []          []          []          []          
[A]         [A]         [A]         [A]         []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A, B]      [A, B]      []          []          []          []          
[A, C, S]   [A, C]      [A]         [A]         [A]         [A]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [A, B]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B]      []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, S, C]   [A, S, C]   [A, C, S]   [A, C]      [A]         [A]         [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }]
C[{ C-->AS }, { C-->SA }, { C-->SS }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->SC }]

word='babaababba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[S]   [C]   [A]   []    []    []    []    []    []    []    
[C]   [A, S][C]   [A, S][]    []    []    []    []    []    
[A, S][C]   [A, S][C]   [A, S][]    []    []    []    []    
[C]   [A, S][C]   [S]   [C]   [A]   []    []    []    []    
[A, S][C]   [A, S][C]   [A, S][C]   [A, S][]    []    []    
[C]   [A, S][C]   [A, S][C]   [S]   [C]   [A]   []    []    
[A, S][C]   [A, S][C]   [A, S][C]   [S]   []    [A]   []    
[C]   [A, S][C]   [A, S][C]   [A, S][C]   [S]   [C]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    
[]    [A, S][]    [A, S][]    []    []    []    []    []    
[A, S][]    [A, S][]    [A, S][]    []    []    []    []    
[]    [A, S][]    [A, S][]    [A, S][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->SS }]
C[{ C-->b }]

word='aababababa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    []    [B, S][]    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    []    [B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
C[{ C-->AA }, { C-->CC }, { C-->b }]

word='aababababa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BC }]
B[{ B-->SA }, { B-->AA }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->b }]
C[{ C-->a }, { C-->CC }]

word='aababababa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [S, C]   []       []       []       []       []       []       []       []       
[B, S]   [A]      [S]      []       []       []       []       []       []       []       
[A, B, S][B, S]   [A]      [S, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][B]      [A]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A]      [S, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      [A]      [S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A]      [S, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [A]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A]      [S, C]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[]       []       [A, B, S][]       []       []       []       []       []       []       
[]       []       []       [A, B]   []       []       []       []       []       []       
[]       []       []       []       [A, B, S][]       []       []       []       []       
[]       []       []       []       []       [A, B]   []       []       []       []       
[]       []       []       []       []       []       [A, B, S][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AS }]
B[{ B-->a }]
S[{ S-->SA }, { S-->SB }, { S-->AA }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->CS }]

word='aababababa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S, C][A, B]   []       []       []       []       []       []       []       []       
[A, S, C][A]      [S]      []       []       []       []       []       []       []       
[A, S, C][A, S]   [S]      [A, B]   []       []       []       []       []       []       
[A, S, C][A, S]   [S]      [A]      [S]      []       []       []       []       []       
[A, C, S][A, S]   [S]      [A, S]   [S]      [A, B]   []       []       []       []       
[A, C, S][A, S]   [S]      [A, S]   [S]      [A]      [S]      []       []       []       
[A, C, S][A, S]   [S]      [A, S]   [S]      [A, S]   [S]      [A, B]   []       []       
[A, C, S][A, S]   [S]      [A, S]   [S]      [A, S]   [S]      [A]      [S]      []       
[A, C, S][A, S]   [S]      [A, S]   [S]      [A, S]   [S]      [A, S]   [S]      [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [S][] [] [] [] [] [] 
[] [S][] [S][] [] [] [] [] [] 
[] [S][] [S][] [S][] [] [] [] 
[] [S][] [S][] [S][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->AS }]
S[{ S-->AC }, { S-->a }, { S-->CC }]
C[{ C-->AA }]

word='aababababa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, S]      []          []          []          []          []          []          []          []          
[S]         [C]         [A]         []          []          []          []          []          []          []          
[B, C, S]   [A, S]      [B, C]      [A, S]      []          []          []          []          []          []          
[A, B, S]   [B, S, C]   [S]         [C]         [A]         []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, C, S]   [A, S]      [B, C]      [A, S]      []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      [B, S, C]   [S]         [C]         [A]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [B, C, S]   [A, S]      [B, C]      [A, S]      []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      [B, S, C]   [S]         [C]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S]   [B, C, S]   [A, S]      [B, C]      [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[S]      [B]      [B, C, S][]       []       []       []       []       []       []       
[]       [S, C]   [B]      [S, C]   []       []       []       []       []       []       
[]       []       [B, C, S][B]      [B, C, S][]       []       []       []       []       
[]       []       []       [S, C]   [B]      [S, C]   []       []       []       []       
[]       []       []       []       [B, C, S][B]      [B, C, S][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=35

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AC }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->BA }, { B-->CS }]
S[{ S-->SB }, { S-->a }]
C[{ C-->a }, { C-->CC }, { C-->AA }, { C-->b }]

word='abbaababba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[S, C]      [B, C]      []          []          []          []          []          []          []          []          
[A, C, S]   [A, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, C]      [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [S, C]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, S, C][B, S, C]   [B, C]      [S, C]      []          []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C, S][A, B, S, C][A, B, C]   [S, C]      [B, C]      []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C]   [A, C, S]   [A, C]      [B, C]      []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][A, B, C]   [B, C]      [S, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->AA }]

word='abbaababba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    [B]   [A, B][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [B]   [A, B][]    []    
[]    []    []    []    []    []    [B]   [B]   [A, B][]    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SC }, { B-->CC }]
C[{ C-->SB }]
S[{ S-->CB }, { S-->a }, { S-->CS }]

word='abbaababba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [B]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[C]   []    []    [B]   [C]   [B]   []    []    []    []    
[S]   []    []    []    [S]   []    [S]   []    []    []    
[B, C][]    []    [B, C][B, C][]    [C]   [B]   []    []    
[S]   []    []    [S]   [S]   []    [S]   []    [B]   []    
[]    []    []    []    []    []    []    []    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
C[{ C-->AC }, { C-->a }, { C-->SC }, { C-->CS }]
S[{ S-->a }, { S-->CC }]

word='abbaababba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[S, C][C]   [C]   [S, C][]    []    []    []    []    []    
[S, C][C, S][C, S][S, C][S, C][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[S, C][C, S][C, S][S, C][S, C][C]   [S, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    [A]   [A]   []    
[S, C][C, S][C, S][S, C][S, C][C, S][S, C][C]   [C]   [S, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AC }]
B[{ B-->b }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->CC }, { S-->SS }, { S-->AA }, { S-->AB }]
C[{ C-->CB }, { C-->a }, { C-->b }]

word='abbaababba'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S, C]   [B, C]   []       []       []       []       []       []       []       []       
[S, C]   [A, S, C][B, C]   []       []       []       []       []       []       []       
[S]      [A, S]   [S]      [S, C]   []       []       []       []       []       []       
[S]      [A, S]   [S]      [S]      [S, C]   []       []       []       []       []       
[S]      [A, S]   [S]      [S]      [S, C]   [B, C]   []       []       []       []       
[S]      [A, S]   [S]      [S]      [S]      [S]      [S, C]   []       []       []       
[S]      [A, S]   [S]      [S]      [S]      [S]      [S, C]   [B, C]   []       []       
[S]      [A, S]   [S]      [S]      [S]      [S]      [S, C]   [A, S, C][B, C]   []       
[S]      [A, S]   [S]      [S]      [S]      [S]      [S]      [A, S]   [S]      [S, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AA }]
C[{ C-->CA }, { C-->CS }, { C-->b }]
S[{ S-->a }]

word='abaabaabba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[] [C][] [S][] [] [] [] [] [] 
[] [A][] [] [C][] [] [] [] [] 
[] [A][] [] [C][S][] [] [] [] 
[] [A][] [] [C][] [S][] [] [] 
[] [C][] [] [A][] [] [C][] [] 
[] [A][] [] [C][] [] [A][C][] 
[] [A][] [] [C][] [] [A][C][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->AC }, { A-->BA }]
B[{ B-->BC }, { B-->CS }, { B-->BB }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SB }]

word='abaabaabba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->SB }, { C-->SS }, { C-->CC }, { C-->b }]
S[{ S-->CB }, { S-->a }, { S-->SC }]

word='abaabaabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [B, C]   []       []       []       []       []       []       []       []       
[C]      []       [S]      []       []       []       []       []       []       []       
[S, C]   [B, C]   [C]      [S]      []       []       []       []       []       []       
[C, S]   [B, S, C][S, C]   [S, C]   [B, C]   []       []       []       []       []       
[C, S]   [B, C]   [S, C]   [C]      []       [S]      []       []       []       []       
[C, S]   [B, S, C][S, C]   [S, C]   [B, C]   [C]      [S]      []       []       []       
[C, S]   [B, C, S][S, C]   [S, C]   [B, C, S][S, C]   [S, C]   [B, C]   []       []       
[C, S]   [B, C, S][S, C]   [S, C]   [B, C, S][S, C]   [S, C]   [B, S, C][B, C]   []       
[C, S]   [B, C, S][S, C]   [S, C]   [B, C]   [S, C]   [S, C]   [C]      []       [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->CB }, { B-->a }]
C[{ C-->SC }, { C-->BS }]
S[{ S-->CC }, { S-->b }]

word='abaabaabba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[B]      []       [B]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [B]      []       []       []       []       []       []       
[A]      [A]      [A]      [C]      [S]      []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [B]      []       [B]      []       []       []       []       
[A, B]   [A, B]   [A, B]   [A]      [A]      [A]      [B]      []       []       []       
[A, C, S][A, C]   [A, C]   [A]      [A]      [A]      [C]      [S]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      []       [S]      []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      []       []       [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[C, S][C]   [C]   [A]   [A]   []    []    []    []    []    
[]    [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=23

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
S[{ S-->SA }, { S-->SB }, { S-->b }, { S-->AB }]

word='abaabaabba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[A, S]   [B, S]   [A, B]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, B]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CB }]
B[{ B-->a }]
S[{ S-->AC }, { S-->BA }, { S-->SS }]
C[{ C-->AS }, { C-->a }, { C-->CC }, { C-->CS }, { C-->b }]

word='bababbbabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C]   [B, C]   []       []       []       []       []       []       []       []       
[C, S]   [C]      [C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C]   [B, C]   []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [C]      [C]      []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [C]      [C]      [C]      []       []       []       []       
[C, S]   [C, S]   [C, S]   [C]      [C]      [C]      [C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, C]   [A, C]   [B, C]   []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      [C]      []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      [C]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A, S][A]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->CB }]
B[{ B-->BS }, { B-->SA }, { B-->SC }, { B-->a }, { B-->SS }]
C[{ C-->CA }, { C-->SB }]
S[{ S-->b }]

word='bababbbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C]      [B]      [S]      []       []       []       []       []       []       []       
[A, B]   [A]      [C]      [B]      []       []       []       []       []       []       
[A, B]   [A]      [C]      [B]      [S]      []       []       []       []       []       
[A, B, C][A]      [A, C]   [B]      [B]      [S]      []       []       []       []       
[A, B, C][A]      [A, B, C][A, B]   [B, C]   [B]      [S]      []       []       []       
[A, B, C][A]      [A, B, C][A]      [A, C]   [B]      [C]      [B]      []       []       
[A, B, C][A]      [A, B, C][A]      [A, C]   [B]      [C]      [B]      [S]      []       
[A, B, C][A]      [A, B, C][A]      [A, C]   [B]      [A, C]   [B]      [B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B]   []       []       []       []       []       []       []       []       []       
[A, B]   []       []       []       []       []       []       []       []       []       
[A, B, C][]       [C]      []       []       []       []       []       []       []       
[A, B]   []       [B]      [B]      []       []       []       []       []       []       
[A, B]   []       [A, B]   []       [C]      []       []       []       []       []       
[A, B]   []       [A, B]   []       [C]      [B]      []       []       []       []       
[A, B]   []       [A, B]   []       [C]      [B]      [C]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=30

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }]

word='bababbbabb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    []    [A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }]
C[{ C-->CB }, { C-->a }]

word='bababbbabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][B][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][B][] [] [] [] [] 
[] [] [] [C][B][B][] [] [] [] 
[] [] [] [C][B][B][B][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [C][B][] 
[] [] [] [] [] [] [] [C][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->BC }]
B[{ B-->BS }, { B-->a }]
C[{ C-->SA }, { C-->SS }, { C-->AA }]
S[{ S-->CB }, { S-->BB }, { S-->CC }, { S-->b }, { S-->AB }]

word='bababbbabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          [B]         [S]         []          []          []          []          []          []          []          
[C]         [S]         []          [B]         []          []          []          []          []          []          
[A, C]      [S, C]      []          [B]         [S]         []          []          []          []          []          
[A, S, C]   [A, S, C]   [C]         [A, B]      [C]         [S]         []          []          []          []          
[A, S, C]   [A, S, C]   [A, C]      [A, B]      [A]         [C]         [S]         []          []          []          
[A, S, C]   [A, B, S, C][C, S]      [A, B, S]   [C, S]      [S]         []          [B]         []          []          
[A, S, C]   [A, B, C, S][A, C, S]   [A, B, S, C][A, C, S]   [S, C]      []          [B]         [S]         []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, B, S, C][A, C, S]   [A, S, C]   [C]         [A, B]      [C]         [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [A, C][A, B][]    []    []    []    []    []    
[]    [B]   []    [S]   [C, S][]    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->AB }, { A-->CB }]
B[{ B-->b }, { B-->a }]
C[{ C-->BA }, { C-->a }, { C-->BB }, { C-->b }]

word='abbbbbbaba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, C][B, C][]    []    []    []    []    []    []    []    
[A, C][A, C][B, C][]    []    []    []    []    []    []    
[A, C][A, C][A, C][B, C][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][B, C][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][B, C][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][B, C][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][B, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][B, C][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]

word='abbbbbbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]
C[{ C-->a }, { C-->SC }, { C-->b }]

word='abbbbbbaba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [S, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [S, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->SB }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->a }]
C[{ C-->b }]

word='abbbbbbaba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [B, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, B]   [B, C]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, C]   []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, C]   []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
S[{ S-->CA }]
C[{ C-->a }, { C-->b }]

word='abbbbbbaba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[S]   [A]   [C]   []    []    []    []    []    []    []    
[]    [S]   [A]   [C]   []    []    []    []    []    []    
[]    []    [S]   [A]   [C]   []    []    []    []    []    
[]    []    []    [S]   [A]   [C]   []    []    []    []    
[]    []    []    []    [S]   [A]   [C]   []    []    []    
[]    []    []    []    []    [S]   [A, S][A, C][]    []    
[]    []    []    []    []    []    [S]   [A]   [C]   []    
[]    []    []    []    []    []    []    [S]   [A, S][A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->BB }]
C[{ C-->b }]

word='abbabbbbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [S][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->SS }]
S[{ S-->a }]

word='abbabbbbaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [B][B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [B][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }]
B[{ B-->BS }, { B-->CB }, { B-->SC }, { B-->a }, { B-->AA }]
C[{ C-->AC }, { C-->SA }, { C-->AB }]
S[{ S-->CA }, { S-->SB }, { S-->b }]

word='abbabbbbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B]         [A, S]      []          []          []          []          []          []          []          []          
[A, B]      [B, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [S, C]      [B]         []          []          []          []          []          []          
[A, B, C, S][B, S, C]   [S, C]      [B]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S, C]   [A, B]      [B, C]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][B, S, C]   [A, B]      [B, S, C]   [B, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][B, S, C]   [B, C]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][A, B, S, C][B, C]      [S, C]      [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][B, S, C]   [B, S, C]   [B, S]      []          [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [S, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }]
C[{ C-->a }]
S[{ S-->CS }, { S-->CC }, { S-->b }]

word='abbabbbbaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    [S]   [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [A, C][]    
[]    []    []    []    []    []    []    []    [A, S][A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AS }, { B-->CB }, { B-->CC }]
S[{ S-->AC }, { S-->a }, { S-->b }]
C[{ C-->SB }]

word='abbabbbbaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [A, S]      []          []          []          []          []          []          []          []          
[C]         [B]         [A, S]      []          []          []          []          []          []          []          
[]          [A, C]      [B]         [S]         []          []          []          []          []          []          
[C]         [B]         []          []          [A, S]      []          []          []          []          []          
[B, C]      [A, B]      [S]         [C]         [B]         [A, S]      []          []          []          []          
[B, C]      [B, S]      []          []          [A, C]      [B]         [A, S]      []          []          []          
[B, C]      [A, B, S]   [A, S, C]   [B, C]      [B, S]      [A, C]      [B]         [A, S]      []          []          
[B, C]      [A, B, S, C][A, B, S, C][B, C]      [A, B, C]   [B, S]      [A, C]      [B]         [S]         []          
[B, C]      [A, B, S, C][A, B, S, C][B, C]      [B, S]      [A, C]      [B]         []          []          [S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [A, B]   []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[C]      [A, B, S][]       []       []       []       []       []       []       []       
[C]      []       []       [C]      [A, B]   []       []       []       []       []       
[C]      []       []       [C]      []       [A]      []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->CA }, { A-->SB }, { A-->CB }]
B[{ B-->b }, { B-->BC }]
S[{ S-->AS }, { S-->BB }]
C[{ C-->SA }, { C-->a }]

word='abaabbaabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A]         [A, B]      []          []          []          []          []          []          []          []          
[A]         [B]         [A, C]      []          []          []          []          []          []          []          
[A]         [B]         [A]         [A, C]      []          []          []          []          []          []          
[S]         [S]         [A]         [A]         [A, B]      []          []          []          []          []          
[A, S, C]   [A, C, S]   [S]         [S]         [S]         [A, B]      []          []          []          []          
[A, S, C]   [A, B, C, S][S, C]      [S, C]      [S, C]      [B]         [A, C]      []          []          []          
[A, S, C]   [A, B, C, S][A, S, C]   [A, S, C]   [A, S, C]   [B]         [A]         [A, C]      []          []          
[A, S, C]   [A, B, C, S][A, S, C]   [A, S, C]   [A, S, C]   [S]         [A]         [A]         [A, B]      []          
[A, S, C]   [A, B, C, S][A, S, C]   [A, S, C]   [A, B, S, C][A, S, C]   [S]         [S]         [S]         [A, B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A, S]   [A, C, S][]       []       []       []       []       []       []       []       
[]       [A, B, C][S, C]   [S, C]   []       []       []       []       []       []       
[]       []       [S]      [S]      [S, C]   []       []       []       []       []       
[]       []       []       []       [A, C]   [S]      []       []       []       []       
[]       []       []       []       [B]      [A, S, C][]       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SS }, { A-->CS }, { A-->BC }]
B[{ B-->AB }, { B-->SA }, { B-->CA }, { B-->a }]
C[{ C-->AC }, { C-->a }]
S[{ S-->BA }, { S-->BB }, { S-->b }]

word='abaabbaabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[B, C]      []          [B, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, B]      [A, S]      [B, C]      []          []          []          []          []          []          
[A, B, S]   [A, B]      [A, B, S]   [A]         [S]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [B, S]      [A]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [B, C]      []          [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [A, S]      [B, C]      []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [A, B, S]   [A]         [S]         []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B, S]      [A]         [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [S, C][A]   []    []    []    []    []    
[]    []    []    []    [A]   [A]   []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->CB }]
B[{ B-->AB }, { B-->a }]
C[{ C-->CA }, { C-->BB }, { C-->b }]

word='abaabbaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [A][B][] [] [] [] [] [] [] 
[C][B][C][B][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [C][A][B][] [] [] 
[C][] [C][] [A][B][C][B][] [] 
[C][] [C][] [A][] [] [] [C][] 
[C][] [C][] [A][] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BC }, { A-->AB }, { A-->BS }, { A-->AC }]
B[{ B-->b }, { B-->AS }]
S[{ S-->SB }, { S-->a }, { S-->AA }]
C[{ C-->BA }, { C-->SC }, { C-->a }]

word='abaabbaabb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[S]         [A, B]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, B]      [S, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, C]      [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      [S]         [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S, C]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [S]         [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S, C]   [A, B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AS }, { A-->SB }]
B[{ B-->b }]
S[{ S-->a }, { S-->AA }, { S-->AB }]

word='abaabbaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A]   []    [S]   []    []    []    []    []    []    []    
[A]   []    []    [S]   []    []    []    []    []    []    
[S]   []    []    [A]   [B]   []    []    []    []    []    
[A, S][]    []    [S]   [A]   [B]   []    []    []    []    
[A, S][]    []    []    [A]   []    [S]   []    []    []    
[A, S][]    []    []    [A]   []    []    [S]   []    []    
[A, S][]    []    []    [S]   []    []    [A]   [B]   []    
[A, S][]    []    []    [A, S][]    []    [S]   [A]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]
S[{ S-->b }]

word='abbbbabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    []    [C, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C, S][]    []    []    
[]    []    []    []    []    []    []    [C, S][]    []    
[]    []    []    []    []    []    []    []    [C, S][]    
[]    []    []    []    []    []    []    []    []    [C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->a }]
C[{ C-->CB }, { C-->b }]

word='abbbbabbba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   [A, B][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    [C]   [A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->CB }, { B-->BA }, { B-->SS }]
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->a }, { C-->BC }]

word='abbbbabbba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[A, B]      [B]         [S]         []          []          []          []          []          []          []          
[]          [A]         [B]         [S]         []          []          []          []          []          []          
[B]         []          [A]         [B]         [S]         []          []          []          []          []          
[A, B, C, S][B, C]      [A, S]      [A, B, C]   [B, S]      [S, C]      []          []          []          []          
[A, B]      [A, B]      [B]         [A]         [A, B]      [B]         [S]         []          []          []          
[A, B]      [A, B]      [A, B]      [B]         [A]         [A, B]      [B]         [S]         []          []          
[A, B]      [B]         [A]         [A, B]      [B]         []          [A]         [B]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      [A, S]      [A, B, C]   [B, S]      [S, C]      

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, S]   []          [A, S]      []          []          []          []          []          []          []          
[]          [A]         [B]         [A]         []          []          []          []          []          []          
[A]         [A]         [A, B]      [B]         [A]         []          []          []          []          []          
[A, B]      []          [A]         [A, B]      []          []          []          []          []          []          
[A, S]      [A, S]      [A, B, S, C][A, S]      [A, B, S]   []          [A, S]      []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=34

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->a }]
S[{ S-->b }]

word='abbbbabbba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [A][B][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [A][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->BB }]

word='abbbbabbba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][B]   [B]   []    []    []    []    []    []    []    
[A, B][B]   [B]   [B]   []    []    []    []    []    []    
[A, B][B]   [B]   [B]   [B]   []    []    []    []    []    
[A, B][B]   [B]   [B]   [B]   [A, B][]    []    []    []    
[A, B][B]   [B]   [B]   [B]   [A, B][B]   []    []    []    
[A, B][B]   [B]   [B]   [B]   [A, B][B]   [B]   []    []    
[A, B][B]   [B]   [B]   [B]   [A, B][B]   [B]   [B]   []    
[A, B][B]   [B]   [B]   [B]   [A, B][B]   [B]   [B]   [A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->a }, { C-->CC }, { C-->b }]

word='abbbbbabaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C]   [C]   [A, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->BS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->a }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->BC }]
C[{ C-->a }, { C-->BB }, { C-->CC }, { C-->b }, { C-->AB }]

word='abbbbbabaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, C, S][B, C]   []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][B, C]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][B, C]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][B, C]   []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][B, C]   []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][B, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][B, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][B, C]   []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][B, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->AS }, { B-->SB }, { B-->CS }]
S[{ S-->SA }, { S-->a }, { S-->SC }, { S-->BC }, { S-->BS }]
C[{ C-->b }]

word='abbbbbabaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, S]   [B, C]   []       []       []       []       []       []       []       
[A, B, S][B, S]   [A, S]   [B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [A, S]   [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->BA }]
B[{ B-->b }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->SS }, { C-->BC }]
S[{ S-->a }, { S-->BB }]

word='abbbbbabaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[C]   [S]   [B]   []    []    []    []    []    []    []    
[]    [A, C][S]   [B]   []    []    []    []    []    []    
[]    [A, C][A, C][S]   [B]   []    []    []    []    []    
[]    [A, C][A, C][A, C][S]   [B]   []    []    []    []    
[]    [A, C][A, C][A, C][A, C][A, C][S, C][]    []    []    
[]    [C]   [C]   [C]   [C]   [C]   [C]   [B]   []    []    
[]    []    []    []    []    []    []    [A, C][S, C][]    
[]    []    []    []    []    []    []    [C]   [C]   [S, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    [A, C][A, C][]    []    []    []    []    []    []    
[]    [A, C][A, C][A, C][]    []    []    []    []    []    
[]    [C]   [C]   [C]   [C]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SS }, { A-->BC }, { A-->CA }]
B[{ B-->a }]
C[{ C-->a }, { C-->CS }, { C-->b }]
S[{ S-->BB }, { S-->b }]

word='abbbbbabaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, C][C, S][]    []    []    []    []    []    []    []    
[A, C][A, C][C, S][]    []    []    []    []    []    []    
[A, C][A, C][A, C][C, S][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][C, S][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][C, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [B, C][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][C, S][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [B, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][A, C][A, S][B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->AC }, { S-->a }]
C[{ C-->SS }, { C-->b }]

word='abaaabaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[C]   [S]   [S]   []    []    []    []    []    []    []    
[C]   [C, S][C]   [S]   []    []    []    []    []    []    
[]    [C]   []    [C]   [S]   []    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    [C]   [S]   [S]   []    []    []    
[]    []    []    []    [C]   [S, C][C]   [S]   []    []    
[]    []    []    []    []    [C]   []    [C]   [S]   []    
[]    []    []    []    []    []    []    []    []    [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AC }, { A-->SA }]
B[{ B-->SB }, { B-->CB }, { B-->SC }]
S[{ S-->a }, { S-->BS }]
C[{ C-->AA }, { C-->b }, { C-->BC }]

word='abaaabaaab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B]      [C]         []          []          []          []          []          []          []          []          
[A, C, S]   [A]         [A, S]      []          []          []          []          []          []          []          
[A, B, C]   [C]         [A, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [A, S]      []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         [A, C]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [A, S]      []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [S]   [C]   []    []    []    []    []    
[]    []    []    []    [S]   [A, C][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AB }]
B[{ B-->BC }, { B-->BA }, { B-->SS }]
S[{ S-->CA }, { S-->SA }, { S-->CB }, { S-->AA }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->a }, { C-->b }]

word='abaaabaaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S]      [C, S]      []          []          []          []          []          []          []          []          
[S]         [A]         [C]         []          []          []          []          []          []          []          
[S]         [S]         [A]         [C]         []          []          []          []          []          []          
[B, S, C]   [B, S]      [S]         [A]         [C]         []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][S, C]      [A, S]      [C, S]      []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, S]      [S]         [A]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][S, C]      [S]         [S]         [A]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      [S]         [A]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      [A, S]      [C, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[C]      [A, C]   [A, S, C][]       []       []       []       []       []       []       
[]       []       [A]      [A]      []       []       []       []       []       []       
[]       []       []       [S]      [S]      []       []       []       []       []       
[]       []       []       [C]      [S, C]   [S]      []       []       []       []       
[]       []       []       []       [C]      [A, C]   [A, S, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->CA }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->AA }, { C-->BC }]

word='abaaabaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, B][]    []    []    []    []    []    
[B, C][B, C][B, C][C]   [A, B][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[B, C][B, C][B, C][B, C][C]   [C]   [C]   [A, B][]    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   [A, B][]    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->CS }, { B-->SS }]
S[{ S-->a }, { S-->BS }]
C[{ C-->BB }, { C-->b }]

word='abaaabaaab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[C, S]   [B]      [B, S]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S]   []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B]      [C]      []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][C, S]   [B]      [B, S]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->b }]

word='bbbbaabbbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[B][B][B][B][B][A][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->BS }, { A-->AC }, { A-->AS }]
B[{ B-->CA }]
S[{ S-->CB }, { S-->a }, { S-->CS }]
C[{ C-->b }, { C-->BC }]

word='bbbbaabbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[]          []          []          [C]         []          []          []          []          []          []          
[S]         [S]         [S]         [B, S]      [A, S]      []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [A]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         [A]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         [A]         []          [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         [A]         []          []          [C]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         [A]         []          []          []          [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [A, B, S][]       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, C]   []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->AS }]
B[{ B-->AC }, { B-->SB }, { B-->BA }]
C[{ C-->SA }, { C-->a }, { C-->SS }]
S[{ S-->SC }, { S-->b }, { S-->BS }]

word='bbbbaabbbb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [B, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [S]         []          [C]         []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S]   [C]         []          []          [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      []          []          [A, C]      [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          [A, B, C, S][A, C]      [A, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   []          []          [A, B, C, S][A, B, C, S][A, C]      [A, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BS }, { B-->AC }, { B-->BA }, { B-->SC }, { B-->a }, { B-->SS }]
S[{ S-->SA }, { S-->SB }, { S-->b }]
C[{ C-->CB }, { C-->AA }, { C-->b }]

word='bbbbaabbbb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[B, S, C][B]      [S, C]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][B]      [S, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B]      [S, C]   [A, B]   []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, C]   [A, B]   []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B]      [B]      [S, C]   []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, C]   [B]      [B]      [S, C]   []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, C]   [B]      [B, S, C][B]      [S, C]   []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, C]   [B]      [B, S, C][B, S, C][B]      [S, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->AS }, { A-->SB }, { A-->CB }, { A-->BA }]
B[{ B-->CC }, { B-->SS }]
S[{ S-->BB }]
C[{ C-->CS }, { C-->a }, { C-->b }]

word='bbbbaabbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A]      [B]      [C]      []       []       []       []       []       []       []       
[S]      [A]      [B]      [C]      []       []       []       []       []       []       
[A, C]   [A, S]   [A]      [B]      [A, C]   []       []       []       []       []       
[A, B]   [A, C]   [A, S]   [A]      [A, B]   [A, C]   []       []       []       []       
[A]      [A, B]   [A, C]   [S]      [A]      [B]      [C]      []       []       []       
[A, B, S][A]      [A, B]   [A, C]   [A, S]   [A]      [B]      [C]      []       []       
[A, C]   [A, B, S][A]      [A, B]   [A, C]   [A, S]   [A]      [B]      [C]      []       
[A, B, S][A, C]   [A, B, S][A]      [A, B]   [A, C]   [S]      [A]      [B]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, C][S]   []    []    []    []    []    []    []    []    
[]    [C]   [S]   []    []    []    []    []    []    []    
[]    []    [C]   [S]   []    []    []    []    []    []    
[B, S][]    []    [A, C][S]   []    []    []    []    []    
[C]   [B, S][]    []    [C]   [S]   []    []    []    []    
[S]   [C]   [B, S][]    []    [C]   [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }]
C[{ C-->a }]

word='bababbaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][B][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]

word='bababbaabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SA }]
B[{ B-->b }]
S[{ S-->AS }, { S-->BB }]
C[{ C-->a }, { C-->BS }]

word='bababbaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    [C]   [S]   [S]   [B]   []    []    []    []    
[]    []    []    [A]   [A]   []    [A, C][]    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    [C]   [A, S][A, S][C]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->BC }, { B-->BS }, { B-->SS }, { B-->AA }]
S[{ S-->BA }, { S-->a }, { S-->b }]
C[{ C-->AS }, { C-->a }, { C-->CC }, { C-->AB }]

word='bababbaabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [A, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->BC }, { B-->SA }]
S[{ S-->AS }, { S-->CA }, { S-->a }, { S-->BB }, { S-->AB }]
C[{ C-->AC }, { C-->SB }, { C-->BA }, { C-->CB }, { C-->BS }]

word='bababbaabb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[B, S, C][B, C]   [A, B]   []       []       []       []       []       []       []       
[B, C]   [C]      [S, C]   [S]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, C]   [A, B]   []       []       []       []       []       
[B, C, S][B, C, S][B, S, C][S, C]   [S, C]   [A, B]   []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, C]   [B, S, C][S, C]   [S]      []       []       []       
[B, C, S][B, C]   [B, C]   [C]      [C]      []       []       [S]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C]   [C]      [B, C]   [A, B]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][S, C]   [S, C]   [S, C]   [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    [C]   [C]   []    []    []    []    []    []    
[]    []    []    [B, S][B, S][]    []    []    []    []    
[]    []    []    []    []    [S]   [S, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AC }, { B-->CA }, { B-->a }]
C[{ C-->BA }]

word='babaaababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    [B]   [C]   [A, B][]    []    []    []    []    []    
[]    [C]   [B]   [C]   [A, B][]    []    []    []    []    
[]    [B]   [C]   [B]   [C]   [A, B][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    [B]   [C]   [A, B][]    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    [B]   [C]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [B][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->a }]

word='babaaababa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->b }, { B-->BC }, { B-->SA }]
S[{ S-->CA }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SC }, { C-->a }, { C-->SS }]

word='babaaababa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, C]      []          []          []          []          []          []          []          []          
[B, C]      [C, S]      [B, S]      []          []          []          []          []          []          []          
[B, S, C]   [A, B, C, S][B, C]      [A, C]      []          []          []          []          []          []          
[B, S, C]   [A, B, C, S][B, C, S]   [A, S]      [A, C]      []          []          []          []          []          
[B, S, C]   [A, B, C, S][B, C, S]   [A, B, C, S][A, S]      [A, C]      []          []          []          []          
[B, S, C]   [A, B, C, S][B, C, S]   [A, C, S]   [A, C, S]   [C, S]      [B, S]      []          []          []          
[B, C, S]   [A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, C]      []          []          
[B, C, S]   [A, B, C, S][B, C, S]   [A, B, C, S][A, C, S]   [A, S, C]   [B, C]      [C, S]      [B, S]      []          
[B, C, S]   [A, B, S, C][B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, S, C][B, C]      [A, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->a }]
C[{ C-->BB }, { C-->CC }]

word='babaaababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[C]   []    [C]   [B, S][]    []    []    []    []    []    
[]    [C]   []    [C]   [B, S][]    []    []    []    []    
[C]   []    [C]   []    [C]   [B, S][]    []    []    []    
[]    [C]   []    [C]   []    [C]   [B]   []    []    []    
[C]   []    [C]   []    [C]   []    [C]   [B, S][]    []    
[]    [C]   []    [C]   []    [C]   []    [C]   [B]   []    
[C]   []    [C]   []    [C]   []    [C]   []    [C]   [B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->BS }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->CC }]
S[{ S-->BA }, { S-->CB }, { S-->AA }, { S-->BC }, { S-->AB }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->b }]

word='babaaababa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[B, C, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, C, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SA }]
B[{ B-->b }, { B-->CS }, { B-->a }]
S[{ S-->AC }, { S-->BA }, { S-->SC }, { S-->b }, { S-->BC }, { S-->AB }]
C[{ C-->CA }, { C-->a }]

word='ababbaaaba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B]      [B, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [S]         [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, S]      [A, B]      [B, S]      []          []          []          []          []          []          
[A, B, S, C][A, S]      [A, C, S]   [A]         [B, S]      []          []          []          []          []          
[A, B, S, C][A, S]      [A, B, C, S][A, S]      [S]         [B, C]      []          []          []          []          
[A, B, C, S][A, S]      [A, B, C, S][A, S]      [A, S]      [S]         [B, C]      []          []          []          
[A, B, C, S][A, S]      [A, B, C, S][A, S]      [A, S]      [A, B, S]   [S]         [B, C]      []          []          
[A, B, S, C][A, S]      [A, B, C, S][A, S]      [A, S]      [A, B, S]   [C, S]      [A, B]      [B, S]      []          
[A, B, S, C][A, S]      [A, B, C, S][A, S]      [A, S]      [A, B, C, S][A, B, C, S][A, B, S]   [S]         [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [S]   []    [B]   []    []    []    []    
[]    []    []    [S]   []    [B, C][S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BC }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->SC }, { B-->a }]
C[{ C-->CS }, { C-->CC }, { C-->AB }]
S[{ S-->b }]

word='ababbaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[A]      [A, C]   [B]      []       []       []       []       []       []       []       
[A, B]   [A, B, C][B]      [A, S]   []       []       []       []       []       []       
[A, B, C][A, B, C][B]      [A, B]   [A, S]   []       []       []       []       []       
[A, C]   [A, C]   [A]      [B, C]   [A, C]   [B]      []       []       []       []       
[A, C]   [A, B, C][A, C]   [B]      [C]      []       [B]      []       []       []       
[A, C]   [B, C]   [C]      []       []       []       []       [B]      []       []       
[A, B, C][B, C]   [C]      []       []       []       []       [B]      [A, S]   []       
[A, C]   [A, B, C][C]      []       []       []       []       [A]      [A, C]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[A]   [A, B][A]   [B]   []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->SB }]
B[{ B-->SA }, { B-->CC }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->b }]
C[{ C-->CA }, { C-->AA }, { C-->BB }, { C-->BS }]

word='ababbaaaba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[A, B]      [B]         [A, S]      []          []          []          []          []          []          []          
[S, C]      [C]         [S]         [S]         []          []          []          []          []          []          
[A, B, C]   [A]         []          []          [S]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A]         [B]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, C]      [B, S, C]   [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][B, S, C]   [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, S, C]   [S]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B]         [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S, C]   []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       []       []       [B, S]   []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->SA }, { B-->SB }, { B-->SC }, { B-->CS }, { B-->a }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->b }]
C[{ C-->AS }, { C-->CC }, { C-->AB }]

word='ababbaaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[A]         [B]         [B]         []          []          []          []          []          []          []          
[C]         []          []          [S]         []          []          []          []          []          []          
[B]         []          []          []          [S]         []          []          []          []          []          
[A, C, S]   [A, B]      [A]         [B]         [B]         [B]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, S, C]   [A, B]      [A, B]      [A]         [B]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      [A]         [B]         []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B, C]      [B]         [C]         []          [S]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      [A]         [B]         [B]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[A]      [A, B]   [A, S]   [B]      []       []       []       []       []       []       
[]       []       [A]      [B]      [A, B, S][]       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       [C]      [A, B, S][C]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->a }]
S[{ S-->b }, { S-->AB }]

word='ababbaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[]    []    []    [A]   [B, S][]    []    []    []    []    
[]    []    []    [S]   []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B, S][]    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->AA }, { A-->CA }]
B[{ B-->b }, { B-->a }]
C[{ C-->CB }, { C-->b }]

word='ababbabbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[]    [A, C][B]   []    []    []    []    []    []    []    
[A]   [A, C][A]   [B, C][]    []    []    []    []    []    
[]    [A, C][]    [A, C][B, C][]    []    []    []    []    
[A]   [A, C][A]   [A, C][A, C][B]   []    []    []    []    
[A]   [A, C][A]   [A, C][A, C][A]   [B, C][]    []    []    
[A]   [A, C][A]   [A, C][A, C][]    [A, C][B, C][]    []    
[A]   [A, C][A]   [A, C][A, C][A]   [A, C][A, C][B]   []    
[A]   [A, C][A]   [A, C][A, C][A]   [A, C][A, C][A]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [C][] [C][C][] [] [] [] [] 
[] [C][] [C][C][] [C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->CA }, { B-->BA }]
C[{ C-->CB }, { C-->BB }, { C-->b }]

word='ababbabbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[A]   [B]   [A]   []    []    []    []    []    []    []    
[A]   [B, C][A]   [B, C][]    []    []    []    []    []    
[A]   [B, C][A]   [C]   [B, C][]    []    []    []    []    
[A]   [B, C][A]   [B, C][B]   [A]   []    []    []    []    
[A]   [B, C][A]   [B, C][B, C][A]   [B, C][]    []    []    
[A]   [B, C][A]   [B, C][B, C][A]   [C]   [B, C][]    []    
[A]   [B, C][A]   [B, C][B, C][A]   [B, C][B]   [A]   []    
[A]   [B, C][A]   [B, C][B, C][A]   [B, C][B]   []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [B][] [] [] [] [] [] 
[] [C][] [B][C][] [] [] [] [] 
[] [C][] [B][C][] [] [] [] [] 
[] [C][] [B][C][] [B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->CB }]
B[{ B-->BC }, { B-->AC }, { B-->AS }, { B-->BA }, { B-->SC }, { B-->a }]
S[{ S-->SB }, { S-->CS }, { S-->b }]
C[{ C-->SS }, { C-->CC }, { C-->BB }, { C-->b }]

word='ababbabbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B]         [S, C]      []          []          []          []          []          []          []          []          
[B, C]      [A, S]      [B]         []          []          []          []          []          []          []          
[B, S, C]   [A, B, C, S][B]         [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      [B, S, C]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, S, C]   [A, S]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [B, S, C]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S, C]   [A, S]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][A, B, C, S][C]         [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->b }, { A-->CB }]
B[{ B-->b }, { B-->BA }, { B-->a }]
C[{ C-->AS }, { C-->SA }, { C-->SS }, { C-->CC }]
S[{ S-->CA }, { S-->BB }, { S-->AA }]

word='ababbabbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, S]      [A, B]      []          []          []          []          []          []          []          []          
[S]         [S]         [B]         []          []          []          []          []          []          []          
[C, S]      [C, S]      [B, S]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [B, S, C]   [B, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [C, S]      [S]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S, C]      [B, S]      [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [B, S, C]   [B, S]      [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [C, S]      [S]         [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, C]      [C]         [S]         [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[] [B][S][] [] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [] [B][S][] [] [] [] [] 
[] [] [] [] [B][S][] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SB }]
B[{ B-->AA }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->SS }]
S[{ S-->CA }, { S-->b }, { S-->AB }]

word='ababbabbaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[]          []          [A]         [C]         [S]         []          []          []          []          []          
[A]         [C]         [S, C]      [A]         []          [C]         []          []          []          []          
[]          []          [C]         []          []          []          [S]         []          []          []          
[C, S]      [A]         [A, B]      [S, C]      []          [A]         [C]         [S]         []          []          
[A, B]      [S, C]      [C, S]      [A, B]      [C]         [S, C]      [A]         []          [C]         []          
[A, C, S]   [A, B, C]   [A, B, S, C][C, S]      [A]         [A, B]      [S, C]      []          [A]         [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[B]   [S]   [C]   [B]   []    [S, C][]    []    []    []    
[A]   [B]   [B, S][C, S][A]   [B]   []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->b }, { B-->a }]

word='babbbabbba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[]    [A]   [A, B][]    []    []    []    []    []    []    
[]    []    [A]   [A, B][]    []    []    []    []    []    
[]    []    []    [A]   [A, B][]    []    []    []    []    
[]    []    []    []    [A]   [B]   []    []    []    []    
[]    []    []    []    []    [A]   [A, B][]    []    []    
[]    []    []    []    []    []    [A]   [A, B][]    []    
[]    []    []    []    []    []    []    [A]   [A, B][]    
[]    []    []    []    []    []    []    []    [A]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]

word='babbbabbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SA }]
S[{ S-->AS }, { S-->a }, { S-->b }]
C[{ C-->AC }, { C-->a }, { C-->SC }]

word='babbbabbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[A]   [A]   [S]   []    []    []    []    []    []    []    
[S]   [S]   []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [S]   []    []    []    
[A, S][A, S][S]   [S]   [S]   [S]   []    [S]   []    []    
[S]   [S]   []    []    []    []    []    []    [S]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->BC }, { B-->AS }, { B-->CA }, { B-->CB }]
S[{ S-->a }]
C[{ C-->b }]

word='babbbabbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [A][C][] [] [] [] [] [] 
[] [] [B][A][C][] [] [] [] [] 
[] [] [B][B][] [S][] [] [] [] 
[] [] [B][B][] [] [C][] [] [] 
[] [] [B][B][] [] [A][C][] [] 
[] [] [B][B][] [] [B][A][C][] 
[] [] [] [] [] [] [B][B][] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->AC }, { B-->SS }]
C[{ C-->a }, { C-->CS }, { C-->b }]
S[{ S-->CC }, { S-->BB }]

word='babbbabbba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [C]         []          []          []          []          []          []          []          []          
[A, C]      [A, S]      [A, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, B, C]   [A, B, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C]   [A, B, S]   [A, C]      []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S]   [B, C]      [B, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C]   [A, B, S]   [A, C]      [A, S]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   [A, B, S]   [A, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   [A, B, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      [B, S]      [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][A][] [] [] [] [] [] [] 
[] [] [C][B][] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AC }]
B[{ B-->b }, { B-->BC }, { B-->SS }]
S[{ S-->CA }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SC }, { C-->AA }, { C-->BB }]

word='abaaaabaab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [B, S]      []          []          []          []          []          []          []          []          
[C]         []          [A]         []          []          []          []          []          []          []          
[A, S]      [B, C]      [C]         [A]         []          []          []          []          []          []          
[A, C]      [B, S]      [A, S]      [C]         [A]         []          []          []          []          []          
[A, S, C]   [B, C]      [C]         [A, S]      [C]         [A]         []          []          []          []          
[A, B, S, C][B, S, C]   [A, C, S]   [A, B, S]   [C, S]      [A]         [B, S]      []          []          []          
[A, B, C, S][B, S, C]   [A, S, C]   [C]         [A, S]      [C]         []          [A]         []          []          
[A, B, C, S][B, S, C]   [A, B, C, S][A, B, S, C][C]         [A, S]      [B, C]      [C]         [A]         []          
[A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, S, C]   [C, S]      [A]         [B, S]      

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, S]      []          []          []          []          []          []          []          []          []          
[C]         [B]         []          []          []          []          []          []          []          []          
[S, C]      []          []          []          []          []          []          []          []          []          
[]          [C]         [A, C]      [S]         []          []          []          []          []          []          
[]          []          [S]         []          [A, S]      []          []          []          []          []          
[]          []          []          [A, B, S, C][]          [A, S]      []          []          []          []          
[]          []          []          []          [A, B, C]   [S]         [C]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AB }, { B-->SA }, { B-->CB }, { B-->AA }, { B-->BB }]
S[{ S-->AC }, { S-->b }]
C[{ C-->a }]

word='abaaaabaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[B]   [B]   [A, C][]    []    []    []    []    []    []    
[]    []    [B, S][A, C][]    []    []    []    []    []    
[B]   [B]   [B]   [B, S][A, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B, S][A, C][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, C][]    []    
[]    []    []    []    []    []    []    [B, S][A, C][]    
[]    []    []    []    []    []    []    []    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->BC }, { B-->SB }, { B-->SC }, { B-->CC }]
S[{ S-->AS }, { S-->a }, { S-->b }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->b }, { C-->AB }]

word='abaaaabaab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S]      [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S]      [A, S]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, S]      [A, S]      [A, S]      [A, S]      []          []          []          []          
[B, C, S]   [B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [S, C]      []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [A, S]      [A, S]      []          
[B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [S, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }]
B[{ B-->b }]
C[{ C-->CA }, { C-->a }]

word='abaaaabaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [A]   [A, C][]    []    []    []    []    []    []    
[C]   [A]   [C]   [A, C][]    []    []    []    []    []    
[C]   [A]   [C]   [C]   [A, C][]    []    []    []    []    
[C]   [A]   [C]   [C]   [C]   [A, C][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[C]   [A]   [C]   [C]   [C]   [C]   [A]   [A, C][]    []    
[C]   [A]   [C]   [C]   [C]   [C]   [A]   [C]   [A, C][]    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CA }]
S[{ S-->AC }, { S-->a }, { S-->b }]
C[{ C-->a }, { C-->CS }]

word='abaaaabaab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A, C]   [A]      [S, C]   []       []       []       []       []       []       []       
[A, S, C][A, S]   [A, C]   [S, C]   []       []       []       []       []       []       
[A, S, C][A, S]   [A, S, C][A, C]   [S, C]   []       []       []       []       []       
[A, S, C][A, S]   [A, C, S][A, S, C][A, C]   [S, C]   []       []       []       []       
[A, S, C][A, S]   [A, C, S][A, S, C][A, C]   [C]      [S]      []       []       []       
[A, C, S][A, S]   [A, C, S][A, C, S][A, S, C][A, C]   [A]      [S, C]   []       []       
[A, C, S][A, S]   [A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   [S, C]   []       
[A, C, S][A, S]   [A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   [C]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [C][] [] [] [] [] [] 
[S][] [] [] [C][] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->BC }, { B-->a }, { B-->SS }, { B-->SC }]
C[{ C-->SB }, { C-->CS }]
S[{ S-->CB }, { S-->a }, { S-->b }]

word='aababbabab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, C]   [B, S]   []       []       []       []       []       []       []       []       
[B, C]   [B]      [S]      []       []       []       []       []       []       []       
[B, S, C][B, C]   [B, C]   [B, S]   []       []       []       []       []       []       
[B, S, C][B, C]   [B, C]   [B]      [S]      []       []       []       []       []       
[B, S, C][B, S, C][B, C, S][B, C]   [B]      [S]      []       []       []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, C]   [B, C]   [B, S]   []       []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, C]   [B, C]   [B]      [S]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B, C]   [B, S]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B, C]   [B]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
C[{ C-->a }]
S[{ S-->CC }, { S-->CS }, { S-->b }]

word='aababbabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[B][B][B][C][] [] [] [] [] [] 
[] [] [] [S][S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [B][C][] [] [] 
[] [] [] [] [] [] [S][S][] [] 
[] [] [] [] [] [] [B][B][C][] 
[] [] [] [] [] [] [] [] [S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->SB }, { B-->AA }, { B-->SS }]
C[{ C-->AC }, { C-->BS }, { C-->b }]
S[{ S-->a }, { S-->BB }, { S-->CC }]

word='aababbabab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B]         [A, S]      []          []          []          []          []          []          []          []          
[B, C, S]   [B, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, C]      [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [B, C]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, C]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [B, C]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [B, C]      [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->SB }, { B-->a }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->BC }]
C[{ C-->CC }, { C-->BS }, { C-->b }, { C-->AB }]

word='aababbabab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, S, C]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S, C]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->BA }]
B[{ B-->BC }, { B-->CC }]
C[{ C-->CA }, { C-->a }, { C-->SS }, { C-->BS }]
S[{ S-->b }]

word='aababbabab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, B, C][A, C]   []       []       []       []       []       []       []       []       
[C]      []       [S]      []       []       []       []       []       []       []       
[B, C]   []       []       [A, C]   []       []       []       []       []       []       
[C]      []       []       []       [S]      []       []       []       []       []       
[B]      []       []       [B]      [C]      [S]      []       []       []       []       
[A, B, C][]       []       [A, B]   [B, C]   []       [A, C]   []       []       []       
[B, C]   []       []       [B, C]   [C]      []       []       [S]      []       []       
[A, B, C][]       []       [A, B, C][B, C]   []       []       []       [A, C]   []       
[B, C]   []       []       [B, C]   [C]      []       []       []       []       [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->BA }]
B[{ B-->a }]
C[{ C-->SA }, { C-->a }, { C-->BS }]
S[{ S-->CA }, { S-->SC }, { S-->BB }, { S-->b }]

word='baabbaaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [B, C]   []       []       []       []       []       []       []       []       
[C, S]   [A, S]   [B, C]   []       []       []       []       []       []       []       
[A, C, S][A, S]   [A, C]   [S]      []       []       []       []       []       []       
[A, C]   [A, S]   [A]      []       [S]      []       []       []       []       []       
[A, C]   [A, S]   [A]      []       [S]      [B, C]   []       []       []       []       
[A, S, C][A, S, C][A, C]   [S]      [C, S]   [A, S]   [B, C]   []       []       []       
[A, C, S][A, S, C][A, C, S][C, S]   [A, C, S][A, C, S][A, S]   [B, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [B, C]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[C]   [A]   [A, C][]    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->CA }, { B-->CB }]
C[{ C-->AC }, { C-->a }, { C-->BB }, { C-->AB }]

word='baabbaaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[B, C][B]   [B]   [A]   []    []    []    []    []    []    
[B]   []    []    []    [A]   []    []    []    []    []    
[]    []    []    [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[B, C][B, C][B, C][B, C][B, C][B]   [B]   [B]   [B]   [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AB }, { B-->a }, { B-->BB }]

word='baabbaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BC }]
B[{ B-->a }]
C[{ C-->AS }, { C-->SB }, { C-->CS }, { C-->AB }, { C-->BS }]
S[{ S-->b }]

word='baabbaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[A]   [C]   [A, B][]    []    []    []    []    []    []    
[A, C][A, C][C]   [A, S][]    []    []    []    []    []    
[A, C][A, C][A, C][C]   [A, S][]    []    []    []    []    
[A, C][A, C][C]   [A]   [C]   [A, B][]    []    []    []    
[A, C][C]   [A]   [C]   [A]   [C]   [A, B][]    []    []    
[C]   [A]   [C]   [A]   [C]   [A]   [C]   [A, B][]    []    
[A]   [C]   [A]   [C]   [A]   [C]   [A]   [C]   [A, B][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [A, S]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[A, C][A, C][C]   []    []    []    []    []    []    []    
[A, C][C]   [A]   [C]   []    []    []    []    []    []    
[C]   [A]   [C]   [A]   [C]   []    []    []    []    []    
[A]   [C]   [A]   [C]   [A]   [C]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=41

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->AS }]
S[{ S-->b }]

word='baabbaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [C]   [A, S][]    []    []    []    []    []    
[]    []    []    [C]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    [C]   [A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BA }]
B[{ B-->BC }, { B-->CA }, { B-->a }]
C[{ C-->AC }, { C-->AS }, { C-->SB }, { C-->b }, { C-->AB }]
S[{ S-->SA }, { S-->CB }, { S-->CC }, { S-->BS }]

word='aababbabaa'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, C]      [A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S]      [B, C]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S]      [B, C, S]   [S]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][S, C]      [B, S]      [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S, C]      [B, S]      [B, C]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, S, C]   [A, B, S, C][A, B, C, S][B, S]      [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->b }, { A-->AS }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->a }]
S[{ S-->AC }, { S-->a }, { S-->AB }]
C[{ C-->AA }]

word='aababbabaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[A, S, C][A]      [A, B]   []       []       []       []       []       []       []       
[A, S, C][A, S]   [A, S]   [B, S]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A]      [A, B]   []       []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, B]   []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, C, S][A, C, S][A, S]   [B, S]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A]      [A, B]   []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, S]   [A, S]   [B, S]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C, S][A, C, S][A]      [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BB }]
B[{ B-->CA }, { B-->SC }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AS }, { C-->BA }, { C-->a }]

word='aababbabaa'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A]         [S]         []          []          []          []          []          []          []          
[A, B, S, C][B, C, S]   [A, B]      [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [S, C]      [A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [S, C]      [A, B]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [S, C]      [A]         [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S]   [S, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B, S][C]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }]
B[{ B-->BC }, { B-->AA }]
S[{ S-->AC }, { S-->SA }]
C[{ C-->CA }, { C-->BB }, { C-->b }]

word='aababbabaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[B]         [B, S]      [A, C]      []          []          []          []          []          []          []          
[B, C]      [S]         [B, C]      [A]         []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [A, B, C]   [B, S]      [A, C]      []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, S]      [B, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, S, C][B, S, C]   [S, C]      [B, C]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, B, C, S][A, B, C]   [B, S]      [A, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, B, C, S][A, B, C]   [S]         [B, C]      [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, B, C, S][A, B, S, C][S, C]      [C]         [B]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   []    [B, S][]    []    []    []    []    []    []    
[]    []    []    [S, C][]    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    [A]   [B, C][]    []    []    []    
[]    []    []    []    []    [C]   [S, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }]
B[{ B-->AB }, { B-->SA }, { B-->a }, { B-->SS }]
C[{ C-->BA }, { C-->BS }]
S[{ S-->BB }, { S-->b }]

word='aababbabaa'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      []          []          []          []          []          []          []          []          
[B, C]      [C]         [S]         []          []          []          []          []          []          []          
[B, S, C]   [B, S]      [B]         [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      [C]         [S]         []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S]      [B, S]      [B]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [S, C]      [B]         [A, B]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [A, C]      [C]         [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [B]         [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->a }, { B-->AA }]
S[{ S-->b }, { S-->BS }]

word='bbbaabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    [A, B][A, B][]    []    []    []    []    
[]    []    []    [S]   [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [A, B][]    []    
[]    []    []    []    []    []    []    [A, B][A, B][]    
[]    []    []    []    []    []    []    [A, B][A, B][A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->AB }, { B-->a }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->SC }, { S-->BS }]
C[{ C-->AS }, { C-->CC }, { C-->b }]

word='bbbaabbaaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[S, C]      [B, C]      []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, S]      [A, S]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][S]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][S]         [S]         [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][S]         [S]         [S, C]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [S]         [A, S]      [A, S]      [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][S]         [S]         [A, B, S, C][A, B, S, C][S]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][S]         [S]         [A, B, S, C][A, B, S, C][S]         [S]         [B, S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [A][] [] [] [] 
[] [] [B][] [] [] [B][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AB }]
B[{ B-->b }]

word='bbbaabbaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[A]   [A]   [A, B][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [A]   [A, B][]    []    []    []    
[]    []    []    []    [A]   [A]   [A, B][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CA }, { A-->CB }, { A-->BA }]
B[{ B-->AB }, { B-->BS }, { B-->CS }, { B-->SS }]
C[{ C-->SA }, { C-->a }]
S[{ S-->a }, { S-->AA }, { S-->SC }, { S-->b }]

word='bbbaabbaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[B]         [B]         [S]         []          []          []          []          []          []          []          
[A, B]      [B]         [B, S]      [S, C]      []          []          []          []          []          []          
[A, B, C]   [A, B]      [B, S]      [B, S]      [S, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [B]         [S]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [B]         [S]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [B]         [B, S]      [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B, C]   [A, B]      [B, S]      [B, S]      [S, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S]   [B, S]      [S, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][B][] [] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [] [C][C][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->CA }, { B-->SC }]
S[{ S-->AS }, { S-->BA }, { S-->a }]
C[{ C-->CC }, { C-->AA }, { C-->b }]

word='bbbaabbaaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B]         [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->AS }, { S-->AC }, { S-->BA }, { S-->a }, { S-->CC }]
C[{ C-->SB }]

word='ababbbabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [A, B]   []       []       []       []       []       []       []       []       
[]       [S]      [S]      []       []       []       []       []       []       []       
[S]      [C, S]   [C]      [A, B]   []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B, S]   [A, B]   []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S]   [A, B]   []       []       []       []       
[]       []       []       [S]      [S]      [S]      [S]      []       []       []       
[S]      [S]      [S]      [S, C]   [S, C]   [S, C]   [C]      [A, B]   []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C]   [B, S]   [A, B]   []       
[]       []       []       []       []       []       []       [S]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [S, C][S, C][]    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BC }, { A-->SA }]
B[{ B-->a }]
S[{ S-->AS }, { S-->SC }, { S-->b }]
C[{ C-->SB }]

word='ababbbabba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, C][A, C][A, B][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[A]   [A]   [A]   [A]   [A, S][A, C][A, B][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, C][A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->CS }]
C[{ C-->a }, { C-->SS }]
S[{ S-->b }]

word='ababbbabba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [B]   [S]   []    []    []    []    []    []    
[]    []    []    [C]   [S]   []    []    []    []    []    
[]    []    []    [B]   [C]   [S]   []    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    [B]   [S]   []    []    
[]    []    []    []    []    []    []    [C]   [S]   []    
[]    []    []    []    []    []    []    []    []    [B, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }, { B-->CS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->AB }]

word='ababbbabba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[C][B][A][] [] [] [] [] [] [] 
[B][] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [S][B][A][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [S][B][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }, { A-->SB }]
B[{ B-->AB }, { B-->AC }]
S[{ S-->BA }, { S-->CC }, { S-->SC }]
C[{ C-->CA }, { C-->CS }, { C-->a }, { C-->b }]

word='ababbbabba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, C, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
S[{ S-->a }, { S-->BB }, { S-->b }]

word='ababbbabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[] [B][S][] [] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 
[B][S][] [B][S][] [] [] [] [] 
[] [B][S][] [B][S][] [] [] [] 
[S][] [B][S][] [B][S][] [] [] 
[B][S][] [B][S][] [B][S][] [] 
[] [B][S][] [B][S][] [B][S][] 
[S][] [B][S][] [B][S][] [B][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->a }]

word='ababbbabbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, C][C]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[A, C][A]   [A, C][C]   []    []    []    []    []    []    
[A, C][A, C][A, C][A]   [C]   []    []    []    []    []    
[A, C][A, C][A, C][C]   [A]   [C]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    
[A, C][A, C][A, C][A]   [C]   [A]   [A, C][C]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   [C]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][C][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->SA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AA }]
S[{ S-->AS }, { S-->CA }, { S-->b }]
C[{ C-->AC }, { C-->a }]

word='ababbbabbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[S]         [B, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [A, B]      [A, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [S]         [B, S]      []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, S]      []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   [A, B]      [A, C]      []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [S]         [B, S]      []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, S]      []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[] [A][] [A][A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AS }, { A-->CB }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->b }]
C[{ C-->a }, { C-->CS }, { C-->SC }]

word='ababbbabbb'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, S]   []       []       []       []       []       []       []       []       
[A, B, C][C, S]   [B, C]   []       []       []       []       []       []       []       
[A, B, C][C, S]   [B, C]   [A, S]   []       []       []       []       []       []       
[A, B, C][C, S]   [B, C]   [A]      [A, S]   []       []       []       []       []       
[A, B, C][C, S]   [B, C]   [A]      [A]      [A, S]   []       []       []       []       
[A, B, C][A, C, S][A, B, C][A, C]   [A, C]   [C, S]   [B, C]   []       []       []       
[A, B, C][A, C, S][A, B, C][A, C]   [A, C]   [C, S]   [B, C]   [A, S]   []       []       
[A, B, C][A, C, S][A, B, C][A, C]   [A, C]   [C, S]   [B, C]   [A]      [A, S]   []       
[A, B, C][A, C, S][A, B, C][A, C]   [A, C]   [C, S]   [B, C]   [A]      [A]      [A, S]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [B, C]   []       []       []       []       []       []       []       
[]       []       [A, B, C][A, C]   []       []       []       []       []       []       
[]       []       [A, B, C][A, C]   []       []       []       []       []       []       
[]       []       [A, B, C][A, C]   []       []       []       []       []       []       
[]       []       [A, B, C][A, C]   []       []       [B, C]   []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->b }, { S-->BS }]

word='ababbbabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [A, S]   []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [A, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }]

word='baabbbabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [A, B][A, B][]    []    []    []    []    []    []    
[]    [A, B][B]   [A]   []    []    []    []    []    []    
[]    [A, B][B]   []    [A]   []    []    []    []    []    
[]    [A, B][B]   []    []    [A]   []    []    []    []    
[]    [A, B][A, B][]    []    []    [A, B][]    []    []    
[]    [A, B][A, B][]    []    []    [B]   [A]   []    []    
[]    [A, B][A, B][]    []    []    [A, B][]    [A, B][]    
[]    [A, B][A, B][]    []    []    [A, B][]    [A, B][A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->CA }, { C-->a }, { C-->b }]

word='baabbbabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C]   [A, C][A, C][]    []    []    []    []    []    []    
[C]   [A, C][A]   [C]   []    []    []    []    []    []    
[C]   [A, C][A]   []    [C]   []    []    []    []    []    
[C]   [A, C][A]   []    []    [C]   []    []    []    []    
[C]   [A, C][A]   []    []    [C]   [A, C][]    []    []    
[C]   [A, C][A]   []    []    [C]   [A]   [C]   []    []    
[C]   [A, C][A]   []    []    [C]   [A]   [C]   [A, C][]    
[C]   [A, C][A]   []    []    [C]   [A]   [C]   [A, C][A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AS }, { A-->SA }]
B[{ B-->b }]
S[{ S-->SB }, { S-->a }, { S-->BS }, { S-->AB }]

word='baabbbabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A, S][]    []    []    []    []    []    []    
[S]   [A, S][S]   [B]   []    []    []    []    []    []    
[S]   [A, S][S]   []    [B]   []    []    []    []    []    
[S]   [A, S][S]   []    []    [B]   []    []    []    []    
[A]   [A]   [A]   [S]   [S]   [S]   [A, S][]    []    []    
[A, S][A, S][A, S][S]   [S]   [S]   [S]   [B]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [S]   [A, S][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->BS }, { A-->AC }]
B[{ B-->CA }, { B-->a }]
S[{ S-->AS }, { S-->BA }]
C[{ C-->BB }]

word='baabbbabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A]   [C]   [B]   []    []    []    []    []    []    []    
[]    [A, B][S]   [A]   []    []    []    []    []    []    
[S]   [S]   []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[S]   [A, S][A]   [S]   [S]   [S]   [S]   [A]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[S]   [A, S][A]   [S]   [S]   [S]   [S]   [A]   [C]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->CA }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->b }, { S-->BS }, { S-->BC }]
C[{ C-->a }, { C-->CS }]

word='baabbbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       [B]      [C]      []       []       []       []       []       []       []       
[]       [B, S]   [C]      [S]      []       []       []       []       []       []       
[]       [B, S]   [C]      []       [S]      []       []       []       []       []       
[]       [B, S]   [C]      []       []       [S]      []       []       []       []       
[]       [S]      [B]      []       []       []       [C]      []       []       []       
[]       [S, C]   [B, S]   []       []       []       [C]      [S]      []       []       
[S]      [A, B, C][S]      []       []       []       [B]      []       [C]      []       
[]       [B, S]   [A, C]   []       []       []       [S]      []       [B]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->SB }, { A-->BA }]
B[{ B-->a }]
C[{ C-->AC }, { C-->SS }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->a }, { S-->CS }, { S-->BS }]

word='aabababbba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S, C][B, S]   []       []       []       []       []       []       []       []       
[A, C]   [A]      [C]      []       []       []       []       []       []       []       
[A, S, C][S, C]   [S]      [B, S]   []       []       []       []       []       []       
[A, C]   [A]      [A]      [A]      [C]      []       []       []       []       []       
[A, S, C][A, S, C][S, C]   [S, C]   [S]      [B, S]   []       []       []       []       
[A, C]   [A, C]   [A]      [A]      [A]      [A]      [C]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [C]      [C]      []       [C]      []       []       
[A, C]   [A, C]   [C]      [C]      []       []       []       []       [C]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][S, C]   [S, C]   [S]      [S]      [S]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   [A]   []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A, C][A, C][]    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BS }, { A-->CA }, { A-->SB }]
B[{ B-->a }]
C[{ C-->CB }, { C-->CS }, { C-->a }, { C-->BB }, { C-->AB }]
S[{ S-->SS }, { S-->SC }, { S-->b }, { S-->BC }]

word='aabababbba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C, S]   [B, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, C]   [A, S]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][B, C]   []       []       []       []       []       []       
[A, S, C][A, C, S][A, S, C][A, C]   [A, S]   []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, C, S][B, C]   []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, S, C][A, C]   [A, S]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A, S]   [A, S]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A, S]   [A, S]   [A, S]   []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][B, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [S][C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->BS }, { B-->BA }, { B-->CS }, { B-->a }]
C[{ C-->CA }, { C-->SB }, { C-->CB }]
S[{ S-->b }]

word='aabababbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   [S]   []    []    []    []    []    []    []    
[]    []    [C]   [B]   []    []    []    []    []    []    
[]    []    [B, C][B]   [S]   []    []    []    []    []    
[]    []    [C]   []    [C]   [B]   []    []    []    []    
[]    []    [B, C][]    [B, C][B]   [S]   []    []    []    
[]    []    [B, C][]    [B, C][B]   [A]   [S]   []    []    
[]    []    [B, C][]    [B, C][B]   [A]   [A]   [S]   []    
[]    []    [B, C][]    [B, C][B]   [A]   [A]   [C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][] [A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->AB }]
B[{ B-->SS }]
C[{ C-->AS }, { C-->CA }, { C-->SB }, { C-->CB }, { C-->SC }, { C-->a }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->BB }, { S-->CS }]

word='aabababbba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [S, C]      [S, C]      []          []          []          []          []          []          
[A, B, C, S][B, S, C]   [S, C]      [S, C]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S, C]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S, C]      [S, C]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S, C]      [S, C]      []          [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S, C]      [S, C]      []          []          [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, S, C]   [S, C]      [S, C]      [S, C]      [S, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->BA }]
B[{ B-->AS }]
C[{ C-->CB }, { C-->BB }]
S[{ S-->a }, { S-->AA }, { S-->CS }]

word='aabababbba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, S]      [A, S]      []          []          []          []          []          []          []          []          
[A, B]      [S]         [A]         []          []          []          []          []          []          []          
[A, B, S, C][B]         [B, S]      [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, S]      [A, B]      [S]         [A]         []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][B]         [B, S]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [A, B]      [S]         [A]         []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][B, S]      [A, S]      [B]         [S]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   [A]         [B]         [S]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [A]         [B]         [B, S]      [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[]       [C]      [A, B, S][]       []       []       []       []       []       []       
[]       [B]      [C]      [S]      []       []       []       []       []       []       
[]       []       [A]      []       [A, S]   []       []       []       []       []       
[]       []       [B]      [A, B]   [B, C]   [A]      []       []       []       []       
[]       []       []       []       [B]      [B, C]   [A]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->CS }, { A-->CA }]
B[{ B-->BC }, { B-->SA }, { B-->a }]
C[{ C-->AC }, { C-->a }, { C-->SS }, { C-->b }]
S[{ S-->CC }, { S-->b }, { S-->BS }]

word='bbaabbbbaa'
setV=setV
[C, S]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [C, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [B, S]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [C, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [C, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [C, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, S]      [B, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->b }]

word='bbaabbbbaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, B][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]

word='bbaabbbbaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->SS }, { S-->b }]

word='bbaabbbbaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[B][B][B][A][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 
[] [] [] [] [S][S][S][] [] [] 
[] [] [] [] [S][S][S][S][] [] 
[] [] [] [B][A][A][A][A][A][] 
[] [] [] [] [B][B][B][B][B][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][B][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AC }]
C[{ C-->a }, { C-->AA }]
S[{ S-->CC }, { S-->b }]

word='bbaabbbbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [A, C]   []       []       []       []       []       []       []       
[]       []       [A, C, S][A, C]   []       []       []       []       []       []       
[]       []       [A, C]   [A]      [S]      []       []       []       []       []       
[]       []       [A]      []       []       [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[]       []       []       []       []       []       []       []       [A, C]   []       
[]       []       []       []       []       []       []       []       [A, C, S][A, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->CA }, { A-->SB }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->SA }]
C[{ C-->AC }, { C-->AA }, { C-->CC }]
S[{ S-->a }, { S-->BB }, { S-->AB }]

word='bbaabbbbab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, B]      []          []          []          []          []          []          []          []          
[A, C]      [A]         [S]         []          []          []          []          []          []          []          
[A, C]      [A]         []          [S]         []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B]      [A, B]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, S, C]   [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [A]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, B]      [A, B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B]   [B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AS }]
B[{ B-->AC }, { B-->SA }, { B-->BA }, { B-->CC }]
S[{ S-->b }, { S-->BC }]
C[{ C-->a }]

word='bbaabbbbab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [A, S]   []       []       []       []       []       []       []       []       
[B, S]   [A, B]   [A, C]   []       []       []       []       []       []       []       
[A, B, S][B, S]   [B]      [A, C]   []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A]      [A, S]   []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A]      [A, B]   [A, S]   []       []       []       []       
[A, B]   [A, B]   [A, B]   [A]      [A, B]   [A, B]   [A, S]   []       []       []       
[A, B]   [A, B]   [A, B]   [A]      [A, B]   [A, B]   [A, B]   [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, B, S][A, B, S][B, S]   [A, B]   [A, C]   []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[S]   [S]   [A, S][B]   [S]   [B, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=31

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AC }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->BC }]
C[{ C-->b }]

word='bbaabbbbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, S][B, C][]    []    []    []    []    []    []    []    
[B]   []    [S]   []    []    []    []    []    []    []    
[A]   [A]   [B]   [S]   []    []    []    []    []    []    
[A, B][A]   [S]   [A]   [B, C][]    []    []    []    []    
[A, S][A]   [A]   [A, B][A, S][B, C][]    []    []    []    
[A]   [A]   [A, B][A, S][A]   [A, S][B, C][]    []    []    
[A, B][A]   [A, S][A]   [A, B][A]   [A, S][B, C][]    []    
[A]   [A]   [B]   []    [A]   [A]   [B]   []    [S]   []    
[A, B][A]   [S]   [A]   [A, B][A]   [A, S][A]   [A]   [B, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A, B][A, S][]    []    []    []    []    []    
[A, B][A]   [A, S][]    [A, B][]    []    []    []    []    
[A]   [A]   []    []    [A]   [A]   []    []    []    []    
[A, B][A]   [S]   []    [A, B][A]   [A, S][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=33

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }]
B[{ B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->CS }]
S[{ S-->a }]
C[{ C-->AS }, { C-->AA }, { C-->BS }]

word='bbaabbbbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[B]      [C]      [S]      []       []       []       []       []       []       []       
[A, C]   [B]      []       [S]      []       []       []       []       []       []       
[A, B, C][B]      []       [B]      [A]      []       []       []       []       []       
[A, B, C][B]      []       [B]      [C]      [A]      []       []       []       []       
[A, B, C][A, B]   []       [B]      [B]      [C]      [A]      []       []       []       
[A, B, C][A, B, C][B]      [A, B]   [A, B]   [B]      [C]      [A]      []       []       
[A, B, C][A, B, C][B, C]   [A, B, C][B, C]   [A, C]   [B]      [C]      [S]      []       
[A, B, C][A, B, C][A, B]   [A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    [B, C][]    []    [B]   []    []    []    []    []    
[]    [C]   [C]   [B, C][]    [C]   []    []    []    []    
[]    []    []    []    [C]   []    [C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=14

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }, { A-->BA }]
B[{ B-->b }]
S[{ S-->a }]
C[{ C-->SS }]

word='bbaabbbbab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [C][S][] [] [] [] [] [] 
[] [] [] [A][B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [A][A][A][A][A][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SB }]
B[{ B-->b }, { B-->AS }, { B-->SC }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->BS }]
S[{ S-->SA }, { S-->BA }, { S-->BC }]

word='baabbbabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[B, S][A, C][A, C][]    []    []    []    []    []    []    
[A]   []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[A, C][B]   [B]   [S]   [C]   [S]   [A, C][]    []    []    
[B, S][A, C][A, C][A, C][S]   [A]   []    [B]   []    []    
[B, S][A, C][A, C][A, C][B, S][A, C][B]   [S]   [A, C][]    
[A, C][B, S][B, S][S]   [A, C][S]   [A, C][A]   []    [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][A, C][A, C][A, C][S]   []    []    []    []    []    
[]    []    []    [A, C][]    [A, C][]    []    []    []    
[]    [S]   [S]   [S]   [A]   [S]   [A, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->SA }, { B-->CA }, { B-->SB }, { B-->CB }, { B-->SS }]
S[{ S-->AC }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AS }, { C-->SC }]

word='baabbbabab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B]         [B]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A, B]      [A, B]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [B, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [C]   [B]   []    []    []    []    []    []    
[]    []    [C]   [B, C][B, C][]    []    []    []    []    
[]    []    []    [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->BS }, { B-->CC }, { B-->BB }]
S[{ S-->AS }, { S-->AA }, { S-->SC }]
C[{ C-->CS }, { C-->a }, { C-->SS }, { C-->BC }]

word='baabbbabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [A, C]      []          []          []          []          []          []          []          []          
[S]         [B, S]      [A, C]      []          []          []          []          []          []          []          
[S, C]      [C, S]      [S]         [A]         []          []          []          []          []          []          
[C, S]      [B, C, S]   [C, S]      [S]         [A]         []          []          []          []          []          
[C, S]      [B, C, S]   [C, S]      [S]         [S]         [A]         []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [S, C]      [S]         [S]         [A, C]      []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [S, C]      [S, C]      [S]         [S]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, S, C]   [S, C]      [C, S]      [S]         [A, C]      []          
[A, B, C, S][B, C, S]   [B, C, S]   [S, C]      [S, C]      [S, C]      [C, S]      [S]         [S]         [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BS }, { A-->SA }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
S[{ S-->SS }, { S-->b }]

word='baabbbabab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, B]   [A]      [B]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [A]      [A, S]   []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B, S][A, S]   []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B, S][A, B, S][A, S]   []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A]      []       [B]      []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      [A, S]   []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      []       []       [B]      []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }, { A-->CB }, { A-->BA }]
B[{ B-->BC }, { B-->SS }]
C[{ C-->SC }, { C-->CS }, { C-->a }, { C-->AA }, { C-->BS }, { C-->b }]
S[{ S-->AC }, { S-->BB }, { S-->b }]

word='baabbbabab'
setV=setV
[C, S]      []          []          []          []          []          []          []          []          []          
[C]         [A, C]      []          []          []          []          []          []          []          []          
[B, C]      [C, S]      [A, C]      []          []          []          []          []          []          []          
[A, B, C]   [B, C, S]   [C, S]      [C, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][B, C]      [C, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [C, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C, S]      [C, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [S, C]      [C]         [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [C, S]      [C, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->CA }]
B[{ B-->CB }, { B-->CC }]
C[{ C-->AC }, { C-->a }, { C-->CS }]
S[{ S-->b }]

word='aabbabbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A, B]   [C]      [S]      []       []       []       []       []       []       []       
[A, B]   [C]      []       [S]      []       []       []       []       []       []       
[B, C]   [B]      []       []       [C]      []       []       []       []       []       
[A, B, C][A, B]   []       []       [C]      [S]      []       []       []       []       
[A, B, C][A, B]   []       []       [C]      []       [S]      []       []       []       
[A, B, C][A, B]   []       []       [C]      []       []       [S]      []       []       
[A, B, C][A, B]   []       []       [C]      []       []       []       [S]      []       
[A, B, C][A, B]   []       []       [C]      []       []       []       []       [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->a }, { S-->SS }]

word='aabbabbbbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SA }]
B[{ B-->BA }, { B-->SS }, { B-->SC }]
C[{ C-->AS }]
S[{ S-->CB }, { S-->a }, { S-->b }, { S-->AB }]

word='aabbabbbbb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, S]      []          []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [S]         []          []          []          []          []          []          []          
[A, B, C, S][S]         [B]         [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B]      [A, B]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [B, C]      [B, C]      [S]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         [B]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   []          [B]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A]         []          [B]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [A]         []          [B]         [S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[]       [B, S]   []       []       []       []       []       []       []       []       
[]       [C]      [B, C]   []       []       []       []       []       []       []       
[]       []       []       [A, B, S][]       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [C]      [C]      []       []       []       []       []       
[]       []       []       []       [A, S, C][A, C]   []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->CA }, { C-->a }, { C-->b }]

word='aabbabbbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [A, C][]    []    []    []    []    []    []    
[]    [C]   [C]   [A, C][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   [A, C][]    []    []    []    
[]    []    []    []    [C]   [C]   [A, C][]    []    []    
[]    []    []    []    [C]   [C]   [C]   [A, C][]    []    
[]    []    []    []    [C]   [C]   [C]   [C]   [A, C][]    
[]    []    []    []    [C]   [C]   [C]   [C]   [C]   [A, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][C][] [] [] [] 
[] [] [] [] [C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->SC }, { B-->a }, { B-->SS }]
S[{ S-->CA }, { S-->SB }]
C[{ C-->CB }, { C-->AA }, { C-->BB }, { C-->b }]

word='aabbabbbbb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[C]         [A, B]      []          []          []          []          []          []          []          []          
[A, S]      [C]         [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, C, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, C, S]   [C, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->CB }, { B-->AA }]
C[{ C-->SB }, { C-->a }, { C-->BS }]
S[{ S-->a }, { S-->b }, { S-->BC }]

word='bbabbbaaab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      [S, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [S, C]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A]         []          []          [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A]         []          []          []          [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [B, C]      [B, C]      [B, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A, S, C][]       []       []       []       []       []       
[]       []       []       [A, S, C][]       []       []       []       []       []       
[]       []       []       []       [C, S]   []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

word='bbabbbaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->a }, { S-->AA }, { S-->b }]

word='bbabbbaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    [S]   [A, S][]    []    []    []    []    
[]    []    []    []    [S]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->CA }, { B-->BA }]
C[{ C-->SA }, { C-->AA }, { C-->CS }]
S[{ S-->a }, { S-->b }]

word='bbabbbaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       [C]      [A, S]   []       []       []       []       []       []       []       
[]       [C]      []       [S]      []       []       []       []       []       []       
[]       [C]      []       []       [S]      []       []       []       []       []       
[]       [C]      []       []       []       [S]      []       []       []       []       
[]       [B, C]   []       []       []       [C]      [A, S]   []       []       []       
[C]      [A, B, C][]       []       []       [B, C]   [C]      [A, S]   []       []       
[B, C]   [A, B, C][]       []       [C]      [A, B, C][B, C]   [C]      [A, S]   []       
[A, C]   [A, B, C][]       []       [C]      [A, C]   [A, C]   [C]      []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       [A, B, C][]       []       []       []       
[A, C]   []       []       []       [C]      [A]      [A, C]   []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->SB }, { B-->a }]
S[{ S-->a }, { S-->BB }]

word='bbabbbaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->a }, { B-->SC }, { B-->CC }]
C[{ C-->SA }, { C-->SB }, { C-->BB }]
S[{ S-->BA }]

word='abbbabbaba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[C]      []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[B, C]   [B]      [B]      [B]      [A, B]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [A]      []       []       []       []       
[B, C]   [C]      [C]      [C]      [C]      []       [A]      []       []       []       
[B, C, S][B, C]   [B, C]   [B, C]   [B, C]   [B]      [B]      [A, B]   []       []       
[S, C]   [S]      [S]      [S]      [S]      [S]      [S]      [S]      [A]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[S]   [C]   [C]   [C]   [B, C][]    []    []    []    []    
[S, C][S]   [S]   [S]   [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AS }]
B[{ B-->AB }, { B-->BA }, { B-->a }]
S[{ S-->b }]

word='abbbabbaba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][A, S][]    []    []    []    []    []    []    []    
[A, B][A]   [A, S][]    []    []    []    []    []    []    
[A, B][A]   [A]   [A, S][]    []    []    []    []    []    
[A, B][B]   [B]   [B]   [A, B][]    []    []    []    []    
[A, B][B]   [B]   [B]   [A, B][A, S][]    []    []    []    
[A, B][B]   [B]   [B]   [A, B][A]   [A, S][]    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   [B]   [A, B][]    []    
[A, B][A, B][A, B][A, B][A, B][B]   [B]   [A, B][A, S][]    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   [A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][B][] [] [] [] [] [] [] 
[] [B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SS }, { A-->CS }, { A-->SA }, { A-->CB }]
B[{ B-->a }]
S[{ S-->CA }, { S-->BA }]
C[{ C-->AS }, { C-->SC }, { C-->b }, { C-->BC }]

word='abbbabbaba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [C]      []       []       []       []       []       []       []       
[C, S]   [S]      [A]      [C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, S]   [A, S]   [A, B]   []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [C]      [C]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S]   [A, S]   [A]      [C]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, S]   [A, S]   [A, B]   []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, S, C][A, C]   [C]      [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, S]   [A, B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S]   [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->CB }]
B[{ B-->AB }, { B-->CA }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->BA }, { S-->b }]
C[{ C-->b }]

word='abbbabbaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [S, C]   []       []       []       []       []       []       []       []       
[]       [B]      [S, C]   []       []       []       []       []       []       []       
[B, S]   [A]      [B]      [S, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][B]      [A]      [B]      []       []       []       []       []       
[A, B, S][A, B]   [A, S]   [B]      [A]      [S, C]   []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, B]   []       [B]      [S, C]   []       []       []       
[A, B, S][A, B, S][A, B]   [B, S]   []       [B]      [A]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      [A]      [S, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      [B, S]   [A]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[A]      [B]      [A, S]   []       []       []       []       []       []       []       
[]       [A]      [A]      []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       []       [B]      []       [A, S]   []       []       []       []       
[]       []       []       []       []       [A, B, S][]       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=16

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BA }]
B[{ B-->BS }, { B-->SA }, { B-->SC }, { B-->SS }]
C[{ C-->AS }, { C-->SB }, { C-->CS }, { C-->b }]
S[{ S-->a }, { S-->AB }]

word='abbbabbaba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B]         [A, C]      []          []          []          []          []          []          []          []          
[A]         []          [A, C]      []          []          []          []          []          []          []          
[]          []          []          [A, C]      []          []          []          []          []          []          
[]          []          []          [C]         [A, S]      []          []          []          []          []          
[C]         []          [C]         [S]         [B]         [A, C]      []          []          []          []          
[B, S]      [C]         [S]         [B]         [A]         []          [A, C]      []          []          []          
[A, B, S, C][C, S]      [B, S]      [A, B]      [C]         []          [C]         [A, S]      []          []          
[A, B, S, C][B, S, C]   [A, B, S, C][A, B, S, C][B, S]      [C]         [S]         [B]         [A, C]      []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][S, C]      [B, S]      [A, B]      [C]         [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S]   []       [S]      []       []       []       []       []       []       []       
[A, S, C][S]      [S]      [A, B]   []       []       []       []       []       []       
[A]      [S]      [S]      [A]      [B, S]   []       []       []       []       []       
[]       [S]      []       []       [A, C, S][S]      [S]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CB }]
B[{ B-->b }, { B-->AS }, { B-->SB }]
S[{ S-->BA }, { S-->a }, { S-->SS }]
C[{ C-->AB }, { C-->BC }]

word='baaaaabaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [A, S]      []          []          []          []          []          []          []          []          
[A, S]      [B, S]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B, S]      [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [B, S]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S]      [S]         [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      [B, S]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [B, S]      [A, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S]   [S]   []    []    []    []    []    
[]    []    []    []    [C]   [A, B][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SC }, { C-->CC }]
S[{ S-->b }]

word='baaaaabaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->b }]
C[{ C-->a }, { C-->SS }]

word='baaaaabaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[]    [C]   [S, C][]    []    []    []    []    []    []    
[]    []    [C]   [S, C][]    []    []    []    []    []    
[]    []    []    [C]   [S, C][]    []    []    []    []    
[]    []    []    []    [C]   [S, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, C][B, S][]    []    []    
[]    []    []    []    []    []    [C]   [S, C][]    []    
[]    []    []    []    []    []    []    [C]   [S, C][]    
[]    []    []    []    []    []    []    []    [C]   [S, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->CC }, { S-->BB }]
C[{ C-->a }, { C-->SC }, { C-->b }]

word='baaaaabaaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   []       []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, C]   []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S]      [S, C]   []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       
[C, S]   [C, S]   [C, S]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->a }]
C[{ C-->BB }, { C-->b }]

word='baaaaabaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[A]   [C]   [B]   []    []    []    []    []    []    []    
[]    [A]   [C]   [B]   []    []    []    []    []    []    
[]    []    [A]   [C]   [B]   []    []    []    []    []    
[]    []    []    [A]   [C]   [B]   []    []    []    []    
[]    []    []    []    [A]   [C]   [B, C][]    []    []    
[]    []    []    []    []    [A]   [A, C][B]   []    []    
[]    []    []    []    []    []    [A]   [C]   [B]   []    
[]    []    []    []    []    []    []    [A]   [C]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]

word='babbbabbab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BA }]
B[{ B-->SB }, { B-->AA }]
S[{ S-->AS }, { S-->BB }, { S-->b }]

word='babbbabbab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[A, B, S][B, S]   [A, S]   []       []       []       []       []       []       []       
[A, B, S][A, S]   [B, S]   [A, S]   []       []       []       []       []       []       
[A, B, S][B, S]   [A, B, S][B, S]   [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B]   [B]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->CB }]
B[{ B-->a }]
S[{ S-->CA }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->SB }, { C-->SS }, { C-->CC }, { C-->BS }]

word='babbbabbab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S]      [C]      [A, S]   []       []       []       []       []       []       []       
[C, S]   [S]      [A, C]   [A, S]   []       []       []       []       []       []       
[S, C]   [S, C]   [A, S]   [A, C]   [A, S]   []       []       []       []       []       
[A, C, S][A, S, C][A, C]   [A, S]   [C]      [B]      []       []       []       []       
[A, S, C][A, S, C][A, S]   [A, C]   [S]      [C]      [A, S]   []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][C, S]   [S]      [A, C]   [A, S]   []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][C]      [A, S]   [C]      [B]      []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C, S][S]      [A, C]   [S]      [C]      [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][S][] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [A][] [A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=10

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->a }, { B-->AA }]
S[{ S-->b }, { S-->AB }]

word='babbbabbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B, S]   []       []       []       []       []       []       []       
[]       []       [A]      [B, S]   []       []       []       []       []       []       
[]       []       [A, S]   [A]      [B, S]   []       []       []       []       []       
[]       []       [A, S]   [S]      []       [B]      []       []       []       []       
[]       []       [A, S]   [A]      []       []       [B, S]   []       []       []       
[]       []       [A, B, S][A, S]   []       []       [A]      [B, S]   []       []       
[]       []       [A, S]   [A, S]   []       []       [S]      []       [B]      []       
[]       []       [A, B, S][A, S]   []       []       [A]      []       []       [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->a }]
S[{ S-->SB }, { S-->CB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->BS }]

word='babbbabbab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A, S]   [C]      [B, S]   []       []       []       []       []       []       []       
[A, S, C][S, C]   [A, S, C][B, S]   []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][B, S]   []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, C, S][S]      [B]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, C, S][A, S]   [C]      [B, S]   []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][C, S]   [A, S, C][B, S]   []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][C, S]   [A, C, S][S]      [B]      []       
[A, S, C][A, S, C][A, C, S][A, S, C][A, S, C][A, C, S][A, C, S][A, S]   [C]      [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AB }]
B[{ B-->BS }, { B-->a }, { B-->SS }]
C[{ C-->SA }, { C-->SB }, { C-->BA }, { C-->b }]
S[{ S-->AC }, { S-->a }, { S-->CC }]

word='bbbabababb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[A]         [S]         [C]         []          []          []          []          []          []          []          
[A, S]      [B, C]      []          [B, S]      []          []          []          []          []          []          
[A, S]      [C, S]      []          [A]         [C]         []          []          []          []          []          
[A, B, C, S][B, C]      []          [A]         []          [B, S]      []          []          []          []          
[A, C, S]   [B, C, S]   []          [S]         []          [A]         [C]         []          []          []          
[A, B, S, C][A, B, C]   [S]         [B, C]      []          [A]         []          [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, S]      [C, S]      []          [S]         []          [A]         [C]         []          
[A, B, S, C][A, B, C, S][A, B, S]   [A, B, C, S][]          [A]         []          [B, S]      [S]         [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [A, C][]    []    []    []    []    []    []    []    
[]    [A, S][S]   []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->SB }, { B-->a }]
S[{ S-->SA }, { S-->BC }, { S-->AB }]
C[{ C-->b }]

word='bbbabababb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    [A, S][C]   []    []    []    []    []    
[]    []    []    [B, S][]    [A, B][]    []    []    []    
[]    []    []    [S]   []    [A, S][C]   []    []    []    
[]    []    []    [B, S][]    [B, S][]    [A, B][]    []    
[]    []    []    [S]   []    [S]   []    [A, S][C]   []    
[]    []    []    [S]   []    [S]   []    [A]   []    [C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
B[{ B-->a }]
S[{ S-->AS }, { S-->CA }, { S-->SS }, { S-->b }]
C[{ C-->AC }, { C-->SC }, { C-->b }]

word='bbbabababb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, S, C][S, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, S, C][S, C]   []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [S, C]   []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       []       [S, C]   []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[]       []       []       []       []       []       []       []       [S, C]   []       
[]       []       []       []       []       []       []       []       [A, S, C][S, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->BS }, { B-->AC }, { B-->AS }, { B-->CB }]
C[{ C-->CA }, { C-->SB }, { C-->BA }, { C-->SS }]
S[{ S-->a }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }]

word='bbbabababb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [C]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, C, S]   [C, S]      [B, C]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [C, S]      [B, S, C]   [C]         [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [C, S]      [B, C]      [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [C, S]      [B, S, C]   [C]         [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [B, C, S]   [C, S]      [B, C]      [A, S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->BA }]
B[{ B-->BS }, { B-->AS }, { B-->CS }, { B-->a }, { B-->AA }, { B-->BB }]
C[{ C-->CA }, { C-->SB }, { C-->SS }]
S[{ S-->CB }, { S-->b }]

word='bbbabababb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [C]         [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      [A, B]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, C, S]   [A, B]      [C]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C]      [A, B]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C, S]   [A, B]      [C]         [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B]      [A, B, C, S][A, B]      [B, C]      [A, B]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B]      [A, B, C, S][A, B]      [A, B, C, S][A, B]      [B, C]      [A, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->BC }]
B[{ B-->b }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->CC }, { C-->AB }]
S[{ S-->CA }, { S-->SA }, { S-->a }]

word='bababbabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [S, C]   []       []       []       []       []       []       []       []       
[C]      []       [B]      []       []       []       []       []       []       []       
[A, C]   [S]      [A]      [S, C]   []       []       []       []       []       []       
[A, C]   [C]      [C]      []       [B]      []       []       []       []       []       
[A, S, C][S]      []       [S]      [A]      [B]      []       []       []       []       
[A, C, S][A, S, C][A, C, S][C]      [C]      [A]      [S, C]   []       []       []       
[A, S, C][S, C]   [C]      [S]      [A]      [C]      []       [B]      []       []       
[A, C, S][A, S, C][A, C, S][A, S, C][A, C, S][A, C]   [S]      [A]      [S, C]   []       
[A, C, S][A, S, C][A, C, S][S, C]   [A, C]   [A, C]   [C]      [C]      []       [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    [C]   []    []    []    []    []    []    
[S]   [S]   [C]   []    [A]   []    []    []    []    []    
[]    []    []    [A, C][A, S][C]   []    []    []    []    
[]    []    [S]   []    [A]   [A]   [C]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
B[{ B-->AC }, { B-->CC }]
C[{ C-->AS }, { C-->SB }, { C-->b }, { C-->BC }]
S[{ S-->BB }, { S-->CS }, { S-->SC }]

word='bababbabab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          [B]         [A, C]      []          []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[C, S]      [S]         []          [B]         [A, C]      []          []          []          []          []          
[A, B, S, C][A, C, S]   [B]         [C]         [B]         [A, C]      []          []          []          []          
[A]         [A]         []          []          []          []          [A]         []          []          []          
[B, C, S]   [B, C]      [B, S]      [C]         [S]         []          [B]         [A, C]      []          []          
[A]         []          [A]         []          [A]         []          []          []          [A]         []          
[B, S, C]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [C, S]      [S]         []          [B]         [A, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][B]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    [S]   []    [S]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->SS }, { C-->CS }]

word='bababbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S, C][C]   [S]   []    []    []    []    []    []    []    
[C, S][C, S][C]   [S]   []    []    []    []    []    []    
[S, C][C, S][S, C][C]   [S]   []    []    []    []    []    
[S, C][C, S][S, C][S, C][C]   [S]   []    []    []    []    
[S, C][C, S][S, C][S, C][S, C][C]   [S]   []    []    []    
[S, C][C, S][S, C][S, C][S, C][S, C][C]   [S]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C]   [S]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][C]   [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->AC }]
C[{ C-->SA }, { C-->a }, { C-->SC }, { C-->CS }]
S[{ S-->a }, { S-->AA }, { S-->b }]

word='bababbabab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [A, S]      []          []          []          []          []          []          []          
[B, C]      [B, C]      [B, C]      [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [S, C]      [A, S]      []          []          []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, S]      []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [S, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, C]      [A, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]

word='bababbabab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->CB }, { B-->AA }]
S[{ S-->AS }, { S-->CA }, { S-->SA }, { S-->b }]
C[{ C-->a }, { C-->BC }]

word='abbbbbaaaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, S]   []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [A, S]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [A, S]   []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, S]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A, S]   []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [A, C]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [A, C]   []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [A, C]   []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=38

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BS }]
B[{ B-->a }, { B-->AA }, { B-->CS }]
C[{ C-->CC }, { C-->b }]
S[{ S-->SS }, { S-->BC }]

word='abbbbbaaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [A, C]      []          []          []          []          []          []          []          []          
[A, S]      [B, C]      [A, C]      []          []          []          []          []          []          []          
[A, B, S]   [C, S]      [B, C]      [A, C]      []          []          []          []          []          []          
[A, B, S]   [A, B, C, S][C, S]      [B, C]      [A, C]      []          []          []          []          []          
[A, B, S]   [A, B, C, S][A, B, C, S][C, S]      [B, C]      [A, C]      []          []          []          []          
[A, B]      [A, B]      [A]         [B]         [A]         []          [B]         []          []          []          
[A, B]      [A, B]      [B]         [A]         []          [B]         [A]         [B]         []          []          
[A, B]      [A, B]      [A, B]      []          [B]         [A]         []          [A]         [B]         []          
[A, B]      [A, B]      [A]         [B]         [A]         []          [B]         []          [A]         [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    [A]   []    [B]   []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }, { B-->SB }, { B-->SC }]
C[{ C-->a }, { C-->BC }, { C-->AB }]
S[{ S-->AA }, { S-->BB }, { S-->b }]

word='abbbbbaaaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[C]      [B]      [B]      [B]      [B]      [B]      [A, C]   []       []       []       
[C]      [B, C]   [B, C]   [B, C]   [B, C]   [C]      [S]      [A, C]   []       []       
[C]      [B, C]   [B, C]   [B, C]   [B, C]   [B]      [B]      [S]      [A, C]   []       
[C]      [B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][C]      [B]      [S]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[C]   [B]   [B]   [B]   [B, C][B]   []    []    []    []    
[C]   [B]   [B]   [B]   [B]   [B, S][C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->SB }, { C-->SC }, { C-->CS }]
S[{ S-->b }]

word='abbbbbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [C]   [B, S][]    []    []    []    []    []    []    
[]    [C]   [C]   [B, S][]    []    []    []    []    []    
[]    [C]   [C]   [C]   [B, S][]    []    []    []    []    
[]    [C]   [C]   [C]   [C]   [B, S][]    []    []    []    
[]    [C]   [C]   [C]   [C]   [C]   [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[] [C][C][C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->BS }, { B-->a }, { B-->SS }, { B-->AA }]
S[{ S-->SA }, { S-->SB }, { S-->b }]

word='abbbbbaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[A, B][B]   [S]   []    []    []    []    []    []    []    
[A, B][B, S][B]   [S]   []    []    []    []    []    []    
[A, B][B, S][B, S][B]   [S]   []    []    []    []    []    
[A, B][B, S][B, S][B, S][B]   [S]   []    []    []    []    
[A, B][B, S][B, S][B, S][B]   [S]   [A, B][]    []    []    
[A, B][B, S][B, S][B, S][B]   [S]   [A, B][A, B][]    []    
[A, B][B, S][B, S][B, S][B]   [S]   [A, B][A, B][A, B][]    
[A, B][B, S][B, S][B, S][B]   [S]   [A, B][A, B][A, B][A, B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SB }, { B-->CS }, { B-->a }]
C[{ C-->SA }, { C-->b }, { C-->BC }]
S[{ S-->CB }, { S-->CC }, { S-->AA }, { S-->AB }]

word='bbaaaabaab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C, S]   [B, C]   []       []       []       []       []       []       []       []       
[B, C, S][S]      [A, B]   []       []       []       []       []       []       []       
[B, C, S][B, C]   [S]      [A, B]   []       []       []       []       []       []       
[B, C, S][S, C]   [B, C]   [S]      [A, B]   []       []       []       []       []       
[B, C, S][B, C, S][C, S]   [B, C]   [S]      [A, B]   []       []       []       []       
[B, C, S][B, C, S][B, C, S][C, S]   [B, C]   [C, S]   [B, C]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, C, S][S]      [A, B]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [S]      [A, B]   []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, C]   [C, S]   [B, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AB }, { A-->BC }, { A-->CA }]
B[{ B-->CB }, { B-->CC }]
C[{ C-->AC }, { C-->a }]

word='bbaaaabaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[C]      [C]      [A, C]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [C]      [A, C]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]

word='bbaaaabaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->CS }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->AA }, { C-->b }]
S[{ S-->AS }, { S-->CA }, { S-->SA }, { S-->SB }, { S-->SC }, { S-->AB }]

word='bbaaaabaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[B]         [S]         [A, C]      []          []          []          []          []          []          []          
[A, B, C]   [B, S]      [C, S]      [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, C, S]   [C, S]      [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][B, C, S]   [C, S]      [A, C]      []          []          []          []          
[B, C, S]   [B, S, C]   [B, C, S]   [B, C, S]   [C, S]      [C]         [C]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [S]         [A, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [C, S]      [A, C]      []          
[B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, S]      [C, S]      [C]         [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[]       [A, B, C][]       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       []       [A, B, C][]       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=13

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AB }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AS }, { S-->a }, { S-->b }]

word='bbaaaabaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [B, S]   []       []       []       []       []       []       []       
[]       []       [A]      [B, S]   []       []       []       []       []       []       
[]       []       [A, S]   [A]      [B, S]   []       []       []       []       []       
[]       []       [A, B, S][A, S]   [A]      [B, S]   []       []       []       []       
[]       []       [A, B, S][A, B, S][S]      [A]      [S]      []       []       []       
[]       []       [A, B, S][A, B, S][A]      [A, S]   []       [B, S]   []       []       
[]       []       [A, B, S][A, B, S][A, S]   [A, B, S][]       [A]      [B, S]   []       
[]       []       [A, B, S][A, B, S][A, B, S][A, B, S][]       [S]      [A]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    [A, S][A]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->BB }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SC }, { C-->b }]

word='babbaaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[B, S]   [C]      [C]      []       []       []       []       []       []       []       
[B, C]   [S]      [S]      [C]      []       []       []       []       []       []       
[A, B]   []       []       [B]      [A, S]   []       []       []       []       []       
[A, B]   []       []       [B]      []       [A, S]   []       []       []       []       
[A, B]   []       []       [B]      []       []       [A, S]   []       []       []       
[A, B, S][C]      [C]      [B, S]   [C]      [C]      [C]      [C]      []       []       
[A, B]   [A, B]   [A, B]   [B]      [A, B]   [A, B]   [A, B]   [B]      [A, S]   []       
[A, B, C][A, B, S][A, B, S][B, C]   [A, B, S][A, B, S][A, B, S][B, S]   [C]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    [S]   []    []    []    []    []    []    
[]    [A]   [A, B][]    [A]   [A]   []    []    []    []    
[A, C][A, S][A, S][C]   [A, S][A, S][A, S][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=22

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AC }, { A-->SB }, { A-->BA }]
B[{ B-->SC }, { B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->a }, { S-->CS }, { S-->AB }]
C[{ C-->CA }, { C-->b }]

word='babbaaabab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [B, S]      []          []          []          []          []          []          []          []          
[B]         [B]         [C]         []          []          []          []          []          []          []          
[]          []          []          [C]         []          []          []          []          []          []          
[B]         [B]         [S]         [S]         [B, S]      []          []          []          []          []          
[A, B, C]   [A, B]      [A, B, C]   [A, B, C]   [A, B]      [B, S]      []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S, C][A, B, S, C][A, B, S]   [A, B]      [B, S]      []          []          []          
[A, B, S, C][A, B, S]   [A, B, S, C][A, B, S, C][A, B, S]   [A, B]      [B]         [C]         []          []          
[A, B, S, C][A, B, S]   [A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   [B]         [S]         [B, S]      []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B]      [B]         [B]         [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->CC }, { C-->b }]

word='babbaaabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[] [S][C][C][] [] [] [] [] [] 
[] [] [S][S][B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [S][C][] [] 
[] [] [] [] [] [] [] [S][B][] 
[] [] [] [] [] [] [] [] [S][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->BA }, { B-->a }]
S[{ S-->CA }, { S-->BC }]
C[{ C-->SB }, { C-->b }]

word='babbaaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [S]   [C]   []    []    []    []    []    []    []    
[S]   [A]   []    [C]   []    []    []    []    []    []    
[C]   []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [S]   [C]   []    []    
[]    []    []    []    []    [S]   [C]   []    [B]   []    
[C, S][]    []    []    [B]   [A]   []    []    [S]   [C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AC }]
B[{ B-->b }, { B-->SB }, { B-->SC }, { B-->SS }]
S[{ S-->a }, { S-->BB }]
C[{ C-->BA }, { C-->BS }, { C-->AB }]

word='babbaaabab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, B, C]   [A, B]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, S, C]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, S, C]   [A, B]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, B, C]   [A, B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[]    []    [B]   [S]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B]   [B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }, { A-->BS }]
B[{ B-->b }, { B-->BA }, { B-->a }]
S[{ S-->SA }, { S-->a }]

word='babbaaabaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[A]      [B, S]   [A, B]   []       []       []       []       []       []       []       
[A]      [B, S]   [A, B]   [A, B]   []       []       []       []       []       []       
[A, B]   [A, B, S][A, B]   [A]      [B, S]   []       []       []       []       []       
[A, B]   [A, B, S][A, B]   [A, B]   [A]      [B, S]   []       []       []       []       
[A, B]   [A, B, S][A, B]   [A, B]   [A, B, S][A]      [B, S]   []       []       []       
[A, B]   [A, B, S][A, B]   [A, B]   [A, B, S][A]      [B, S]   [A, B]   []       []       
[A, B]   [A, B, S][A, B]   [A, B]   [A, B, S][A, B, S][A, B, S][A]      [B, S]   []       
[A, B]   [A, B, S][A, B]   [A, B]   [A, B, S][A, B, S][A, B, S][A, B]   [A]      [B, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->SC }]
C[{ C-->SA }, { C-->BB }, { C-->b }]
S[{ S-->a }, { S-->AA }, { S-->BC }]

word='babbaaabaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      [A, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, S, C]   [A, S]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->CA }]
C[{ C-->AS }, { C-->b }]
S[{ S-->AC }, { S-->a }, { S-->CS }, { S-->SC }]

word='babbaaabaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[B, S, C][S]      [A, C]   []       []       []       []       []       []       []       
[B, S, C][S]      [B, S]   [A, C]   []       []       []       []       []       []       
[S, C]   [S]      [S, C]   [S, C]   [S]      []       []       []       []       []       
[S, C]   [S]      [S, C]   [S]      []       [S]      []       []       []       []       
[S]      []       [S]      []       []       []       [S]      []       []       []       
[S]      []       [S]      []       []       []       [S]      [A, C]   []       []       
[S]      []       [S]      []       []       []       [S]      [S, C]   [S]      []       
[]       []       []       []       []       []       []       [S]      []       [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AC }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->SC }]
S[{ S-->a }, { S-->CC }, { S-->SS }, { S-->AB }]
C[{ C-->b }]

word='babbaaabaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[A, B]   [A, B, S][B, C]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [B, S]   [A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B]      [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]
C[{ C-->SS }, { C-->b }]

word='babbaaabaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    [C]   [S, C][]    []    []    []    []    []    []    
[]    []    [C]   [S, C][]    []    []    []    []    []    
[]    []    []    [C]   [S]   []    []    []    []    []    
[]    []    []    []    [C]   [S]   []    []    []    []    
[]    []    []    []    []    [C]   [S]   []    []    []    
[]    []    []    []    []    []    [C]   [S, C][]    []    
[]    []    []    []    []    []    []    [C]   [S]   []    
[]    []    []    []    []    []    []    []    [C]   [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AS }, { B-->SB }]
S[{ S-->a }, { S-->BS }]
C[{ C-->b }]

word='abaaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[B]   [B]   [S]   []    []    []    []    []    []    []    
[S]   [S]   []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [A, C][]    
[]    []    []    []    []    []    []    [A]   [B]   [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->SA }, { S-->b }]

word='abaaabbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    [S]   []    [A]   []    []    []    []    []    []    
[]    [S]   []    []    [A]   []    []    []    []    []    
[]    [S]   []    []    []    [A, S][]    []    []    []    
[]    [S]   []    []    []    [S]   [A, S][]    []    []    
[]    [S]   []    []    []    [S]   [S]   [A, S][]    []    
[]    [S]   []    []    []    [S]   [S]   [S]   [A, S][]    
[]    [S]   []    []    []    [S]   [S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [S][S][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->a }, { S-->CS }]
C[{ C-->b }]

word='abaaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [A, C][]    
[]    []    []    []    []    [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AB }, { B-->BC }, { B-->SA }, { B-->a }]
S[{ S-->AC }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->a }]

word='abaaabbbba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [A, S]   []       []       []       []       []       []       []       []       
[]       [B, S]   [B, C]   []       []       []       []       []       []       []       
[]       [B]      [B]      [B, C]   []       []       []       []       []       []       
[]       [B]      [B]      [B]      [B, C]   []       []       []       []       []       
[B]      [B, C, S][B, C]   [B, C]   [C]      [A, S]   []       []       []       []       
[B, C]   [B, C, S][B, C]   [B, C]   [C]      [B]      [A, S]   []       []       []       
[B, C]   [B, C, S][B, C]   [B, C]   [B, C]   [B, C]   [B]      [A, S]   []       []       
[B, C]   [B, C, S][B, C]   [B, C]   [B, C]   [B, S, C][B, C]   [B]      [A, S]   []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [B, S]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [C, S][C]   []    []    []    []    []    []    []    
[C]   [C, S][C]   [C]   []    []    []    []    []    []    
[C]   [C, S][C]   [C]   [B, C][]    []    []    []    []    
[C]   [C, S][C]   [C]   [C]   [S, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=31

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->AB }, { A-->CB }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->SB }, { S-->b }]
C[{ C-->SA }, { C-->a }]

word='abaaabbbba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[A, S]      [S]         [B, C]      []          []          []          []          []          []          []          
[A, B, S]   [S, C]      [A]         [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, S]      [A]         [B, C]      []          []          []          []          []          
[A, B, C]   [A, C, S]   [B]         []          [A]         [S]         []          []          []          []          
[A]         [A]         []          []          []          []          [S]         []          []          []          
[]          []          []          []          []          []          []          [S]         []          []          
[]          []          []          []          []          []          []          []          [S]         []          
[]          []          []          []          []          []          []          []          [S]         [B, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AC }]
B[{ B-->SA }, { B-->SS }, { B-->BB }]
S[{ S-->CA }, { S-->b }]
C[{ C-->SB }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->BS }, { C-->BC }]

word='baaaabbbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[C]         [C]         [A]         []          []          []          []          []          []          []          
[B, S, C]   [A, S]      [C]         [A]         []          []          []          []          []          []          
[B, S, C]   [B, C]      [A, S]      [C]         [A]         []          []          []          []          []          
[A, B, S, C][A, S, C]   [B, C]      [A]         []          [S]         []          []          []          []          
[A, B, C]   [A, B, C]   [A, C]      [C]         []          [B]         [S]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, C]      [A]         [C]         [B]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, S, C]   [C]         [A, B]      [C]         [B]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [B, C]      [B, S]      [C]         [B]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [B]   [A, C][]    []    []    []    []    []    
[]    []    []    [S, C][]    [A, B][]    []    []    []    
[]    []    [S]   []    [A, S][]    [B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->SS }]

word='baaaabbbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [S]   [A, S][]    []    []    []    []    []    []    
[]    [S]   [S]   [A, S][]    []    []    []    []    []    
[]    [S]   [S]   [S]   [A, S][]    []    []    []    []    
[]    [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CC }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->SS }]
S[{ S-->b }, { S-->BS }]

word='baaaabbbba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[C]      [B]      [C]      []       []       []       []       []       []       []       
[B]      [C]      [B]      [C]      []       []       []       []       []       []       
[C]      [B]      [C]      [B]      [C]      []       []       []       []       []       
[C, S]   [B, S]   [C]      [B, S]   [C]      [B, S]   []       []       []       []       
[B, C, S][B, S, C][B, C]   [B, C, S][B, C]   [C, S]   [B, S]   []       []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, C, S][C, S]   [C, S]   [B, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [C, S]   [B, S]   []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      []       [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [B, S][]    [B, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
B[{ B-->a }, { B-->AA }, { B-->SS }]
S[{ S-->AC }, { S-->CA }, { S-->b }, { S-->BC }]
C[{ C-->SB }, { C-->BB }, { C-->CC }]

word='baaaabbbba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, B]      []          []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][S, C]      [B, C]      [A, B]      []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S, C]      [B, C]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][C, S]      [B]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, B]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, B, C]   [A, B]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[]       []       [A, S]   []       []       []       []       []       []       []       
[]       []       []       [A, B, S][]       []       []       []       []       []       
[]       []       []       [A]      [B]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->CB }, { S-->a }]
C[{ C-->b }]

word='baaaabbbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [S][B][S][B][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }, { A-->SA }]
B[{ B-->AS }]
S[{ S-->CB }, { S-->BB }, { S-->SC }, { S-->b }]
C[{ C-->SB }, { C-->a }, { C-->AA }, { C-->BS }]

word='aabababbab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[C]         [A, C]      []          []          []          []          []          []          []          []          
[S]         [B, C]      [A, S]      []          []          []          []          []          []          []          
[A, S, C]   [A, B, C]   [A, C, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][B, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][C, S]      [A, B, C]   [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->SB }]
B[{ B-->SC }, { B-->CC }]
S[{ S-->SA }, { S-->a }, { S-->b }]
C[{ C-->AS }, { C-->AA }, { C-->BB }, { C-->AB }]

word='aabababbab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, B]      [C]         [S]         []          []          []          []          []          []          []          
[A, B, C]   [C]         [S]         [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B]         [C]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [B]         [C]         [S]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   [B]         [C]         [S]         []          []          []          
[A, B, C, S][A, B, C]   [B, C]      [C]         []          []          []          [S]         []          []          
[A, B, C, S][A, B, C]   [B, C]      [C]         []          []          []          [S]         [A, S]      []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   [S, C]      [A]         [B]         [C]         [S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [A, B, C][]       []       []       []       []       []       []       []       
[]       [A, B]   [B]      []       []       []       []       []       []       []       
[]       [A, B, S][A, B, S][A, B, C][]       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       [S]      [A, S]   [A, C]   []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=25

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]
C[{ C-->a }, { C-->SS }, { C-->b }]

word='aabababbab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[]    [C]   [S, C][]    []    []    []    []    []    []    
[]    []    [C]   [S, C][]    []    []    []    []    []    
[]    []    []    [C]   [S, C][]    []    []    []    []    
[]    []    []    []    [C]   [S, C][]    []    []    []    
[]    []    []    []    []    [C]   [S, C][]    []    []    
[]    []    []    []    []    []    [C]   [S, C][]    []    
[]    []    []    []    []    []    []    [C]   [S, C][]    
[]    []    []    []    []    []    []    []    [C]   [S, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }]
S[{ S-->a }, { S-->b }]

word='aabababbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A]   [S]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A, S][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [S]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    [S]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SS }, { A-->AA }, { A-->BC }]
B[{ B-->SA }]
C[{ C-->CA }, { C-->SB }, { C-->BA }, { C-->SC }, { C-->a }]
S[{ S-->CS }, { S-->b }]

word='aabababbab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[A, C]      [A, C]      [C]         [C]         []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S]      [S]         [S]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [C]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [S]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A]         [S]         []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [C]         [C]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, S]      [S]         [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [B]   [C]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->AB }, { A-->SA }]
B[{ B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->CA }, { S-->a }, { S-->b }]
C[{ C-->BS }]

word='aababaaabb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, S]      []          []          []          []          []          []          []          []          
[A]         [C]         [S]         []          []          []          []          []          []          []          
[A]         [A, B]      []          [B, S]      []          []          []          []          []          []          
[A]         [B, C]      []          [C]         [S]         []          []          []          []          []          
[A, C, S]   [A, B, S, C][A]         [A, B]      []          [B, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A]         [A, B, S, C][A]         [A, C]      [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A]         [A, B, S, C][A]         [A, B]      [A, C]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A]         [A, B, S, C][A]         [A, B, C]   [A]         [C]         [S]         []          
[A, S, C]   [A, B, C, S][A]         [A, B, S, C][A]         [A, S, C]   [A]         [A]         []          [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C, S]      [A, B, C]   []          []          []          []          []          []          []          []          
[C]         [B, C]      []          [A, B, S, C][]          []          []          []          []          []          
[]          [B, C]      []          [B, C]      []          []          []          []          []          []          
[]          [B, C]      []          [B, C]      []          [A, B, C]   []          []          []          []          
[]          [B, C]      []          [B, C]      [A]         [A, C]      [A]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=31

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->CA }, { A-->BA }]
B[{ B-->SS }]
C[{ C-->AS }, { C-->a }, { C-->BC }]
S[{ S-->a }]

word='aababaaabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [S, C][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [S, C][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [B]   [S, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [B]   [S, C][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->a }, { B-->CS }]
S[{ S-->CA }, { S-->CB }]
C[{ C-->SB }, { C-->SC }, { C-->b }, { C-->BC }]

word='aababaaabb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A]         [A, B]      []          []          []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      []          []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, B]      []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, C]      [A, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      [A, S]      [A, B]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [A, S, C]   [A]         [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, S, C]   [A]         [A]         [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S, C]   [A, C]      [A, C]      [A, C]      [A, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A, S]      [A, S]      [A, S]      [A, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BA }]
B[{ B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->CS }, { C-->BB }, { C-->BC }]
S[{ S-->b }]

word='aababaaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [A, S][]    []    []    []    []    []    []    
[]    []    [B]   [C]   []    []    []    []    []    []    
[]    []    [A, B][C]   [A, S][]    []    []    []    []    
[]    []    [C]   []    [B]   [C]   []    []    []    []    
[]    []    [C]   []    [C]   []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    [C]   [A, S][]    
[]    []    []    []    []    []    []    [C]   [A, C][A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->CB }, { C-->BB }, { C-->AA }]
S[{ S-->CA }, { S-->SC }, { S-->b }]

word='aababaaabb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C]         [B]         []          []          []          []          []          []          []          []          
[S]         []          [A, S]      []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[]          []          []          []          [A, S]      []          []          []          []          []          
[]          []          []          []          []          [B]         []          []          []          []          
[]          []          []          []          [S, C]      [C]         [B]         []          []          []          
[]          []          []          []          [S, C]      [C]         [C]         [B]         []          []          
[B, S]      []          [S, C]      [C]         [A, B, S]   [S]         [S]         []          [A, S]      []          
[A, B, S, C][C]         [A, B, S, C][C, S]      [A, B, C, S][A, B, C, S][A, B, S, C][C]         [A, B, C]   [A, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       [A, B, S][S]      []       []       []       []       
[A, B, C][]       [A, C]   []       []       [B, C]   [A, B, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=15

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->AA }, { A-->CB }, { A-->SB }]
B[{ B-->a }]
C[{ C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AB }]

word='abaaabbbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [B]   []    []    []    []    []    []    []    
[S, C][S]   [A]   [B]   []    []    []    []    []    []    
[A]   [A]   [S]   [A]   [B]   []    []    []    []    []    
[]    []    [C]   [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }, { A-->SB }, { A-->CB }]
B[{ B-->BA }, { B-->a }]
C[{ C-->SA }, { C-->SC }, { C-->a }]
S[{ S-->SS }, { S-->CS }, { S-->b }, { S-->AB }]

word='abaaabbbbb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [S]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, S, C]   [A]         [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [B, S]      [A]         [B, C]      []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, B, S]   [A, B, S]   [A, S]      [S]         []          []          []          []          
[A, B, C, S][A, S, C]   [A, B, S]   [A, B, S]   [A, S]      [S]         [S]         []          []          []          
[A, B, C, S][A, S, C]   [A, B, S]   [A, B, S]   [A, S]      [S]         [S]         [S]         []          []          
[A, B, C, S][A, S, C]   [A, B, S]   [A, B, S]   [A, S]      [S]         [S]         [S]         [S]         []          
[A, B, C, S][A, S, C]   [A, B, S]   [A, B, S]   [A, S]      [S]         [S]         [S]         [S]         [S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CB }, { B-->CC }]
S[{ S-->AS }, { S-->a }, { S-->b }]
C[{ C-->CS }, { C-->BB }]

word='abaaabbbbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [B, S]      []          []          []          []          []          []          []          []          
[A, S]      [A]         [S]         []          []          []          []          []          []          []          
[A, S]      [A, S]      [A]         [S]         []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A]         [S]         []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A]         [B, S]      []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, S]   [A, B, S]   [A, S]      [A, C]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][A, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, C]      [B, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, C][B]   [B]   []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->b }]
B[{ B-->AC }, { B-->SC }]
C[{ C-->a }, { C-->BB }]
S[{ S-->BC }]

word='abaaabbbbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, B]      [A, B]      [A, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B]      [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [A, C]      []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         []          []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=4

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->AS }, { B-->CB }, { B-->BB }]
S[{ S-->BA }]
C[{ C-->a }, { C-->AB }]

word='abaaabbbbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, C]      [B]         []          []          []          []          []          []          []          []          
[B, S]      [S]         [A, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, S]      [A]         [A, C]      []          []          []          []          []          []          
[A, B, S]   [A, S]      [A]         [A]         [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B]         [B]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B]         [B]         [B]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B]         [B]         [B]         [B]         [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [B, S][B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }]
B[{ B-->b }, { B-->a }]

word='ababababbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A]   []    [A, B][]    []    []    []    []    []    []    
[A]   []    [A]   [B]   []    []    []    []    []    []    
[A]   []    [A]   []    [A, B][]    []    []    []    []    
[A]   []    [A]   []    [A]   [B]   []    []    []    []    
[A]   []    [A]   []    [A]   []    [A, B][]    []    []    
[A]   []    [A]   []    [A]   []    [A]   [B]   []    []    
[A]   []    [A]   []    [A]   []    [A]   []    [B]   []    
[A]   []    [A]   []    [A]   []    [A]   []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BB }]
C[{ C-->a }]
S[{ S-->SC }, { S-->SS }, { S-->b }]

word='ababababbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [S]   [A, C][]    []    []    []    []    []    []    
[]    [S]   []    [B, S][]    []    []    []    []    []    
[]    [S]   []    [S]   [A, C][]    []    []    []    []    
[]    [S]   []    [S]   []    [B, S][]    []    []    []    
[]    [S]   []    [S]   []    [S]   [A, C][]    []    []    
[]    [S]   []    [S]   []    [S]   []    [B, S][]    []    
[]    [S]   []    [S]   []    [S]   []    [B, S][B, S][]    
[]    [S]   []    [S]   []    [S]   []    [B, S][B, S][B, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }]
B[{ B-->b }]

word='ababababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A, B][]    []    
[]    []    []    []    []    []    []    [A]   [A, B][]    
[]    []    []    []    []    []    []    []    [A]   [A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BA }, { B-->a }]

word='ababababbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   [A, B][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [B]   [A, B][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    [B]   [A, B][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->b }]

word='ababababbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
C[{ C-->a }, { C-->CC }]

word='bbbaababbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [A][A][] 
[] [] [] [] [] [] [] [A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]

word='bbbaababbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->SB }]
B[{ B-->AB }, { B-->AS }]
S[{ S-->a }]
C[{ C-->BA }, { C-->CS }, { C-->SC }, { C-->AA }, { C-->b }, { C-->BC }]

word='bbbaababbb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, C]   []       []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [S]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [A]      [S]      []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [S]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
C[{ C-->AS }, { C-->SC }, { C-->b }]
S[{ S-->a }]

word='bbbaababbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [A]   [A, S][]    []    []    []    []    []    
[]    []    [C]   [C]   [A, S][]    []    []    []    []    
[]    []    []    [C]   [C]   [C]   []    []    []    []    
[]    []    []    [A]   [A]   [A]   [A, S][]    []    []    
[]    []    []    []    []    []    [C]   [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AB }, { A-->SB }]
B[{ B-->SA }, { B-->CC }, { B-->BB }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BS }]
S[{ S-->BC }]

word='bbbaababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[C]         [C]         [A]         []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [C]         [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B]      [B]         [C]         []          []          []          []          []          
[A, B, C]   [B, C]      [C]         [C]         []          [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [B]         [C]         [C]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [B, C]      [C]         []          []          [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, B]      [B]         [C]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B, C]   [B, C]      [C]         [C]         [A]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C]   []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [B, C, S][B, S]   []       []       []       []       []       []       
[]       []       []       [B, C]   []       []       []       []       []       []       
[]       []       []       [B, S]   [S]      []       []       []       []       []       
[]       []       []       [S]      [S]      []       [B, C]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=18

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->CB }]
B[{ B-->b }, { B-->CC }]
C[{ C-->SA }, { C-->b }, { C-->BS }, { C-->BC }]
S[{ S-->SB }, { S-->AA }]

word='baabababaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[C]         [S]         [A]         []          []          []          []          []          []          []          
[A, B, C]   [S]         [A]         [B, C]      []          []          []          []          []          []          
[B, S, C]   [C]         [S]         []          [A]         []          []          []          []          []          
[A, B, S, C][A, B, C]   [S]         []          [A]         [B, C]      []          []          []          []          
[B, C, S]   [S]         [C]         [C]         [S]         []          [A]         []          []          []          
[A, B, C, S][A, C, S]   [A, B, S, C][A, B, C]   [S]         []          [A]         [B, C]      []          []          
[A, B, C, S][B, S, C]   [A, C, S]   [B, C, S]   [C]         [C]         [S]         []          [A]         []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A]         [B, C]      [C]         [C]         [S]         [A]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [A, B, C][]       []       []       []       []       []       []       []       
[B, S]   [S]      [C]      []       []       []       []       []       []       []       
[A, S]   [A]      [S, C]   [A, B, C][]       []       []       []       []       []       
[]       []       []       [S]      [C]      []       []       []       []       []       
[]       []       [C]      [B]      []       [C]      [C]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AC }, { B-->CA }, { B-->BA }]
S[{ S-->AS }, { S-->CS }, { S-->AB }]
C[{ C-->SB }, { C-->a }, { C-->BS }, { C-->BC }]

word='baabababaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, C]   [A, C]   []       []       []       []       []       []       []       []       
[B, C]   [B]      [A, C]   []       []       []       []       []       []       []       
[C, S]   [S]      [S]      [B]      []       []       []       []       []       []       
[B, C, S][C, S]   [B, S]   [B, C]   [A, C]   []       []       []       []       []       
[C, S]   [B, C, S][B, C]   [C]      [S]      [B]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, C]   [B, S]   [B, C]   [A, C]   []       []       []       
[C, S]   [B, C, S][B, S, C][C, S]   [B, C]   [C]      [S]      [B]      []       []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, S, C][B, C]   [B, S]   [B, C]   [A, C]   []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, S, C][B, C]   [B, S, C][B, C]   [B]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[]    [B, S][B]   []    []    []    []    []    []    []    
[B]   [B]   [B, S][B, C][]    []    []    []    []    []    
[]    [B]   [B]   [S]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B, S][B, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B, S][B]   [B, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=33

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BA }]
B[{ B-->SA }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->b }]
C[{ C-->b }, { C-->BS }]

word='baabababaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[B]   [A, C][A, C][S, C][]    []    []    []    []    []    
[B]   []    []    []    [B]   []    []    []    []    []    
[A, C][B]   [B]   [B]   [A, C][S, C][]    []    []    []    
[]    [B]   [B]   [B]   []    []    [B]   []    []    []    
[B]   [A, C][A, C][A, C][B]   [B]   [A, C][S, C][]    []    
[B]   []    []    []    [B]   [B]   []    []    [B]   []    
[B]   []    []    []    [B]   [B]   []    []    [B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   [C]   [A, C][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->a }, { S-->BS }]
C[{ C-->a }, { C-->CS }, { C-->SC }, { C-->b }, { C-->BC }]

word='baabababaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [B, C][]    []    []    []    []    []    
[C]   [C]   [C]   [S, C][S, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][S, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [B, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][S, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->b }]
S[{ S-->a }]

word='baabababaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    [C]   [A, C][]    []    []    []    []    []    
[]    []    []    [C]   [S, C][]    []    []    []    []    
[]    []    []    [C]   [C]   [A, C][]    []    []    []    
[]    []    []    []    []    [C]   [S, C][]    []    []    
[]    []    []    []    []    [C]   [C]   [A, C][]    []    
[]    []    []    []    []    []    []    [C]   [S, C][]    
[]    []    []    []    []    []    []    []    []    [S, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AC }]
C[{ C-->SA }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->AA }, { S-->b }]

word='bbaabaabbb'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [C, S]   []       []       []       []       []       []       []       []       
[A, S]   [C]      [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, C]   [A, S]   [A, C]   []       []       []       []       []       []       
[A, C, S][A, C]   [A, S]   [A, C]   [C, S]   []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [C]      [A, C]   []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A, S]   [A, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A, S]   [A, C]   [C, S]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [C, S]   []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [C, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]

word='bbaabaabbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->b }, { A-->CB }]
B[{ B-->BS }, { B-->CA }, { B-->SC }, { B-->a }]
C[{ C-->AC }, { C-->AS }, { C-->a }]
S[{ S-->AA }, { S-->b }]

word='bbaabaabbb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[C, S]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, S]      [A]         [B, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [B, C]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [A]         [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C, S]      [A, S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
B[{ B-->b }, { B-->a }]
C[{ C-->AC }, { C-->CB }, { C-->SS }]
S[{ S-->SA }, { S-->CA }, { S-->SB }, { S-->AB }]

word='bbaabaabbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[A, S]   [S]      [B]      []       []       []       []       []       []       []       
[A, S]   [S]      []       [B]      []       []       []       []       []       []       
[A, S]   [S]      []       []       [A, B]   []       []       []       []       []       
[A, C, S][C, S]   []       []       [S]      [B]      []       []       []       []       
[A, C, S][C, S]   []       []       [S]      []       [B]      []       []       []       
[A, C, S][C, S]   []       []       [S]      []       []       [A, B]   []       []       
[A, C, S][C, S]   []       []       [C, S]   []       []       [S]      [A, B]   []       
[A, C, S][C, S]   []       []       [C, S]   []       []       [A, S]   [S]      [A, B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }]
B[{ B-->a }]
C[{ C-->AC }, { C-->b }, { C-->BC }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SS }]

word='bbaabaabbb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S, C]   [A, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [B, S]   []       []       []       []       []       []       []       
[S]      [S]      [S]      [B, S]   []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, C]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [B, S]   []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B, S]   []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][S, C]   [A, C]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][S, C]   [A, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->CA }, { S-->b }]
C[{ C-->a }]

word='abbaaaabba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    [S]   [A, S][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    [S]   [A, S][]    []    
[]    []    []    []    []    []    []    [S]   [A, S][]    
[]    []    []    []    []    []    []    []    []    [C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->SC }, { B-->BB }]
C[{ C-->BA }, { C-->CC }, { C-->AA }, { C-->b }, { C-->BC }]
S[{ S-->SS }, { S-->b }]

word='abbaaaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [S, C]   []       []       []       []       []       []       []       []       
[]       [B, S, C][S, C]   []       []       []       []       []       []       []       
[C]      [A, C]   [A]      [A]      []       []       []       []       []       []       
[]       [B, C]   [B, C]   [C]      [A]      []       []       []       []       []       
[C]      [B, C]   [C]      []       [C]      [A]      []       []       []       []       
[]       [B, C]   [B, C]   [C]      []       [C]      [A]      []       []       []       
[]       [B, C]   [B, C]   [C]      []       [C]      []       [S, C]   []       []       
[]       [B, C]   [B, C]   [C]      []       [C]      []       [B, S, C][S, C]   []       
[C]      [B, C]   [B, C]   [C]      [C]      [C]      [C]      [A, C]   [A]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->CB }, { C-->a }, { C-->CS }, { C-->BB }]
S[{ S-->a }, { S-->b }]

word='abbaaaabba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   []    [S]   []    []    []    []    []    []    []    
[B, C][]    []    [S, C][]    []    []    []    []    []    
[B, C][]    []    [B, C][S, C][]    []    []    []    []    
[B, C][]    []    [B, C][B, C][S, C][]    []    []    []    
[B, C][]    []    [B, C][B, C][B, C][S, C][]    []    []    
[B, C][]    []    [B, C][B, C][B, C][C]   [S]   []    []    
[B, C][]    []    [B, C][B, C][B, C][C]   []    [S]   []    
[B, C][]    []    [B, C][B, C][B, C][B, C][]    []    [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->b }]

word='abbaaaabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [B, S][]    []    []    []    []    []    []    []    
[]    [B]   [B, S][]    []    []    []    []    []    []    
[]    []    [B]   [S]   []    []    []    []    []    []    
[]    []    []    [B]   [S]   []    []    []    []    []    
[]    []    []    []    [B]   [S]   []    []    []    []    
[]    []    []    []    []    [B]   [S]   []    []    []    
[]    []    []    []    []    []    [B]   [B, S][]    []    
[]    []    []    []    []    []    []    [B]   [B, S][]    
[]    []    []    []    []    []    []    []    [B]   [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->a }]
S[{ S-->CA }, { S-->SA }, { S-->CB }, { S-->CC }, { S-->SS }]
C[{ C-->CS }, { C-->a }, { C-->BS }, { C-->b }]

word='abbaaaabba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, C]   []       []       []       []       []       []       []       []       
[B, C, S][S]      [A, C]   []       []       []       []       []       []       []       
[S, C]   [C]      [S]      [B, C]   []       []       []       []       []       []       
[C, S]   [S]      [C]      [S]      [B, C]   []       []       []       []       []       
[S, C]   [C]      [S]      [C]      [S]      [B, C]   []       []       []       []       
[C, S]   [S]      [C]      [S]      [C]      [S]      [B, C]   []       []       []       
[C, S]   [S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [B, S]   [A, C]   []       []       
[C, S]   [S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [B, C, S][S]      [A, C]   []       
[C, S]   [S, C]   [C, S]   [C, S]   [C, S]   [C, S]   [S, C]   [C]      [S]      [B, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SC }, { C-->CS }, { C-->SS }]
S[{ S-->b }]

word='baabbabbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][S][] [] [] [] [] [] 
[] [] [C][C][S][] [] [] [] [] 
[] [] [] [C][C][C][] [] [] [] 
[] [] [] [C][C][C][S][] [] [] 
[] [] [] [C][C][C][C][S][] [] 
[] [] [] [C][C][C][C][C][S][] 
[] [] [] [] [] [] [C][C][C][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [C][C][C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->b }]
C[{ C-->AA }, { C-->b }]

word='baabbabbba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    [A]   []    [B, C][]    []    []    []    []    []    
[]    []    [C]   [A]   [B, C][]    []    []    []    []    
[]    []    []    [C]   []    [A]   []    []    []    []    
[]    []    [C]   [A]   []    []    [B, C][]    []    []    
[]    [C]   [A]   []    []    [C]   [A]   [B, C][]    []    
[]    [A]   []    [C]   []    [A]   []    [A]   [B, C][]    
[]    [C]   []    []    []    [C]   []    [C]   []    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SA }]
B[{ B-->AS }, { B-->a }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->b }]
C[{ C-->SB }, { C-->BA }, { C-->CS }, { C-->b }]

word='baabbabbba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[C]         [B, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      [C]         [S, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [C]         [C]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, S, C]   [A]         [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S]      [C]         [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, S, C]   [A, S]      [C]         [C]         [S, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S, C]   [C]         [C]         [C]         [B, S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [A, S, C][]       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [A, S]   []       []       []       []       
[]       []       []       []       []       [B, C]   [C]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

word='baabbabbba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BA }]
B[{ B-->CB }, { B-->CC }]
C[{ C-->a }, { C-->b }]

word='baabbabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A, C][]    []    []    []    []    []    []    []    
[A, B][B]   [A, C][]    []    []    []    []    []    []    
[B]   [A, B][B]   [C]   []    []    []    []    []    []    
[A, B][A, B][A, B][B]   [C]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   [A, C][]    []    []    []    
[A, B][A, B][A, B][B]   [B]   [B]   [C]   []    []    []    
[A, B][A, B][A, B][A, B][B]   [A, B][B]   [C]   []    []    
[A, B][A, B][A, B][A, B][B]   [A, B][B]   [B]   [C]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   [A, C]

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=29

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AS }, { A-->AC }, { A-->CB }, { A-->BA }]
B[{ B-->a }, { B-->SS }]
C[{ C-->SB }]
S[{ S-->CS }, { S-->b }, { S-->BS }]

word='abbbaaabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[B]         [B]         [S]         []          []          []          []          []          []          []          
[S, C]      [S, C]      [B]         [S]         []          []          []          []          []          []          
[A, C]      [A, C]      []          [C]         [B]         []          []          []          []          []          
[A]         [A]         []          [A]         []          [B]         []          []          []          []          
[]          []          []          []          []          []          [B]         []          []          []          
[A, B, S, C][A, B, S, C][B, C, S]   [A, B, S]   [S]         [S]         [S]         [S]         []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [C]         [C]         [C]         [C]         [B]         []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         []          [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    [A]   [A]   [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->b }]

word='abbbaaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[]    [B]   [C]   []    []    []    []    []    []    []    
[]    [A, B][B]   [C]   []    []    []    []    []    []    
[]    [B]   [B]   [B]   [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [A]   [C]   []    []    
[]    []    []    []    []    []    []    [B]   [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->a }, { C-->CC }, { C-->b }]

word='abbbaaabaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C]   [C]   [A, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->AC }]
S[{ S-->a }]
C[{ C-->AA }, { C-->SS }, { C-->CC }]

word='abbbaaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [C]   [A, B][]    []    []    []    []    []    []    
[]    [B]   [C]   [A, B][]    []    []    []    []    []    
[]    [B]   [C]   [A]   [S]   []    []    []    []    []    
[]    [B]   [C]   [A, B][C]   [S]   []    []    []    []    
[]    [B]   [C]   [A, B][]    [C]   [S]   []    []    []    
[]    [C]   [B]   [C]   []    []    []    [A, B][]    []    
[]    [C]   [B]   [C]   []    []    []    [A]   [S]   []    
[]    [C]   [B]   [C]   []    []    []    [A, B][C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [C][B][] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->b }, { A-->AC }]
C[{ C-->a }, { C-->CC }]
S[{ S-->SC }, { S-->b }]

word='abbbaaabaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A, S][]    []    []    []    []    []    []    
[A]   [A]   [A]   [A, S][]    []    []    []    []    []    
[A]   [A]   [A]   [A, S][A, C][]    []    []    []    []    
[A]   [A]   [A]   [A, S][A, C][A, C][]    []    []    []    
[A]   [A]   [A]   [A, S][A, C][A, C][A, C][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][A, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][A, C][A, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->CB }, { S-->a }, { S-->BS }]
C[{ C-->b }]

word='aabbbbbbab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[A, B][A, B][C]   []    []    []    []    []    []    []    
[A]   [A]   []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    [S]   [B, S][]    
[]    []    []    []    []    []    [S]   [B, S][A, B][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CB }, { C-->a }]
S[{ S-->SB }, { S-->SS }, { S-->SC }, { S-->b }]

word='aabbbbbbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [B, C][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [S]   []    []    []    []    []    []    
[]    []    [S]   [S]   [S]   []    []    []    []    []    
[]    []    [S]   [S]   [S]   [S]   []    []    []    []    
[]    []    [S]   [S]   [S]   [S]   [S]   []    []    []    
[]    []    [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[]    []    [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    
[]    []    [S]   [S]   [S]   [S]   [S]   [S]   []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]

word='aabbbbbbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BA }]
B[{ B-->CA }, { B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->BB }, { S-->AB }]
C[{ C-->b }]

word='aabbbbbbab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[A]      [A]      [A, C]   []       []       []       []       []       []       []       
[S]      [S]      [B]      [A, C]   []       []       []       []       []       []       
[A, B, S][A, S]   [A, S]   [B]      [A, C]   []       []       []       []       []       
[A, B, S][A, S]   [A, B, S][A, S]   [B]      [A, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      [A, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      [A, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B, S]   [A, B]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A]      [A, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[]    [A]   []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=12

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->AC }]
B[{ B-->SC }]
C[{ C-->SA }, { C-->AA }, { C-->b }, { C-->AB }]
S[{ S-->a }]

word='aabbbbbbab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, S]   []       []       []       []       []       []       []       []       
[A, C]   [A, B]   [C]      []       []       []       []       []       []       []       
[A, C]   [A]      []       [C]      []       []       []       []       []       []       
[A, C]   [A]      []       []       [C]      []       []       []       []       []       
[A, C]   [A]      []       []       []       [C]      []       []       []       []       
[A, C]   [A]      []       []       []       []       [C]      []       []       []       
[A, C]   [A]      []       []       []       []       []       [C]      []       []       
[A, B, C][C]      []       []       []       []       []       [A]      [A, S]   []       
[A, B, C][C]      []       []       []       []       []       [A]      [A, B]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->CA }, { B-->AA }]
C[{ C-->SA }, { C-->SS }, { C-->SC }]
S[{ S-->a }]

word='babaabbaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [A, S]   []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[B]      [B, C]   [A]      [A, S]   []       []       []       []       []       []       
[A]      [A, B]   [B]      [B, C]   [A, S]   []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[A, B]   [A, B, C][A]      [A, B, C][B, C]   [A]      [A]      [A, S]   []       []       
[A, B]   [A, B, C][A, B]   [A, B, C][A, B]   [B]      [B]      [B, C]   [A, S]   []       
[A, B]   [A, B, C][A, B]   [A, B, C][A, B, C][A]      [A]      [A, B, C][B, C]   [A, S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   [A]   [C]   [A, B][B]   []    []    []    []    
[]    [C]   []    [C]   [C]   []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=11

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]

word='babaabbaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->AB }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->BB }]
C[{ C-->BA }]
S[{ S-->a }, { S-->SS }]

word='babaabbaaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, B]   [B, S]   []       []       []       []       []       []       []       []       
[A, B, C][B, C]   [A, B]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B]   [B, S]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B]   [B, S]   [B, S]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [A, B]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [A, B, C][A, B]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B, S]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B, S]   [B, S]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B, S]   [B, S]   [B, S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [] [] [A][A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }]
C[{ C-->AC }, { C-->CC }, { C-->b }]

word='babaabbaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[C]   [A, C][B, C][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [A, C][B, C][]    []    []    []    
[C]   [C]   [C]   [C]   [A, C][C]   [B, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->SA }, { B-->SS }, { B-->AA }]
C[{ C-->AS }, { C-->a }, { C-->CC }, { C-->b }]
S[{ S-->a }, { S-->SC }]

word='babaabbaaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[C]         [S, C]      []          []          []          []          []          []          []          []          
[C]         [B, S, C]   [A, C]      []          []          []          []          []          []          []          
[B, C]      [A, B, S, C][C]         [S, C]      []          []          []          []          []          []          
[A, B, C]   [A, B, S, C][C]         [B, S, C]   [S, C]      []          []          []          []          []          
[A, B, C]   [A, B, C, S][C]         [B, S, C]   [B, S, C]   [A, C]      []          []          []          []          
[A, B, C]   [A, B, C, S][C]         [B, S, C]   [B, S, C]   [B, C]      [A, C]      []          []          []          
[A, B, C]   [A, B, C, S][B, C]      [A, B, S, C][A, B, S, C][A, C]      [C]         [S, C]      []          []          
[A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C, S][A, C]      [C]         [B, S, C]   [S, C]      []          
[A, B, C]   [A, B, S, C][A, B, C]   [A, B, C, S][A, B, C, S][A, C]      [B, C]      [A, B, S, C][B, S, C]   [S, C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [A, B][B]   []    [A]   []    []    []    []    []    
[]    [A]   [B]   []    [A]   [A]   []    []    []    []    
[]    [A]   []    []    [A]   [A]   [B]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=20

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }]
C[{ C-->a }, { C-->b }]

word='bbabaabbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    []    [S, C][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [S, C][]    
[]    []    []    []    []    []    []    []    []    [S, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AS }]
B[{ B-->BC }, { B-->BS }, { B-->SC }, { B-->AA }]
C[{ C-->AC }, { C-->SB }, { C-->a }]
S[{ S-->BA }, { S-->b }]

word='bbabaabbaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B]      [A, S]      []          []          []          []          []          []          []          []          
[B, C]      [B, C]      [C]         []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B]      [A]         [B, C]      [C]         []          []          []          []          []          
[A, B, S, C][B, S, C]   [C]         [A, B]      [A]         [C]         []          []          []          []          
[A, B, C, S][A, B, S, C][A]         [A, B, C, S][A, B]      []          [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B]      [A, B, C, S][A, B, S]   []          [A, B]      [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][B, C]      [A]         [B, C]      [B, C]      [C]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, B, C, S][A, B]      [A]         [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S, C][]       []       []       []       []       []       []       []       []       
[A]      [A, B]   []       []       []       []       []       []       []       []       
[S]      [S]      [C]      []       []       []       []       []       []       []       
[]       [A, B, C][]       [A, C]   []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       []       [S]      [C]      []       []       []       []       []       
[]       []       []       []       [C]      []       [A, B, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=21

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->BB }]
C[{ C-->a }]

word='bbabaabbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][C][] [] [] [] [] [] [] 
[B][B][] [B][] [] [] [] [] [] 
[B][B][] [B][C][] [] [] [] [] 
[B][B][] [B][] [C][] [] [] [] 
[B][B][] [B][] [] [B][] [] [] 
[B][B][] [B][] [] [B][B][] [] 
[B][B][] [B][] [] [B][B][C][] 
[B][B][] [B][] [] [B][B][] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->SA }, { S-->a }]
C[{ C-->a }, { C-->CS }, { C-->SS }, { C-->b }]

word='bbabaabbaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    [C]   [S, C][]    []    []    []    []    []    []    
[]    [C]   [S]   [A, C][]    []    []    []    []    []    
[]    [C]   [C]   [C]   [S, C][]    []    []    []    []    
[]    [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[]    [C]   [C]   [C]   [C]   [S]   [A, C][]    []    []    
[]    [C]   [C]   [C]   [C]   [S]   []    [A, C][]    []    
[]    [C]   [C]   [C]   [C]   [C]   []    [C]   [S, C][]    
[]    [C]   [C]   [C]   [C]   [C]   []    [C]   [C]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[] [C][C][C][] [] [] [] [] [] 
[] [C][C][C][] [] [] [] [] [] 
[] [C][C][C][C][] [] [] [] [] 
[] [C][C][C][C][] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=17

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
C[{ C-->a }, { C-->BB }, { C-->b }]

word='bbabaabbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [B]   [C]   []    []    []    []    []    []    
[]    []    [B, C][]    [B, C][]    []    []    []    []    
[]    []    [B, C][]    [B, C][B, C][]    []    []    []    
[]    []    [B, C][]    [B, C][B]   [C]   []    []    []    
[]    []    [B, C][]    [B, C][B]   []    [C]   []    []    
[]    []    [B, C][]    [B, C][B, C][]    []    [B, C][]    
[]    []    [B, C][]    [B, C][B, C][]    []    [B, C][B, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->AC }, { B-->SS }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->b }, { S-->BC }]
C[{ C-->AS }, { C-->SC }]

word='babbbbabaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->CB }]
C[{ C-->AC }, { C-->BA }, { C-->SS }, { C-->AA }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->CS }, { S-->AB }]

word='babbbbabaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[]          []          [B, C]      []          []          []          []          []          []          []          
[S]         [S]         [A, B]      [B, C]      []          []          []          []          []          []          
[A, C]      [C]         [B, C, S]   [A, B]      [B, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C, S]   [A, B]      [B, C]      []          []          []          []          
[A, C, S]   [C, S]      [A, S, C]   [S, C]      [S]         [S]         [S]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B]      []          []          []          [B, C]      []          []          
[A, C, S]   [A, S, C]   [A, C, S]   [A, C, S]   [A, C]      [A, C]      [C]         [S]         [S]         []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, S, C]   [S]         [S]         [S]         [A, C]      [C]         [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    [A]   []    []    [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->CC }, { C-->b }]

word='babbbbabaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [C]   [A, C][]    []    []    []    []    []    
[]    []    [C]   [C]   [A, C][]    []    []    []    []    
[]    []    [C]   [C]   [C]   [A, C][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->SC }]
S[{ S-->AA }]
C[{ C-->CS }, { C-->a }, { C-->SS }]

word='babbbbabaa'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B, S]      [A, C]      []          []          []          []          []          []          []          []          
[A, S]      [A, S]      [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, S]      [A, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, S]      [A, S]      [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      [A, S]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][B, S]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, B, S]   [A, C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
C[{ C-->SS }]
S[{ S-->SC }, { S-->CS }, { S-->b }]

word='babbbbabaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [C][S][] [] [] [] [] [] 
[] [] [S][C][S][] [] [] [] [] 
[] [] [C][S][C][S][] [] [] [] 
[] [] [A][] [A][] [A][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->a }, { S-->b }]

word='abbaabbaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    
[]    []    []    []    []    []    []    [A, S][]    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    []    [A, S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }, { A-->SB }]
B[{ B-->SS }, { B-->AA }]
S[{ S-->a }, { S-->b }]

word='abbaabbaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[A]   [B]   [S]   []    []    []    []    []    []    []    
[A, B][A]   [A, B][A, S][]    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, S][]    []    []    []    []    
[A, B][A]   [A]   [A]   [B]   [S]   []    []    []    []    
[A, B][A, B][A, B][A, B][A]   [B]   [S]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   [A, B][A, S][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, S][]    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=28

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]

word='abbaabbaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BC }]
B[{ B-->CA }, { B-->BA }, { B-->a }, { B-->AA }]
C[{ C-->CB }, { C-->a }]

word='abbaabbaaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[B, C]   [B]      [A]      []       []       []       []       []       []       []       
[A, B, C][A]      []       [B, C]   []       []       []       []       []       []       
[A, B, C][A, B]   [B]      [A, C]   [B, C]   []       []       []       []       []       
[A, B, C][A, B]   [B]      [B, C]   [B]      [A]      []       []       []       []       
[A, B, C][A, B]   [B]      [A, B, C][B, C]   [B]      [A]      []       []       []       
[A, B, C][A, B]   [A, B]   [A, B, C][A, B, C][A]      []       [B, C]   []       []       
[A, B, C][A, B]   [A, B]   [A, B, C][A, B, C][A, B]   [B]      [A, C]   [B, C]   []       
[A, B, C][A, B]   [A, B]   [A, B, C][A, B, C][A, B]   [A, B]   [A, B, C][A, C]   [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[A]   [A, B][B]   []    []    []    []    []    []    []    
[A]   [A, B][]    [B]   []    []    []    []    []    []    
[A]   [A]   []    []    [A, C][]    []    []    []    []    
[A]   [A]   []    []    [A]   [A, B][]    []    []    []    
[A]   [A]   []    []    [A]   [A]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=26

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->SA }, { A-->SB }]
B[{ B-->AA }]
S[{ S-->a }]

word='abbaabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A, B][B]   [A]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[A, B][A]   [B]   [A]   [A]   [A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   [A]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AC }, { A-->CA }, { A-->CB }]
B[{ B-->b }]
C[{ C-->AS }, { C-->SS }, { C-->AB }]
S[{ S-->a }]

word='bababbaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[A]   []    [A, B][]    []    []    []    []    []    []    
[C]   []    [C]   [S]   []    []    []    []    []    []    
[A]   []    [A]   []    [A, B][]    []    []    []    []    
[C]   []    [C]   []    [C]   [A, B][]    []    []    []    
[A]   []    [A]   []    [A]   [C]   [S]   []    []    []    
[C]   []    [C]   []    [C]   [A]   [C]   [S]   []    []    
[A]   []    [A]   []    [A]   [C]   [A]   [C]   [S]   []    
[C]   []    [C]   []    [C]   [A]   [C]   [A]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [A][C][] [] [] [] 
[] [] [] [] [C][A][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=6

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->AB }, { B-->SB }, { B-->a }]
S[{ S-->a }]

word='bababbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, B][B, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][B, S][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B, S][]    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   [B, S][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   [B]   [B, S][]    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   [B]   [B]   [B, S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [A][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=3

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AS }, { B-->AC }, { B-->a }, { B-->AA }]
C[{ C-->SA }, { C-->SC }]
S[{ S-->BB }, { S-->b }, { S-->BC }]

word='bababbaaaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, B]   []       []       []       []       []       []       []       []       
[]       [B]      [A, S]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, C]   [A, B]   []       []       []       []       []       []       
[B, C]   [S, C]   []       [B]      [A, S]   []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [B, S]   [B, C]   [A, S]   []       []       []       []       
[B, S, C][B, S, C][B, C, S][B, S, C][B, C, S][B, C]   [A, B]   []       []       []       
[B, S, C][B, S, C][B, C, S][B, S, C][B, S, C][B, S]   [B, S]   [A, B]   []       []       
[B, S, C][B, S, C][B, C, S][B, S, C][B, C, S][B, C, S][B, S, C][B, S]   [A, B]   []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, C, S][B, S, C][B, S, C][B, S]   [A, B]   

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B, C]   [B, S, C][]       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B, C]   []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=29

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
S[{ S-->AC }, { S-->a }, { S-->CC }]
C[{ C-->a }]

word='bababbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    [S]   [S, C][]    []    []    
[]    []    []    []    []    []    [S]   [S, C][]    []    
[]    []    []    []    []    []    []    [S]   [S, C][]    
[]    []    []    []    []    []    []    []    [S]   [S, C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=1

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->CA }]
B[{ B-->AB }, { B-->SB }, { B-->BA }, { B-->CS }]
C[{ C-->SA }, { C-->SC }, { C-->a }, { C-->CC }]
S[{ S-->AC }, { S-->a }, { S-->b }]

word='bababbaaaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, C]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [S, C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->CC }, { B-->BB }]
C[{ C-->CB }, { C-->b }]

word='bbbaabaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[B, C][B]   [C]   []    []    []    []    []    []    []    
[B, C][B]   [C]   [B]   []    []    []    []    []    []    
[B, C][B]   [C]   [B]   [B]   []    []    []    []    []    
[B, C][B, C][B, C][B]   [B]   [C]   []    []    []    []    
[B, C][B, C][B, C][B]   [B]   [C]   [B]   []    []    []    
[B, C][B, C][B, C][B]   [B]   [C]   [B]   [B]   []    []    
[B, C][B, C][B, C][B]   [B]   [C]   [B]   [B]   [B]   []    
[B, C][B, C][B, C][B]   [B]   [C]   [B]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=2

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->BA }]
B[{ B-->SC }, { B-->CC }]
S[{ S-->AS }, { S-->a }, { S-->b }]
C[{ C-->a }, { C-->SS }]

word='bbbaabaaaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      [S, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [C]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, C]      [A, B, S, C][S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, S, C][B, C]      [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, S, C][B]         [B, C]      [S, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, S, C][B]         [B]         [B, C]      [S, C]      

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          [B, S, C]   []          []          []          []          []          []          []          
[]          []          [B]         [B, S]      []          []          []          []          []          []          
[]          []          []          [S, C]      [C]         []          []          []          []          []          
[]          []          []          [S, C]      [C]         [A, B, S, C][]          []          []          []          
[]          []          []          [S, C]      [C]         [A, B, S, C][B]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=24

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->SA }, { B-->CB }, { B-->a }, { B-->AA }]
S[{ S-->CA }, { S-->BS }]
C[{ C-->AS }, { C-->SC }, { C-->CC }, { C-->SS }, { C-->b }]

word='bbbaabaaaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, C, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          []          []          
[B]         [B]         [B]         [B]         []          []          []          []          []          []          
[]          []          []          []          [B]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A]         [A]         [A, C]      []          []          []          []          
[B]         [B]         []          []          []          [B]         [B]         []          []          []          
[]          []          []          []          []          []          []          [B]         []          []          
[]          []          []          []          []          []          []          []          [B]         []          
[]          []          []          []          []          []          []          []          []          [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->CA }]
B[{ B-->SB }, { B-->a }]
S[{ S-->AS }, { S-->AA }, { S-->CC }]
C[{ C-->a }, { C-->b }]

word='bbbaabaaaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, C]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, C]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [B, C]   []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A]      [A, S]   [A, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [A, B]   [A, S]   [B, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B, S][S]      [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [S]      [B, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      [A, B]   [S]      [B, C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=7

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
S[{ S-->SA }, { S-->AA }]

word='bbbaabaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, S][S]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][S]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->SB }]
B[{ B-->b }]
C[{ C-->BA }, { C-->SC }, { C-->b }]
S[{ S-->a }]

word='babbabbbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, C][A, S][]    []    []    []    []    []    []    []    
[C]   [A, C][B, C][]    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    [C]   [C]   [A, C][A, S][]    []    []    []    []    
[]    []    []    [C]   [A, C][B, C][]    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    []    [B, C][]    []    
[]    []    []    []    []    []    [C]   [A, C][A, S][]    
[]    []    []    []    []    []    []    [C]   [A, C][B, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->CA }]
S[{ S-->a }, { S-->AA }, { S-->SC }]
C[{ C-->a }]

word='babbabbbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[S]   [A]   [A]   []    []    []    []    []    []    []    
[S]   [A, S][S]   [A]   []    []    []    []    []    []    
[S]   [A, S][S]   []    [S, C][]    []    []    []    []    
[]    [S]   []    [S]   [A]   [A]   []    []    []    []    
[]    [S]   []    [S]   [A, S][S]   [A]   []    []    []    
[]    []    []    []    [S]   []    [S]   [A]   []    []    
[]    []    []    []    [S]   []    [S]   []    [S, C][]    
[]    []    []    []    []    []    []    [S]   [A]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=5

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AC }, { A-->CA }]
B[{ B-->b }]
C[{ C-->a }, { C-->CC }, { C-->b }, { C-->BC }]

word='babbabbbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[A, C][A, C][B, C][]    []    []    []    []    []    []    
[A, C][A, C][C]   [B, C][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][B, C][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [B, C][]    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [C]   [B, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][B, C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }]
S[{ S-->CS }, { S-->b }]

word='babbabbbab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->BB }]
S[{ S-->SB }, { S-->CC }, { S-->CS }]
C[{ C-->a }, { C-->b }, { C-->BS }]

word='babbabbbab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[B, C, S][B, S]   [B, C]   []       []       []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B, C]   []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S]   [C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [B, C]   []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [B, S]   [B, C]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, S]   [B, C]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, C, S][B, S]   [C]      []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [B, C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->BC }, { B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->SB }, { S-->a }]
C[{ C-->AS }, { C-->CA }, { C-->BB }, { C-->SS }, { C-->BS }, { C-->b }]

word='aaaaaaaaab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][S, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S, C]      [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][S, C]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][S, C]      [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][S, C]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][S, C]      [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [B]         [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }, { B-->a }]
C[{ C-->b }]

word='aaaaaaaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[]    []    []    []    []    []    []    [A, B][]    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    [B]   [C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->a }, { B-->BB }]

word='aaaaaaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BS }]
B[{ B-->b }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->CB }, { S-->SB }, { S-->BB }]
C[{ C-->AS }, { C-->CS }, { C-->BC }]

word='aaaaaaaaab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, S]      [A, B]      []          []          []          []          []          []          []          []          
[A, C, S]   [A, S]      [A, B]      []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S]      [A, B]      []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, S, C]   [A, C, S]   [A, S]      [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, S, C]   [A, C, S]   [A, S]      [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, S, C]   [A, C, S]   [A, S]      [A, B]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, S, C]   [A, C, S]   [A, S]      [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, C, S]   [S]         [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->b }]

word='aaaaaaaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[] [B][C][] [] [] [] [] [] [] 
[] [] [B][C][] [] [] [] [] [] 
[] [] [] [B][C][] [] [] [] [] 
[] [] [] [] [B][C][] [] [] [] 
[] [] [] [] [] [B][C][] [] [] 
[] [] [] [] [] [] [B][C][] [] 
[] [] [] [] [] [] [] [B][C][] 
[] [] [] [] [] [] [] [B][C][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->CA }]
B[{ B-->b }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->SC }]
S[{ S-->a }]

word='bbaabaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[]    [C]   [A, S][]    []    []    []    []    []    []    
[C]   [A, C][A]   [A, S][]    []    []    []    []    []    
[C]   [C]   []    []    [B]   []    []    []    []    []    
[A, C][A, C][C]   [C]   [C]   [A, S][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   [A, S][]    []    []    
[A, C][A, C][A]   [A]   [A]   []    [A]   [A, S][]    []    
[A, C][A, C][A]   [A]   [A]   []    []    [A]   [A, S][]    
[C]   [C]   []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=9

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->a }]
C[{ C-->CB }, { C-->AA }]

word='bbaabaaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [A, B]   []       []       []       []       []       []       []       
[]       []       [B, C]   [A, B]   []       []       []       []       []       []       
[]       []       [B, C]   [B]      [B]      []       []       []       []       []       
[]       []       [A, C]   []       []       [A, B]   []       []       []       []       
[]       []       [A, B, C][]       []       [B, C]   [A, B]   []       []       []       
[]       []       [A, B, C][]       []       [A, B, C][B, C]   [A, B]   []       []       
[]       []       [A, B, C][]       []       [A, B, C][A, B, C][B, C]   [A, B]   []       
[]       []       [B, C]   []       []       [B, C]   [B, C]   [B, C]   [B]      [B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }, { B-->CC }]
S[{ S-->SB }, { S-->a }, { S-->b }]
C[{ C-->CS }, { C-->b }]

word='bbaabaaaab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, C]   [S, C]   []       []       []       []       []       []       []       []       
[B, C]   [S, C]   [B, S]   []       []       []       []       []       []       []       
[B, C]   [S, C]   [B, S]   [B, S]   []       []       []       []       []       []       
[B, C, S][B, S, C][B, S]   [B]      [S, C]   []       []       []       []       []       
[B, C, S][B, S, C][B, S]   [B]      [S, C]   [B, S]   []       []       []       []       
[B, C, S][B, S, C][B, S]   [B]      [S, C]   [B, S]   [B, S]   []       []       []       
[B, C, S][B, C, S][B, S]   [B]      [S, C]   [B, S]   [B, S]   [B, S]   []       []       
[B, C, S][B, C, S][B, S]   [B]      [S, C]   [B, S]   [B, S]   [B, S]   [B, S]   []       
[B, C, S][B, C, S][B, S]   [B, S]   [B, S, C][B, S]   [B, S]   [B, S]   [B]      [S, C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [S][B][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=8

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AA }]
S[{ S-->AC }, { S-->CA }]
C[{ C-->a }, { C-->CS }, { C-->SC }, { C-->b }]

word='bbaabaaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A, C, S][A, S]   [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, S]   [A, C]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, C]   []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->CS }]
S[{ S-->SA }, { S-->BB }, { S-->BS }]
C[{ C-->a }, { C-->AB }]

word='bbaabaaaab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B]      [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false
countRightCellCombinationsForced=0

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}
