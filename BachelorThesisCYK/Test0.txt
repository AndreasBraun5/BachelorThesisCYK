

Result{
		countGeneratedGrammars= 15000
		countGeneratedGrammarsPerWord= 150
		countDifferentWords= 100
		totalTime= 42589ms
		totalTime= 0min 42sec
		generatorType= DICEROLLTOPDOWNMARTENS
GrammarGeneratorSettingsDiceRoll{
		minValueCompoundVariablesAreAddedTo=0
		minValueTerminalsAreAddedTo=1
		maxValueCompoundVariablesAreAddedTo=2
		maxValueTerminalsAreAddedTo=1
		favouritism=[1, 1, 1, 1]
GrammarProperties: {
		variables= [A, B, S, C]
		variableStart= S
		terminals= [a, b]
GrammarPropertiesGrammarRestrictions{
		sizeOfWord=10
		maxNumberOfVarsPerCell=3
}
GrammarPropertiesExamConstraints{
		minRightCellCombinationsForced=1
		maxSumOfProductions=10
		maxSumOfVarsInPyramid=100
}
}
}
SuccessRates{
SUCCESSRATEOVERVIEW:
			-->	SUCCESSRATE=0.1064
			-->	SUCCESSRATEPRODUCIBILITY=0.5580666666666667
			-->	SUCCESSRATEGRAMMARRESTRICTIONS=0.6704666666666667
			-->	SUCCESSRATEEXAMCONSTRAINTS=0.2912

			-->	SUCCESSRATE=0.1064
		trueCount=1596
		falseCount=13404
			-->	SUCCESSRATEPRODUCIBILITY=0.5580666666666667
		trueProducibilityCount=8371
		falseProducibilityCount=6629
SuccessRatesGrammarRestrictions{
		trueGrammarRestrictionsCount=10057
		falseGrammarRestrictionsCount=4943
			-->	SUCCESSRATEGrammarRestrictions=0.6704666666666667
		trueSizeOfWordCount=15000
		falseSizeOfWordCount=0
			-->	SUCCESSRATESizeOfWord=1.0
		trueMaxNumberOfVarsPerCellCount=10057
		falseMaxNumberOfVarsPerCellCount=4943
			-->	SUCCESSRATEMaxNumberOfVarsPerCell=0.6704666666666667
}
SuccessRatesExamConstraints{
		trueExamConstraints=4368
		falseExamConstraints=10632
			-->	SUCCESSRATEExamConstraints=0.2912
		trueRightCellCombinationsForcedCount=8561
		falseRightCellCombinationsForcedCount=6439
			-->	SUCCESSRATERightCellCombinationsForced=0.5707333333333333
		trueMaxSumOfProductionsCount=13652
		falseMaxSumOfProductionsCount=1348
			-->	SUCCESSRATEMaxSumOfProductions=0.9101333333333333
		trueMaxSumOfVarsInPyramidCount=7999
		falseMaxSumOfVarsInPyramidCount=7001
			-->	SUCCESSRATEMaxSumOfVarsInPyramid=0.5332666666666667
}
}
}



RepresentativeResultSamples{

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
S[{ S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->b }]

}
word='aabbbbaaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[B][B][C][] [] [] [] [] [] [] 
[S][S][S][C][] [] [] [] [] [] 
[B][B][B][S][C][] [] [] [] [] 
[S][S][S][B][S][C][] [] [] [] 
[S][S][S][] [S][] [S][] [] [] 
[S][S][S][] [S][] [S][S][] [] 
[S][S][S][] [S][] [S][S][S][] 
[S][S][S][] [S][] [S][S][S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->SS }, { B-->AA }]
S[{ S-->a }, { S-->AA }]
C[{ C-->AA }]

}
word='aabbbbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][A]      []       []       []       []       []       []       
[A]      [A]      [A]      [B, S, C][A]      []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][A]      [B, S, C][A]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][A]      [B, S, C][A]      [S]      []       []       []       
[B, S, C][B, S, C][B, S, C][A]      [B, S, C][A]      [B]      [S]      []       []       
[B, S, C][B, S, C][B, S, C][A]      [B, S, C][A]      []       [B]      [S]      []       
[B, S, C][B, S, C][B, S, C][A]      [B, S, C][A]      []       []       [B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][]       []       []       []       []       []       []       []       
[S, C]   [S, C]   [B, S, C][]       []       []       []       []       []       []       
[S, C]   [S, C]   [B, S, C][]       [B, S, C][]       []       []       []       []       
[S, C]   [S, C]   [B, S, C][]       [B, S, C][]       []       []       []       []       
[S, C]   [S, C]   [B, S, C][]       [B, S, C][]       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=46

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=46
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AA }, { B-->BB }]
C[{ C-->AA }, { C-->BB }, { C-->AB }]
S[{ S-->AA }, { S-->BB }]

}
word='aabbbbaaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C, S][A]      []       []       []       []       []       []       []       []       
[B, C, S][C]      [B]      []       []       []       []       []       []       []       
[B, C, S][C]      [B, C, S][B]      []       []       []       []       []       []       
[B, C, S][C]      [B, C, S][B, C, S][B]      []       []       []       []       []       
[B, C, S][C]      [B, C, S][B, C, S][B, C, S][B]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[B, C, S][C]      [B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A]      []       []       
[]       []       []       []       []       []       [C]      [B, C, S][A]      []       
[B, C, S][C]      [B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      [B, C, S][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       [B, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }]
C[{ C-->AS }, { C-->AA }, { C-->SS }]
S[{ S-->AA }, { S-->SS }, { S-->b }]

}
word='aabbbbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[S, C][C]   [S]   []    []    []    []    []    []    []    
[S, C][C]   [S, C][S]   []    []    []    []    []    []    
[S, C][C]   [S, C][S, C][S]   []    []    []    []    []    
[S, C][C]   [S, C][S, C][S, C][S]   []    []    []    []    
[B]   []    [B]   [B]   [B]   [B]   [A]   []    []    []    
[S, C][C]   [S, C][S, C][S, C][S, C][S, C][A]   []    []    
[B]   []    [B]   [B]   [B]   [B]   [B, C][S, C][A]   []    
[S, C][C]   [S, C][S, C][S, C][S, C][S, C][B, C][S, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[]    []    [B]   [B]   []    []    []    []    []    []    
[S, C][]    [S, C][S, C][S, C][]    []    []    []    []    
[]    []    [B]   [B]   [B]   [B]   []    []    []    []    
[S, C][]    [S, C][S, C][S, C][S, C][S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SS }]
B[{ B-->SS }, { B-->SC }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CC }, { S-->b }]

}
word='aabbbbaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [C]      []       []       []       []       []       []       []       []       
[A, B, C][]       [S]      []       []       []       []       []       []       []       
[B]      [A, S]   [A, B, C][S]      []       []       []       []       []       []       
[A, S]   [A, B, C][B]      [A, B, C][S]      []       []       []       []       []       
[A, B, C][B]      [A, S]   [B]      [A, B, C][S]      []       []       []       []       
[A, S]   [A, B, C][B]      [A, B, C][A, S]   [B]      [C]      []       []       []       
[B]      [A, S]   [A, B, C][A, S]   [B]      [A, B, C][A, S]   [C]      []       []       
[A, B, C][B]      [A, S]   [B]      [A, B, C][A, S]   [B]      [A, S]   [C]      []       
[A, S]   [A, B, C][B]      [A, B, C][A, S]   [B]      [A, B, C][B]      [A, S]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[A, S]   [A, B, C][]       []       []       []       []       []       []       []       
[A, B, C][B]      [A, S]   []       []       []       []       []       []       []       
[]       [A, B, C][]       [A, B, C][]       []       []       []       []       []       
[]       []       [A, B, C][A, S]   []       []       []       []       []       []       
[A, B, C][]       [A, S]   []       [A, B, C][A, S]   []       []       []       []       
[]       [A, B, C][]       [A, B, C][A, S]   []       [A, B, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=44

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=44
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->BB }]
S[{ S-->BC }]

}
word='babbabaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[C]   [B]   [B]   []    []    []    []    []    []    []    
[B, S][C]   [C]   [B]   []    []    []    []    []    []    
[S]   []    []    [S]   [C]   []    []    []    []    []    
[C]   [B, S][B, S][C]   [B]   [B]   []    []    []    []    
[]    [S]   [S]   []    [S]   [S]   [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[B, S][C]   [C]   [B, S][C]   [C]   [B]   [B]   [B]   []    
[S]   []    []    [S]   []    []    [S]   [S]   [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->b }, { S-->BS }]

}
word='babbabaaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A, S]   [B, S]   [S]      []       []       []       []       []       []       []       
[A, S]   [A, B, S][A]      [S]      []       []       []       []       []       []       
[A, S]   [A, B, S][A]      [S]      [B]      []       []       []       []       []       
[A, S]   [A, B, S][A]      [A, S]   [B, S]   [S]      []       []       []       []       
[A, S]   [A, B, S][A]      [A, S]   [B, S]   [S]      [B]      []       []       []       
[A, S]   [A, B, S][A]      [A, S]   [B, S]   [S]      []       [B]      []       []       
[A, S]   [A, B, S][A]      [A, S]   [A, B, S][A, S]   [B, S]   [B, S]   [S]      []       
[A, S]   [A, B, S][A]      [A, S]   [A, B, S][A, S]   [B, S]   [B, S]   [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       [A, B, S][A]      []       []       []       []       []       []       []       
[]       [A, B, S][A]      []       []       []       []       []       []       []       
[]       [A, B, S][A]      []       []       []       []       []       []       []       
[]       [A, B, S][A]      []       []       []       []       []       []       []       
[]       [A, B, S][A]      []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->b }]

}
word='babbabaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A]   [B]   [S]   []    []    []    []    []    []    []    
[B, S][]    [A]   [S]   []    []    []    []    []    []    
[B, S][]    [A]   [S]   [A]   []    []    []    []    []    
[A]   [B]   [B, S][A]   [B]   [S]   []    []    []    []    
[A]   [B]   [B, S][A]   [B]   [S]   [A]   []    []    []    
[A]   [B]   [B, S][A]   [B]   [S]   []    [A]   []    []    
[B, S][]    [A]   [B, S][]    [A]   []    [B]   [S]   []    
[B, S][]    [A]   [B, S][]    [A]   []    [B]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    [B, S][]    []    []    []    []    []    []    
[A]   [B]   [B]   [A]   []    []    []    []    []    []    
[A]   [B]   [B]   [A]   [B]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }]
C[{ C-->SB }]
S[{ S-->a }, { S-->BS }]

}
word='babbabaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[B, S, C][C]      [B, S]   [B, S]   [S]      []       []       []       []       []       
[C]      []       [C]      [C]      [C]      [B]      []       []       []       []       
[B, S, C][C]      [B, S, C][B, S, C][C]      [B, S]   [S]      []       []       []       
[B, S, C][C]      [B, S, C][B, S, C][C]      [B, S]   []       [S]      []       []       
[C]      []       [C]      [C]      []       [C]      []       [C]      [B]      []       
[B, S, C][C]      [B, S, C][B, S, C][C]      [B, S, C][]       [C]      [B, S]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[B, S, C][]       [B, S, C][B, S, C][]       []       []       []       []       []       
[B, S, C][C]      []       [B, S, C][C]      []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[B, S, C][]       [B, S, C][B, S, C][]       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->a }, { B-->BB }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->CC }, { C-->b }, { C-->BC }]

}
word='babbabaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[C]      [A, C, S][C]      []       []       []       []       []       []       []       
[C]      [A, C, S][C]      [C]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [B]      []       []       []       []       []       
[C]      [A, C, S][C]      [C]      [A, C, S][C]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [B]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, B]   [B]      []       []       
[C]      [A, C, S][C]      [C]      [A, C, S][C]      [A, C, S][A, C, S][C]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S]   [A, S]   []       []       []       []       []       []       []       []       
[C]      [A, C, S][C]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       
[C]      [A, C, S][C]      [C]      [A, C, S][C]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=51

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=51
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->BB }]
S[{ S-->BB }]

}
word='aabbbababb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [B]      []       []       []       []       []       []       
[B]      [B]      [B]      [C, S]   [B]      []       []       []       []       []       
[]       []       []       [A]      []       [C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][B]      [C, S]   [B]      [B]      []       []       []       
[A]      [A]      [A]      []       [A]      []       []       [C]      []       []       
[B]      [B]      [B]      [A, C, S][B]      [A, C, S][C, S]   [B]      [B]      []       
[A, C, S][A, C, S][A, C, S][B]      [A, C, S][B]      [B]      [A, C, S][C, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       [B]      []       []       []       []       []       
[A, C, S][A, C, S][A]      [B]      [A]      []       [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->b }, { S-->BS }]

}
word='aabbbababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AA }, { A-->b }]
B[{ B-->AB }, { B-->a }]
S[{ S-->BA }, { S-->AA }]

}
word='aabbbababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A, S][S]   [A]   []    []    []    []    []    []    []    
[A, S][S]   [A, S][A]   []    []    []    []    []    []    
[A, S][S]   [A, S][A, S][A]   []    []    []    []    []    
[B, S][A]   [B]   [B]   [B]   [B]   []    []    []    []    
[S]   [A, S][S]   [S]   [S]   [S]   [A]   []    []    []    
[A, S][B, S][A, S][A, S][A, S][A]   [B]   [B]   []    []    
[A, S][S]   [A, S][A, S][A, S][A, S][S]   [S]   [A]   []    
[A, S][S]   [A, S][A, S][A, S][A, S][S]   [S]   [A, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [A, S][S]   [S]   []    []    []    []    []    []    
[A, S][B]   [A, S][A, S][A, S][]    []    []    []    []    
[A, S][]    []    []    []    [A, S][]    []    []    []    
[A, S][S]   []    []    []    [A, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->BB }]
S[{ S-->CC }]

}
word='aabbbababb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[C, S][C, S][C]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [C]   [B]   []    []    []    []    []    
[]    []    []    [S]   []    [C]   []    []    []    []    
[C, S][C, S][C, S][B]   [C]   [B]   [B]   []    []    []    
[S]   [S]   [S]   []    [S]   []    []    [C]   []    []    
[B]   [B]   [B]   [C, S][B]   [S, C][C]   [B]   [B]   []    
[C, S][C, S][C, S][B]   [C, S][B]   [B]   [S, C][C]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    [B]   []    []    []    []    []    
[C, S][C, S][S]   [B]   [S]   []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AB }]
S[{ S-->BA }]

}
word='aabbbababb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [B]      []       []       []       []       []       []       []       
[A, B]   [A, B]   []       [B]      []       []       []       []       []       []       
[A, B]   [A, B]   []       []       [B]      []       []       []       []       []       
[S]      [S]      []       []       [S]      [A]      []       []       []       []       
[A, B, S][A, B, S][]       []       [S]      [A, B]   [B]      []       []       []       
[S]      [S]      []       []       []       [S]      [S]      [A]      []       []       
[A, B, S][A, B, S][]       []       [S]      [A, B, S][S]      [A, B]   [B]      []       
[A, B, S][A, B, S][]       []       [S]      [A, B, S][S]      [A, B]   []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       [A, B, S][]       []       []       []       
[]       []       []       []       [S]      [A, B, S][S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->SS }]
C[{ C-->AS }]

}
word='babaabbabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S]   [A]   []    []    []    []    []    []    []    
[S, C][S]   [S, C][S]   []    []    []    []    []    []    
[S, C][S]   [S, C][S]   [S]   []    []    []    []    []    
[S, C][S]   [S, C][S]   [S]   [A]   []    []    []    []    
[S, C][S]   [S, C][S]   [S]   []    [A]   []    []    []    
[S, C][S]   [S, C][S]   [S]   [S, C][S, C][S]   []    []    
[S, C][S]   [S, C][S]   [S]   [S, C][S, C][S]   [A]   []    
[S, C][S]   [S, C][S]   [S]   [S, C][S, C][S]   []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [C][] [] [] [] 
[C][] [C][] [] [C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SB }]
B[{ B-->a }]
S[{ S-->SB }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->SB }, { C-->BB }]

}
word='babaabbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S, C][B]      []       []       []       []       []       []       []       []       
[S]      [A]      [S]      []       []       []       []       []       []       []       
[A, S, C][A]      [A, S, C][B]      []       []       []       []       []       []       
[A, S, C][A]      [A, S, C][S, C]   [B]      []       []       []       []       []       
[S]      [A]      [S]      [S]      [A]      [S]      []       []       []       []       
[S]      [A]      [S]      [S]      [A]      [S]      [S]      []       []       []       
[A, S, C][A]      [A, S, C][A, S, C][A]      [A, S, C][A, S, C][B]      []       []       
[S]      [A]      [S]      [S]      [A]      [S]      [S]      [A]      [S]      []       
[S]      [A]      [S]      [S]      [A]      [S]      [S]      [A]      [S]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S, C][]       []       []       []       []       []       []       []       []       
[A, S, C][A]      []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A]      []       [S]      []       []       []       []       []       []       
[A, S, C][A]      [A, C]   [A, S, C][A]      []       []       []       []       []       
[S]      [A]      []       [S]      [A]      []       []       []       []       []       
[S]      [A]      []       [S]      [A]      []       [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AC }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->CA }, { C-->a }]

}
word='babaabbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[B, S]   [C]      [A]      []       []       []       []       []       []       []       
[S]      [A]      [B, S]   [C]      []       []       []       []       []       []       
[B, S]   [B, C, S][S]      [A]      [C]      []       []       []       []       []       
[B, S]   [B, C, S][S]      [A, S]   [C]      [A]      []       []       []       []       
[B, S]   [B, C, S][S]      [A, S]   [C]      [S]      [A]      []       []       []       
[S]      [A, S]   [B, S]   [B, C, S][A]      []       [B, S]   [C]      []       []       
[S]      [A, S]   [B, S]   [B, C, S][A, S]   []       [B, S]   [C]      [A]      []       
[S]      [A, S]   [B, S]   [B, C, S][A, S]   []       [B, S]   [C]      [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [B, C, S][]       []       []       []       []       []       []       []       
[B, S]   [B, C, S][S]      []       []       []       []       []       []       []       
[B, S]   [B, C, S][S]      [A]      []       []       []       []       []       []       
[S]      [A, S]   [B, S]   [B, C]   []       []       []       []       []       []       
[S]      [A, S]   [B, S]   [B, S]   []       []       []       []       []       []       
[S]      [A, S]   [B, S]   [B, S]   []       []       [B, S]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=42

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=42
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->BA }, { B-->a }]
S[{ S-->BA }, { S-->AB }]
C[{ C-->BA }, { C-->BB }]

}
word='babaabbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[A, S]   [B, S, C][A]      []       []       []       []       []       []       []       
[A, S]   [B, C, S][A, S]   [B]      []       []       []       []       []       []       
[A, S]   [B, C, S][A, S]   [C]      [B]      []       []       []       []       []       
[A, S]   [B, C, S][A, S]   [C]      [B, S, C][A]      []       []       []       []       
[A, S]   [B, C, S][A, S]   [C]      [B, S, C][]       [A]      []       []       []       
[A, S]   [B, C, S][A, S]   [C]      [B, S, C][]       [A, S]   [B]      []       []       
[A, S]   [B, C, S][A, S]   [C]      [B, S, C][]       [A, S]   [B, S, C][A]      []       
[A, S]   [B, C, S][A, S]   [C]      [B, S, C][]       [A, S]   [B, S, C][]       [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    [A, S][C]   []    []    []    []    []    []    
[]    []    [A, S][C]   []    []    []    []    []    []    
[]    []    [A, S][C]   []    []    []    []    []    []    
[]    []    [A, S][C]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }]
S[{ S-->SB }, { S-->a }, { S-->BS }]
C[{ C-->BB }]

}
word='babaabbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[B, S, C][S]      [B]      []       []       []       []       []       []       []       
[B, S, C][S]      [B, S]   [S]      []       []       []       []       []       []       
[B, S, C][S]      [B, S]   []       [S]      []       []       []       []       []       
[B, S, C][S]      [B, S, C][]       [S]      [B]      []       []       []       []       
[B, S, C][S]      [B, S, C][]       [S]      [C]      [B]      []       []       []       
[B, C, S][S]      [B, S, C][]       [S]      [B, S, C][B, S]   [S]      []       []       
[B, C, S][S]      [B, S, C][]       [S]      [B, S, C][B, S, C][S]      [B]      []       
[B, C, S][S]      [B, S, C][]       [S]      [B, S, C][B, S, C][S]      [C]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }]
S[{ S-->AB }]

}
word='abaabaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[A]   [S]   [B]   []    []    []    []    []    []    []    
[B, S][]    [A]   [B]   []    []    []    []    []    []    
[B, S][]    [A]   [B]   [A]   []    []    []    []    []    
[A]   [S]   [B, S][A]   [S]   [B]   []    []    []    []    
[B, S][]    [A]   [B, S][]    [A]   [B]   []    []    []    
[A]   [S]   [B, S][A]   [S]   [B, S][A]   [B]   []    []    
[A]   [S]   [B, S][A]   [S]   [B, S][A]   [B]   [A]   []    
[B, S][]    [A]   [B, S][]    [A]   [B, S][A]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    [B, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    [B, S][A]   []    []    []    []    []    []    
[A]   [S]   [S]   [A]   [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->BS }]

}
word='abaabaaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [A, S][S]   []    []    []    []    []    []    []    
[A, S][B]   [B]   [S]   []    []    []    []    []    []    
[A, S][B]   [B]   [S]   [B]   []    []    []    []    []    
[B]   [A, S][A, S][B]   [A, S][S]   []    []    []    []    
[A, S][B]   [B]   [A, S][B]   [B]   [S]   []    []    []    
[B]   [A, S][A, S][B]   [A, S][A, S][B]   [S]   []    []    
[B]   [A, S][A, S][B]   [A, S][A, S][B]   [S]   [B]   []    
[A, S][B]   [B]   [A, S][B]   [B]   [A, S][B]   [A, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[A, S][B]   []    [A, S][]    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[B]   [A, S][A]   [B]   [A, S][A]   []    []    []    []    
[A, S][B]   []    [A, S][B]   []    [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->CA }, { C-->a }]
S[{ S-->AC }]

}
word='abaabaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[A]   [C, S][C]   []    []    []    []    []    []    []    
[C, S][A]   [A]   [C]   []    []    []    []    []    []    
[C, S][A]   [A]   [C]   [A]   []    []    []    []    []    
[A]   [C, S][C, S][A]   [C, S][C]   []    []    []    []    
[C, S][A]   [A]   [C, S][A]   [A]   [C]   []    []    []    
[A]   [C, S][C, S][A]   [C, S][C, S][A]   [C]   []    []    
[A]   [C, S][C, S][A]   [C, S][C, S][A]   [C]   [A]   []    
[C, S][A]   [A]   [C, S][A]   [A]   [C, S][A]   [C, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[C, S][A]   []    [C, S][]    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[A]   [C, S][S]   [A]   [C, S][S]   []    []    []    []    
[C, S][A]   []    [C, S][A]   []    [C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->SB }]
C[{ C-->SB }]
S[{ S-->a }, { S-->BS }]

}
word='abaabaaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, C][B]   []    []    []    []    []    []    []    []    
[A, S][S]   [S]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [S]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [S]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [S]   []    []    []    
[]    []    []    []    []    []    [A]   [S]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B, C][B, C][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }]
C[{ C-->SS }, { C-->b }]

}
word='abaabaaaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[C][S][S][] [] [] [] [] [] [] 
[S][C][C][S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[C][S][S][C][S][S][] [] [] [] 
[S][C][C][S][C][C][S][] [] [] 
[C][S][S][C][S][S][C][S][] [] 
[] [] [] [] [] [] [] [] [C][] 
[S][C][C][S][C][C][S][C][S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][C][] [S][] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
S[{ S-->BA }]
C[{ C-->BB }]

}
word='aaabababbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[S]   [A, C][B]   []    []    []    []    []    []    []    
[A, C][B]   [S]   [A]   []    []    []    []    []    []    
[S]   [A, C][]    []    [B]   []    []    []    []    []    
[A, C][B]   []    []    [S]   [A]   []    []    []    []    
[S]   [A, C][]    []    []    []    [B]   []    []    []    
[A, C][B]   []    []    []    []    [S]   [A]   []    []    
[B]   [S]   [A, C][B]   [A, C][B]   [A, C][B]   [A]   []    
[S]   [A, C][B]   [S]   [B]   [S]   [B]   [S]   [B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, C][B]   [S]   [B]   [S]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AA }, { A-->b }]
B[{ B-->AC }]
S[{ S-->AC }, { S-->CA }]
C[{ C-->CA }, { C-->a }]

}
word='aaabababbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[B, C, S][A]      [C]      []       []       []       []       []       []       []       
[B, C, S][A]      [C, S]   [A]      []       []       []       []       []       []       
[A]      [B, S, C][A]      [B, S]   [C]      []       []       []       []       []       
[A]      [B, S, C][A]      [B, S]   [C, S]   [A]      []       []       []       []       
[B, C, S][A]      [B, C, S][A]      [A]      [B, S]   [C]      []       []       []       
[B, C, S][A]      [B, C, S][A]      [A]      [B, S]   [C, S]   [A]      []       []       
[B, C, S][A]      [B, C, S][A]      [A]      [B, S]   [C, S]   [A]      [A]      []       
[B, C, S][A]      [B, C, S][A]      [A]      [B, S]   [C, S]   [A]      [A]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       [B, S, C][]       []       []       []       []       []       []       []       
[A]      [B]      [A]      []       []       []       []       []       []       []       
[B, C, S][]       [B, C, S][A]      []       []       []       []       []       []       
[B]      [A]      [B]      []       [A]      []       []       []       []       []       
[B]      [A]      [B]      []       [A]      [B, S]   []       []       []       []       
[B]      [A]      [B]      []       [A]      [B, S]   []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->SA }]
S[{ S-->AS }, { S-->SA }, { S-->a }]
C[{ C-->SA }]

}
word='aaabababbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[B, S, C][A]      [S]      []       []       []       []       []       []       []       
[B, S, C][A]      [B, S, C][A]      []       []       []       []       []       []       
[A]      [B, S, C][A]      [S]      [S]      []       []       []       []       []       
[A]      [B, S, C][A]      [B, S, C][B, S, C][A]      []       []       []       []       
[B, S, C][A]      [B, S, C][A]      [A]      [S]      [S]      []       []       []       
[B, C, S][A]      [B, S, C][A]      [A]      [B, S, C][B, S, C][A]      []       []       
[B, C, S][A]      [B, S, C][A]      [A]      [B, S, C][B, S, C][]       [A]      []       
[B, C, S][A]      [B, S, C][A]      [A]      [B, S, C][B, S, C][]       []       [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B, S, C][]       []       []       []       []       []       []       []       
[A]      []       [A]      []       []       []       []       []       []       []       
[B, S, C][]       [B, S, C][A]      []       []       []       []       []       []       
[]       [A]      []       [A]      [A]      []       []       []       []       []       
[]       [A]      []       [A]      [A]      [B, S, C][]       []       []       []       
[]       [A]      []       [A]      [A]      [B, S, C][]       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AA }]

}
word='aaabababbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C]   [C]      []       []       []       []       []       []       
[S]      [S]      [S]      []       [A]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][]       [A, C]   [C]      []       []       []       []       
[S]      [S]      [S]      []       [S]      []       [A]      []       []       []       
[A, C, S][A, C, S][A, C, S][]       [A, C, S][]       [A, C]   [C]      []       []       
[A, C, S][A, C, S][A, C, S][]       [A, C, S][]       [A, C]   []       [C]      []       
[A, C, S][A, C, S][A, C, S][]       [A, C, S][]       [A, C]   []       []       [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][]       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][]       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
C[{ C-->AC }, { C-->AA }, { C-->CC }, { C-->b }]
S[{ S-->AC }]

}
word='aaabababbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[A, C, S][C]      [A]      []       []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C]   [A]      [A]      []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C]   [A, C]   [A]      [A]      []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      [C]      []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      [C]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }, { S-->AA }]

}
word='aaabababba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C]   [C]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [A]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][S]      [A, C]   [C]      []       []       []       []       
[S]      [S]      [S]      []       [S]      [S]      [A]      []       []       []       
[A, C, S][A, C, S][A, C, S][S]      [A, C, S][S]      [A, C]   [C]      []       []       
[A, C, S][A, C, S][A, C, S][S]      [A, C, S][S]      [A, C]   []       [C]      []       
[S]      [S]      [S]      []       [S]      []       [S]      []       [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][]       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][]       [A, C, S][]       []       []       []       []       
[]       []       [A, C, S][S]      [A, C, S][S]      []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SC }]
B[{ B-->CS }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->SS }, { S-->b }]

}
word='aaabababba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A, B, C][S]      [C]      []       []       []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      []       []       []       []       []       []       
[S]      [A, B, C][S]      [A]      [C]      []       []       []       []       []       
[S]      [A, B, C][S]      [A]      [A, B, C][S]      []       []       []       []       
[A, B, C][S]      [A, B, C][S]      [S]      [A]      [C]      []       []       []       
[A, B, C][S]      [A, B, C][S]      [S]      [A]      [A, B, C][S]      []       []       
[A, B, C][S]      [A, B, C][S]      [S]      [A]      [A, B, C][S]      [S]      []       
[S]      [A, B, C][S]      [A]      [A, B, C][S]      [S]      [A]      [A]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, C][]       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[A, B, C][]       [A, B, C][S]      []       []       []       []       []       []       
[]       [S]      []       []       [S]      []       []       []       []       []       
[]       [S]      []       []       [S]      [A]      []       []       []       []       
[]       [A, B, C][S]      []       [A, B, C][S]      [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->SA }, { S-->a }, { S-->SS }]
C[{ C-->SS }]

}
word='aaabababba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [S]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [A]      []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [B]      [S]      []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B]      [B, S]   [A]      []       []       []       []       
[S, C]   [S, C]   [S, C]   [B]      [S, C]   [B]      [S]      []       []       []       
[B, S, C][B, S, C][B, S, C][B]      [B, S, C][B]      [B, S]   [A]      []       []       
[B, S, C][B, S, C][B, S, C][B]      [B, S, C][B]      [B, S]   []       [A]      []       
[S, C]   [S, C]   [S, C]   [B]      [S, C]   [B]      [S, C]   []       [B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B, S, C][]       []       []       []       []       []       []       
[]       []       [S, C]   [B]      []       []       []       []       []       []       
[B]      [B]      [B, S, C][B]      [B, S, C][]       []       []       []       []       
[B]      [B]      [B, S, C][B]      [B, S, C][B]      []       []       []       []       
[]       []       [S, C]   [B]      [S, C]   [B]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AB }, { B-->BB }]
S[{ S-->BA }, { S-->AA }]
C[{ C-->BA }, { C-->AA }, { C-->AB }]

}
word='aaabababba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[]    [S, C][A]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][B]   []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][A]   []    []    []    []    []    
[B, C][B, C][B, C][B]   [B, C][B]   []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][A]   []    []    []    
[B, C][B, C][B, C][B]   [B, C][B]   [B, C][B]   []    []    
[B, C][B, C][B, C][B]   [B, C][B]   [B, C][B]   [B]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[B, C][B, C][B, C][]    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][]    []    []    []    []    []    
[B, C][B, C][B, C][B]   [B, C][]    []    []    []    []    
[C]   [C]   [C]   []    [C]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=45

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=45
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->SA }, { S-->a }, { S-->SS }]

}
word='aaabababba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][A]   []    []    []    []    []    []    
[S, C][S, C][S, C][A, C][S]   []    []    []    []    []    
[S, C][S, C][S, C][A, C][S, C][A]   []    []    []    []    
[S, C][S, C][S, C][A, C][S, C][A, C][S]   []    []    []    
[S, C][S, C][S, C][A, C][S, C][A, C][S, C][A]   []    []    
[S, C][S, C][S, C][A, C][S, C][A, C][S, C][]    [A]   []    
[S, C][S, C][S, C][A, C][S, C][A, C][S, C][]    [A, C][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->CA }, { C-->a }, { C-->CC }]

}
word='bbabbbbaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [C]   [A]   []    []    []    []    []    []    
[S]   [S]   [C]   [A, S][A]   []    []    []    []    []    
[S]   [S]   [C]   [A, S][A, S][A]   []    []    []    []    
[S]   [S]   [C]   [A, S][A, S][A, S][A]   []    []    []    
[S]   [S]   [C]   [S]   [S]   [S]   [S]   [C]   []    []    
[S]   [S]   [C]   [S]   [S]   [S]   [S]   [C]   [C]   []    
[S]   [S]   [C]   [S]   [S]   [S]   [S]   [C]   [C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][C][S][S][] [] [] [] [] 
[S][S][C][S][S][S][] [] [] [] 
[S][S][C][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->AC }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->CA }, { C-->CC }, { C-->b }]

}
word='bbabbbbaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C]   [A]   []    []    []    []    []    []    []    
[C, S][C, S][B, S][C]   []    []    []    []    []    []    
[C, S][C, S][B, S][C, S][C]   []    []    []    []    []    
[C, S][C, S][B, S][C, S][C, S][C]   []    []    []    []    
[C, S][C, S][B, S][C, S][C, S][C, S][C]   []    []    []    
[C, S][C, S][B, S][C, S][C, S][C, S][C]   [A]   []    []    
[C, S][C, S][B, S][C, S][C, S][C, S][C]   [A]   [A]   []    
[C, S][C, S][B, S][C, S][C, S][C, S][C]   [A]   [A]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    [C, S][B, S][]    []    []    []    []    []    []    
[]    [C, S][B, S][]    []    []    []    []    []    []    
[]    [C, S][B, S][]    []    []    []    []    []    []    
[]    [C, S][B, S][]    []    []    []    []    []    []    
[]    [C, S][B, S][]    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
S[{ S-->a }, { S-->CS }]
C[{ C-->SC }, { C-->SS }, { C-->b }]

}
word='bbabbbbaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [S]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [C]      [C]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [C]      []       []       []       []       []       
[]       []       []       []       [A]      [C]      []       []       []       []       
[]       []       []       []       []       [A]      [C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [A, S]   [A, S]   [A, S]   [S]      []       []       
[A, C, S][A, C, S][A, C, S][A, C]   [A, C]   [A, C]   [A, C]   [C]      [S]      []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, C, S][C]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][A][A][A][] [] [] [] 
[] [] [] [C][C][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->BB }, { C-->b }]

}
word='bbabbbbaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[C]   [S]   [B]   []    []    []    []    []    []    []    
[B, S][]    []    [C]   []    []    []    []    []    []    
[S]   [B, S][C]   [B, S][C]   []    []    []    []    []    
[C]   [S]   [B, S][S]   [B, S][C]   []    []    []    []    
[B, S][C]   [S]   [C]   [S]   [B, S][C]   []    []    []    
[C]   [S]   [B, S][S]   [B, S][C]   [S]   [B]   []    []    
[S]   [B, S][C]   [B, S][C]   [S]   [B, S][C]   [B]   []    
[B, S][C]   [S]   [C]   [S]   [B, S][C]   [S]   [C]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   [B, S][]    []    []    []    []    []    []    
[]    [C]   [S]   [C]   []    []    []    []    []    []    
[C]   []    [B, S][]    [B, S][]    []    []    []    []    
[]    [B, S][]    [B, S][C]   []    []    []    []    []    
[B, S][C]   []    [C]   []    [B, S][C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }]
C[{ C-->SB }]
S[{ S-->a }, { S-->SS }, { S-->BS }]

}
word='bbabbbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[A, S][A, S][S]   [A, S][A, S][A, S][A, S][S]   []    []    
[A, S][A, S][S]   [A, S][A, S][A, S][A, S][S]   [S]   []    
[A, S][A, S][S]   [A, S][A, S][A, S][A, S][S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [A][A][A][] [] [] [] 
[A][A][] [A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BB }]
C[{ C-->BA }]
S[{ S-->BA }, { S-->AB }]

}
word='abbabaaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      [B]      [B]      []       []       []       []       []       []       []       
[A]      [A, C, S][A, C, S][A]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [B]      []       []       []       []       []       
[A]      [A, C, S][A, C, S][A]      [A, C, S][A]      []       []       []       []       
[A]      [A, C, S][A, C, S][A]      [A, C, S][A]      [A]      []       []       []       
[A]      [A, C, S][A, C, S][A]      [A, C, S][A]      [A]      [A]      []       []       
[A]      [A, C, S][A, C, S][A]      [A, C, S][A]      [A]      [A]      [A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A]      [A, C, S][A, C, S][]       []       []       []       []       []       []       
[]       [C, S]   [C, S]   []       []       []       []       []       []       []       
[]       [C, S]   [C, S]   []       [C, S]   []       []       []       []       []       
[]       [C, S]   [C, S]   []       [C, S]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
S[{ S-->CC }, { S-->BC }]
C[{ C-->BB }, { C-->b }]

}
word='abbabaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    [S]   [C]   []    []    []    []    []    []    []    
[C]   [B]   [B]   [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C]   []    []    []    []    []    
[B, S][C, S][S, C][C]   [B]   [B]   []    []    []    []    
[S, C][B, S][B, S][B, S][S, C][C]   [B]   []    []    []    
[B, S][C, S][S, C][C, S][B, S][B, S][C]   [B]   []    []    
[S, C][B, S][B, S][B, S][S, C][C, S][B, S][C]   [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, S][C, S][S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[B]   [C]   [C]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [B]   [C]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->a }, { C-->BC }]

}
word='abbabaaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[B, S]   [B]      [B]      []       []       []       []       []       []       []       
[A, C, S][A, C]   [A, C]   [C]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [C]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [C]      []       []       []       
[]       []       []       []       []       []       [S]      [C]      []       []       
[]       []       []       []       []       []       []       [S]      [C]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BA }]
S[{ S-->BA }, { S-->AA }]
C[{ C-->AA }, { C-->AB }]

}
word='abbabaaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, C]   [B]      []       []       []       []       []       []       []       []       
[A, C]   []       [B]      []       []       []       []       []       []       []       
[A, S, C][]       [B, S]   [A]      []       []       []       []       []       []       
[A, S, C][]       [B, S]   [A, C]   [B]      []       []       []       []       []       
[A, S, C][]       [B, S]   [A, C, S][B, S]   [A]      []       []       []       []       
[A, S, C][]       [B, S]   [A, C, S][B, S]   [S, C]   [A]      []       []       []       
[A, S, C][]       [B, S]   [A, C, S][B, S]   []       [S, C]   [A]      []       []       
[A, S, C][]       [B, S]   [A, C, S][B, S]   []       []       [S, C]   [A]      []       
[A, S, C][]       [B, S]   [A, C, S][B, S]   []       []       [S, C]   [A, C]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
S[{ S-->BA }, { S-->BB }]
C[{ C-->AB }]

}
word='abbabaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, S][B]   [A]   []    []    []    []    []    []    []    
[C, S][A, S][C]   [B]   []    []    []    []    []    []    
[A, S][B]   []    [S]   [A]   []    []    []    []    []    
[C, S][A, S][]    []    [C]   [B]   []    []    []    []    
[B]   [S, C][B]   [A, S][B]   [A, S][B]   []    []    []    
[A, S][B]   [A, S][S, C][A, S][S, C][A, S][B]   []    []    
[C, S][A, S][C, S][B]   [C, S][B]   [S, C][A, S][B]   []    
[A, S][B]   [A, S][S, C][A, S][S, C][A, S][B]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    [B]   [A, S][S, C][A, S][]    []    []    []    []    
[C, S][A, S][S]   [B]   [S]   [B]   []    []    []    []    
[A, S][]    [A, S][C]   [A, S][C]   [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }]
S[{ S-->AS }, { S-->a }, { S-->SS }]

}
word='babaaaaaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[B][B][A][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CC }]

}
word='babaaaaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][C]   [C]   []    []    []    []    []    []    
[B, C][B, C][A, S][A, S][C]   []    []    []    []    []    
[A, S][A, S][B, C][B, C][A, S][C]   []    []    []    []    
[B, C][B, C][A, S][A, S][B, C][A, S][C]   []    []    []    
[A, S][A, S][B, C][B, C][A, S][B, C][A, S][C]   []    []    
[B, C][B, C][A, S][A, S][B, C][A, S][B, C][A, S][C]   []    
[A, S][A, S][B, C][B, C][A, S][B, C][A, S][B, C][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[A, S][]    [B]   []    []    []    []    []    []    []    
[B]   [B, C][A, S][]    []    []    []    []    []    []    
[A, S][]    [B]   [B, C][]    []    []    []    []    []    
[B]   [B, C][A, S][]    [B, C][]    []    []    []    []    
[A, S][]    [B]   [B, C][]    [B, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }, { C-->CC }]
S[{ S-->BC }]

}
word='babaaaaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[B, S][C]   [B]   []    []    []    []    []    []    []    
[B, S][A, C][B, S][C]   []    []    []    []    []    []    
[B, S][A, C][B, S][A, C][C]   []    []    []    []    []    
[B, S][A, C][B, S][A, C][A, C][C]   []    []    []    []    
[B, S][A, C][B, S][A, C][A, C][A, C][C]   []    []    []    
[B, S][A, C][B, S][A, C][A, C][A, C][A, C][C]   []    []    
[B, S][A, C][B, S][A, C][A, C][A, C][A, C][A, C][C]   []    
[B, S][A, C][B, S][A, C][A, C][A, C][A, C][A, C][A, C][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
C[{ C-->a }, { C-->CC }, { C-->BC }]
S[{ S-->BC }]

}
word='babaaaaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[C, S][C]   [C, S][C]   []    []    []    []    []    []    
[C, S][C]   [C, S][C]   [C]   []    []    []    []    []    
[C, S][C]   [C, S][C]   [C]   [C]   []    []    []    []    
[C, S][C]   [C, S][C]   [C]   [C]   [C]   []    []    []    
[C, S][C]   [C, S][C]   [C]   [C]   [C]   [C]   []    []    
[C, S][C]   [C, S][C]   [C]   [C]   [C]   [C]   [C]   []    
[C, S][C]   [C, S][C]   [C]   [C]   [C]   [C]   [C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SC }]
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->b }]

}
word='babaaaaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B]   [B]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='abaaaaabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A, B, S][]       [C]      []       []       []       []       []       []       []       
[C]      []       [A, B, S][C]      []       []       []       []       []       []       
[A, B, S][]       [C]      [A, B, S][C]      []       []       []       []       []       
[C]      []       [A, B, S][C]      [A, B, S][C]      []       []       []       []       
[A, B, S][]       [C]      [A, B, S][C]      [A, B, S][C]      []       []       []       
[A, B, S][]       [C]      [A, B, S][C]      [A, B, S][C]      [S]      []       []       
[A, B, S][]       [C]      [A, B, S][C]      [A, B, S][C]      []       [S]      []       
[A, B, S][]       [C]      [A, B, S][C]      [A, B, S][C]      []       []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       []       [A, B, S][]       []       []       []       []       []       
[]       []       []       [A, B, S][]       [A, B, S][]       []       []       []       
[]       []       []       [A, B, S][]       [A, B, S][]       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CB }]
B[{ B-->b }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->a }, { C-->BB }]

}
word='abaaaaabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[A, B, S][C]      [A, B, S][C]      []       []       []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, B, S][C]      []       []       []       []       []       
[C]      [A, S]   [C]      [A, S]   [A, B, S][C]      []       []       []       []       
[A, B, S][C]      [A, B, S][C]      [A, S]   [A, B, S][C]      []       []       []       
[C]      [A, S]   [C]      [A, S]   [A, B, S][C]      [A, S]   [B]      []       []       
[A, S]   [A, B, S][A, S]   [A, B, S][C]      [A, S]   [A, B, S][C]      [B]      []       
[A, B, S][C]      [A, B, S][C]      [A, S]   [A, B, S][C]      [A, S]   [C]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S]   [A, B, S][]       []       []       []       []       []       []       []       
[C]      [A, S]   [C]      []       []       []       []       []       []       []       
[]       [C]      []       [C]      []       []       []       []       []       []       
[C]      []       [C]      []       [A, B, S][]       []       []       []       []       
[]       [A, B, S][]       [A, B, S][C]      []       []       []       []       []       
[A, B, S][]       [A, B, S][C]      []       [A, B, S][C]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }]
S[{ S-->a }, { S-->SS }, { S-->BB }]

}
word='abaaaaabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][S][] [] [] [] [] [] [] 
[] [B][S][S][] [] [] [] [] [] 
[] [B][S][S][S][] [] [] [] [] 
[] [B][S][S][S][S][] [] [] [] 
[] [B][S][S][S][S][S][] [] [] 
[S][S][] [] [] [] [] [B][] [] 
[] [B][S][S][S][S][S][S][B][] 
[S][S][] [] [] [] [] [B][S][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->CA }, { C-->a }, { C-->CC }]

}
word='abaaaaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C, S][S]   [C]   []    []    []    []    []    []    []    
[C, S][S]   [C, S][C]   []    []    []    []    []    []    
[C, S][S]   [C, S][C, S][C]   []    []    []    []    []    
[C, S][S]   [C, S][C, S][C, S][C]   []    []    []    []    
[C, S][S]   [C, S][C, S][C, S][C, S][C]   []    []    []    
[C, S][S]   [C, S][C, S][C, S][C, S][C]   [A]   []    []    
[C, S][S]   [C, S][C, S][C, S][C, S][C]   [A]   [A]   []    
[C, S][S]   [C, S][C, S][C, S][C, S][C]   [A]   [A]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][S]   []    []    []    []    []    []    []    []    
[C, S][S]   []    []    []    []    []    []    []    []    
[C, S][S]   []    []    []    []    []    []    []    []    
[C, S][S]   []    []    []    []    []    []    []    []    
[C, S][S]   []    []    []    []    []    []    []    []    
[C, S][S]   []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->AA }, { C-->CC }, { C-->b }]

}
word='abaaaaabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[S]      [C, S]   [A, C]   [A]      []       []       []       []       []       []       
[S]      [C, S]   [A, C, S][A, C]   [A]      []       []       []       []       []       
[S]      [C, S]   [A, C, S][A, C, S][A, C]   [A]      []       []       []       []       
[S]      [C, S]   [A, C, S][A, C, S][A, C, S][A, C]   [A]      []       []       []       
[S]      [C, S]   [S, C]   [S, C]   [S, C]   [C, S]   [S]      [C]      []       []       
[S]      [C, S]   [S, C]   [S, C]   [S, C]   [C, S]   [S]      [C, S]   [C]      []       
[S]      [C, S]   [S, C]   [S, C]   [S, C]   [C, S]   [S]      [C, S]   [C, S]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    [C, S][]    []    []    []    
[S]   []    []    []    []    [C, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AC }, { S-->AA }]

}
word='bbaababbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [A]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C, S][C, S][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }]
C[{ C-->BS }]

}
word='bbaababbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A]   [C]   [S]   []    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[B, C][S]   [B]   [B]   [B]   []    []    []    []    []    
[C]   [A]   [C]   [C]   [C]   [S]   []    []    []    []    
[A, S][B, C][A, S][A, S][S]   [B]   [B]   []    []    []    
[B, C][A, S][B, C][B, C][B, C][A, S][S]   [B]   []    []    
[C]   [A]   [C]   [C]   [C]   [A]   [A]   [C]   [S]   []    
[A, S][B, C][A, S][A, S][A, S][B, C][B, C][S]   [B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [A]   [C]   []    []    []    []    []    []    []    
[A, S][B, C][A, S][A, S][]    []    []    []    []    []    
[B, C][A]   [C]   [C]   [B, C][]    []    []    []    []    
[C]   [A]   [C]   [C]   [C]   [A]   []    []    []    []    
[A, S][B, C][A, S][A, S][A, S][B, C][B, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->AA }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->a }, { S-->AA }, { S-->SS }]

}
word='bbaababbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[B, S][A, C][S]   []    []    []    []    []    []    []    
[B, S][A, C][S]   [S]   []    []    []    []    []    []    
[A, C][B, S][A, C][A, C][A]   []    []    []    []    []    
[A, C][B, S][A, C][A, C][A, C][S]   []    []    []    []    
[B, S][A, C][B, S][B, S][B, S][A, C][A]   []    []    []    
[A, C][B, S][A, C][A, C][A, C][B, S][B, S][A]   []    []    
[A, C][B, S][A, C][A, C][A, C][B, S][B, S][A, C][S]   []    
[B, S][A, C][B, S][B, S][B, S][A, C][A, C][B, S][A, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    [B, S][A, C][]    []    []    []    []    []    []    
[]    [A, C][B, S][B, S][]    []    []    []    []    []    
[A, C][]    []    []    [A, C][]    []    []    []    []    
[]    [B, S][A, C][A, C][]    [B]   []    []    []    []    
[]    [A, C][B, S][B, S][]    []    [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->SB }, { C-->BS }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='bbaababbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[S]   [S]   [S, C][S, C][S]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B]   []    []    []    []    
[S]   [S]   [S, C][S, C][S]   [S, C][S]   []    []    []    
[S]   [S]   [S, C][S, C][S]   [S, C][S]   [S]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B]   []    
[S]   [S]   [S, C][S, C][S]   [S, C][S]   [S]   [S, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S, C][S, C][]    []    []    []    []    []    
[]    []    [C]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[S]   [S]   [S, C][S, C][S]   [S, C][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->BS }, { B-->SB }]
S[{ S-->a }, { S-->BB }]
C[{ C-->BS }]

}
word='bbaababbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[A, S][B, C][S]   []    []    []    []    []    []    []    
[A, S][B, C][]    [S]   []    []    []    []    []    []    
[B, C][A, S][B]   [B]   [B]   []    []    []    []    []    
[B, C][A, S][B, C][B, C][B, C][S]   []    []    []    []    
[A, S][B, C][A, S][A, S][A, S][B]   [B]   []    []    []    
[B, C][A, S][B, C][B, C][B, C][A, S][A, S][B]   []    []    
[B, C][A, S][B, C][B, C][B, C][A, S][A, S][B, C][S]   []    
[A, S][B, C][A, S][A, S][A, S][B, C][B, C][A, S][B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [A, S][B, C][]    []    []    []    []    []    []    
[]    [B, C][A, S][A, S][]    []    []    []    []    []    
[B, C][]    [C]   [C]   [B, C][]    []    []    []    []    
[]    [A, S][B, C][B, C][]    [A, S][]    []    []    []    
[]    [B, C][A, S][A, S][]    [C]   [B, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }]
S[{ S-->BA }, { S-->AA }, { S-->AB }]
C[{ C-->BA }]

}
word='bbbababbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][B]   []    []    []    []    []    []    
[A, S][A, S][A, S][S, C][A]   []    []    []    []    []    
[A, S][A, S][A, S][S, C][A, S][B]   []    []    []    []    
[A, S][A, S][A, S][S, C][A, S][S, C][A]   []    []    []    
[A, S][A, S][A, S][S, C][A, S][S, C][A, S][A]   []    []    
[A, S][A, S][A, S][S, C][A, S][S, C][A, S][A, S][B]   []    
[A, S][A, S][A, S][S, C][A, S][S, C][A, S][A, S][S, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    [A, S][S, C][]    []    []    []    []    []    
[]    []    [A, S][S, C][A, S][]    []    []    []    []    
[]    []    [A, S][S, C][A, S][S, C][]    []    []    []    
[]    []    [A, S][S, C][A, S][S, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SS }]

}
word='bbbababbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, C][S]   []    []    []    []    []    []    []    []    
[B, S][A, C][S]   []    []    []    []    []    []    []    
[B]   []    [B]   [A]   []    []    []    []    []    []    
[A, C][B, S][A, C][S]   [S]   []    []    []    []    []    
[]    [B]   []    [B]   [B]   [A]   []    []    []    []    
[B, S][A, C][B, S][A, C][A, C][S]   [S]   []    []    []    
[A, C][B, S][A, C][B, S][B, S][A, C][A, C][S]   []    []    
[]    [B]   []    [B]   [B]   []    []    [B]   [A]   []    
[B, S][A, C][B, S][A, C][A, C][B, S][B, S][A, C][S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, C][]    [A, C][]    []    []    []    []    []    
[]    [B, S][]    [B]   [B, S][]    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    [A, C][]    [A, C][A, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->a }, { S-->CC }, { S-->SC }]
C[{ C-->SC }, { C-->b }]

}
word='bbbababbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[B, S, C][S]      [C]      []       []       []       []       []       []       []       
[B]      []       [B]      [S]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [S, C]   [C]      []       []       []       []       []       
[B]      [B]      []       [B]      [B]      [S]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   [C]      []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [S]      [C]      []       []       
[B]      [B]      [B]      [B]      [B]      [B]      []       [B]      [S]      []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][]       [B, S, C][]       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][]       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->SB }, { B-->a }]
C[{ C-->SS }]
S[{ S-->b }, { S-->BS }]

}
word='bbbababbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, C]   [S]      []       []       []       []       []       []       []       []       
[]       [A, C]   [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, C, S][A, S]   [S]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[A, S, C][A, S, C][A, C, S][A, S, C][A, C, S][A, S]   [S]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [S]      []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      []       
[A, S, C][A, S, C][A, C, S][A, S, C][A, C, S][A, S, C][A, C, S][A, C, S][A, S]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }, { B-->SC }]
C[{ C-->a }, { C-->SC }]
S[{ S-->SS }, { S-->CS }, { S-->b }]

}
word='bbbababbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [S]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->BB }]
S[{ S-->SB }, { S-->a }, { S-->SS }]
C[{ C-->BB }]

}
word='aababbbbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[S]      [S]      [A]      [S]      []       []       []       []       []       []       
[S]      [S]      [A]      [S]      [B]      []       []       []       []       []       
[S]      [S]      [A]      [S]      [A, B, C][B]      []       []       []       []       
[S]      [S]      [A]      [S]      [A, B, C][A, B, C][B]      []       []       []       
[S]      [S]      [A]      [S]      [A, B, C][A, B, C][A, B, C][B]      []       []       
[S]      [S]      [A]      [S]      [A, B, C][A, B, C][A, B, C][A, B, C][B]      []       
[S]      [S]      [A]      [S]      [A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SS }, { C-->b }]

}
word='aababbbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [A, S][C]   []    []    []    []    []    []    []    
[A, S][C]   [A]   [S]   []    []    []    []    []    []    
[A, S][C]   [A]   [A, S][C]   []    []    []    []    []    
[A, S][C]   [A]   [A, S][]    [C]   []    []    []    []    
[A, S][C]   [A]   [A, S][]    []    [C]   []    []    []    
[A, S][C]   [A]   [A, S][]    []    []    [C]   []    []    
[A, S][C]   [A]   [A, S][]    []    []    []    [C]   []    
[A, S][C]   [A]   [A, S][]    []    []    []    []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->a }, { B-->SS }]
C[{ C-->SS }]
S[{ S-->b }, { S-->BS }]

}
word='aababbbbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [S]      [S]      []       []       []       []       []       
[S]      [S]      [S]      [A, B, C][B, C]   [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][S]      [S]      [B, C]   [S]      []       []       []       
[S]      [S]      [S]      [A, B, C][A, B, C][S]      [B, C]   [S]      []       []       
[A, B, C][A, B, C][A, B, C][S]      [S]      [A, B, C][S]      [B, C]   [S]      []       
[S]      [S]      [S]      [A, B, C][A, B, C][S]      [A, B, C][S]      [B, C]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A]      []       []       []       []       []       []       []       
[]       []       [S]      [A, B, C][A]      []       []       []       []       []       
[A, B, C][A, B, C][A]      []       [S]      [A]      []       []       []       []       
[]       []       [S]      [A, B, C][A]      [S]      [A]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->BB }, { B-->CC }]
C[{ C-->b }, { C-->BC }]
S[{ S-->BC }]

}
word='aababbbbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [C, S][C]   []    []    []    []    []    
[C, S][C, S][C, S][B]   [B]   [C]   []    []    []    []    
[B]   [B]   [B]   [C, S][C, S][B]   [C]   []    []    []    
[C, S][C, S][C, S][B]   [B]   [C, S][B]   [C]   []    []    
[B]   [B]   [B]   [C, S][C, S][B]   [C, S][B]   [C]   []    
[C, S][C, S][C, S][B]   [B]   [C, S][B]   [C, S][B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    []    [C, S][B]   []    []    []    []    []    []    
[B]   [B]   []    []    [C, S][]    []    []    []    []    
[]    []    [C, S][B]   []    [C, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->CB }, { C-->a }]
S[{ S-->BB }]

}
word='aababbbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[B, C]   [B, C]   [B]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[B, C, S][B, C, S][S]      [B, C]   [B]      []       []       []       []       []       
[B, C, S][B, C, S][S]      [B, C, S][S]      [B]      []       []       []       []       
[B, C, S][B, C, S][S]      [B, C, S][]       [S]      [B]      []       []       []       
[B, C, S][B, C, S][S]      [B, C, S][]       []       [S]      [B]      []       []       
[B, C, S][B, C, S][S]      [B, C, S][]       []       []       [S]      [B]      []       
[B, C, S][B, C, S][S]      [B, C, S][]       []       []       []       [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B, C, S][S]      []       []       []       []       []       []       []       
[]       [B, C, S][S]      []       []       []       []       []       []       []       
[]       [B, C, S][S]      []       []       []       []       []       []       []       
[]       [B, C, S][S]      []       []       []       []       []       []       []       
[]       [B, C, S][S]      []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->CA }, { B-->AA }]
C[{ C-->AC }, { C-->a }]
S[{ S-->AA }]

}
word='abaabbbabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, B]   [A]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A]      []       []       []       []       
[]       []       []       []       []       [B, S]   [A]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->a }, { C-->CC }]

}
word='abaabbbabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[A]   [A]   [C]   [C]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->BS }]
C[{ C-->SB }]
S[{ S-->a }, { S-->SS }, { S-->BB }]

}
word='abaabbbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, C]   [B]      []       []       []       []       []       []       []       []       
[A, C]   [B]      [S]      []       []       []       []       []       []       []       
[A, C]   [B]      [S]      [S]      []       []       []       []       []       []       
[S]      [S]      [A, C]   [A, C]   [B]      []       []       []       []       []       
[A, C]   [A, B, C][S]      [S]      [S]      [B]      []       []       []       []       
[S]      [S]      [A, C]   [A, C]   [A, B, C][S]      [B]      []       []       []       
[S]      [S]      [A, C]   [A, C]   [A, B, C][S]      [B]      [S]      []       []       
[A, C]   [A, B, C][S]      [S]      [S]      [A, B, C][S]      [A, C]   [B]      []       
[S]      [S]      [A, C]   [A, C]   [A, B, C][S]      [A, B, C][S]      [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[]       [A, B, C][S]      []       []       []       []       []       []       []       
[S]      [S]      [A, C]   []       []       []       []       []       []       []       
[]       [S]      [A, C]   [A, C]   [A, C]   []       []       []       []       []       
[]       [A, B, C][S]      [S]      []       [A, B, C][]       []       []       []       
[S]      [S]      [A, C]   []       [A, B, C][]       [A, B, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->a }]
C[{ C-->SB }, { C-->SS }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='abaabbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[]       []       [A]      [B]      []       []       []       []       []       []       
[A, S, C][S, C]   [A, S]   [A, S]   [S]      []       []       []       []       []       
[A, S, C][S, C]   [A, S, C][A, S, C][S, C]   [S]      []       []       []       []       
[A, S, C][S, C]   [A, S, C][A, S, C][S, C]   [S, C]   [S]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [B]      []       []       
[A, S, C][S, C]   [A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [A, S]   [S]      []       
[A, S, C][S, C]   [A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [A, S, C][S, C]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       [A]      []       []       []       []       []       []       []       
[A]      []       [A]      [A]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      []       []       []       []       []       
[A, S, C][S, C]   [A, S, C][A, S, C][S, C]   [S, C]   []       []       []       []       
[A]      []       [A]      [A]      []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->b }, { S-->BS }]

}
word='abaabbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[A, B, S][S]      [B]      []       []       []       []       []       []       []       
[A, B, S][S]      [A]      [B]      []       []       []       []       []       []       
[A, B, S][S]      [A, B, S][B, S]   [S]      []       []       []       []       []       
[A, B, S][S]      [A, B, S][B, S]   []       [S]      []       []       []       []       
[A, B, S][S]      [A, B, S][B, S]   []       []       [S]      []       []       []       
[A, B, S][S]      [A, B, S][A, B, S][]       []       [S]      [B]      []       []       
[A, B, S][S]      [A, B, S][A, B, S][]       []       [S]      [B, S]   [S]      []       
[A, B, S][S]      [A, B, S][A, B, S][]       []       [S]      [B, S]   []       [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->BC }, { B-->a }, { B-->BB }]
S[{ S-->BB }]
C[{ C-->CC }, { C-->b }]

}
word='aaabbbaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [C]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, C]   [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, C]   [A, C]   [C]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [A]      [A]      [A]      [B]      []       []       []       
[B, S]   [B, S]   [B, S]   [A]      [A]      [A]      [B, S]   [B]      []       []       
[A, B, S][A, B, S][A, B, S][A]      [A]      [A]      [A, B, S][A, B]   [C]      []       
[B, S]   [B, S]   [B, S]   [A]      [A]      [A]      [B, S]   [B, S]   [A]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[]       []       [B, S]   [A]      []       []       []       []       []       []       
[]       []       [B, S]   [A]      [A]      []       []       []       []       []       
[A]      [A]      [A, B, S][A]      [A]      [A]      []       []       []       []       
[]       []       [B, S]   [A]      [A]      [A]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->b }]
C[{ C-->SS }]

}
word='aaabbbaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B]      [S]      [B]      []       []       []       []       []       []       []       
[]       [A, C]   []       [S]      []       []       []       []       []       []       
[]       []       []       [A, C]   [S]      []       []       []       []       []       
[]       []       []       []       [A, C]   [S]      []       []       []       []       
[A, S, C][B]      [S]      [B]      [B]      [B]      [B]      []       []       []       
[B]      [A, C, S][B]      [A, C, S][A, C, S][A, C, S][S]      [B]      []       []       
[]       [A, C]   []       [A, C]   [A, C]   [A, C]   [A, C]   []       [S]      []       
[A, S, C][B]      [A, S, C][B]      [B]      [B]      [B]      [S]      [B]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [A, C]   [B]      [A, C, S][A, C, S][]       []       []       []       []       
[]       []       []       [A, C]   [A, C]   [A, C]   []       []       []       []       
[]       [B]      []       [B]      [B]      [B]      [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AA }]
C[{ C-->BA }, { C-->BB }, { C-->AB }]
S[{ S-->AA }, { S-->AB }]

}
word='aaabbbaaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, S]   [A]      []       []       []       []       []       []       []       []       
[A, C, S][B, S]   [A]      []       []       []       []       []       []       []       
[A, C, S][B, C, S][A, C, S][B]      []       []       []       []       []       []       
[A, C, S][B, C, S][A, C, S][C]      [B]      []       []       []       []       []       
[A, C, S][B, C, S][A, C, S][]       [C]      [B]      []       []       []       []       
[B, S, C][A, C, S][B, S]   []       []       [C]      [A]      []       []       []       
[A, C, S][B, C, S][A, C, S][]       []       [C]      [B, S]   [A]      []       []       
[A, C, S][B, C, S][A, C, S][]       []       [C]      [B, S, C][A, C, S][B]      []       
[B, S, C][A, C, S][B, S, C][]       []       [C]      [A, C, S][B, S]   [C]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    [C]   []    []    []    []    
[C]   [A, S][]    []    []    [C]   [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->BS }, { B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->b }]

}
word='aaabbbaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A, B][S]   [B]   []    []    []    []    []    []    []    
[A, B][S]   [A, B][S]   []    []    []    []    []    []    
[A, B][S]   [A, B][]    [S]   []    []    []    []    []    
[A, B][S]   [A, B][]    []    [S]   []    []    []    []    
[S]   [A, B][S]   [B]   [B]   [B]   [B]   []    []    []    
[A, B][S]   [A, B][S]   [S]   [S]   [S]   [B]   []    []    
[A, B][S]   [A, B][S]   [S]   [S]   [S]   [A, B][S]   []    
[S]   [A, B][S]   [A, B][A, B][A, B][A, B][S]   [B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[A, B][]    [A, B][S]   [S]   []    []    []    []    []    
[]    [S]   []    [S]   [S]   [S]   []    []    []    []    
[]    [A, B][]    [A]   [A]   [A]   [A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->CC }]
S[{ S-->a }, { S-->SS }, { S-->SC }]
C[{ C-->b }]

}
word='aaabbbaaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][C][] [] [] [] [] [] 
[S][S][S][B][C][] [] [] [] [] 
[S][S][S][] [B][C][] [] [] [] 
[S][S][S][] [] [A][S][] [] [] 
[S][S][S][] [] [A][S][S][] [] 
[S][S][S][] [] [A][S][S][C][] 
[S][S][S][] [] [A][S][S][A][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }, { S-->BS }]

}
word='bababaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   [S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }, { B-->AA }]
C[{ C-->AS }]
S[{ S-->SA }, { S-->SS }, { S-->b }]

}
word='bababaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [B, C][S]   []    []    []    []    []    []    []    
[S]   [B, C][S]   [A]   []    []    []    []    []    []    
[S]   [B, C][S]   [B, C][S]   []    []    []    []    []    
[S]   [B, C][S]   [B, C][S]   [A]   []    []    []    []    
[S]   [B, C][S]   [B, C][S]   [B]   [A]   []    []    []    
[S]   [B, C][S]   [B, C][S]   []    [B, C][S]   []    []    
[S]   [B, C][S]   [B, C][S]   []    [B, C][S]   [S]   []    
[S]   [B, C][S]   [B, C][S]   []    [B, C][S]   [S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [B, C][S]   []    []    []    []    []    []    []    
[S]   [B, C][S]   [B, C][]    []    []    []    []    []    
[S]   [B, C][S]   [B, C][]    []    []    []    []    []    
[S]   [B, C][S]   [B, C][]    []    []    []    []    []    
[S]   [B, C][S]   [B, C][]    []    [B, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }]
C[{ C-->BA }]
S[{ S-->AA }]

}
word='bababaabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B, C][A]   []    []    []    []    []    []    []    
[S]   [A]   []    [B]   []    []    []    []    []    []    
[S]   [A, S][]    [B, C][A]   []    []    []    []    []    
[]    [B, C][S]   [A]   []    [B]   []    []    []    []    
[S]   [A, S][]    [B, C][S]   [A]   [B]   []    []    []    
[S]   [A, S][]    [B, C][S]   [A, S][B, C][A]   []    []    
[S]   [A, S][]    [B, C][S]   [A, S][B, C][S]   [A]   []    
[S]   [A, S][]    [B, C][S]   [A, S][B, C][]    [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[S]   []    []    [B, C][S]   []    []    []    []    []    
[S]   []    []    [B, C][S]   [A, S][]    []    []    []    
[S]   []    []    [B, C][S]   [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->BS }]
C[{ C-->SB }, { C-->SS }, { C-->BB }]
S[{ S-->a }, { S-->BB }]

}
word='bababaabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [S]      []       []       []       []       []       []       []       []       
[S, C]   [C]      [B]      []       []       []       []       []       []       []       
[C, S]   [C]      [A, B]   [S]      []       []       []       []       []       []       
[A, B, C][C]      [S, C]   [C]      [B]      []       []       []       []       []       
[A, B, C][C]      [S, C]   [C]      [A, B]   [S]      []       []       []       []       
[A, B, C][C]      [S, C]   [C]      [A, B]   [C]      [S]      []       []       []       
[C, S]   [C]      [A, B, C][C]      [S, C]   []       [C]      [B]      []       []       
[A, B, C][C]      [S, C]   [C]      [A, B, C][]       [C]      [S, C]   [B]      []       
[C, S]   [C]      [A, B, C][C]      [S, C]   []       [C]      [A, B, C][S, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[A, B, C][C]      []       []       []       []       []       []       []       []       
[A, B, C][C]      [S, C]   []       []       []       []       []       []       []       
[A, B, C][C]      [S, C]   [C]      []       []       []       []       []       []       
[C, S]   [C]      [A, B, C][C]      []       []       []       []       []       []       
[A, B, C][C]      [S, C]   [C]      []       []       []       []       []       []       
[C, S]   [C]      [A, B, C][C]      []       []       [C]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=41
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }]
B[{ B-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='bababaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, B][A]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [A, B][A]   []    []    []    []    []    []    
[S]   [S]   [A, B][A]   [S]   []    []    []    []    []    
[A, B][A, B][S]   [S]   [A, B][A]   []    []    []    []    
[S]   [S]   [A, B][A, B][S]   [S]   [A]   []    []    []    
[S]   [S]   [A, B][A, B][S]   [S]   [A]   [S]   []    []    
[S]   [S]   [A, B][A, B][S]   [S]   [A]   []    [S]   []    
[S]   [S]   [A, B][A, B][S]   [S]   [A]   []    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    [A, B][S]   []    []    []    []    []    []    []    
[S]   []    []    [A, B][]    []    []    []    []    []    
[S]   [S]   [A, B][B]   [S]   []    []    []    []    []    
[S]   [S]   [A, B][B]   [S]   [S]   []    []    []    []    
[S]   [S]   [A, B][B]   [S]   [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->SS }]

}
word='bbbbbbbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[S]      [A, B, C][S]      []       []       []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      []       []       []       []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][S]      []       []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [A, B, C][S]      []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [A, B, C][S]      [B]      []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [A, B, C][S]      []       [B]      []       
[S]      [A, B, C][S]      [A, B, C][S]      [A, B, C][S]      []       []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[]       [A, B, C][]       [A, B, C][]       []       []       []       []       []       
[]       [A, B, C][]       [A, B, C][]       [A, B, C][]       []       []       []       
[]       [A, B, C][]       [A, B, C][]       [A, B, C][]       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }, { B-->CC }]
C[{ C-->a }]
S[{ S-->BB }, { S-->BC }]

}
word='bbbbbbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AA }]
B[{ B-->CC }]
S[{ S-->CA }, { S-->CC }]
C[{ C-->b }]

}
word='bbbbbbbaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[S]      [A, B, S][C]      []       []       []       []       []       []       []       
[A]      [S]      [A, B, S][C]      []       []       []       []       []       []       
[S]      [A]      [S]      [A, B, S][C]      []       []       []       []       []       
[A]      [S]      [A]      [S]      [A, B, S][C]      []       []       []       []       
[S]      [A]      [S]      [A]      [S]      [A, B, S][C]      []       []       []       
[S]      [A]      [S]      [A]      [S]      [A]      [S]      [A]      []       []       
[S]      [A]      [S]      [A]      [S]      [A]      [S]      [A]      [A]      []       
[S]      [A]      [S]      [A]      [S]      [A]      [S]      [A]      [A]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][S][A][] [] [] [] [] [] 
[S][A][S][A][S][] [] [] [] [] 
[S][A][S][A][S][A][] [] [] [] 
[S][A][S][A][S][A][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->CC }, { B-->AA }]
S[{ S-->CA }]
C[{ C-->CC }, { C-->b }]

}
word='bbbbbbbaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, B][A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, B][A, B][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SS }]
S[{ S-->SC }, { S-->b }]

}
word='bbbbbbbaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[S][C][S][] [] [] [] [] [] [] 
[C][S][C][S][] [] [] [] [] [] 
[S][C][S][C][S][] [] [] [] [] 
[C][S][C][S][C][S][] [] [] [] 
[S][C][S][C][S][C][S][] [] [] 
[S][C][S][C][S][C][S][C][] [] 
[S][C][S][C][S][C][S][] [C][] 
[S][C][S][C][S][C][S][] [] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [C][] [C][] [C][] [] [] [] 
[] [C][] [C][] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->SC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

}
word='bbbabbaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][C]   []    []    []    []    []    []    
[B, S][B, S][B, S][C]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][C]   [S]   [S]   []    []    []    []    
[B, S][B, S][B, S][A, C][B, S][B, S][C]   []    []    []    
[B, S][B, S][B, S][A, C][B, S][B, S][A]   [C]   []    []    
[B, S][B, S][B, S][A, C][B, S][B, S][]    [A]   [C]   []    
[B, S][B, S][B, S][A, C][B, S][B, S][]    []    [A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][] [A][] [] [] [] [] [] 
[B][B][] [A][B][] [] [] [] [] 
[B][B][] [A][B][] [] [] [] [] 
[B][B][] [A][B][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->CC }, { B-->BB }]
S[{ S-->CB }]
C[{ C-->CC }, { C-->b }]

}
word='bbbabbaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C]   [C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C]   [C]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [B]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[B, S]   [B, S]   [S]      [B]      [B, C]   [C]      []       []       []       []       
[B, S]   [B, S]   [S]      [B]      [B, S]   [S]      [B]      []       []       []       
[B, S]   [B, S]   [S]      [B]      [B, S]   [S]      [B]      [B]      []       []       
[B, S]   [B, S]   [S]      [B]      [B, S]   [S]      [B]      [B]      [B]      []       
[B, S]   [B, S]   [S]      [B]      [B, S]   [S]      [B]      [B]      [B]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [B, S][S]   []    []    []    []    []    []    []    
[S]   [B, S][S]   []    [B, S][]    []    []    []    []    
[S]   [B, S][S]   []    [B, S][S]   []    []    []    []    
[S]   [B, S][S]   []    [B, S][S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BS }, { B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]

}
word='bbbabbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [S]      []       []       []       []       []       []       []       []       
[B, S]   [A, B]   [S]      []       []       []       []       []       []       []       
[B, S]   [A, B]   [S]      [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [A, B]   [S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [A, B]   [S]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [A, B]   [S]      []       [B]      []       []       
[A, B, S][A, B, S][A, B, S][B]      [A, B]   [S]      []       []       [B]      []       
[A, B, S][A, B, S][A, B, S][B]      [A, B]   [S]      []       []       []       [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    [A, B][B]   []    []    []    []    []    []    
[]    []    [A, B][B]   [A]   []    []    []    []    []    
[]    []    [A, B][B]   [A]   []    []    []    []    []    
[]    []    [A, B][B]   [A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SB }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->SS }, { S-->BS }]
C[{ C-->SS }]

}
word='bbbabbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [B]   []    []    []    []    
[S, C][S, C][S, C][S, C][S]   [S]   [S]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AC }, { B-->AA }]
C[{ C-->AC }, { C-->CA }, { C-->CC }, { C-->b }]
S[{ S-->CA }, { S-->CC }]

}
word='bbbabbaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C, S]   [C]      []       []       []       []       []       []       []       []       
[C, S]   [C, S]   [C]      []       []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [A]      []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [B, C]   [C]      []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [B, C, S][C, S]   [C]      []       []       []       []       
[C, S]   [C, S]   [C, S]   [B, C, S][C, S]   [C, S]   [A]      []       []       []       
[C, S]   [C, S]   [C, S]   [B, C, S][C, S]   [C, S]   [B]      [A]      []       []       
[C, S]   [C, S]   [C, S]   [B, C, S][C, S]   [C, S]   []       [B]      [A]      []       
[C, S]   [C, S]   [C, S]   [B, C, S][C, S]   [C, S]   []       []       [B]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->AC }, { S-->AA }]

}
word='bbbaaabaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C]   [C]   []    []    []    []    []    
[C, S][C, S][C, S][C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[C, S][C, S][C, S][C]   [C]   [C]   [C, S][C]   []    []    
[C, S][C, S][C, S][C]   [C]   [C]   [C, S][C]   [C]   []    
[C, S][C, S][C, S][C]   [C]   [C]   [C, S][C]   [C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CC }]

}
word='bbbaaabaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][C]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [A, S][C]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[A, S][A, S][A, S][A, S][C]   [A, S][C]   [C]   []    []    
[C]   [C]   [C]   [C]   [A, S][C]   [A, S][A, S][C]   []    
[A, S][A, S][A, S][A, S][C]   [A, S][C]   [C]   [A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [C]   []    [C]   []    []    []    []    
[A, S][A, S][A, S][]    [C]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
C[{ C-->a }, { C-->AA }]
S[{ S-->AA }]

}
word='bbbaaabaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C, S][A]   []    []    []    []    []    []    []    []    
[A]   [C, S][A]   []    []    []    []    []    []    []    
[A]   [C, S][A]   [C]   []    []    []    []    []    []    
[A]   [C, S][A]   []    [C]   []    []    []    []    []    
[A]   [C, S][A]   []    []    [C]   []    []    []    []    
[C, S][A]   [C, S][]    []    []    [A]   []    []    []    
[C, S][A]   [C, S][]    []    []    [A]   [C]   []    []    
[C, S][A]   [C, S][]    []    []    [A]   []    [C]   []    
[C, S][A]   [C, S][]    []    []    [A]   []    []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
C[{ C-->CB }, { C-->b }]
S[{ S-->CC }, { S-->BB }]

}
word='bbbaaabaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][S]      [B]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][]       [S]      [B]      []       []       []       []       
[S]      [S]      [S]      []       []       []       [C]      []       []       []       
[B, C, S][B, C, S][B, C, S][]       []       [S]      [B, C]   [B]      []       []       
[B, C, S][B, C, S][B, C, S][]       []       [S]      [B, C, S][S]      [B]      []       
[B, C, S][B, C, S][B, C, S][]       []       [S]      [B, C, S][]       [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][]       []       []       []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SS }, { A-->SC }]
S[{ S-->a }, { S-->CC }, { S-->SS }]
C[{ C-->CS }, { C-->b }]

}
word='bbbaaabaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[A, C][A, S][C]   []    []    []    []    []    []    []    
[A, C][A, S][C]   [S]   []    []    []    []    []    []    
[A, C][A, S][C]   [A, S][S]   []    []    []    []    []    
[A, C][A, S][C]   [A, S][A, S][S]   []    []    []    []    
[A, S][A, C][A, S][A]   [A]   [A]   [C]   []    []    []    
[A, S][A, C][A, S][A]   [A]   [A]   [C]   [S]   []    []    
[A, S][A, C][A, S][A]   [A]   [A]   [C]   [A, S][S]   []    
[A, S][A, C][A, S][A]   [A]   [A]   [C]   [A, S][A, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    [C]   [A, S][A]   []    []    []    []    []    []    
[S]   [A]   [A, S][A]   [A]   []    []    []    []    []    
[S]   [A]   [A, S][A]   [A]   [A]   []    []    []    []    
[S]   [A]   [A, S][A]   [A]   [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->CA }, { S-->CC }]

}
word='aaabbabbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [A, B][A]   []    []    []    []    []    
[C, S][C, S][C, S][C]   [C]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, B][A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, B][A, B][A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, B][A, B][A, B][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[C, S][C, S][C, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
S[{ S-->BB }, { S-->b }]

}
word='aaabbabbbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[B][S][B][S][] [] [] [] [] [] 
[B][S][B][] [S][] [] [] [] [] 
[S][B][S][] [] [B][] [] [] [] 
[S][B][S][] [] [B][S][] [] [] 
[S][B][S][] [] [B][] [S][] [] 
[S][B][S][] [] [B][] [] [S][] 
[S][B][S][] [] [B][] [] [] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AB }, { B-->AA }]
S[{ S-->AA }, { S-->BB }]

}
word='aaabbabbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, S]   [A]      []       []       []       []       []       []       []       []       
[A, B]   [B, S]   [A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][B, S]   []       []       [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][]       [S]      [A, B]   [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][]       [S]      [A, B, S][S]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][]       [S]      [A, B, S][]       [S]      [B]      []       
[A, B, S][A, B, S][A, B, S][]       [S]      [A, B, S][]       []       [S]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
C[{ C-->a }]
S[{ S-->BB }, { S-->BC }]

}
word='aaabbabbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][C]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->SC }, { B-->CS }]
S[{ S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->SC }, { C-->b }]

}
word='aaabbabbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   [S]   []    []    []    []    
[B, C][B, C][B, C][B, C][A, S][B, C][C]   []    []    []    
[A, S][A, S][A, S][A, S][B, C][A, S][A, S][C]   []    []    
[B, C][B, C][B, C][B, C][A, S][B, C][B, C][A, S][C]   []    
[A, S][A, S][A, S][A, S][B, C][A, S][A, S][B, C][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[A, S][A, S][A, S][]    [B, C][]    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[A, S][A, S][A, S][]    [B, C][A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SB }]
B[{ B-->a }, { B-->SS }]
C[{ C-->SS }]
S[{ S-->b }, { S-->BS }]

}
word='abababbbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A]   [A]   [B]   []    []    []    []    []    []    []    
[B, C][B, C][A, S][S]   []    []    []    []    []    []    
[]    []    [A]   [A]   [B]   []    []    []    []    []    
[A, S][A, S][B, C][B, C][A, S][S]   []    []    []    []    
[B, C][B, C][A, S][A, S][B, C][B, C][S]   []    []    []    
[A, S][A, S][B, C][B, C][A, S][A, S][B, C][S]   []    []    
[B, C][B, C][A, S][A, S][B, C][B, C][A, S][B, C][S]   []    
[A, S][A, S][B, C][B, C][A, S][A, S][B, C][A, S][B, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[B, C][]    []    [A, S][]    []    []    []    []    []    
[]    [A, S][B, C][]    []    []    []    []    []    []    
[B, C][]    []    [A, S][B, C][]    []    []    []    []    
[]    [A, S][B, C][]    []    [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SC }, { C-->CS }, { C-->b }]

}
word='abababbbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [C]      []       []       []       []       []       []       []       []       
[B, S, C][B, C]   [S]      []       []       []       []       []       []       []       
[B, S, C][B, C]   [S, C]   [C]      []       []       []       []       []       []       
[B, S, C][B, C]   [B, S, C][B, C]   [S]      []       []       []       []       []       
[B, S, C][B, C]   [B, S, C][B, C]   [S, C]   [C]      []       []       []       []       
[B, S, C][B, C]   [B, S, C][B, C]   [S, C]   []       [C]      []       []       []       
[B, S, C][B, C]   [B, S, C][B, C]   [S, C]   []       []       [C]      []       []       
[B, S, C][B, C]   [B, S, C][B, C]   [S, C]   []       []       []       [C]      []       
[B, S, C][B, C]   [B, S, C][B, C]   [S, C]   []       []       []       []       [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->BB }]
S[{ S-->BC }]

}
word='abababbbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [B]   [B]   []    []    []    []    []    []    
[]    []    [S]   [S]   [C]   []    []    []    []    []    
[B, S][B, S][C]   [C]   [B]   [B]   []    []    []    []    
[C]   [C]   [B, S][B, S][C]   [C]   [B]   []    []    []    
[B, S][B, S][C]   [C]   [B, S][B, S][C]   [B]   []    []    
[C]   [C]   [B, S][B, S][C]   [C]   [B, S][C]   [B]   []    
[B, S][B, S][C]   [C]   [B, S][B, S][C]   [B, S][C]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[C]   []    [S]   [B, S][]    []    []    []    []    []    
[S]   [B, S][C]   []    [S]   []    []    []    []    []    
[C]   []    [S]   [B, S][C]   []    []    []    []    []    
[S]   [B, S][C]   []    [S]   [B, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CS }, { S-->b }]

}
word='abababbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C, S]   [S]      []       []       []       []       []       []       []       []       
[B]      [B]      [C]      []       []       []       []       []       []       []       
[B, C, S][B]      [C, S]   [S]      []       []       []       []       []       []       
[B]      []       [B]      [B]      [C]      []       []       []       []       []       
[B, C, S][B]      [B, C, S][B]      [C, S]   [S]      []       []       []       []       
[B, C, S][B]      [B, C, S][B]      [C, S]   []       [S]      []       []       []       
[B, C, S][B]      [B, C, S][B]      [C, S]   []       []       [S]      []       []       
[B, C, S][B]      [B, C, S][B]      [C, S]   []       []       []       [S]      []       
[B, C, S][B]      [B, C, S][B]      [C, S]   []       []       []       []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       [B, C, S][]       []       []       []       []       []       []       
[B, C, S][B]      [B, C, S][B]      []       []       []       []       []       []       
[B, C, S][B]      [B, C, S][B]      []       []       []       []       []       []       
[B, C, S][B]      [B, C, S][B]      []       []       []       []       []       []       
[B, C, S][B]      [B, C, S][B]      []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=41
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
B[{ B-->SA }, { B-->AA }]
S[{ S-->AS }, { S-->SA }, { S-->a }]

}
word='abababbbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [A]      []       []       []       []       []       []       []       []       
[B, S]   [A, S]   [S]      []       []       []       []       []       []       []       
[B, S]   [A, B, S][B, S]   [A]      []       []       []       []       []       []       
[B, S]   [A, B, S][B, S]   [A, S]   [S]      []       []       []       []       []       
[B, S]   [A, B, S][B, S]   [A, B, S][B, S]   [A]      []       []       []       []       
[B, S]   [A, B, S][B, S]   [A, B, S][B, S]   [B]      [A]      []       []       []       
[B, S]   [A, B, S][B, S]   [A, B, S][B, S]   []       [B]      [A]      []       []       
[B, S]   [A, B, S][B, S]   [A, B, S][B, S]   []       []       [B]      [A]      []       
[B, S]   [A, B, S][B, S]   [A, B, S][B, S]   []       []       []       [B]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BB }, { A-->CB }]
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->CC }, { C-->BB }]
S[{ S-->BB }]

}
word='baaabbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       [A, C]   [C]      []       []       []       []       []       []       []       
[]       [A, C]   [A, C]   [C]      []       []       []       []       []       []       
[A, C, S][A, B]   [A, B]   [A, B]   [B]      []       []       []       []       []       
[A, B]   [A, C, S][A, C, S][A, C, S][A, C, S][B]      []       []       []       []       
[A, C, S][A, B]   [A, B]   [A, B]   [A, B]   [A, C, S][B]      []       []       []       
[A, C]   []       []       []       []       [A, C]   []       [C]      []       []       
[A, B]   [A, C, S][A, C, S][A, C, S][A, C, S][A, B]   [A, C, S][A, B]   [B]      []       
[A, C, S][A, B]   [A, B]   [A, B]   [A, B]   [A, C, S][A, B]   [A, C, S][A, C, S][B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [A, C, S][A, C, S][]       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       [B]      []       [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->AB }]
B[{ B-->b }, { B-->BB }]
S[{ S-->BA }, { S-->AA }, { S-->BB }, { S-->AB }]

}
word='baaabbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A, S]   [A]      []       []       []       []       []       []       []       
[S]      [A, S]   [A, S]   [A]      []       []       []       []       []       []       
[S]      [A, S]   [A, S]   [A, S]   [B]      []       []       []       []       []       
[S]      [A, S]   [A, S]   [A, S]   [A, B, S][B]      []       []       []       []       
[S]      [A, S]   [A, S]   [A, S]   [A, B, S][A, B, S][B]      []       []       []       
[S]      [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A]      []       []       
[S]      [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, S]   [B]      []       
[S]      [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, S]   [A, B, S][B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    [A, S][]    []    []    []    
[S]   []    []    []    []    [A, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->a }, { C-->CC }, { C-->BB }]
S[{ S-->BB }, { S-->BC }]

}
word='baaabbbabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[B, S][C]   [C]   []    []    []    []    []    []    []    
[B, S][C]   [C]   [C]   []    []    []    []    []    []    
[C, S][]    []    []    [B]   []    []    []    []    []    
[B, S][C]   [C]   [C]   [C, S][B]   []    []    []    []    
[C, S][]    []    []    [B, S][C, S][B]   []    []    []    
[C, S][]    []    []    [B, S][C, S][B, S][C]   []    []    
[B, S][C]   [C]   [C]   [C, S][B, S][C, S][]    [B]   []    
[C, S][]    []    []    [B, S][C, S][B, S][C]   [C, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    [B, S][]    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }]
C[{ C-->CA }, { C-->b }]
S[{ S-->CC }]

}
word='baaabbbabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C]   [A]   [A]   []    []    []    []    []    []    []    
[C]   [A]   [A]   [A]   []    []    []    []    []    []    
[A, S][]    []    []    [C]   []    []    []    []    []    
[C]   [A]   [A]   [A]   [A, S][C]   []    []    []    []    
[A, S][]    []    []    [C]   [A, S][C]   []    []    []    
[A, S][]    []    []    [C]   [A, S][C]   [A]   []    []    
[C]   [A]   [A]   [A]   [A, S][C]   [A, S][]    [C]   []    
[A, S][]    []    []    [C]   [A, S][C]   [A]   [A, S][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [C][] [] [] [] 
[] [] [] [] [C][] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AC }]
S[{ S-->CA }, { S-->CC }]
C[{ C-->AA }, { C-->b }]

}
word='baaabbbabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, S][C]   [A]   []    []    []    []    []    []    []    
[C]   [B, S][C]   [A]   []    []    []    []    []    []    
[A, S][C]   [A, S][B]   [C]   []    []    []    []    []    
[B, S][A, S][B, S][C]   [A, S][C]   []    []    []    []    
[C]   [B, S][C]   [A, S][B, S][A, S][C]   []    []    []    
[B, S][A, S][B, S][C]   [A, S][C]   [S]   [A]   []    []    
[C]   [B, S][C]   [A, S][B, S][A, S][]    [B]   [C]   []    
[A, S][C]   [A, S][B, S][C]   [B, S][A, S][C]   [A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B, S][A, S][S]   []    []    []    []    []    []    []    
[C]   [S]   [C]   [A, S][]    []    []    []    []    []    
[B]   [A, S][B]   []    [A, S][]    []    []    []    []    
[C]   [S]   [C]   [A, S][B, S][]    []    []    []    []    
[]    [C]   [A, S][S]   [C]   [B, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }]
S[{ S-->AS }, { S-->AA }, { S-->b }]

}
word='aaaaaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->a }, { C-->CC }]

}
word='aaaaaaabaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      [C]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      [B, C, S][C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->BB }]
S[{ S-->SB }, { S-->b }, { S-->BS }]
C[{ C-->BB }]

}
word='aaaaaaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, C][B]   []    []    []    []    []    []    []    []    
[B, C][B, C][B]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][B]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->BS }, { B-->SB }]
C[{ C-->SB }]
S[{ S-->a }, { S-->BB }]

}
word='aaaabbbaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    [A]   [S]   []    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [B]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][S]   [B]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][A, S][B]   [S]   []    []    
[B, C][B, C][B, C][B, C][B, C][A, S][B]   [A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][B, C][S]   [B, C][B, C][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   [A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A]   [B, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }]
B[{ B-->CS }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CC }, { S-->b }]

}
word='aaaabbbaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[A, B][A, S][C]   []    []    []    []    []    []    []    
[C]   [A, B][A, S][C]   []    []    []    []    []    []    
[A, B][A, S][C]   [B]   [S]   []    []    []    []    []    
[A, S][C]   [A, B][A, S][C]   [S]   []    []    []    []    
[C]   [A, B][A, S][C]   [A, B][C]   [S]   []    []    []    
[A, S][C]   [A, B][A, S][C]   [A, S][A]   [C]   []    []    
[A, B][A, S][C]   [A, B][A, S][A, B][C]   [A, S][C]   []    
[A, S][C]   [A, B][A, S][C]   [A, S][A, B][C]   [B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A, S][C]   [A]   []    []    []    []    []    []    []    
[C]   [A]   [A, S][C]   []    []    []    []    []    []    
[]    [C]   [A, B][]    [C]   []    []    []    []    []    
[A, B][]    [C]   [A, B][A, S][B]   []    []    []    []    
[A, S][C]   [A]   [A, S][]    [A, S][B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AA }]
C[{ C-->CA }, { C-->a }, { C-->CC }, { C-->AA }]
S[{ S-->CA }]

}
word='aaaabbbaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][A]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][B, C][A]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][B, C][A]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    [C]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    [C]   [C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][]    [C, S][C, S][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BB }]
C[{ C-->BB }]
S[{ S-->AB }]

}
word='aaaabbbaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][B]   []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][B, C][B]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
C[{ C-->SB }, { C-->BB }, { C-->SS }]
S[{ S-->BB }, { S-->b }]

}
word='aaaabbbaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S, C][B]   []    []    []    []    []    []    []    []    
[B, C][S, C][B]   []    []    []    []    []    []    []    
[S, C][B, C][S, C][B]   []    []    []    []    []    []    
[S, C][B, C][S, C][B]   [S]   []    []    []    []    []    
[S, C][B, C][S, C][B]   [C]   [S]   []    []    []    []    
[S, C][B, C][S, C][B]   []    [C]   [S]   []    []    []    
[B, C][C, S][B, C][S, C][]    []    [C]   [B]   []    []    
[S, C][B, C][S, C][B, C][]    []    [C]   [S, C][B]   []    
[S, C][B, C][S, C][B, C][]    []    [C]   [S, C][B]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[S][C][S][] [] [] [] [] [] [] 
[S][C][S][] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[S][C][S][] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }, { B-->CS }, { B-->CC }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SC }, { C-->b }]

}
word='aababbbbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, S][B, S][C]   []    []    []    []    
[B, S][B, S][B, S][B, C][B, C][B, S][C]   []    []    []    
[B, C][B, C][B, C][B, S][B, S][B, C][B, S][C]   []    []    
[B]   [B]   [B]   []    []    [B]   []    [B]   [S]   []    
[B, S][B, S][B, S][B, C][B, C][B, S][B, C][B, S][B, C][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    [B, C][S]   []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    [B, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->CC }]
C[{ C-->a }, { C-->BC }]
S[{ S-->BB }]

}
word='aababbbbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[A, C][B]   [C]   [C]   []    []    []    []    []    []    
[A]   [S]   [A]   [A]   [B]   []    []    []    []    []    
[]    []    []    []    [S]   [B]   []    []    []    []    
[]    []    []    []    []    [S]   [B]   []    []    []    
[]    []    []    []    []    []    [S]   [B]   []    []    
[B, S][A, C][B, S][B]   [C]   [C]   [C]   [C]   [C]   []    
[S]   [A]   [S]   [S]   [A]   [A]   [A]   [A]   [A]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A]   [S]   [S]   [A]   [A]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->BB }]
C[{ C-->BB }]

}
word='aababbbbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [A]   [S]   []    []    []    []    []    []    
[S]   [S]   [A]   [S]   [B]   []    []    []    []    []    
[S]   [S]   [A]   [S]   [S, C][B]   []    []    []    []    
[S]   [S]   [A]   [S]   [A, S][S, C][B]   []    []    []    
[S]   [S]   [A]   [S]   [A, S][A, S][S, C][B]   []    []    
[S]   [S]   [A]   [S]   [A, S][A, S][S]   [A]   [S]   []    
[S]   [S]   [A]   [S]   [A, S][A, S][S]   [A]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [S][A][] [A][] [] [] [] [] 
[] [S][A][] [A][A][] [] [] [] 
[] [S][A][] [A][A][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CS }]
C[{ C-->a }]
S[{ S-->CC }, { S-->CS }, { S-->SS }, { S-->b }]

}
word='aababbbbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A, B, S][B, S]   [S]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [B, S]   [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [S]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [S]      []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, S]   [S]      []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, S]   [A, S]   [B, S]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][] [B][] [] [] [] [] [] 
[B][B][] [B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->BA }, { B-->a }]
S[{ S-->AA }]

}
word='aababbbbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [A]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [A]      [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B]   [A]      []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][S]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][]       [S]      [A]      []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][]       []       [S]      [A]      []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][]       []       [S]      [A]      [B]      []       
[A, B, S][A, B, S][A, S]   [A, B, S][]       []       [S]      [A, S]   [A, B]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->AA }]

}
word='aaabaaaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][A]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][S]   [B, S][B]   []    []    []    []    
[B, S][B, S][B, S][S]   [B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][S]   [B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][S]   [B, S][B, S][B, S][B, S][A]   []    
[B, S][B, S][B, S][S]   [B, S][B, S][B, S][B, S][C]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    [B, S][S]   []    []    []    []    []    []    
[]    []    [B, S][S]   []    []    []    []    []    []    
[]    []    [B, S][S]   []    []    []    []    []    []    
[]    []    [B, S][S]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->AA }, { C-->CC }, { C-->b }]

}
word='aaabaaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, C, S][A]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][A]      []       []       []       []       []       []       []       
[C, S]   [C, S]   [S]      [C]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[C, S]   [C, S]   [S]      [C]      [A, C, S][A]      []       []       []       []       
[C, S]   [C, S]   [S]      [C]      [A, C, S][A, C, S][A]      []       []       []       
[C, S]   [C, S]   [S]      [C]      [A, C, S][A, C, S][A, C, S][A]      []       []       
[C, S]   [C, S]   [S]      [C]      [S, C]   [S, C]   [C, S]   [S]      [C]      []       
[C, S]   [C, S]   [S]      [C]      [S, C]   [S, C]   [C, S]   [S]      [C]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [C, S][S]   []    []    []    []    []    []    []    
[S]   [C, S][S]   []    []    []    []    []    []    []    
[S]   [C, S][S]   []    []    []    []    []    []    []    
[S]   [C, S][S]   []    [S]   [S]   [C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AC }, { B-->AA }]
C[{ C-->AA }, { C-->b }]
S[{ S-->CC }]

}
word='aaabaaaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, C][A]   []    []    []    []    []    []    []    []    
[B]   [B, C][A]   []    []    []    []    []    []    []    
[B, C][A, S][B]   [C]   []    []    []    []    []    []    
[B]   [B, C][]    []    [A]   []    []    []    []    []    
[A, S][B]   [B, C][A, S][B, C][A]   []    []    []    []    
[B, C][A, S][B]   [B, C][B]   [B, C][A]   []    []    []    
[B]   [B, C][A, S][B]   [A, S][B]   [B, C][A]   []    []    
[B, C][A, S][B]   [B, C][B]   [B, C][A, S][B]   [C]   []    
[A, S][B]   [B, C][A, S][B, C][A, S][B]   [B, C][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[]    [A, S][B]   [B, C][]    []    []    []    []    []    
[B]   []    [A, S][B]   [A, S][]    []    []    []    []    
[B, C][A, S][]    [B, C][]    [B, C][]    []    []    []    
[A, S][]    [B, C][]    [B, C][A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->CC }]
S[{ S-->CA }, { S-->CC }]
C[{ C-->a }, { C-->CC }, { C-->AA }]

}
word='aaabaaaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [A]      []       []       []       []       []       []       
[S]      [S]      [S]      [A]      [C]      []       []       []       []       []       
[S]      [S]      [S]      [A]      [B, C, S][C]      []       []       []       []       
[S]      [S]      [S]      [A]      [B, C, S][B, C, S][C]      []       []       []       
[S]      [S]      [S]      [A]      [B, C, S][B, C, S][B, C, S][C]      []       []       
[B, C, S][B, C, S][B, C, S][C]      [S]      [S]      [S]      [S]      [A]      []       
[S]      [S]      [S]      [A, S]   [B, C, S][B, C, S][B, C, S][B, C, S][C]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      [S]      [S]      []       []       []       []       
[S]      [S]      []       [A]      [B, C, S][B, C, S][B, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=36

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=36
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->CC }, { B-->BB }]
C[{ C-->a }]
S[{ S-->CC }, { S-->BB }, { S-->BC }]

}
word='aaabaaaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[B, S][B, S][C]   []    []    []    []    []    []    []    
[B, S][B, S][B]   [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][C]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][C]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->BC }, { B-->a }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->BB }, { C-->b }]

}
word='baaabaabaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[]       [A, C]   [B]      []       []       []       []       []       []       []       
[A, S]   [A, B, S][A, C]   [B]      []       []       []       []       []       []       
[A, S]   [A, B, S][A, C]   [A, B, S][C]      []       []       []       []       []       
[]       [A, C]   [A, B, S][A, C]   [A, S]   [B]      []       []       []       []       
[A, S]   [A, B, S][A, C]   [A, B, S][]       [A, C]   [B]      []       []       []       
[A, S]   [A, B, S][A, C]   [A, B, S][]       [A, C]   [A, B, S][C]      []       []       
[]       [A, C]   [A, B, S][A, C]   [A, S]   [A, B, S][A, C]   [A, S]   [B]      []       
[A, S]   [A, B, S][A, C]   [A, B, S][]       [A, C]   [A, B, S][]       [A, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       []       []       []       []       []       
[]       []       [A, B, S][]       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[A, S]   []       [C]      []       []       []       []       []       []       []       
[]       []       [A, B, S][A, C]   []       [A, B, S][]       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->b }]

}
word='baaabaabaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[B][B][B][B][C][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[B][B][B][B][B][B][B][C][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }]
B[{ B-->SC }]
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->b }]

}
word='baaabaabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->SS }, { S-->BS }]

}
word='baaabaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [S]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->b }]

}
word='baaabaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[S]   []    [A]   [B]   []    []    []    []    []    []    
[S]   []    [A]   [B]   [S]   []    []    []    []    []    
[S]   []    [A]   [A, B][S]   [B]   []    []    []    []    
[S]   []    [A]   [A, B][S]   [A]   [B]   []    []    []    
[S]   []    [A]   [A, B][S]   [A]   [B]   [S]   []    []    
[S]   []    [A]   [A, B][S]   [A]   [A, B][S]   [B]   []    
[S]   []    [A]   [A, B][S]   [A]   [A, B][S]   [A]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][A][] [] [] [] [] [] 
[] [] [A][A][S][] [] [] [] [] 
[] [] [A][A][S][A][] [] [] [] 
[] [] [A][A][S][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->BS }]

}
word='babababbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[B, C]   [C]      [S]      []       []       []       []       []       []       []       
[B, S, C][C]      [B, S]   [B]      []       []       []       []       []       []       
[B, C, S][]       [B, C]   [C]      [S]      []       []       []       []       []       
[B, S, C][C]      [B, S, C][C]      [B, S]   [B]      []       []       []       []       
[B, S, C][C]      [B, S, C][]       [B, C]   [C]      [S]      []       []       []       
[B, S, C][C]      [B, S, C][C]      [B, S, C][]       [B]      [S]      []       []       
[B, C, S][C]      [B, S, C][C]      [B, S, C][C]      [B, S, C][B]      [S]      []       
[B, C, S][C]      [B, C, S][C]      [B, S, C][C]      [B, S, C][B, S, C][B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       [B, S, C][]       []       []       []       []       []       []       
[B, S, C][C]      []       []       []       []       []       []       []       []       
[B, S, C][C]      [B, S, C][]       []       []       []       []       []       []       
[B, C, S][C]      [B, S, C][C]      [B, S, C][]       []       []       []       []       
[B, C, S][C]      [B, C, S][C]      [B, S, C][C]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=43

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=43
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->CB }, { C-->a }]
S[{ S-->BC }]

}
word='babababbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [B, C]   [B]      []       []       []       []       []       []       []       
[]       [S]      [S]      [C]      []       []       []       []       []       []       
[S]      [B, C, S][S]      [B, C]   [B]      []       []       []       []       []       
[]       [S]      []       [S]      [S]      [C]      []       []       []       []       
[S]      [B, C, S][S]      [B, C, S][S]      [B, C]   [B]      []       []       []       
[S]      [B, C, S][S]      [B, C, S][S]      [B, C]   []       [B]      []       []       
[S]      [B, C, S][S]      [B, C, S][S]      [B, C]   []       []       [B]      []       
[S]      [B, C, S][S]      [B, C, S][S]      [B, C]   []       []       []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B, C, S][]       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B, C, S][]       [B, C, S][]       []       []       []       []       []       
[S]      [B, C, S][S]      [B, C, S][S]      []       []       []       []       []       
[S]      [B, C, S][S]      [B, C, S][S]      []       []       []       []       []       
[S]      [B, C, S][S]      [B, C, S][S]      []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=36

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=36
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CS }, { S-->b }]

}
word='babababbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[C]   [S]   [S]   []    []    []    []    []    []    []    
[]    [B]   [B]   [C]   []    []    []    []    []    []    
[B, S][C]   [C]   [S]   [S]   []    []    []    []    []    
[B]   []    []    [B]   [B]   [C]   []    []    []    []    
[C]   [B, S][B, S][C]   [C]   [S]   [S]   []    []    []    
[B, S][C]   [C]   [B, S][B, S][C]   [C]   [S]   []    []    
[C]   [B, S][B, S][C]   [C]   [B, S][B, S][C]   [S]   []    
[B, S][C]   [C]   [B, S][B, S][C]   [C]   [B, S][C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    [C]   []    []    []    []    []    []    
[B, S][C]   []    [B]   [B, S][]    []    []    []    []    
[]    [B]   [B, S][C]   []    [B]   []    []    []    []    
[B, S][C]   []    [B]   [B, S][C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }, { S-->BS }]

}
word='babababbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }]
S[{ S-->AB }]

}
word='babababbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B]      [A, C]   [A]      []       []       []       []       []       []       []       
[]       [S]      [S]      [B]      []       []       []       []       []       []       
[A, C, S][B]      [B]      [A, C]   [A]      []       []       []       []       []       
[S]      []       []       [S]      [S]      [B]      []       []       []       []       
[B]      [A, S, C][A, S, C][B]      [B]      [A, C]   [A]      []       []       []       
[A, C, S][B]      [B]      [A, C, S][A, S, C][B]      [B]      [A]      []       []       
[B]      [A, S, C][A, S, C][B]      [B]      [A, C, S][A, S, C][B]      [A]      []       
[A, C, S][B]      [B]      [A, C, S][A, S, C][B]      [B]      [A, S, C][B]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       [B]      []       []       []       []       []       []       
[A, C, S][B]      []       [S]      [A, S, C][]       []       []       []       []       
[]       [S]      [A, S, C][B]      []       [S]      []       []       []       []       
[A, C, S][B]      []       [S]      [A, S, C][B]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SA }, { B-->AA }]
S[{ S-->AS }, { S-->b }]

}
word='aabbbabbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[A, B][A, B][A]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][A]   [S]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A]   []    []    []    []    
[A, B][A, B][A, B][B, S][A]   [S]   [S]   []    []    []    
[B, S][B, S][B, S][A, B][B, S][A, B][A]   [S]   []    []    
[A, B][A, B][A, B][B, S][A, B][B, S][B, S][A]   [S]   []    
[B, S][B, S][B, S][A, B][B, S][A, B][A, B][B, S][A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][B, S][]    []    []    []    []    []    
[B]   [B]   [S]   [B]   [S]   []    []    []    []    []    
[A]   [A]   [B]   [S]   [B]   [B]   []    []    []    []    
[B]   [B]   [S]   [B]   [S]   [A]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }, { B-->BB }]
C[{ C-->CC }, { C-->b }]
S[{ S-->BC }]

}
word='aabbbabbbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[S][S][C][] [] [] [] [] [] [] 
[S][S][C][C][] [] [] [] [] [] 
[S][S][C][C][C][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[S][S][S][S][S][S][C][] [] [] 
[S][S][S][S][S][S][C][C][] [] 
[S][S][S][S][S][S][C][C][C][] 
[S][S][S][S][S][S][C][C][C][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
C[{ C-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='aabbbabbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[B, C][B, C][B]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [B]   [S]   []    []    []    []    []    
[]    []    []    [C]   []    [B]   []    []    []    []    
[B, C][B, C][B, C][S]   [B]   [S]   [S]   []    []    []    
[S]   [S]   [S]   [B, C][S]   [B, C][B]   [S]   []    []    
[B, C][B, C][B, C][S]   [B, C][S]   [S]   [B]   [S]   []    
[S]   [S]   [S]   [B, C][S]   [B, C][B, C][S]   [B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    [S]   [C]   [S]   []    []    []    []    []    
[B, C][B, C][C]   [S]   [C]   []    []    []    []    []    
[]    []    [S]   [C]   [S]   [B, C][C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }, { C-->BB }]
S[{ S-->CC }]

}
word='aabbbabbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [C]      [B]      []       []       []       []       []       []       []       
[S]      [C, S]   [C]      [B]      []       []       []       []       []       []       
[S]      [S, C]   [B, C]   [C]      [B]      []       []       []       []       []       
[S]      [S, C]   [B, C, S][C, S]   [B]      [C]      []       []       []       []       
[S]      [C, S]   [B, C, S][B, C, S][B, C]   [C]      [B]      []       []       []       
[S]      [C, S]   [B, C, S][B, C, S][B, C]   [S, C]   [C]      [B]      []       []       
[S]      [C, S]   [B, C, S][B, C, S][B, C, S][C, S]   [B, C]   [C]      [B]      []       
[S]      [C, S]   [B, C, S][B, C, S][B, C, S][C, S]   [B, C, S][B, C]   [C]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [C][] [] [] [] [] [] [] 
[S][] [] [B][] [] [] [] [] [] 
[S][] [] [] [C][] [] [] [] [] 
[S][] [] [] [C][] [] [] [] [] 
[S][] [] [] [C][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->CB }]
C[{ C-->a }]

}
word='aabbbabbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B]   [B]   []    []    []    []    []    []    
[B, S][B, S][B]   [B]   [B]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [C]   []    []    []    []    
[B, S][B, S][B]   [B]   [B]   [B, S][B]   []    []    []    
[B, S][B, S][B]   [B]   [B]   [B, S][B]   [B]   []    []    
[B, S][B, S][B]   [B]   [B]   [B, S][B]   [B]   [B]   []    
[B, S][B, S][B]   [B]   [B]   [B, S][B]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[B, S][B, S][B]   [B]   []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    [S]   []    []    []    []    
[S]   [S]   []    []    []    [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->AA }]
C[{ C-->BA }, { C-->AB }]
S[{ S-->AA }]

}
word='abaaababab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[B, S][A, C][A]   []    []    []    []    []    []    []    
[A, C][B, S][B, S][A]   []    []    []    []    []    []    
[B, S][A, C][A, C][B, S][A]   []    []    []    []    []    
[B, S][A, C][A, C][B, S][A, C][B]   []    []    []    []    
[A, C][B, S][B, S][A, C][B, S][A, C][A]   []    []    []    
[A, C][B, S][B, S][A, C][B, S][A, C][A, C][B]   []    []    
[B, S][A, C][A, C][B, S][A, C][B, S][B, S][A, C][A]   []    
[B, S][A, C][A, C][B, S][A, C][B, S][B, S][A, C][A, C][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][A, C][]    []    []    []    []    []    []    []    
[A, C][B, S][]    [A, C][]    []    []    []    []    []    
[]    [B, S][B, S][]    [B, S][]    []    []    []    []    
[]    []    [A, C][]    [A, C][B, S][]    []    []    []    
[B, S][A, C][]    [B, S][]    [B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->SB }, { B-->a }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='abaaababab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[B, C][B, C][B]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [B]   []    []    []    []    []    []    
[]    []    []    [C]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->AA }]
S[{ S-->CA }, { S-->AA }]
C[{ C-->AA }, { C-->b }]

}
word='abaaababab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[B, C, S][S]      [A]      []       []       []       []       []       []       []       
[A, S]   []       [B, C, S][A]      []       []       []       []       []       []       
[B, C, S][S]      [A, S]   [B, C, S][A]      []       []       []       []       []       
[B, C, S][S]      [A, S]   [B, C, S][A]      [C]      []       []       []       []       
[A, S]   []       [B, C, S][A, S]   [B, C, S][S]      [A]      []       []       []       
[A, S]   []       [B, C, S][A, S]   [B, C, S][S]      [A]      [C]      []       []       
[B, C, S][S]      [A, S]   [B, C, S][A, S]   []       [B, C, S][S]      [A]      []       
[B, C, S][S]      [A, S]   [B, C, S][A, S]   []       [B, C, S][S]      [A]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[B, C, S][S]      [S]      []       []       []       []       []       []       []       
[]       []       []       [A, S]   []       []       []       []       []       []       
[]       []       [B, C]   [S]      [B, C, S][]       []       []       []       []       
[B, C, S][]       [A, S]   []       []       []       []       []       []       []       
[B, C, S][S]      [S]      [B, C]   []       []       [B, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SC }, { C-->b }]

}
word='abaaababab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [C]      []       []       []       []       []       []       []       []       
[A]      [A]      [S]      []       []       []       []       []       []       []       
[]       []       [A]      [S]      []       []       []       []       []       []       
[]       []       []       [A]      [S]      []       []       []       []       []       
[A, S, C][A]      [A, S, C][A, S, C][S, C]   [C]      []       []       []       []       
[A]      []       [A]      [A]      [A]      [A]      [S]      []       []       []       
[A, S, C][A]      [A, S, C][A, S, C][A, S, C][A]      [S, C]   [C]      []       []       
[A]      []       [A]      [A]      [A]      []       [A]      [A]      [S]      []       
[A, S, C][A]      [A, S, C][A, S, C][A, S, C][A]      [A, S, C][A]      [S, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [A]      [A]      []       []       []       []       []       []       
[A, S, C][]       [A, S, C][A, S, C][A, S, C][]       []       []       []       []       
[]       []       [A]      [A]      []       []       []       []       []       []       
[A, S, C][]       [A, S, C][A, S, C][A, S, C][]       [A, S, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BA }]
S[{ S-->AA }]
C[{ C-->AB }]

}
word='abaaababab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, C]   [B]      []       []       []       []       []       []       []       []       
[A, C, S][B]      [A]      []       []       []       []       []       []       []       
[A, S, C][B]      [S]      [A]      []       []       []       []       []       []       
[A, S, C][B]      []       [S]      [A]      []       []       []       []       []       
[A, S, C][B]      []       [S]      [A, C]   [B]      []       []       []       []       
[A, S, C][B]      []       [S]      [A, C, S][B]      [A]      []       []       []       
[A, S, C][B]      []       [S]      [A, C, S][B]      [A, C]   [B]      []       []       
[A, S, C][B]      []       [S]      [A, C, S][B]      [A, C, S][B]      [A]      []       
[A, S, C][B]      []       [S]      [A, C, S][B]      [A, C, S][B]      [A, C]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 
[S][] [] [S][S][] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AB }, { B-->BA }, { B-->a }]
S[{ S-->AA }]

}
word='baabbbabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[A, B]   []       [B]      []       []       []       []       []       []       []       
[A, B, S][]       [B]      [A]      []       []       []       []       []       []       
[A, B, S][]       [B]      [S]      [A]      []       []       []       []       []       
[A, B, S][]       [B]      []       [S]      [A]      []       []       []       []       
[A, B, S][]       [B]      [A, B, S][A, B, S][A, B]   [B]      []       []       []       
[A, B, S][]       [B]      [A, B, S][A, B, S][A, B, S][B]      [A]      []       []       
[A, B, S][]       [B]      [A, B, S][A, B, S][A, B, S][B]      [S]      [A]      []       
[A, B, S][]       [B]      [A, B, S][A, B, S][A, B, S][B]      []       [S]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
S[{ S-->b }, { S-->BS }]

}
word='baabbbabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[B][S][S][S][] [] [] [] [] [] 
[S][B][B][B][S][] [] [] [] [] 
[B][S][S][S][B][S][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[S][B][B][B][S][B][S][S][] [] 
[B][S][S][S][B][S][B][B][S][] 
[S][B][B][B][S][B][S][S][B][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [S][] [] [] [] 
[S][B][B][] [S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CC }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CS }, { S-->b }]

}
word='baabbbabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[C]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, S][A, C][A, C][C]   [S]   []    []    []    []    []    
[A, C][A, S][A, S][A, S][C]   [S]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    []    
[A, S][A, C][A, C][A, C][A, S][C]   [S]   [S]   []    []    
[A, C][A, S][A, S][A, S][A, C][A, S][A, C][C]   [S]   []    
[A, S][A, C][A, C][A, C][A, S][A, C][A, S][A, S][C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A, S][A, C][A, C][A, C][A, S][]    []    []    []    []    
[A]   [A]   [A]   [S]   [A]   [S]   []    []    []    []    
[S]   [C]   [C]   [A]   [S]   [A]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->CC }, { B-->AA }]
S[{ S-->CA }, { S-->AA }]
C[{ C-->a }, { C-->AA }]

}
word='baabbbabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [B]      [C]      []       []       []       []       []       []       []       
[B, C, S][]       [S]      [A]      []       []       []       []       []       []       
[A, S]   []       [B]      [B, C, S][A]      []       []       []       []       []       
[B, C, S][]       [S]      [A, S]   [B, C, S][A]      []       []       []       []       
[B, C, S][]       [S]      [A, S]   [B, C, S][A]      [C]      []       []       []       
[A, S]   []       [B]      [B, C, S][A, S]   [B, C, S][S]      [A]      []       []       
[B, C, S][]       [S]      [A, S]   [B, C, S][A, S]   [B]      [B, C, S][A]      []       
[A, S]   []       [B]      [B, C, S][A, S]   [B, C, S][S]      [A, S]   [B, C, S][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       [S]      [S]      []       []       []       []       []       []       
[]       []       [B]      []       [A, S]   []       []       []       []       []       
[]       []       [S]      [A, S]   []       [A, S]   []       []       []       []       
[]       []       [B]      []       [A, S]   [B, C, S][S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SC }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CC }, { S-->b }]

}
word='baabbbabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[A, C][S]   [C]   []    []    []    []    []    []    []    
[B]   [A, C][]    [S]   []    []    []    []    []    []    
[S]   [B]   [S]   [A, C][S]   []    []    []    []    []    
[A, C][S]   [A, C][B]   [A, C][S]   []    []    []    []    
[S]   [B]   [S]   [A, C][S]   [B]   [C]   []    []    []    
[A, C][S]   [A, C][B]   [A, C][]    []    [S]   []    []    
[B]   [A, C][B]   [S]   [B]   [A, C][S]   [A, C][S]   []    
[S]   [B]   [S]   [A, C][S]   [B]   [A, C][B]   [A, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[]    [S]   [A, C][]    []    []    []    []    []    []    
[S]   [B]   []    [A, C][]    []    []    []    []    []    
[]    [S]   [A, C][B]   []    []    []    []    []    []    
[B]   [A, C][B]   [S]   [B]   []    []    []    []    []    
[S]   [B]   [S]   []    [S]   [B]   [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->CB }, { B-->a }]
S[{ S-->CB }, { S-->BB }, { S-->CC }, { S-->BC }]
C[{ C-->BB }, { C-->b }]

}
word='aaaababbaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C, S][B]      []       []       []       []       []       []       []       []       
[B, S]   [A, C, S][B]      []       []       []       []       []       []       []       
[A, C, S][B, S]   [A, C, S][B]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [C]      []       []       []       []       []       
[B, S]   [A, S, C][B, S]   [A, C, S][B, S]   [B]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [C]      []       []       []       
[]       []       []       []       []       []       [S]      [C]      []       []       
[A, C, S][B, S]   [A, C, S][B, S]   [A, S, C][A, C, S][B, S]   [B, S]   [B]      []       
[B, S]   [A, S, C][B, S]   [A, C, S][B, S]   [B, S]   [A, S, C][A, S, C][A, C, S][B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B, S]   [A, S, C][B, S]   []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       [B]      []       []       [B]      [A, C]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->AS }, { B-->AA }]
S[{ S-->SA }, { S-->AA }, { S-->SS }, { S-->b }]

}
word='aaaababbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [A]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [B]      [S]      []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [B]      [S]      [S]      []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [B]      [S]      [S]      [A]      []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [B]      [S]      [S]      [A, B, S][A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B, S][]    []    []    []    []    []    []    
[B]   [B]   [B, S][B]   []    []    []    []    []    []    
[B]   [B]   [B, S][B]   [S]   []    []    []    []    []    
[B]   [B]   [B, S][B]   [S]   [B]   []    []    []    []    
[B]   [B]   [B, S][B]   [S]   [B]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CA }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }, { S-->AA }, { S-->CC }]

}
word='aaaababbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    []    []    
[C, S][C, S][C, S][C, S][S, C][C]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->SA }, { S-->a }]

}
word='aaaababbaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[S][A][S][] [] [] [] [] [] [] 
[A][S][A][S][] [] [] [] [] [] 
[A][S][A][S][A][] [] [] [] [] 
[S][A][S][A][] [S][] [] [] [] 
[S][A][S][A][] [S][A][] [] [] 
[S][A][S][A][] [S][] [A][] [] 
[A][S][A][S][] [A][] [] [S][] 
[S][A][S][A][] [S][] [] [A][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SS }, { C-->b }]

}
word='aaaababbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[A, S][B, C][S]   []    []    []    []    []    []    []    
[B, C][A, S][B, C][S]   []    []    []    []    []    []    
[B, C][A, S][B, C][A, S][C]   []    []    []    []    []    
[A, S][B, C][A, S][B, C][]    [S]   []    []    []    []    
[A, S][B, C][A, S][B, C][]    [A, S][C]   []    []    []    
[A, S][B, C][A, S][B, C][]    [A, S][]    [C]   []    []    
[B, C][A, S][B, C][A, S][]    [B, C][]    []    [S]   []    
[A, S][B, C][A, S][B, C][]    [A, S][]    []    [B, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->BS }]
C[{ C-->SS }]

}
word='aaaabaaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[S]      [A, B, C][S]      []       []       []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      []       []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      [B]      []       []       []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [S]      []       []       []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][A, B, C][S]      []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [S]      [A, B, C][S]      []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [S]      [A, B, C][S]      [B]      []       
[S]      [A, B, C][S]      [A, B, C][S]      [S]      [A, B, C][S]      []       [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[]       [S]      []       [S]      []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[]       [A, B, C][]       [A, B, C][S]      []       []       []       []       []       
[]       [A, B, C][]       [A, B, C][S]      []       [A, B, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
C[{ C-->CA }, { C-->a }, { C-->CC }]
S[{ S-->CC }]

}
word='aaaabaaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C]   [A]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][A]   [C]   []    []    []    []    
[C, S][C, S][C, S][C, S][A]   [C, S][C]   []    []    []    
[C, S][C, S][C, S][C, S][A]   [C, S][C, S][C]   []    []    
[C, S][C, S][C, S][C, S][A]   [C, S][C, S][C]   [A]   []    
[C, S][C, S][C, S][C, S][A]   [C, S][C, S][C]   []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
C[{ C-->CA }, { C-->a }, { C-->AA }]
S[{ S-->CC }]

}
word='aaaabaaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       []       [S]      [C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C]   [A]      []       []       []       []       []       
[S]      [S]      [S]      [S]      []       [C]      []       []       []       []       
[]       []       []       []       []       [S]      [C]      []       []       []       
[]       []       []       []       []       []       [S]      [C]      []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][C]      [A, C, S][A, C, S][A, C]   [A]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, C, S][A, C, S][A, S, C][C]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->AS }]

}
word='aaaabaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [S]      []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A]      [A]      [A]      [A]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }, { B-->SC }]
C[{ C-->a }, { C-->CC }]
S[{ S-->CC }, { S-->SS }, { S-->b }]

}
word='aaaabaaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C, S]   [C]      []       []       []       []       []       []       []       []       
[B, C, S][C, S]   [C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][C, S]   [C]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      []       []       []       []       []       
[B]      [B]      [B]      []       [B]      [C]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [B, S]   [C, S]   [C]      []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [B, S]   [B, C, S][C, S]   [C]      []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [B, S]   [B, S]   [B]      [S]      []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [B, S]   [B, S]   [B]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[B]   [B]   [B, S][B]   []    []    []    []    []    []    
[B]   [B]   [B, S][B]   []    []    []    []    []    []    
[B]   [B]   [B, S][B]   []    [B]   [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->b }]

}
word='babbbbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, B][S]   [S]   []    []    []    []    []    []    []    
[S]   [A, B][A, B][S]   []    []    []    []    []    []    
[A, B][S]   [S]   [A, B][S]   []    []    []    []    []    
[S]   [A, B][A, B][S]   [A, B][S]   []    []    []    []    
[A, B][S]   [S]   [A, B][S]   [A, B][S]   []    []    []    
[A, B][S]   [S]   [A, B][S]   [A, B][S]   [A]   []    []    
[S]   [A, B][A, B][S]   [A, B][S]   [A, B][S]   [S]   []    
[S]   [A, B][A, B][S]   [A, B][S]   [A, B][S]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A, B][S]   []    [A, B][]    []    []    []    []    []    
[S]   [A, B][]    [S]   []    [S]   []    []    []    []    
[]    [A, B][A, B][]    [A, B][]    [A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AB }]

}
word='babbbbbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[B]   [A]   [A]   []    []    []    []    []    []    []    
[A, S][B]   [B]   [A]   []    []    []    []    []    []    
[B]   [A, S][A, S][B]   [A]   []    []    []    []    []    
[A, S][B]   [B]   [A, S][B]   [A]   []    []    []    []    
[B]   [A, S][A, S][B]   [A, S][B]   [A]   []    []    []    
[B]   [A, S][A, S][B]   [A, S][B]   [A, S][B]   []    []    
[A, S][B]   [B]   [A, S][B]   [A, S][B]   [A]   [A]   []    
[A, S][B]   [B]   [A, S][B]   [A, S][B]   [A, S][A, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[]    [S]   [A, S][]    []    []    []    []    []    []    
[B]   [A, S][]    [B]   []    []    []    []    []    []    
[A, S][B]   []    [A, S][]    [A, S][]    []    []    []    
[]    [B]   [B]   []    [B]   []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }]
S[{ S-->SA }, { S-->b }]

}
word='babbbbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, S][A]   [S]   []    []    []    []    []    []    []    
[A, S][A]   [A]   [S]   []    []    []    []    []    []    
[A, S][A]   [A, S][A]   [S]   []    []    []    []    []    
[A, S][A]   [A, S][A, S][A]   [S]   []    []    []    []    
[A, S][A]   [A, S][A, S][A, S][A]   [S]   []    []    []    
[A, S][A]   [A, S][A, S][A, S][A]   [S]   [A]   []    []    
[A, S][A]   [A, S][A, S][A, S][A, S][A, S][A]   [S]   []    
[A, S][A]   [A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [A][] [] [] [] [] 
[A][] [] [] [] [S][] [] [] [] 
[A][] [] [] [] [] [A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->BS }, { B-->SB }]
S[{ S-->a }, { S-->BS }]

}
word='babbbbbaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[A, B]   [B]      [B]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [B]      []       []       []       []       []       []       
[]       []       []       [A]      [B]      []       []       []       []       []       
[]       []       []       []       [A]      [B]      []       []       []       []       
[]       []       []       []       []       [A]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S]      []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->CC }, { C-->b }, { C-->BC }]

}
word='babbbbbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[C]   [C, S][C]   []    []    []    []    []    []    []    
[C]   [C, S][C]   [C]   []    []    []    []    []    []    
[C]   [C, S][C]   [C]   [C]   []    []    []    []    []    
[C]   [C, S][C]   [C]   [C]   [C]   []    []    []    []    
[C]   [C, S][C]   [C]   [C]   [C]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   []    []    
[C]   [C, S][C]   [C]   [C]   [C]   [C]   [C, S][C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[C]   [C, S][C]   [C]   [C]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
S[{ S-->AS }, { S-->a }, { S-->AA }]

}
word='bbbabbaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, S][S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [S]   [A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='bbbabbaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [S]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BB }]
B[{ B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }, { S-->BS }]
C[{ C-->SB }]

}
word='bbbabbaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][S]   []    []    []    []    []    []    []    []    
[S, C][A, B][S]   []    []    []    []    []    []    []    
[S, C][A, B][S, C][B]   []    []    []    []    []    []    
[A, B][S, C][A, B][S]   [S]   []    []    []    []    []    
[S, C][A, B][S, C][A, B][A, B][S]   []    []    []    []    
[S, C][A, B][S, C][A, B][A, B][S, C][B]   []    []    []    
[S, C][A, B][S, C][A, B][A, B][S, C][A]   [B]   []    []    
[A, B][S, C][A, B][S, C][S, C][A, B][S]   [S]   [S]   []    
[C, S][A, B][S, C][A, B][A, B][S, C][A, B][A, B][A, B][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[S, C][]    [S, C][]    []    []    []    []    []    []    
[]    [A, B][]    [B]   []    []    []    []    []    []    
[]    [A, B][]    [B]   [A, B][]    []    []    []    []    
[]    [S, C][]    [C]   [S, C][]    []    []    []    []    
[C, S][]    [S, C][A, B][]    [S, C][A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SA }, { B-->SS }, { B-->AA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->AS }]

}
word='bbbabbaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [S]      []       []       []       []       []       []       []       []       
[B, S, C][A, B]   [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [A]      []       []       []       []       []       []       
[A, B]   [B, S, C][A, B]   [S, C]   [S]      []       []       []       []       []       
[B, S, C][A, B]   [B, S, C][A, B]   [A, B]   [S]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [A]      []       []       []       
[]       []       []       []       []       []       [B]      [A]      []       []       
[A, B]   [B, S, C][A, B]   [B, S, C][B, S, C][A, B]   [S, C]   [S, C]   [S]      []       
[B, S, C][A, B]   [B, S, C][A, B]   [A, B]   [B, S, C][A, B]   [A, B]   [A, B]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [B, S, C][]       []       []       []       []       []       []       []       
[S, C]   []       [S, C]   []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S, C]   []       [S, C]   [A]      []       [S, C]   [A]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->CA }]
S[{ S-->CA }]
C[{ C-->a }, { C-->AA }]

}
word='bbbabbaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[A, B, S][C]      [A]      []       []       []       []       []       []       []       
[A, B, S][C]      [A]      [C]      []       []       []       []       []       []       
[C]      [A, B, S][C]      [B, S]   [A]      []       []       []       []       []       
[A, B, S][C]      [A, B, S][]       [C]      [A]      []       []       []       []       
[A, B, S][C]      [A, B, S][]       [C]      [A]      [C]      []       []       []       
[A, B, S][C]      [A, B, S][]       [C]      [A]      []       [C]      []       []       
[C]      [A, B, S][C]      [B, S]   [A, B, S][C]      []       [B, S]   [A]      []       
[A, B, S][C]      [A, B, S][]       [C]      [A, B, S][]       []       [C]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       [C]      []       []       []       []       []       
[]       [A, B, S][C]      []       [A, B, S][]       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }]

}
word='bbbbbbaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[S][B][S][B][S][B][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[B][S][B][S][B][S][B][B][B][] 
[S][B][S][B][S][B][S][S][S][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [B][] [B][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->SS }]
C[{ C-->a }, { C-->SC }]
S[{ S-->SS }, { S-->CS }, { S-->b }]

}
word='bbbbbbaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
C[{ C-->AS }, { C-->SS }]
S[{ S-->SA }, { S-->SS }, { S-->b }]

}
word='bbbbbbaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S, C][S]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S]   []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S]   []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S]   [A]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][S]   [A]   [A]   []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][C]   [C]   [S]   []    
[C, S][S, C][S, C][S, C][S, C][S, C][C]   [C]   [S, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [S, C][]    []    []    []    
[]    []    []    []    []    [S, C][C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->CC }, { S-->BB }]
C[{ C-->b }, { C-->BC }]

}
word='bbbbbbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[S, C]   [A, B, S][C]      []       []       []       []       []       []       []       
[A, B, S][C, S]   [A, B, S][C]      []       []       []       []       []       []       
[S, C]   [A, B, S][S, C]   [A, B, S][C]      []       []       []       []       []       
[A, B, S][C, S]   [A, B, S][S, C]   [A, B, S][C]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       []       
[]       []       []       []       []       []       [S]      [B]      []       []       
[S, C]   [A, B, S][S, C]   [A, B, S][S, C]   [A, B, S][C]      [C]      [C]      []       
[A, B, S][C, S]   [A, B, S][S, C]   [A, B, S][S, C]   [A, B, S][A, B, S][A, B, S][C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    [C]   []    [C]   [A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->CC }, { C-->b }]
S[{ S-->CC }, { S-->BB }]

}
word='bbbbbbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      [C]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B, S]   [B, C, S][C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->a }, { B-->BB }, { B-->AA }]
C[{ C-->BA }]
S[{ S-->BB }]

}
word='aaabbaaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][A]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][]    [B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][]    [B, S][B, S][B]   []    []    
[A, C][A, C][A, C][A, C][B]   [A, C][A, C][A, C][A]   []    
[B, S][B, S][B, S][B, S][A, C][B, S][B, S][B, S][B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[B, S][B, S][B, S][S]   [A, C][B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AA }]

}
word='aaabbaaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   []    [A]   []    []    []    []    
[]    []    []    []    []    [S]   [A]   []    []    []    
[]    []    []    []    []    []    [S]   [A]   []    []    
[C]   [C]   [C]   [C]   [A]   [C]   [C]   [C]   [C]   []    
[A, S][A, S][A, S][A, S][C]   [A, S][A, S][A, S][A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   [C]   [A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->AS }, { C-->AA }]

}
word='aaabbaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[]       [C]      [A]      []       []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S]      []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A]      [S]      []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A]      [A]      []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [A]      []       []       []       
[]       []       []       []       []       []       [C]      [A]      []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [S]      []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, C, S][A, C]   [A, C]   [A, C]   [A]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->BS }, { B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->b }]
C[{ C-->BB }]

}
word='aaabbaaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, S, C][B]      []       []       []       []       []       []       []       []       
[B]      [A, S, C][B]      []       []       []       []       []       []       []       
[B]      [A, S, C][B]      [S]      []       []       []       []       []       []       
[B]      [A, S, C][B]      []       [S]      []       []       []       []       []       
[A, S, C][B]      [A, S, C][B]      [B]      [B]      []       []       []       []       
[B]      [A, S, C][B]      [A, S, C][A, S, C][A, S, C][B]      []       []       []       
[A, C, S][B]      [A, S, C][B]      [B]      [B]      [A, S, C][B]      []       []       
[A, C, S][B]      [A, S, C][B]      [B]      [B]      [A, S, C][B]      [S]      []       
[A, C, S][B]      [A, S, C][B]      [B]      [B]      [A, S, C][B]      []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, S, C][]       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[B]      []       [B]      [A, S, C][]       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, C, S][]       [A, S, C][B]      [B]      []       []       []       []       []       
[A, C, S][]       [A, S, C][B]      [B]      []       [A, S, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BA }]
B[{ B-->a }]
S[{ S-->BA }, { S-->BB }, { S-->AA }]
C[{ C-->BA }, { C-->AB }]

}
word='aaabbaaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [B]      []       []       []       []       
[]       []       []       []       []       [S]      [B]      []       []       []       
[]       []       []       []       []       []       [S]      [B]      []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A, S]   [A, S, C][A, S, C][A, S, C][A]      []       
[A, S, C][A, S, C][A, S, C][A, S]   [A, S]   [A, S, C][A, S, C][A, S, C][A, S]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [C][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
C[{ C-->AC }, { C-->a }, { C-->AA }]
S[{ S-->CA }, { S-->AA }]

}
word='abbbbaabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       [C, S]   [A]      []       []       []       []       []       []       []       
[S]      [A, S, C][C, S]   [A]      []       []       []       []       []       []       
[S]      [A, C, S][A, C, S][C, S]   [A]      []       []       []       []       []       
[S]      [A, S, C][A, C, S][A, C, S][A, C]   [C]      []       []       []       []       
[S]      [A, S, C][A, C, S][A, C, S][A, C]   []       [C]      []       []       []       
[S]      [A, S, C][A, C, S][A, C, S][C, S]   []       [S]      [A]      []       []       
[S]      [A, S, C][A, C, S][A, C, S][A, C, S][]       []       [C, S]   [A]      []       
[S]      [A, C, S][A, C, S][A, C, S][A, C, S][]       [S]      [A, C, S][C, S]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CS }, { S-->SS }, { S-->b }]

}
word='abbbbaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, C][C]   [C]   [C]   [C]   [C]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SC }, { B-->CC }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CS }, { S-->b }]

}
word='abbbbaabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, B, C][A, C]   [S]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [A, C]   [S]      []       []       []       []       []       []       
[A, B, C][A, B, C][B, S]   [A, C]   [S]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [C]      []       []       []       []       
[]       []       []       []       []       [B]      [C]      []       []       []       
[B, S]   [B, S]   [A, B, C][B, S]   [A, C]   [S]      [S]      [S]      []       []       
[A, B, C][A, B, C][B, S]   [A, B, C][B, S]   [A, B, C][A, B, C][A, C]   [S]      []       
[B, S]   [B, S]   [A, B, C][B, S]   [A, B, C][B, S]   [B, S]   [B, S]   [A, C]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][B]   [S]   [B]   [S]   [A, C][]    []    []    []    
[B]   [S]   [B]   [S]   [B]   [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }]
C[{ C-->AA }]
S[{ S-->AB }]

}
word='abbbbaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   [C]   [A]   []    []    []    []    []    []    []    
[B]   []    [C]   [A]   []    []    []    []    []    []    
[B]   []    []    [C]   [A]   []    []    []    []    []    
[A]   []    []    []    [S]   [B]   []    []    []    []    
[B, S][]    []    []    [C]   [A]   [B]   []    []    []    
[B, S][]    []    []    [C]   [A, C][B]   [A]   []    []    
[B, S][]    []    []    [C]   [A, C][B]   [C]   [A]   []    
[B, S][]    []    []    [C]   [A, C][B]   []    [C]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   [A, C][]    []    []    []    
[]    []    []    []    [C]   [A, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
C[{ C-->AS }]
S[{ S-->AA }, { S-->b }]

}
word='abbbbaabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[S][A][S][] [] [] [] [] [] [] 
[A][C][A][S][] [] [] [] [] [] 
[C][S][C][A][S][] [] [] [] [] 
[A][C][A][S][] [A][] [] [] [] 
[S][A][S][C][A][S][A][] [] [] 
[A][C][A][S][C][A][C][S][] [] 
[C][S][C][A][S][C][S][A][S][] 
[S][A][S][C][A][S][A][C][A][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[A][C][A][] [] [] [] [] [] [] 
[] [A][S][C][] [] [] [] [] [] 
[A][C][] [S][C][] [] [] [] [] 
[] [S][C][] [S][] [] [] [] [] 
[S][] [S][C][] [S][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }]

}
word='bbabbabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[B, C]   [B, C]   [C]      [C]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      [C]      []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [C]      []       []       
[]       []       []       []       []       []       []       [B]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][]       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
C[{ C-->CA }, { C-->b }]
S[{ S-->CC }]

}
word='bbabbabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C]   [A]      []       []       []       []       []       []       []       
[S]      [S]      []       [C]      []       []       []       []       []       []       
[]       []       []       [S]      [C]      []       []       []       []       []       
[A, C, S][A, C, S][]       [A, C, S][A, C]   [A]      []       []       []       []       
[S]      [S]      []       [S]      [S]      []       [C]      []       []       []       
[]       []       []       []       []       []       [S]      [C]      []       []       
[]       []       []       []       []       []       []       [S]      [C]      []       
[A, C, S][A, C, S][]       [A, C, S][A, C, S][]       [A, C, S][A, C, S][A, C]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->BA }, { B-->a }]
S[{ S-->AA }, { S-->AB }]

}
word='bbabbabbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A, S][B]   []    []    []    []    []    []    []    
[S]   [A, S][B]   [A]   []    []    []    []    []    []    
[S]   [A, S][B]   [S]   [A]   []    []    []    []    []    
[S]   [A, S][B]   [S]   [A, S][B]   []    []    []    []    
[S]   [A, S][B]   [S]   [A, S][B]   [A]   []    []    []    
[S]   [A, S][B]   [S]   [A, S][B]   [S]   [A]   []    []    
[S]   [A, S][B]   [S]   [A, S][B]   []    [S]   [A]   []    
[S]   [A, S][B]   [S]   [A, S][B]   []    [S]   [A, S][B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [B][] [] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BA }]
B[{ B-->a }]
C[{ C-->AA }, { C-->AB }]
S[{ S-->AB }]

}
word='bbabbabbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[C, S][C, S][B]   []    []    []    []    []    []    []    
[A, C][A, C][A]   [A]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][B]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   [A]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][C, S][C, S][]    []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->BS }]
S[{ S-->a }, { S-->BS }]

}
word='bbabbabbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[A, B, S][B, S]   [S]      []       []       []       []       []       []       []       
[A]      [A]      []       [B]      []       []       []       []       []       []       
[]       []       []       [A]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][]       [A, B, S][B, S]   [S]      []       []       []       []       
[A]      [A]      []       [A]      [A]      []       [B]      []       []       []       
[]       []       []       []       []       []       [A]      [B]      []       []       
[]       []       []       []       []       []       []       [A]      [B]      []       
[A, B, S][A, B, S][]       [A, B, S][A, B, S][]       [A, B, S][A, B, S][B, S]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->SA }, { B-->AA }]
S[{ S-->AS }, { S-->a }]
C[{ C-->AA }]

}
word='abbabbbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[B, C]   [B, C]   [A]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [A]      []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [A]      []       []       []       []       
[]       []       []       []       []       [B, C]   [A]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[B, C][B, C][B, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->a }]

}
word='abbabbbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][C]   []    []    []    []    []    []    
[B, S][B]   [B]   [B, S][B]   []    []    []    []    []    
[B, S][B]   [B]   [B, S][B]   [B]   []    []    []    []    
[B, S][B]   [B]   [B, S][B]   [B]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][C]   []    []    
[B, S][B]   [B]   [B, S][B]   [B]   [B]   [B, S][B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[B, S][B]   [B]   [B, S][B]   [B]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=40
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
S[{ S-->CA }]
C[{ C-->a }]

}
word='abbabbbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][A][A][] [] [] [] [] [] [] 
[S][A][A][C][] [] [] [] [] [] 
[S][A][A][S][A][] [] [] [] [] 
[S][A][A][S][A][A][] [] [] [] 
[S][A][A][S][A][A][A][] [] [] 
[S][A][A][S][A][A][A][C][] [] 
[S][A][A][S][A][A][A][S][A][] 
[S][A][A][S][A][A][A][S][A][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [A][] [] [] [] [] [] [] 
[S][] [A][S][] [] [] [] [] [] 
[S][] [A][S][] [] [] [] [] [] 
[S][] [A][S][] [] [] [] [] [] 
[S][] [A][S][] [] [A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->SB }]
C[{ C-->SB }]
S[{ S-->a }, { S-->BB }]

}
word='abbabbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, C][B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [S]   []    []    []    []    []    []    
[B, C][B, C][S]   [B, C][B]   []    []    []    []    []    
[S]   [S]   [B, C][S]   [S]   [B]   []    []    []    []    
[B, C][B, C][S]   [B, C][B, C][S]   [B]   []    []    []    
[B, C][B, C][S]   [B, C][B, C][S]   [B]   [S]   []    []    
[S]   [S]   [B, C][S]   [S]   [B, C][S]   [B, C][B]   []    
[S]   [S]   [B, C][S]   [S]   [B, C][S]   [B, C][B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[S]   []    [B, C][]    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[B, C][C]   [S]   [B, C][C]   []    []    []    []    []    
[S]   []    [B, C][S]   []    [B, C][]    []    []    []    
[S]   [S]   [C]   [S]   [S]   [C]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->SA }, { B-->AA }]
S[{ S-->AS }, { S-->a }]

}
word='abbabbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A]   []    []    []    []    
[]    []    []    []    []    [B]   [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->CA }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->AA }]
C[{ C-->a }]

}
word='bbbabaabba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][C]   []    []    []    []    []    []    
[A, S][A, S][A, S][B, S][A]   []    []    []    []    []    
[A, S][A, S][A, S][B, S][A, S][C]   []    []    []    []    
[A, S][A, S][A, S][B, S][A, S][B]   [C]   []    []    []    
[A, S][A, S][A, S][B, S][A, S][]    [B, S][A]   []    []    
[A, S][A, S][A, S][B, S][A, S][]    [B, S][A, S][A]   []    
[A, S][A, S][A, S][B, S][A, S][]    [B, S][A, S][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    [A, S][B, S][]    []    []    []    []    []    
[]    []    [A, S][B, S][]    []    []    []    []    []    
[]    []    [A, S][B, S][]    []    []    []    []    []    
[]    []    [A, S][B, S][]    []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
C[{ C-->a }, { C-->BB }]
S[{ S-->CC }]

}
word='bbbabaabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B]   [C]   [B]   []    []    []    []    []    []    []    
[]    [S]   []    [C]   []    []    []    []    []    []    
[C, S][B]   [C]   [B]   [B]   []    []    []    []    []    
[S]   []    [S]   []    []    [C]   []    []    []    []    
[]    []    []    []    []    [S]   [C]   []    []    []    
[B]   [S, C][B]   [S, C][C]   [B]   [B]   [B]   []    []    
[C, S][B]   [C, S][B]   [B]   [S, C][S, C][C]   [B]   []    
[S]   []    [S]   []    []    [S]   [S]   [S]   []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    [B]   [S, C][]    []    []    []    
[]    []    []    []    []    [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->AA }]
S[{ S-->BB }]

}
word='bbbabaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [A]      []       []       []       []       []       []       []       []       
[A, C]   [B, C]   [A]      []       []       []       []       []       []       []       
[A, C]   [B, S, C][A]      [B]      []       []       []       []       []       []       
[B, C, S][A, C]   [B, C]   [C]      [A]      []       []       []       []       []       
[B, C, S][A, C]   [B, C, S][C]      [A]      [B]      []       []       []       []       
[B, C, S][A, C]   [B, C, S][C]      [A]      [S]      [B]      []       []       []       
[A, C]   [B, S, C][A, C]   [S]      [B, C]   []       [C]      [A]      []       []       
[B, C, S][A, C]   [B, C, S][C]      [A, C]   []       [S]      [B, C]   [A]      []       
[B, C, S][A, C]   [B, C, S][C]      [A, C]   []       [S]      [B, C, S][A]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[B, S]   [C]      [B, C, S][]       []       []       []       []       []       []       
[B, S]   [C]      [B, C, S][C]      []       []       []       []       []       []       
[A, C]   [S]      [A, C]   [S]      []       []       []       []       []       []       
[S]      [A, C]   [B, C, S][C]      []       []       []       []       []       []       
[B, S]   [C]      [B, C, S][C]      []       []       [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
B[{ B-->CC }, { B-->SS }]
S[{ S-->a }, { S-->CC }, { S-->SC }, { S-->SS }]
C[{ C-->b }]

}
word='bbbabaabba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[A, S]   [A, B, S][C]      []       []       []       []       []       []       []       
[A, B, S][B, S]   [A]      [S]      []       []       []       []       []       []       
[A, B, S][B, S]   [A]      [S]      [C]      []       []       []       []       []       
[A, B, S][B, S]   [A]      [B, S]   [A]      [S]      []       []       []       []       
[A, B, S][B, S]   [A]      [B, S]   [A]      [B, S]   [S]      []       []       []       
[A, B, S][B, S]   [A]      [B, S]   [A]      [B, S]   [S]      [C]      []       []       
[A, B, S][B, S]   [A]      [B, S]   [A]      [B, S]   [B, S]   [A, B, S][C]      []       
[A, B, S][B, S]   [A]      [B, S]   [A]      [B, S]   [B, S]   [B, S]   [A]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[A]   [B, S][A]   []    []    []    []    []    []    []    
[A]   [B, S][A]   [B, S][]    []    []    []    []    []    
[A]   [B, S][A]   [B, S][A]   []    []    []    []    []    
[A]   [B, S][A]   [B, S][A]   []    []    []    []    []    
[A]   [B, S][A]   [B, S][A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AA }, { A-->AB }]
B[{ B-->b }]
S[{ S-->BA }, { S-->BB }]

}
word='bbbabaabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[A, S][A, S][B]   []    []    []    []    []    []    []    
[A, S][A]   [S]   [A]   []    []    []    []    []    []    
[A, S][A]   [S]   [A]   [B]   []    []    []    []    []    
[A, S][A]   [S]   [A]   [S]   [A]   []    []    []    []    
[A, S][A]   [S]   [A]   [S]   [A]   [A]   []    []    []    
[A, S][A]   [S]   [A]   [S]   [A]   [A]   [B]   []    []    
[A, S][A]   [S]   [A]   [S]   [A]   [A]   [A, S][B]   []    
[A, S][A]   [S]   [A]   [S]   [A]   [A]   [A]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][A][S][] [] [] [] [] [] [] 
[S][A][S][A][] [] [] [] [] [] 
[S][A][S][A][S][] [] [] [] [] 
[S][A][S][A][S][] [] [] [] [] 
[S][A][S][A][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->a }, { S-->SS }]

}
word='abaabbbbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][B][S][] [] [] [] [] [] [] 
[S][B][S][S][] [] [] [] [] [] 
[S][B][S][S][A][] [] [] [] [] 
[S][B][S][S][] [A][] [] [] [] 
[S][B][S][S][] [] [A][] [] [] 
[S][B][S][S][] [] [] [A][] [] 
[S][B][S][S][] [] [] [] [A][] 
[S][B][S][S][] [] [] [] [B][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->CB }, { S-->BB }, { S-->CC }]
C[{ C-->b }]

}
word='abaabbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[B, S]   [A, B, S][B]      []       []       []       []       []       []       []       
[B, S]   [A, B, S][B, S]   [B]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [C]      []       []       []       []       []       
[]       []       []       []       [A, S]   [C]      []       []       []       []       
[]       []       []       []       []       [A, S]   [C]      []       []       []       
[]       []       []       []       []       []       [A, S]   [C]      []       []       
[]       []       []       []       []       []       []       [A, S]   [C]      []       
[B, S]   [A, B, S][B, S]   [B, S]   [A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->SS }]
S[{ S-->AA }, { S-->b }]
C[{ C-->SS }]

}
word='abaabbbbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[S]      []       [A]      []       []       []       []       []       []       []       
[A]      [B, C]   [S]      [A]      []       []       []       []       []       []       
[A]      [B, C]   [B, S, C][A]      [S]      []       []       []       []       []       
[A]      [B, C]   [B, S, C][A]      [B, C]   [S]      []       []       []       []       
[A]      [B, C]   [B, S, C][A]      []       [B, C]   [S]      []       []       []       
[A]      [B, C]   [B, S, C][A]      []       []       [B, C]   [S]      []       []       
[A]      [B, C]   [B, S, C][A]      []       []       []       [B, C]   [S]      []       
[B, C, S][]       [A]      [S]      []       []       []       []       []       [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[A]      [B, C]   [B, S, C][]       []       []       []       []       []       []       
[A]      [B, C]   [B, S, C][]       []       []       []       []       []       []       
[A]      [B, C]   [B, S, C][]       []       []       []       []       []       []       
[A]      [B, C]   [B, S, C][]       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->a }]
C[{ C-->CB }, { C-->CC }, { C-->b }]
S[{ S-->BB }, { S-->CC }, { S-->BC }]

}
word='abaabbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [A, C]   [B]      []       []       []       []       []       []       []       
[S]      [A, C]   [S]      [B]      []       []       []       []       []       []       
[S]      [C, S]   []       [S]      [C]      []       []       []       []       []       
[S]      [C, S]   []       [S]      [C, S]   [C]      []       []       []       []       
[S]      [C, S]   []       [S]      [C, S]   [C, S]   [C]      []       []       []       
[S]      [C, S]   []       [S]      [C, S]   [C, S]   [C, S]   [C]      []       []       
[S]      [C, S]   []       [S]      [C, S]   [C, S]   [C, S]   [C, S]   [C]      []       
[S]      [A, C, S][]       [S]      [A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AA }, { S-->CC }]

}
word='abaabbbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [A, S][A, S][A, S][C]   []    []    []    []    
[A, S][A, S][C]   [C]   [C]   [A, S][C]   []    []    []    
[C]   [C]   [A, S][A, S][A, S][C]   [A, S][C]   []    []    
[A, S][A, S][C]   [C]   [C]   [A, S][C]   [A, S][C]   []    
[S]   [S]   []    []    []    [S]   []    [S]   []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   [A, S][]    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [C]   [A, S][A, S][]    []    []    []    []    []    
[A, S][]    []    []    [C]   []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->SC }, { S-->b }]

}
word='aabaaaabba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[S, C][S, C][S]   [C]   []    []    []    []    []    []    
[S, C][C, S][S]   [S]   [C]   []    []    []    []    []    
[S, C][C, S][S]   [C, S][S]   [C]   []    []    []    []    
[S, C][C, S][S]   [C, S][C, S][S]   [C]   []    []    []    
[S, C][C, S][S]   [C, S][C, S][S]   [C]   [S]   []    []    
[S, C][C, S][S]   [C, S][C, S][S]   [C]   []    [S]   []    
[S, C][C, S][S]   [C, S][C, S][C, S][C, S][]    [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [S][] [] [] [] [] 
[] [S][] [] [S][] [] [] [] [] 
[] [S][] [] [] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }]
C[{ C-->BS }]

}
word='aabaaaabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[B]   [S]   [B]   []    []    []    []    []    []    []    
[C, S][B]   [C]   [S]   []    []    []    []    []    []    
[B]   [S, C][]    [B]   [S]   []    []    []    []    []    
[C, S][B]   [C]   [S, C][B]   [S]   []    []    []    []    
[B]   [S, C][]    [B]   [S, C][B]   [S]   []    []    []    
[B]   [S, C][]    [B]   [S, C][B]   [S]   [B]   []    []    
[B]   [S, C][]    [B]   [S, C][B]   [S]   []    [B]   []    
[C, S][B]   [C]   [S, C][B]   [S, C][B]   []    [C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][B]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    [B]   [C]   []    []    []    []    []    
[B]   []    []    [B]   [C]   [B]   []    []    []    []    
[C, S][B]   []    [S, C][]    [S, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }]

}
word='aabaaaabba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][] [S][] [] [] [] [] [] 
[B][S][] [B][S][] [] [] [] [] 
[S][B][] [S][B][S][] [] [] [] 
[B][S][] [B][S][B][S][] [] [] 
[B][S][] [B][S][B][S][B][] [] 
[B][S][] [B][S][B][S][] [B][] 
[S][B][] [S][B][S][B][] [] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [B][] [] [] [] [] [] 
[B][] [] [B][] [B][] [] [] [] 
[S][] [] [S][] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->BC }, { B-->a }]
C[{ C-->CB }, { C-->CC }, { C-->b }]
S[{ S-->BB }, { S-->CC }, { S-->BC }]

}
word='aabaaaabba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      [B, S]   [C]      []       []       []       []       []       []       []       
[S]      [B, S]   [A, C]   [B]      []       []       []       []       []       []       
[S]      [B, S]   [A, C]   [S]      [B]      []       []       []       []       []       
[S]      [B, S]   [A, C]   []       [S]      [B]      []       []       []       []       
[S]      [B, S]   [A, C]   []       []       [S]      [B]      []       []       []       
[S]      [B, S]   [A, C, S][]       []       [S]      [B, S]   [C]      []       []       
[S]      [B, S]   [A, C, S][]       []       [S]      [B, S]   [C, S]   [C]      []       
[S]      [B, S]   [A, C, S][]       []       [S]      [B, S]   [A, C, S][A, C]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }]
B[{ B-->SS }, { B-->CS }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SS }, { C-->b }]

}
word='aabaaaabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[S]      [A]      [C]      []       []       []       []       []       []       []       
[A, B, C][]       [B]      [S]      []       []       []       []       []       []       
[A, B]   [A, B, C][S]      [A, B, C][S]      []       []       []       []       []       
[S]      [A, B]   [A, B, C][A, B]   [A, B, C][S]      []       []       []       []       
[A, B, C][S]      [A, B]   [S]      [A, B]   [A, B, C][S]      []       []       []       
[S]      [A, B]   [A, B, C][A, B]   [A, B, C][S]      [A]      [C]      []       []       
[A, B]   [A, B, C][S]      [A, B, C][S]      [A, B]   [A, B, C][S]      [C]      []       
[S]      [A, B]   [A, B, C][A, B]   [A, B, C][S]      [A, B]   [A, B, C][B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A, B]   [A, B, C][]       []       []       []       []       []       []       
[]       [S]      [A]      [S]      []       []       []       []       []       []       
[S]      [B]      [A, B, C][B]      [A, B, C][]       []       []       []       []       
[B]      [A, B, C][]       [A, B, C][S]      [B]      []       []       []       []       
[S]      [A, B]   [A, B, C][A, B]   []       [S]      [A, B]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=40
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->CB }, { B-->a }]
S[{ S-->CB }]
C[{ C-->b }, { C-->BC }]

}
word='bababaaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [B]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [B]      []       []       []       
[]       []       []       []       []       []       [A]      [B]      []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->CS }]
C[{ C-->SC }, { C-->b }]

}
word='bababaaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [S]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [S]      []       []       []       
[]       []       []       []       []       []       [A, B]   [S]      []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }, { B-->BB }]
S[{ S-->SB }, { S-->b }, { S-->BS }]
C[{ C-->BB }]

}
word='bababaaaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      [B, S]   [S]      []       []       []       []       []       []       []       
[S]      [B, S, C][S]      [B]      []       []       []       []       []       []       
[S]      [B, S, C][S]      [B, S]   [S]      []       []       []       []       []       
[S]      [B, S, C][S]      [B, S, C][S]      [B]      []       []       []       []       
[S]      [B, C, S][S]      [B, S, C][S]      [B, C]   [B]      []       []       []       
[S]      [B, C, S][S]      [B, S, C][S]      [B, C]   [B, C]   [B]      []       []       
[S]      [B, C, S][S]      [B, C, S][S]      [B, S, C][B, S, C][B, S]   [S]      []       
[S]      [B, C, S][S]      [B, C, S][S]      [B, S, C][B, S, C][B, S, C][S]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->AS }, { S-->a }]
C[{ C-->SA }]

}
word='bababaaaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [A]      []       []       []       []       []       []       []       
[A, S, C][C]      [A, S]   [S]      []       []       []       []       []       []       
[C]      []       [C]      [C]      [A]      []       []       []       []       []       
[A, S, C][C]      [A, S, C][C]      [A, S]   [S]      []       []       []       []       
[A, S, C][C]      [A, S, C][C]      [A, S]   []       [S]      []       []       []       
[A, S, C][C]      [A, S, C][C]      [A, S]   []       []       [S]      []       []       
[C]      []       [C]      []       [C]      []       []       [C]      [A]      []       
[A, S, C][C]      [A, S, C][C]      [A, S, C][]       []       [C]      [A, S]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S, C][]       [A, S, C][]       []       []       []       []       []       []       
[A, S, C][C]      [A, S, C][C]      []       []       []       []       []       []       
[A, S, C][C]      [A, S, C][C]      []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S, C][]       [A, S, C][]       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
S[{ S-->SA }, { S-->AA }, { S-->b }]

}
word='bababaaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A]   [S]   []    []    []    []    []    []    []    
[S]   [A, S][S]   [A]   []    []    []    []    []    []    
[S]   [A, S][S]   [A]   [S]   []    []    []    []    []    
[S]   [A, S][S]   [A, S][S]   [A]   []    []    []    []    
[S]   [A, S][S]   [A, S][S]   [S]   [A]   []    []    []    
[S]   [A, S][S]   [A, S][S]   [A, S][S]   [A]   []    []    
[S]   [A, S][S]   [A, S][S]   [A, S][S]   [A]   [S]   []    
[S]   [A, S][S]   [A, S][S]   [A, S][A, S][A, S][S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [S][] [] [] [] [] [] 
[] [S][] [S][] [] [] [] [] [] 
[] [S][] [S][] [S][] [] [] [] 
[] [S][] [S][] [] [A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AB }, { B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->BB }]
C[{ C-->BB }]

}
word='aaaaababba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S, C][B]      []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][B]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [A]      []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B]      [B]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [A]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B]      [B]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][]       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->CB }, { B-->a }]
S[{ S-->CB }]
C[{ C-->BB }, { C-->CC }, { C-->b }]

}
word='aaaaababba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C]   [B]      []       []       []       []       []       []       []       []       
[A, B, S][A, C]   [B]      []       []       []       []       []       []       []       
[A, C]   [A, B, S][A, C]   [B]      []       []       []       []       []       []       
[A, B, S][A, C]   [A, B, S][A, C]   [B]      []       []       []       []       []       
[A]      [C]      [A]      [C]      [A]      [C]      []       []       []       []       
[A, C]   [A, B, S][A, C]   [A, B, S][A, C]   [B, S]   [B]      []       []       []       
[C]      [A]      [C]      [A]      [C]      [A]      [A]      [C]      []       []       
[C]      [A]      [C]      [A]      [C]      [A]      [A]      [C]      [C]      []       
[A, B, S][A, C]   [A, B, S][A, C]   [A, B, S][A, C]   [A, C]   [B, S]   [B, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[A, C]   [A, B, S][A, C]   [A, B, S][]       []       []       []       []       []       
[C]      []       [C]      []       [C]      []       []       []       []       []       
[C]      [A]      [C]      [A]      [C]      [A]      []       []       []       []       
[A, B, S][A, C]   [A, B, S][A, C]   [A, B, S][A, C]   [A, C]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=40
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->BS }]

}
word='aaaaababba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[A, S][B]   [S]   []    []    []    []    []    []    []    
[B]   [A, S][B]   [S]   []    []    []    []    []    []    
[A, S][B]   [A, S][B]   [S]   []    []    []    []    []    
[A]   []    [A]   []    [A]   [B]   []    []    []    []    
[B]   [A, S][B]   [A, S][B]   [S]   [S]   []    []    []    
[]    [A]   []    [A]   []    [A]   [A]   [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[A, S][B]   [A, S][B]   [A, S][B]   [B]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    [B]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->SS }]
S[{ S-->SA }, { S-->a }]
C[{ C-->SS }]

}
word='aaaaababba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[S]      [A, B, C][S]      []       []       []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      []       []       []       []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      []       []       []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [A]      []       []       []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][]       [S]      []       []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][]       [S]      [A]      []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][]       [S]      []       [A]      []       
[S]      [A, B, C][S]      [A, B, C][S]      []       [A, B, C][]       []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       [A, B, C][]       []       []       []       []       []       []       []       
[]       [S]      []       [S]      []       []       []       []       []       []       
[A, B, C][]       [A, B, C][]       []       []       []       []       []       []       
[A, B, C][]       [A, B, C][]       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }]
C[{ C-->BA }, { C-->BB }]
S[{ S-->AA }, { S-->AB }]

}
word='aaaaababba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[]       []       [S]      [A]      []       []       []       []       []       []       
[]       []       []       [S]      [A]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C]   [A]      []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C, S][B, S]   [B]      []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [B]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][A, S, C][A, C]   [A, C]   [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][A, S, C][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=36

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=36
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AC }, { S-->CA }, { S-->AA }]
C[{ C-->CA }, { C-->a }]

}
word='ababbbbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C, S]   [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [C]      []       []       []       []       []       []       []       
[A, B, S][S]      [C, S]   [A]      []       []       []       []       []       []       
[A, B, S][S]      [C, S]   [B, S]   [A]      []       []       []       []       []       
[A, B, S][S]      [C, S]   []       [B, S]   [A]      []       []       []       []       
[A, B, S][S]      [C, S]   []       []       [B, S]   [A]      []       []       []       
[A, B, S][S]      [C, S]   []       []       []       [B, S]   [A]      []       []       
[S, C]   [B, S]   [A]      []       []       []       []       [S]      [C]      []       
[A, B, S][S]      [C, S]   []       []       []       []       [B, S]   [A]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[S, C]   [B, S]   []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->b }, { S-->BS }]

}
word='ababbbbbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[B, S][B, S][B, S][B]   [B]   [B]   [B]   [B]   [B]   []    
[B, S][B, S][B, S][S]   [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SA }]
S[{ S-->AS }, { S-->SA }, { S-->b }]

}
word='ababbbbbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->BS }, { B-->BB }]
S[{ S-->SB }, { S-->a }]

}
word='ababbbbbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    []    []    []    []    []    []    
[S]   [A, B][S]   [B]   []    []    []    []    []    []    
[S]   [A, B][S]   [A, B][B]   []    []    []    []    []    
[S]   [A, B][S]   [A, B][A, B][B]   []    []    []    []    
[S]   [A, B][S]   [A, B][A, B][A, B][B]   []    []    []    
[S]   [A, B][S]   [A, B][A, B][A, B][A, B][B]   []    []    
[S]   [A, B][S]   [A, B][A, B][A, B][A, B][B]   [S]   []    
[S]   [A, B][S]   [A, B][A, B][A, B][A, B][B]   []    [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AA }]
S[{ S-->BB }, { S-->AB }]

}
word='ababbbbbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[B]   []    [A]   []    []    []    []    []    []    []    
[B, S][]    [A, S][B]   []    []    []    []    []    []    
[B, S][]    [A, S][S]   [B]   []    []    []    []    []    
[B, S][]    [A, S][]    [S]   [B]   []    []    []    []    
[B, S][]    [A, S][]    []    [S]   [B]   []    []    []    
[B, S][]    [A, S][]    []    []    [S]   [B]   []    []    
[A, S][S]   [B]   []    []    []    []    []    [A]   []    
[B, S][]    [A, S][]    []    []    []    [S]   [B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SA }]
S[{ S-->AA }, { S-->b }]
C[{ C-->AA }]

}
word='bbaaaaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[S, C][B]   [A]   []    []    []    []    []    []    []    
[B]   [A]   [S, C][A]   []    []    []    []    []    []    
[A]   [S, C][B]   [S, C][A]   []    []    []    []    []    
[S, C][B]   [A]   [B]   [S, C][A]   []    []    []    []    
[B]   [A]   [S, C][A]   [B]   [S, C][A]   []    []    []    
[S, C][B]   [A]   [B]   [S, C][A]   []    [S]   []    []    
[B]   [A]   [S, C][A]   [B]   [S, C][]    [B]   [A]   []    
[S, C][B]   [A]   [B]   [S, C][A]   []    []    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[S, C][]    [A]   []    []    []    []    []    []    []    
[]    [A]   []    [A]   []    []    []    []    []    []    
[S, C][B]   [A]   [B]   [S, C][]    []    []    []    []    
[]    [A]   []    [A]   [B]   []    []    []    []    []    
[S, C][B]   [A]   [B]   [S, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->AS }, { S-->AA }, { S-->b }]

}
word='bbaaaaabab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [A]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [B, S]   [A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      [A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }]
S[{ S-->BB }, { S-->CC }]

}
word='bbaaaaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      [B]      [C]      []       []       []       []       []       []       []       
[S]      [B]      [A, S]   [C]      []       []       []       []       []       []       
[S]      [B]      []       [A, S]   [C]      []       []       []       []       []       
[S]      [B]      []       []       [A, S]   [C]      []       []       []       []       
[S]      [B]      []       []       []       [A, S]   [C]      []       []       []       
[S]      [B, S]   []       []       []       [A, S]   [C]      [B]      []       []       
[S]      [B, S]   []       []       []       [A, S]   [A, C, S][B]      [C]      []       
[S]      [B, S]   []       []       []       [A, S]   [A, C, S][B, S]   [C]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    [A, S][]    []    []    []    
[S]   []    []    []    []    [A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->SS }, { S-->AA }, { S-->b }]

}
word='bbaaaaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][A]   []    []    []    []    []    []    
[A]   [A]   [A]   [B, S][A]   []    []    []    []    []    
[B, S][B, S][B, S][A]   [B, S][A]   []    []    []    []    
[A]   [A]   [A]   [B, S][A]   [B, S][A]   []    []    []    
[]    []    []    [S]   []    [S]   []    [S]   []    []    
[B, S][B, S][B, S][A]   [B, S][A]   [B, S][A]   [A]   []    
[S]   [S]   [S]   []    [S]   []    [S]   []    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A]   []    [A]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->a }, { S-->AA }]

}
word='bbaaaaabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][A][S][] [] [] [] [] [] [] 
[S][A][] [S][] [] [] [] [] [] 
[S][A][] [] [S][] [] [] [] [] 
[S][A][] [] [] [S][] [] [] [] 
[S][A][] [] [] [] [S][] [] [] 
[A][S][] [] [] [] [] [A][] [] 
[A][S][] [] [] [] [] [A][S][] 
[S][A][] [] [] [] [] [S][] [A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
S[{ S-->a }, { S-->SS }, { S-->SC }]
C[{ C-->b }]

}
word='aaaababbbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][C][] [] [] [] [] 
[S][S][S][S][A][S][] [] [] [] 
[S][S][S][S][A][S][C][] [] [] 
[S][S][S][S][A][S][] [C][] [] 
[S][S][S][S][A][S][] [] [C][] 
[S][S][S][S][A][S][] [] [] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][A][] [] [] [] [] 
[] [] [] [S][A][] [] [] [] [] 
[] [] [] [S][A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->AA }]
C[{ C-->BA }]
S[{ S-->AB }]

}
word='aaaababbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[S, C][B]   [A]   []    []    []    []    []    []    []    
[A]   [C, S][B]   [A]   []    []    []    []    []    []    
[S, C][B]   [A]   [S]   [B]   []    []    []    []    []    
[A]   [C, S][B]   []    [C]   [A]   []    []    []    []    
[S, C][B]   [A]   []    []    [S]   [B]   []    []    []    
[B]   [A]   [S, C][B]   [A]   [B]   [A]   [B]   []    []    
[A]   [C, S][B]   [A]   [C, S][A]   [C, S][A]   [B]   []    
[S, C][B]   [A]   [S, C][B]   [S, C][B]   [C, S][A]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[A]   [C, S][]    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B]   [A]   [C]   []    []    []    []    []    []    []    
[A]   [C]   [B]   [A]   [C, S][A]   []    []    []    []    
[C]   [B]   [A]   [C]   [B]   [C]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->BB }, { S-->b }]

}
word='aaaababbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B]   []    []    []    []    []    []    []    
[B, S][B]   [S]   [B]   []    []    []    []    []    []    
[B]   [S]   [B]   []    [S]   []    []    []    []    []    
[B, S][B, S][B, S][S]   [B]   [B]   []    []    []    []    
[B, S][B, S][B, S][B]   []    []    [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [S]   [B, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->b }, { S-->BS }]

}
word='aaaababbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [B]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [S]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][B]   [B]   [S]   []    []    
[B]   [B]   [B]   [B]   [B]   [A, S][A, S][B]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][B]   [B]   [A, S][B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, S][]    []    []    []    []    
[B]   [B]   [B]   [B]   []    [A]   []    []    []    []    
[A]   [A]   [A]   [A]   [A, S][B]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->AA }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->CA }, { C-->CC }, { C-->b }]

}
word='aaaababbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [C]      [A]      []       []       []       []       
[S]      [S]      [S]      [S]      [C]      [S]      [C]      []       []       []       
[S]      [S]      [S]      [S]      [C]      [S]      [C]      [C]      []       []       
[S]      [S]      [S]      [S]      [C]      [S]      [C]      [C]      [C]      []       
[S]      [S]      [S]      [S]      [C]      [S]      [C]      [C]      [C]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][C][] [] [] [] [] 
[S][S][S][S][C][S][] [] [] [] 
[S][S][S][S][C][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AB }, { B-->BB }]
S[{ S-->BA }]
C[{ C-->BB }]

}
word='bbbabbbbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, C][B]   []    []    []    []    []    []    []    []    
[B, C][B, C][B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[B, C][B, C][B, C][B]   [B]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[B, C][B, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->BB }]
S[{ S-->a }, { S-->BB }, { S-->BS }]

}
word='bbbabbbbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AC }]
C[{ C-->CA }, { C-->b }]
S[{ S-->CC }]

}
word='bbbabbbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[B, C][A, S][C]   []    []    []    []    []    []    []    
[B, C][A, S][C]   [A]   []    []    []    []    []    []    
[A, S][B, C][A, S][B]   [C]   []    []    []    []    []    
[B, C][A, S][B, C][]    [A, S][C]   []    []    []    []    
[A, S][B, C][A, S][B]   [B, C][A, S][C]   []    []    []    
[B, C][A, S][B, C][]    [A, S][B, C][A, S][C]   []    []    
[A, S][B, C][A, S][B]   [B, C][A, S][B, C][A, S][C]   []    
[A, S][B, C][A, S][B]   [B, C][A, S][B, C][A, S][C]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [B, C][A, S][]    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [B, C][A, S][]    [B, C][]    []    []    []    []    
[A, S][B]   [A, S][B]   [B]   [A, S][B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->BS }]
S[{ S-->a }, { S-->BB }]
C[{ C-->BB }]

}
word='bbbabbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, S, C][B]      []       []       []       []       []       []       []       []       
[B]      [A, S, C][B]      []       []       []       []       []       []       []       
[B]      [A, S, C][B]      [S]      []       []       []       []       []       []       
[A, S, C][B]      [A, S, C][]       [B]      []       []       []       []       []       
[B]      [A, S, C][B]      []       [A, S, C][B]      []       []       []       []       
[A, S, C][B]      [A, S, C][]       [B]      [A, S, C][B]      []       []       []       
[B]      [A, S, C][B]      []       [A, S, C][B]      [A, S, C][B]      []       []       
[A, S, C][B]      [A, S, C][]       [B]      [A, S, C][B]      [A, S, C][B]      []       
[A, S, C][B]      [A, S, C][]       [B]      [A, S, C][B]      [A, S, C][B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       [B]      []       []       []       []       []       
[A, S, C][]       []       []       []       [A, S, C][]       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }, { S-->CC }]

}
word='bbbabbbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[]       [B, S]   [C]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, S, C][C]      [C]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [C]      []       []       []       []       
[]       []       []       []       []       [B, S]   [C]      []       []       []       
[]       []       []       []       []       []       [B, S]   [C]      []       []       
[]       []       []       []       []       []       []       [B, S]   [C]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
S[{ S-->a }, { S-->SC }]
C[{ C-->CS }, { C-->b }]

}
word='abbbbbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [B]   [C]   []    []    []    []    []    []    []    
[S]   []    [B]   [C]   []    []    []    []    []    []    
[S]   []    []    [B]   [C]   []    []    []    []    []    
[S]   []    []    []    [B]   [C]   []    []    []    []    
[S]   []    []    []    []    [B]   [C]   []    []    []    
[S]   []    []    []    []    [B]   [C]   [S]   []    []    
[S]   []    []    []    []    [B]   [B, C][S]   [C]   []    
[S]   []    []    []    []    [B]   [B, C][S]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
S[{ S-->a }, { S-->CC }, { S-->CS }]
C[{ C-->SC }, { C-->b }]

}
word='abbbbbbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [C]      []       []       []       []       []       []       []       
[C, S]   [C, S]   [B, S]   [C]      []       []       []       []       []       []       
[B, S, C][B, S, C][S, C]   [B, S]   [C]      []       []       []       []       []       
[B, C, S][B, C, S][B, S, C][S, C]   [B, S]   [C]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][S, C]   [B, S]   [C]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][C]      [C]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AA }]
S[{ S-->CA }]
C[{ C-->a }, { C-->AA }]

}
word='abbbbbbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [B, C][A]   []    []    []    []    []    []    []    
[S]   [A, S][B, C][A]   []    []    []    []    []    []    
[]    [B, C][A, S][B, C][A]   []    []    []    []    []    
[S]   [A, S][B, C][A, S][B, C][A]   []    []    []    []    
[]    [B, C][A, S][B, C][A, S][B, C][A]   []    []    []    
[]    [B, C][A, S][B, C][A, S][B, C][A]   [C]   []    []    
[S]   [A, S][B, C][A, S][B, C][A, S][B, C][S]   [A]   []    
[S]   [A, S][B, C][A, S][B, C][A, S][B, C][S]   [A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    [B, C][S]   [B, C][S]   []    []    []    []    []    
[]    [A, S][]    [A, S][]    [A, S][]    []    []    []    
[S]   [S]   [B, C][S]   [B, C][S]   [B, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->a }, { B-->CC }, { B-->BB }]
C[{ C-->b }]
S[{ S-->BC }]

}
word='bbaaabbbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[B]   [A]   [B]   []    []    []    []    []    []    []    
[B]   [A]   [B]   [B]   []    []    []    []    []    []    
[B]   [A]   [B]   [B]   [B]   []    []    []    []    []    
[S]   []    [S]   [S]   [S]   [C]   []    []    []    []    
[B]   [A]   [B]   [B]   [B]   [B]   [C]   []    []    []    
[S]   []    [S]   [S]   [S]   [A, S][B]   [C]   []    []    
[B]   [A]   [B]   [B]   [B]   [B]   [A, S][B]   [C]   []    
[S]   []    [S]   [S]   [S]   [A, S][B]   [A, S][B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[B]   []    [B]   [B]   []    []    []    []    []    []    
[]    []    [S]   [S]   [S]   []    []    []    []    []    
[B]   []    [B]   [B]   [B]   [B]   []    []    []    []    
[]    []    [S]   [S]   [S]   [A, S][B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }, { B-->BB }]
S[{ S-->SB }, { S-->b }]
C[{ C-->SB }, { C-->BB }]

}
word='bbaaabbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[B, C][S, C][B]   []    []    []    []    []    []    []    
[B, C][S, C][B, C][B]   []    []    []    []    []    []    
[B, C][S, C][B, C][B, C][B]   []    []    []    []    []    
[S, C][B]   []    []    []    [S]   []    []    []    []    
[B, C][S, C][B, C][B, C][B, C][B]   [S]   []    []    []    
[S, C][B, C][]    []    []    [S, C][B]   [S]   []    []    
[B, C][S, C][B, C][B, C][B, C][B, C][S, C][B]   [S]   []    
[S, C][B, C][]    []    []    [S, C][B, C][S, C][B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    [C]   []    []    []    []    
[S]   []    []    []    []    [S]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AA }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->b }]

}
word='bbaaabbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][S]   []    []    []    []    []    []    []    []    
[A]   []    [A]   []    []    []    []    []    []    []    
[A]   []    [A]   [A]   []    []    []    []    []    []    
[A]   []    [A]   [A]   [A]   []    []    []    []    []    
[S]   [A, B][S]   [S]   [S]   [S]   []    []    []    []    
[A, B][S]   [A, B][A, B][A, B][A, B][S]   []    []    []    
[S]   [A, B][S]   [S]   [S]   [S]   [A, B][S]   []    []    
[A, B][S]   [A, B][A, B][A, B][A, B][S]   [A, B][S]   []    
[S]   [A, B][S]   [S]   [S]   [S]   [A, B][S]   [A, B][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   [A, B][A, B][]    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   [A, B][A, B][A, B][]    []    []    []    []    
[S]   []    []    []    []    [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BB }]
C[{ C-->BB }]
S[{ S-->AB }]

}
word='bbaaabbbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, C][B]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][B, C][B]   []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][B, C][B, C][B]   []    
[S]   [S]   [S]   [S]   [S]   [B, C][B, C][B, C][B, C][B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AA }, { A-->AC }]
S[{ S-->CA }]
C[{ C-->CC }, { C-->b }]

}
word='bbaaabbbbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C]   [C]      []       []       []       []       []       []       []       []       
[A, S]   [S]      [A]      []       []       []       []       []       []       []       
[A, S]   [S]      [A]      [A]      []       []       []       []       []       []       
[A, S]   [S]      [A]      [A]      [A]      []       []       []       []       []       
[A, S]   [S]      [A]      [A]      [A]      [C]      []       []       []       []       
[A, S]   [S]      [A]      [A]      [A]      [A, C]   [C]      []       []       []       
[A, S]   [S]      [A]      [A]      [A]      [A, C, S][A, C]   [C]      []       []       
[A, S]   [S]      [A]      [A]      [A]      [A, C, S][A, C, S][A, C]   [C]      []       
[A, S]   [S]      [A]      [A]      [A]      [A, C, S][A, C, S][A, C, S][A, C]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }, { A-->CA }]
S[{ S-->AC }]
C[{ C-->a }]

}
word='abbbababaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][C]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][C]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BA }]
C[{ C-->BA }, { C-->BB }]
S[{ S-->AB }]

}
word='abbbababaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[A, S][C]   [B]   []    []    []    []    []    []    []    
[A, S][]    [C]   [B]   []    []    []    []    []    []    
[A, S][]    [C]   [B, C][A]   []    []    []    []    []    
[A, S][]    [C]   [B, C][A, S][B]   []    []    []    []    
[A, S][]    [C]   [B, C][A, S][B, C][A]   []    []    []    
[A, S][]    [C]   [B, C][A, S][B, C][A, S][B]   []    []    
[A, S][]    [C]   [B, C][A, S][B, C][A, S][B, C][A]   []    
[A, S][]    [C]   [B, C][A, S][B, C][A, S][B, C][]    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
S[{ S-->a }, { S-->CS }]
C[{ C-->SS }, { C-->b }]

}
word='abbbababaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[C]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[]    [B]   [B]   [B]   [B]   [C]   []    []    []    []    
[B, S][C]   [C]   [C]   [C]   [S]   [S]   []    []    []    
[B]   []    []    []    []    [B]   [B]   [C]   []    []    
[C]   [B, S][B, S][B, S][B, S][C]   [C]   [S]   [S]   []    
[B, S][C]   [C]   [C]   [C]   [B, S][B, S][C]   [C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[]    [C]   [C]   [C]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    [C]   []    []    []    []    
[B, S][C]   [C]   [C]   []    [B]   [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->BA }, { B-->a }]
S[{ S-->BA }]
C[{ C-->AA }]

}
word='abbbababaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[B, S][C]   [A]   []    []    []    []    []    []    []    
[B, S][]    [C]   [A]   []    []    []    []    []    []    
[B, S][]    [C]   [A]   [B]   []    []    []    []    []    
[B, S][]    [C]   [A, C][B, S][A]   []    []    []    []    
[B, S][]    [C]   [A, C][B, S][A]   [B]   []    []    []    
[B, S][]    [C]   [A, C][B, S][A, C][B, S][A]   []    []    
[B, S][]    [C]   [A, C][B, S][A, C][B, S][A]   [B]   []    
[B, S][]    [C]   [A, C][B, S][A, C][B, S][A]   []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [] [C][C][] [C][] [] [] [] 
[] [] [C][C][] [C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
S[{ S-->CA }]
C[{ C-->a }, { C-->AA }]

}
word='abbbababaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[S]   [A, S][C]   [A]   []    []    []    []    []    []    
[S]   [A, S][C]   [A]   [C]   []    []    []    []    []    
[]    [C]   [A, S][C]   [S]   [A]   []    []    []    []    
[]    [C]   [A, S][C]   [S]   [A]   [C]   []    []    []    
[S]   [A, S][C]   [A, S][]    [C]   [S]   [A]   []    []    
[S]   [A, S][C]   [A, S][]    [C]   [S]   [A]   [C]   []    
[S]   [A, S][C]   [A, S][]    [C]   [S]   [A]   []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    [C]   [S]   [C]   []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    [C]   []    []    []    []    
[S]   [S]   [C]   []    []    [C]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->CC }]

}
word='aabaaaabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[C, S][C, S][C]   [C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   [C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='aabaaaabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[A, S][C]   [S]   []    []    []    []    []    []    []    
[A, C][A, S][A]   [C]   []    []    []    []    []    []    
[A, S][A, C][]    [A, S][C]   []    []    []    []    []    
[A, C][A, S][A]   [A, C][A, S][C]   []    []    []    []    
[A, S][A, C][]    [A, S][A, C][A, S][C]   []    []    []    
[A, S][A, C][]    [A, S][A, C][A, S][C]   [S]   []    []    
[A, C][A, S][A]   [A, C][A, S][A, C][A, S][A]   [C]   []    
[A, S][A, C][]    [A, S][A, C][A, S][A, C][]    [A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    [S]   [A]   []    []    []    []    []    
[A, C][A, S][]    [A, C][]    [A, C][]    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }]
C[{ C-->SS }, { C-->SC }, { C-->b }]

}
word='aabaaaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[S, C][S, C][S]   [S]   []    []    []    []    []    []    
[S, C][S, C][C]   [C]   [S]   []    []    []    []    []    
[S, C][S, C][S, C][C, S][C]   [S]   []    []    []    []    
[S, C][S, C][S, C][C, S][C, S][C]   [S]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[S, C][S, C][S, C][C, S][C, S][C, S][C, S][S]   [S]   []    
[S, C][S, C][S, C][C, S][C, S][C, S][C, S][C]   [C]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AA }]
S[{ S-->AA }]

}
word='aabaaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[B, S][A]   [B]   []    []    []    []    []    []    []    
[A]   [B, S][]    [A]   []    []    []    []    []    []    
[B, S][A]   []    [B, S][A]   []    []    []    []    []    
[A]   [B, S][]    [A]   [B, S][A]   []    []    []    []    
[B, S][A]   []    [B, S][A]   [B, S][A]   []    []    []    
[B, S][A]   []    [B, S][A]   [B, S][A]   [B]   []    []    
[A]   [B, S][]    [A]   [B, S][A]   [B, S][]    [A]   []    
[B, S][A]   []    [B, S][A]   [B, S][A]   []    [B, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    [B, S][]    []    []    []    []    []    
[A]   []    []    [A]   []    [A]   []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
C[{ C-->CB }, { C-->b }]
S[{ S-->BB }]

}
word='aabaaaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [C]   []    []    []    []    []    []    []    
[S]   [B, S][C]   [B]   []    []    []    []    []    []    
[S]   [B, S][C]   [S]   [B]   []    []    []    []    []    
[S]   [B, S][C]   []    [S]   [B]   []    []    []    []    
[S]   [B, S][C]   []    []    [S]   [B]   []    []    []    
[S]   [B, S][C]   []    []    [S]   [B]   [C]   []    []    
[S]   [B, S][C]   []    []    [S]   [B, S][C]   [B]   []    
[S]   [B, S][C]   []    []    [S]   [B, S][C]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [S][] [] [] [] 
[S][S][] [] [] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->BA }]
S[{ S-->BB }]

}
word='bbbbabbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[B]   [A, S][B]   []    []    []    []    []    []    []    
[A, S][B]   [A, S][B]   []    []    []    []    []    []    
[A, S][B]   [A, S][B]   [A]   []    []    []    []    []    
[B]   [A, S][B]   [A, S][]    [B]   []    []    []    []    
[A, S][B]   [A, S][B]   []    [A, S][B]   []    []    []    
[A, S][B]   [A, S][B]   []    [A, S][B]   [A]   []    []    
[A, S][B]   [A, S][B]   []    [A, S][B]   []    [A]   []    
[A, S][B]   [A, S][B]   []    [A, S][B]   []    []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B]   []    [B]   []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    [A, S][]    []    []    []    
[A, S][]    [A, S][]    []    [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CC }]
C[{ C-->a }, { C-->BB }]
S[{ S-->BB }, { S-->BC }]

}
word='bbbbabbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C, S][B]   []    []    []    []    []    []    []    []    
[S]   [C, S][B]   []    []    []    []    []    []    []    
[B]   [S]   [C, S][B]   []    []    []    []    []    []    
[S]   [C, S][B]   [S]   [C]   []    []    []    []    []    
[B]   [S]   [C, S][]    []    [B]   []    []    []    []    
[C, S][B]   [S]   [C, S][B]   [C, S][B]   []    []    []    
[B]   [S]   [C, S][B]   [S]   [B]   [S]   [C]   []    []    
[S]   [C, S][B]   [S]   [C, S][S]   [C, S][B]   [C]   []    
[C, S][B]   [S]   [C, S][B]   [C, S][B]   [S]   [B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    [B]   [S]   []    []    []    []    []    []    []    
[B]   []    [C, S][B]   []    []    []    []    []    []    
[]    [C, S][B]   []    [C, S][]    []    []    []    []    
[C, S][B]   []    [C, S][]    [C, S][B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->a }, { S-->AA }]
C[{ C-->AA }]

}
word='bbbbabbaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[A]   [S, C][A]   []    []    []    []    []    []    []    
[S, C][A]   [S, C][A]   []    []    []    []    []    []    
[S, C][A]   [S, C][A]   [S]   []    []    []    []    []    
[A]   [S, C][A]   [S, C][]    [A]   []    []    []    []    
[S, C][A]   [S, C][A]   []    [S, C][A]   []    []    []    
[S, C][A]   [S, C][A]   []    [S, C][A]   [S]   []    []    
[S, C][A]   [S, C][A]   []    [S, C][A]   []    [S]   []    
[S, C][A]   [S, C][A]   []    [S, C][A]   []    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[A]   []    [A]   []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S, C][]    [S, C][]    []    []    []    []    []    []    
[S, C][]    [S, C][]    []    [S, C][]    []    []    []    
[S, C][]    [S, C][]    []    [S, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->SS }]
S[{ S-->SA }, { S-->SS }, { S-->b }]

}
word='bbbbabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][A]   [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][A]   [B, S][S]   []    []    []    
[B, S][B, S][B, S][B, S][A]   [B, S][S]   [A]   []    []    
[B, S][B, S][B, S][B, S][A]   [B, S][S]   []    [A]   []    
[B, S][B, S][B, S][B, S][A]   [B, S][S]   []    []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='bbbbabbaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[S][C][S][C][] [] [] [] [] [] 
[S][C][S][C][S][] [] [] [] [] 
[C][S][C][S][] [C][] [] [] [] 
[S][C][S][C][] [S][C][] [] [] 
[S][C][S][C][] [S][C][S][] [] 
[S][C][S][C][] [S][C][] [S][] 
[S][C][S][C][] [S][C][] [] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][] [] [S][] [] [] [] 
[S][] [S][] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->SS }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->a }, { S-->AA }]

}
word='abaabbbbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[C]   [C]   [S]   []    []    []    []    []    []    []    
[]    []    [B]   [S]   []    []    []    []    []    []    
[B, S][S]   [A, C][A, C][A]   []    []    []    []    []    
[A, C][A, C][B, S][B, S][S]   [A]   []    []    []    []    
[B, S][B, S][A, C][A, C][A, C][S]   [A]   []    []    []    
[A, C][A, C][B, S][B, S][B, S][A, C][S]   [A]   []    []    
[C]   [C]   [B]   [B]   [B]   [C]   [B]   [C]   [S]   []    
[B, S][B, S][A, C][A, C][A, C][B, S][A, C][S]   [A, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, C][B, S][]    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[]    [A, C][B, S][B, S][B]   []    []    []    []    []    
[C]   [C]   [B]   [B]   [B]   [C]   []    []    []    []    
[B, S][B, S][A, C][A, C][A, C][B, S][A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='abaabbbbab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[] [C][S][S][] [] [] [] [] [] 
[S][S][] [] [C][] [] [] [] [] 
[] [C][S][S][S][C][] [] [] [] 
[S][S][] [] [C][S][C][] [] [] 
[] [C][S][S][S][C][S][C][] [] 
[] [C][S][S][S][C][S][C][S][] 
[S][S][] [] [C][S][C][S][] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [C][] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }]

}
word='abaabbbbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[S]   [S]   [A, B][A, B][B]   []    []    []    []    []    
[A, B][A, B][S]   [S]   [S]   [B]   []    []    []    []    
[S]   [S]   [A, B][A, B][A, B][S]   [B]   []    []    []    
[A, B][A, B][S]   [S]   [S]   [A, B][S]   [B]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[S]   [S]   [A, B][A, B][A, B][S]   [A, B][S]   [A, B][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][S]   []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, B][S]   [S]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->CA }, { C-->a }]
S[{ S-->AC }, { S-->CC }]

}
word='abaabbbbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[A, S][C, S][C]   []    []    []    []    []    []    []    
[C, S][A, S][A, S][C]   []    []    []    []    []    []    
[C, S][A, S][A, S][C]   [A]   []    []    []    []    []    
[C, S][A, S][A, S][C]   []    [A]   []    []    []    []    
[C, S][A, S][A, S][C]   []    []    [A]   []    []    []    
[C, S][A, S][A, S][C]   []    []    []    [A]   []    []    
[A, S][C, S][C, S][A, S][C, S][C, S][C, S][C, S][C]   []    
[A, S][C, S][C, S][A, S][C, S][C, S][C, S][C, S][C]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][A]   []    []    []    []    []    []    []    
[S]   [A, S][A]   []    []    []    []    []    []    []    
[S]   [A, S][A]   []    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[A]   [C]   [S]   [A]   [C]   [C]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BB }]
S[{ S-->BA }, { S-->AB }]

}
word='abaabbbbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A]   [A, S][A]   []    []    []    []    []    []    []    
[A]   [A, S][A]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [B]   [B]   [B]   []    []    []    
[S]   [S]   [S]   [S]   [B]   [B]   [B]   [B]   []    []    
[A]   [A, S][A]   [A]   [A, S][A, S][A, S][A, S][A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A]   [A, S][A]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->SA }, { S-->a }]
C[{ C-->SS }]

}
word='abaabbaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A, C][]    [S]   []    []    []    []    []    []    []    
[S]   []    [A, C][S]   []    []    []    []    []    []    
[S]   []    [A, C][S]   [A]   []    []    []    []    []    
[S]   []    [A, C][S]   []    [A]   []    []    []    []    
[A, C][]    [S]   [A, C][]    []    [S]   []    []    []    
[S]   []    [A, C][S]   []    []    [A, C][S]   []    []    
[S]   []    [A, C][S]   []    []    [A, C][S]   [A]   []    
[S]   []    [A, C][S]   []    []    [A, C][S]   []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }]

}
word='abaabbaabb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][] [S][] [] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 
[S][] [B][S][B][] [] [] [] [] 
[S][] [B][S][] [B][] [] [] [] 
[B][] [S][B][] [] [S][] [] [] 
[S][] [B][S][] [] [B][S][] [] 
[S][] [B][S][] [] [B][S][B][] 
[S][] [B][S][] [] [B][S][] [B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CS }, { S-->b }]

}
word='abaabbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C, S]   [S]      []       []       []       []       []       []       []       []       
[B]      []       [C]      []       []       []       []       []       []       []       
[]       []       [B]      [C]      []       []       []       []       []       []       
[B, C, S][]       [B, C, S][C, S]   [S]      []       []       []       []       []       
[B, C, S][]       [B, C, S][C, S]   []       [S]      []       []       []       []       
[B]      []       [B]      [B]      []       []       [C]      []       []       []       
[]       []       []       []       []       []       [B]      [C]      []       []       
[B, C, S][]       [B, C, S][B, C, S][]       []       [B, C, S][C, S]   [S]      []       
[B, C, S][]       [B, C, S][B, C, S][]       []       [B, C, S][C, S]   []       [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->BS }, { B-->a }]
S[{ S-->b }, { S-->BS }]

}
word='abaabbaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[A, B, S][A]      [B, S]   [B, S]   [S]      []       []       []       []       []       
[A, B, S][A]      [B, S]   [B, S]   []       [S]      []       []       []       []       
[A]      []       [A]      [A]      []       [A]      [B]      []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[A, B, S][A]      [A, B, S][A, B, S][]       [A]      [B, S]   [B, S]   [S]      []       
[A, B, S][A]      [A, B, S][A, B, S][]       [A]      [B, S]   [B, S]   []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       [A]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
S[{ S-->a }, { S-->SC }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='abaabbaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[B, S]   [C]      [S]      []       []       []       []       []       []       []       
[B, S]   [C]      [B]      [S]      []       []       []       []       []       []       
[B, S]   [C, S]   [B]      [S]      [C]      []       []       []       []       []       
[B, S]   [C, S]   [B]      [B, S]   [S]      [C]      []       []       []       []       
[B, S]   [B, C, S][B]      [B, S]   [B, S]   [C]      [S]      []       []       []       
[B, S]   [B, C, S][B]      [B, S]   [B, S]   [C]      [B]      [S]      []       []       
[B, S]   [B, C, S][B]      [B, S]   [B, S, C][C, S]   [B]      [S]      [C]      []       
[B, S]   [B, C, S][B]      [B, S]   [B, S, C][C, S]   [B]      [B, S]   [S]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       [C, S]   []       []       []       []       []       []       []       []       
[]       [C, S]   [B]      []       []       []       []       []       []       []       
[]       [B, C, S][B]      [S]      []       []       []       []       []       []       
[]       [B, C, S][B]      [S]      [B]      []       []       []       []       []       
[]       [B, C, S][B]      []       [C]      [C, S]   []       []       []       []       
[]       [B, C, S][B]      []       []       [C, S]   [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->a }, { B-->BB }, { B-->AA }]
S[{ S-->BA }, { S-->BB }, { S-->AA }]
C[{ C-->AA }]

}
word='aabbaaabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[S]      [S]      [A]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S, C][A]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S, C][A]      [B]      []       []       []       []       []       
[B, S]   [B, S]   [B, S, C][A]      [B, S]   [B]      []       []       []       []       
[B, S]   [B, S]   [B, S, C][A]      [B, S]   [B, S]   [B]      []       []       []       
[S]      [S]      [A, S]   [B, S, C][S]      [S]      [S]      [A]      []       []       
[B, S]   [B, S]   [B, C, S][A, S]   [B, S]   [B, S]   [B, S]   [B, S, C][A]      []       
[S]      [S]      [A, S]   [B, S, C][S]      [S]      [S]      [A, S]   [B, S, C][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S]   []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [B, C]   []       []       []       []       []       []       []       
[]       []       [B, C]   []       []       []       []       []       []       []       
[S]      []       [A]      [B, S, C][S]      []       []       []       []       []       
[B, S]   [B, S]   []       [A]      [B, S]   [B, S]   []       []       []       []       
[S]      []       [A]      [B, S, C][S]      [S]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SS }]
S[{ S-->CS }, { S-->b }]

}
word='aabbaaabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[C][C][C][S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[S][S][S][C][S][S][S][S][] [] 
[C][C][C][S][C][C][C][C][S][] 
[S][S][S][C][S][S][S][S][C][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [S][C][C][] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->CC }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->AA }, { C-->b }]

}
word='aabbaaabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C, S][A]   []    []    []    []    []    []    []    []    
[A, B][S]   [C]   []    []    []    []    []    []    []    
[S]   [C, S][A, B][C]   []    []    []    []    []    []    
[A, B][S]   [C, S][]    [A]   []    []    []    []    []    
[C, S][A, B][S]   [A, B][C, S][A]   []    []    []    []    
[S]   [C, S][A, B][C, S][S]   [C, S][A]   []    []    []    
[C, S][A, B][S]   [A, B][C, S][A, B][S]   [C]   []    []    
[A, B][S]   [C, S][S]   [A, B][S]   [C, S][A, B][C]   []    
[S]   [C, S][A, B][C, S][S]   [C, S][A, B][S]   [A, B][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][S]   []    []    []    []    []    []    []    []    
[]    [A, B][S]   []    []    []    []    []    []    []    
[S]   []    [A, B][C, S][]    []    []    []    []    []    
[C, S][A, B][]    []    [C, S][]    []    []    []    []    
[A, B][]    [C, S][]    [A, B][]    []    []    []    []    
[]    [C, S][]    [C, S][]    [C, S][A, B][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SB }]
B[{ B-->a }]
S[{ S-->SB }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->BS }]

}
word='aabbaaabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[S]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [C]      [S]      [S]      []       []       []       []       []       []       
[A, S]   [C]      [A, S]   [A, S]   [B]      []       []       []       []       []       
[A, S]   [C]      [A, S]   [A, S]   [A, S]   [B]      []       []       []       []       
[A, S]   [C]      [A, S]   [A, S]   [A, C, S][A, S]   [B]      []       []       []       
[S]      [C]      [S]      [S]      [C, S]   [S]      [C]      [S]      []       []       
[S]      [C]      [S]      [S]      [C, S]   [S]      [C]      [S]      [S]      []       
[S]      [C]      [S]      [S]      [C, S]   [S]      [C]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[A, S][C]   [A]   []    []    []    []    []    []    []    
[A, S][C]   [A]   [A]   []    []    []    []    []    []    
[S]   [C]   []    []    [C]   []    []    []    []    []    
[S]   [C]   []    []    [C]   [S]   []    []    []    []    
[S]   [C]   []    []    [C]   [S]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
S[{ S-->CA }]
C[{ C-->a }, { C-->AA }]

}
word='aabbaaabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[C][S][A][] [] [] [] [] [] [] 
[S][A][C][A][] [] [] [] [] [] 
[C][S][A][] [C][] [] [] [] [] 
[A][C][S][C][A][C][] [] [] [] 
[S][A][C][A][S][A][C][] [] [] 
[A][C][S][C][A][C][S][A][] [] 
[C][S][A][S][C][S][A][C][A][] 
[S][A][C][A][S][A][C][S][C][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[S][] [C][A][] [] [] [] [] [] 
[A][C][S][] [A][] [] [] [] [] 
[C][] [A][S][C][] [] [] [] [] 
[] [A][] [A][] [A][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->CC }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->a }]

}
word='aabaaabbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, B][C]   []    []    []    []    []    []    []    []    
[A, B][C]   [A]   []    []    []    []    []    []    []    
[S, C][A, B][S]   [C]   []    []    []    []    []    []    
[A, B][C, S][]    [A, B][C]   []    []    []    []    []    
[S, C][A, B][S]   [C, S][A, B][C]   []    []    []    []    
[S, C][A, B][S]   [C, S][A, B][C]   [A]   []    []    []    
[S, C][A, B][S]   [C, S][A, B][C]   []    [A]   []    []    
[S, C][A, B][S]   [C, S][A, B][C]   []    []    [A]   []    
[S, C][A, B][S]   [C, S][A, B][C]   []    []    []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][A, B][]    []    []    []    []    []    []    []    
[S]   [A, B][S]   [S]   []    []    []    []    []    []    
[S]   [A, B][S]   [S]   [A, B][]    []    []    []    []    
[S]   [A, B][S]   [S]   [A, B][]    []    []    []    []    
[S]   [A, B][S]   [S]   [A, B][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SS }]

}
word='aabaaabbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [A]   [A]   []    []    []    []    []    
[]    []    []    [A]   [A]   [A]   []    []    []    []    
[A, C][A, C][A, C][S]   [S]   [S]   [S]   []    []    []    
[S]   [S]   [S]   [A, C][A, C][A, C][A, C][S]   []    []    
[A, C][A, C][A, C][S]   [S]   [S]   [S]   [A, C][S]   []    
[S]   [S]   [S]   [A, C][A, C][A, C][A, C][S]   [A, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   [A, C][A, C][]    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[]    []    [S]   [A, C][A, C][A, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }]
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->CC }]
C[{ C-->b }]

}
word='aabaaabbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }]
C[{ C-->BB }]
S[{ S-->AB }]

}
word='aabaaabbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[A, C][B]   [A]   []    []    []    []    []    []    []    
[B, S][A, C][S]   [B]   []    []    []    []    []    []    
[A, C][B, S][]    [A, C][B]   []    []    []    []    []    
[B, S][A, C][S]   [B, S][A, C][B]   []    []    []    []    
[B, S][A, C][S]   [B, S][A, C][B]   [A]   []    []    []    
[B, S][A, C][S]   [B, S][A, C][B]   []    [A]   []    []    
[B, S][A, C][S]   [B, S][A, C][B]   []    []    [A]   []    
[B, S][A, C][S]   [B, S][A, C][B]   []    []    []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][A, C][]    []    []    []    []    []    []    []    
[S]   [A, C][S]   [S]   []    []    []    []    []    []    
[S]   [A, C][S]   [S]   [A, C][]    []    []    []    []    
[S]   [A, C][S]   [S]   [A, C][]    []    []    []    []    
[S]   [A, C][S]   [S]   [A, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->BB }]
C[{ C-->CB }, { C-->b }]
S[{ S-->BC }]

}
word='aabaaabbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B, S][B, S][C]   []    []    []    []    []    []    []    
[B, S][B, S][C]   [B]   []    []    []    []    []    []    
[B, S][B, S][C]   [B]   [B]   []    []    []    []    []    
[B, S][B, S][C]   [B]   [B]   [B]   []    []    []    []    
[B, S][B, S][C]   [B, S][B, S][B, S][C]   []    []    []    
[B, S][B, S][C]   [B, S][B, S][B, S][]    [C]   []    []    
[B, S][B, S][C]   [B, S][B, S][B, S][]    []    [C]   []    
[B, S][B, S][C]   [B, S][B, S][B, S][]    []    []    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 
[S][] [] [S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
S[{ S-->CC }]
C[{ C-->b }, { C-->BC }]

}
word='abbbaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[]    []    [S]   [C]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[C, S][C, S][S, C][S, C][C]   [C]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[C, S][C, S][S, C][S, C][C, S][C, S][S, C][S, C][C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->AA }]
S[{ S-->CA }]
C[{ C-->a }]

}
word='abbbaabbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A, B][A]   []    []    []    []    []    []    []    
[S]   [A, B][A, B][A]   []    []    []    []    []    []    
[S]   [A, B][A, B][A]   [C]   []    []    []    []    []    
[S]   [A, B][A, B][A]   []    [C]   []    []    []    []    
[S]   [A, B][A, B][A, B][]    [S]   [A]   []    []    []    
[S]   [A, B][A, B][A, B][]    [S]   [A, B][A]   []    []    
[S]   [A, B][A, B][A, B][]    [S]   [A, B][A]   [C]   []    
[S]   [A, B][A, B][A, B][]    [S]   [A, B][A, B][S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CA }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->b }]

}
word='abbbaabbab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[] [] [S][C][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[S][S][S][S][S][S][C][] [] [] 
[] [] [] [] [] [] [S][C][] [] 
[A][A][A][A][A][A][A][A][A][] 
[S][S][S][S][S][S][S][S][S][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->a }]
S[{ S-->AA }]

}
word='abbbaabbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    []    [S]   [A]   []    []    []    []    []    []    
[A]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [A, S][A, S][A, S][A]   [C]   []    []    []    []    
[]    [S]   [S]   [S]   [S]   []    [A]   []    []    []    
[]    []    []    []    []    []    [S]   [A]   []    []    
[A, S][C]   [C]   [C]   [C]   [A]   [C]   [C]   [C]   []    
[S]   []    []    []    []    [S]   []    []    []    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [A, S][A, S][]    []    []    []    []    []    []    
[]    [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->AC }, { B-->CA }]
C[{ C-->a }, { C-->AA }]
S[{ S-->AA }]

}
word='abbbaabbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[C, S][C, S][A]   []    []    []    []    []    []    []    
[A, B][A, B][C, S][A]   []    []    []    []    []    []    
[B]   [B]   []    [B]   [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[C, S][C, S][A, B][C, S][A, B][A, B][A]   []    []    []    
[A, B][A, B][C, S][A, B][C, S][C, S][C, S][A]   []    []    
[B]   [B]   []    [B]   []    []    []    [B]   [C]   []    
[C, S][C, S][A, B][C, S][A, B][A, B][A, B][C, S][A, B][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    [A, B][C, S][]    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[C, S][C, S][]    [C, S][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->AS }, { S-->a }]
C[{ C-->AS }, { C-->SA }]

}
word='aabababaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[C, S][A]   [S, C][S]   []    []    []    []    []    []    
[C]   []    [C]   [C]   [A]   []    []    []    []    []    
[A]   [S, C][A]   [A]   [S, C][S]   []    []    []    []    
[]    [C]   []    []    [C]   [C]   [A]   []    []    []    
[C, S][A]   [S, C][C, S][A]   [A]   [S, C][S]   []    []    
[A]   [S, C][A]   [A]   [S, C][C, S][A]   [A]   [S]   []    
[C, S][A]   [S, C][C, S][A]   [A]   [S, C][C, S][A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    [A]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    [A]   []    []    []    []    []    
[]    [S, C][A]   []    []    [C, S][]    []    []    []    
[C, S][]    []    [C, S][A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }]
C[{ C-->BA }, { C-->BB }]
S[{ S-->AB }]

}
word='aabababaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C]   [B]      []       []       []       []       []       []       []       []       
[A, C]   [B, C]   [A]      []       []       []       []       []       []       []       
[B, S, C][A, C]   [S]      [B]      []       []       []       []       []       []       
[B, S, C][A, C]   [S]      [B, C]   [A]      []       []       []       []       []       
[A, C]   [B, C, S][]       [A, C]   [S]      [B]      []       []       []       []       
[A, C]   [B, C, S][]       [A, C]   [S]      [B, C]   [A]      []       []       []       
[B, S, C][A, C]   [S]      [B, C, S][]       [A, C]   [S]      [B]      []       []       
[A, C]   [B, C, S][]       [A, C]   [S]      [B, C, S][]       [A, C]   [B]      []       
[B, S, C][A, C]   [S]      [B, C, S][]       [A, C]   [S]      [B, C, S][A, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C]   []       []       [A, C]   []       []       []       []       []       []       
[B, S, C][A, C]   []       []       []       []       []       []       []       []       
[]       []       []       [A, C]   []       []       []       []       []       []       
[B, S, C][A, C]   []       []       []       [A, C]   []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }, { B-->SC }]
S[{ S-->a }, { S-->SS }, { S-->CS }]
C[{ C-->SC }, { C-->b }]

}
word='aabababaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[B, S][B, S][S]   [S]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->AC }]
S[{ S-->CA }]
C[{ C-->AA }, { C-->b }]

}
word='aabababaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[]       [B]      [C]      []       []       []       []       []       []       []       
[A, B, S][C]      [A, S]   [A]      []       []       []       []       []       []       
[B]      []       [B]      [B]      [C]      []       []       []       []       []       
[C]      [A, B, S][C]      [C]      [A, S]   [A]      []       []       []       []       
[]       [B]      []       []       [B]      [B]      [C]      []       []       []       
[A, B, S][C]      [A, B, S][A, B, S][C]      [C]      [A, S]   [A]      []       []       
[C]      [A, B, S][C]      [C]      [A, B, S][A, B, S][C]      [C]      [A]      []       
[A, B, S][C]      [A, B, S][A, B, S][C]      [C]      [A, B, S][A, B, S][C]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       [C]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       [C]      []       []       []       []       []       
[]       [A, B, S][C]      []       [B]      [A, B, S][]       []       []       []       
[A, B, S][]       [B]      [A, B, S][C]      []       [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->b }]
C[{ C-->a }, { C-->CC }, { C-->BC }]
S[{ S-->CC }]

}
word='aabababaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C, S]   [C]      []       []       []       []       []       []       []       []       
[A]      [A]      [B]      []       []       []       []       []       []       []       
[C, S]   [C, S]   [A, C]   [C]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [B]      []       []       []       []       []       
[C, S]   [C, S]   [A, C, S][C, S]   [A, C]   [C]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [B]      []       []       []       
[C, S]   [C, S]   [A, C, S][C, S]   [A, C, S][C, S]   [A, C]   [C]      []       []       
[C, S]   [C, S]   [A, C, S][C, S]   [A, C, S][C, S]   [A, C, S][C, S]   [C]      []       
[C, S]   [C, S]   [A, C, S][C, S]   [A, C, S][C, S]   [A, C, S][C, S]   [C, S]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[C, S]   [C, S]   [A, C, S][]       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[C, S]   [C, S]   [A, C, S][C, S]   [A, C, S][]       []       []       []       []       
[]       []       [A]      []       [A]      []       []       []       []       []       
[]       []       [A]      []       [A]      []       [A]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->AA }, { S-->AB }]

}
word='bbbbbbabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      [A]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      [A, B, S][A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      [A, B, S][A, B, S][A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SS }]
S[{ S-->SA }, { S-->b }]
C[{ C-->SS }]

}
word='bbbbbbabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[S]      [A, B, C][S]      []       []       []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      []       []       []       []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      []       []       []       []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][S]      []       []       []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][S]      [A]      []       []       []       
[S]      [A, B, C][S]      [A, B, C][S]      [A, B, C][]       [S]      []       []       
[A, B, C][S]      [A, B, C][S]      [A, B, C][S]      []       [A, B, C][S]      []       
[S]      [A, B, C][S]      [A, B, C][S]      [A, B, C][]       [S]      [A, B, C][S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A, B, C][]       [A, B, C][]       []       []       []       []       []       []       
[S]      []       [S]      []       [S]      []       []       []       []       []       
[]       [S]      []       [S]      []       []       []       []       []       []       
[S]      []       [S]      []       [S]      []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SS }]

}
word='bbbbbbabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, C][S]   []    []    []    []    []    []    []    []    
[B, S][A, C][S]   []    []    []    []    []    []    []    
[A, C][B, S][A, C][S]   []    []    []    []    []    []    
[B, S][A, C][B, S][A, C][S]   []    []    []    []    []    
[A, C][B, S][A, C][B, S][A, C][S]   []    []    []    []    
[]    [B]   []    [B]   []    [B]   [A]   []    []    []    
[B, S][A, C][B, S][A, C][B, S][A, C][S]   [S]   []    []    
[A, C][B, S][A, C][B, S][A, C][B, S][A, C][A, C][S]   []    
[B, S][A, C][B, S][A, C][B, S][A, C][B, S][B, S][A, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, C][]    [A, C][]    []    []    []    []    []    
[]    [B, S][]    [B, S][]    [B, S][]    []    []    []    
[B, S][]    [B, S][]    [B, S][]    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AB }, { B-->BB }]
S[{ S-->BB }]
C[{ C-->AB }]

}
word='bbbbbbabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C]   [B]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C, S][B, S]   [B]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C, S][B, S]   [B, S]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->BB }]
S[{ S-->a }, { S-->BB }, { S-->BS }]

}
word='bbbbbbabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }]
C[{ C-->SB }]
S[{ S-->a }, { S-->SS }, { S-->BB }, { S-->BS }]

}
word='baaaababbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [S]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [S]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [B]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [S]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [B]      []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [B]      []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->BS }]

}
word='baaaababbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [S]   []    []    []    []    []    []    
[A, S][S]   [S]   [S]   [S]   []    []    []    []    []    
[A, S][S]   [S]   [S]   [S]   [B]   []    []    []    []    
[A, S][S]   [S]   [S]   [S]   [A, S][S]   []    []    []    
[A, S][S]   [S]   [S]   [S]   [A, S][S]   [B]   []    []    
[A, S][S]   [S]   [S]   [S]   [A, S][S]   []    [B]   []    
[A, S][S]   [S]   [S]   [S]   [A, S][S]   []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [A][] [] [] [] 
[A][] [] [] [] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SS }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SC }, { S-->b }]

}
word='baaaababbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [A]   [C]   []    []    []    []    []    []    []    
[S]   []    [A]   [C]   []    []    []    []    []    []    
[S]   []    []    [A]   [C]   []    []    []    []    []    
[A, S][]    []    [A]   [A, C][S]   []    []    []    []    
[A, S][]    []    [A]   [A, C][S]   [C]   []    []    []    
[A, S][]    []    [A]   [A, C][A, S][A, C][S]   []    []    
[A, S][]    []    [A]   [A, C][A, S][A, C][A]   [S]   []    
[A, S][]    []    [A]   [A, C][A, S][A, C][]    [A]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [A][] [] [] [] 
[] [] [] [A][] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CS }]
C[{ C-->a }, { C-->SS }]
S[{ S-->SC }, { S-->CS }, { S-->b }]

}
word='baaaababbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [A]   [C]   []    []    []    []    []    []    []    
[S]   []    [A]   [C]   []    []    []    []    []    []    
[S]   []    []    [A]   [C]   []    []    []    []    []    
[C]   [B, S][B, S][B, S][B, S][S]   []    []    []    []    
[A, C][B, S][B, S][B, S][B, S][S]   [C]   []    []    []    
[B, S][A, C][A, C][A, C][A, C][C]   [B, S][S]   []    []    
[A, C][B, S][B, S][B, S][B, S][B, S][A, C][C]   [S]   []    
[B, S][A, C][A, C][A, C][A, C][A, C][B, S][B, S][C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][B, S][B, S][B, S][]    []    []    []    []    []    
[B, S][A, C][A, C][A, C][A, C][]    []    []    []    []    
[A]   []    []    []    []    [B, S][]    []    []    []    
[B, S][A, C][A, C][A, C][A, C][A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->CC }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->a }, { C-->CC }]

}
word='baaaababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [B, C][C]   []    []    []    []    []    []    []    
[S]   [B, C][B, C][C]   []    []    []    []    []    []    
[S]   [B, C][B, C][B, C][C]   []    []    []    []    []    
[S]   [B, C][B, C][B, C][C]   [A]   []    []    []    []    
[S]   [B, C][B, C][B, C][B, C][S]   [C]   []    []    []    
[S]   [B, C][B, C][B, C][B, C][S]   [C]   [A]   []    []    
[S]   [B, C][B, C][B, C][B, C][S]   [C]   [A]   [A]   []    
[S]   [B, C][B, C][B, C][B, C][S]   [C]   [A]   [A]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    [B, C][]    []    []    []    []    
[S]   []    []    []    [B, C][S]   []    []    []    []    
[S]   []    []    []    [B, C][S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->b }]

}
word='babbaaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[B, S][S]   [B, S][B, S][S]   []    []    []    []    []    
[B, S][S]   [B, S][B, S][S]   [S]   []    []    []    []    
[B, S][S]   [B, S][B, S][S]   [S]   [S]   []    []    []    
[B, S][S]   [B, S][B, S][S]   [S]   [S]   [S]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[B, S][S]   [B, S][B, S][S]   [S]   [S]   [S]   [B, S][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][B][] [] [] [] [] [] 
[B][] [B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->SS }]
C[{ C-->AS }]

}
word='babbaaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S]   [A]   []    []    []    []    []    []    []    
[S, C][S]   []    [A]   []    []    []    []    []    []    
[S, C][S]   [S, C][S, C][S]   []    []    []    []    []    
[S, C][S]   [S, C][S, C][S]   [S]   []    []    []    []    
[S, C][S]   [S, C][S, C][S]   [S]   [S]   []    []    []    
[S, C][S]   [S, C][S, C][S]   [S]   [S]   [S]   []    []    
[S, C][S]   [S, C][S, C][S]   [S]   [S]   [S]   [A]   []    
[S, C][S]   [S, C][S, C][S]   [S]   [S]   [S]   [S, C][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][C][] [] [] [] [] [] 
[C][] [C][C][] [] [] [] [] [] 
[C][] [C][C][] [] [] [] [] [] 
[C][] [C][C][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CC }]
C[{ C-->a }, { C-->BC }]
S[{ S-->BB }]

}
word='babbaaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   []    []    []    []    []    []    
[B, S][B]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [B, S][B, S][B]   [C]   []    []    []    []    
[B, S][B, S][C]   [C]   [C]   [B]   [C]   []    []    []    
[C]   [C]   [B, S][B, S][B, S][C]   [B]   [C]   []    []    
[]    []    [S]   [S]   [S]   []    [S]   []    [B]   []    
[B, S][B, S][C]   [C]   [C]   [B, S][C]   [B]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   [B, S][]    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[]    [C]   [B, S][B, S][S]   []    []    []    []    []    
[]    []    [S]   [S]   []    []    []    []    []    []    
[]    []    [C]   [C]   [C]   []    [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->BB }]
S[{ S-->CB }]
C[{ C-->b }]

}
word='babbaaaaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][C][] [] [] [] [] [] [] 
[S][B][] [C][] [] [] [] [] [] 
[S][B][] [S][B][] [] [] [] [] 
[S][B][] [S][B][B][] [] [] [] 
[S][B][] [S][B][B][B][] [] [] 
[S][B][] [S][B][B][B][B][] [] 
[S][B][] [S][B][B][B][B][C][] 
[S][B][] [S][B][B][B][B][S][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
S[{ S-->CA }, { S-->AA }]
C[{ C-->AA }, { C-->b }]

}
word='babbaaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[C, S][C, S][A, S][A, S][A]   []    []    []    []    []    
[A, S][A, S][C, S][C, S][C, S][A]   []    []    []    []    
[C, S][C, S][A, S][A, S][A, S][C, S][A]   []    []    []    
[A, S][A, S][C, S][C, S][C, S][A, S][C, S][A]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[C, S][C, S][A, S][A, S][A, S][C, S][A, S][C, S][A, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][C, S][]    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][C, S][C, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }]
S[{ S-->SS }, { S-->BB }, { S-->b }]

}
word='bbaaabaaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[S][S][S][B][] [] [] [] [] [] 
[B][B][B][S][B][] [] [] [] [] 
[] [] [] [S][] [S][] [] [] [] 
[S][S][S][B][S][B][B][] [] [] 
[B][B][B][S][B][S][S][B][] [] 
[] [] [] [S][] [S][S][] [S][] 
[S][S][S][B][S][B][B][S][B][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [B][] [B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CC }]
C[{ C-->a }, { C-->BC }]
S[{ S-->BB }]

}
word='bbaaabaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[B, S][B, S][B]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   [B]   [C]   []    []    []    []    []    
[]    []    []    [S]   []    [B]   []    []    []    []    
[B, S][B, S][B, S][C]   [B]   [C]   [C]   []    []    []    
[C]   [C]   [C]   [B, S][C]   [B, S][B]   [C]   []    []    
[]    []    []    [S]   []    [S]   [S]   []    [B]   []    
[B, S][B, S][B, S][C]   [B, S][C]   [C]   [B]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    [C]   [S]   [C]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    [C]   []    [C]   [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AC }, { B-->CC }]
C[{ C-->CA }, { C-->a }]
S[{ S-->AA }, { S-->CC }]

}
word='bbaaabaaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A, B]   [C]      []       []       []       []       []       []       []       
[S]      [A, B]   [B, S]   [C]      []       []       []       []       []       []       
[S]      [A, B]   []       [B, S]   [C]      []       []       []       []       []       
[S]      [A, B, S][]       [B, S]   [C]      [A]      []       []       []       []       
[S]      [A, B, S][]       [B, S]   [B, C, S][A, B]   [C]      []       []       []       
[S]      [A, B, S][]       [B, S]   [B, C, S][A, B]   [B, S]   [C]      []       []       
[S]      [A, B, S][]       [B, S]   [B, C, S][A, B, S][B, S]   [C]      [A]      []       
[S]      [A, B, S][]       [B, S]   [B, C, S][A, B, S][B, S]   [B, C, S][A, B]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       [B, S]   []       []       []       []       []       []       
[S]      []       []       [B, S]   [B, S]   []       []       []       []       []       
[S]      []       []       [B, S]   [B, S]   [A, B, S][]       []       []       []       
[S]      []       []       [B, S]   [B, S]   [A, B, S][B, S]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CC }, { S-->b }]

}
word='bbaaabaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][C]   []    []    []    []    []    []    
[C]   [C]   [C]   [B, S][C]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[B, S][B, S][B, S][C]   [B, S][C]   [C]   []    []    []    
[C]   [C]   [C]   [B, S][C]   [B, S][B, S][C]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[B, S][B, S][B, S][C]   [B, S][C]   [C]   [B, S][C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    [C]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }]
S[{ S-->BA }]
C[{ C-->AB }]

}
word='bbaaabaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [A]   []    []    []    []    []    []    
[A, S][A, S][A]   [A]   [A]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B]   []    []    []    []    
[A, S][A, S][A]   [A]   [A]   [A, S][A]   []    []    []    
[A, S][A, S][A]   [A]   [A]   [A, S][A]   [A]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B]   []    
[A, S][A, S][A]   [A]   [A]   [A, S][A]   [A]   [A, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [A]   []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[A, S][A, S][A]   [A]   [A]   [A, S][A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AA }]
S[{ S-->BA }]
C[{ C-->AA }]

}
word='babaaababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[]    [B, C][S]   [A]   []    []    []    []    []    []    
[S]   [A, S][]    [B, C][A]   []    []    []    []    []    
[]    [B, C][S]   [A, S][B, C][A]   []    []    []    []    
[]    [B, C][S]   [A, S][B, C][A]   [B]   []    []    []    
[S]   [A, S][]    [B, C][A, S][B, C][S]   [A]   []    []    
[S]   [A, S][]    [B, C][A, S][B, C][S]   [A]   [B]   []    
[S]   [A, S][]    [B, C][A, S][B, C][S]   [A]   []    [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B, C][S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[S]   []    []    [B, C][S]   [B, C][]    []    []    []    
[S]   []    []    [B, C][S]   [B, C][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }]
C[{ C-->AA }]
S[{ S-->BB }]

}
word='babaaababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[A, C][A, C][A]   [A]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A]   []    []    []    []    []    
[]    []    []    []    [C]   [A]   []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [B]   [B]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A]   [A]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SC }, { S-->CC }, { S-->b }]

}
word='babaaababb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [B, S, C][S]      [C]      []       []       []       []       []       []       
[S]      [B, C, S][S]      [B, S]   [C]      []       []       []       []       []       
[S]      [B, C, S][S]      [C, S]   [B, S]   [C]      []       []       []       []       
[S]      [B, C, S][S]      [C, S]   [B, S]   [C]      [S]      []       []       []       
[S]      [B, C, S][S]      [B, C, S][B, C, S][B, C, S][S]      [C]      []       []       
[S]      [B, C, S][S]      [B, C, S][B, C, S][B, C, S][S]      [C]      [S]      []       
[S]      [B, C, S][S]      [B, C, S][B, C, S][B, C, S][S]      [C]      []       [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [B, S][]    [S]   []    []    []    []    []    []    
[]    [B, S][]    []    [B, C][]    []    []    []    []    
[]    [B, S][]    []    []    [B, S][]    []    []    []    
[]    [B, S][]    []    []    [B, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }]

}
word='babaaababb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A, C]   [C]      []       []       []       []       []       []       []       
[]       [S]      [S]      [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[S]      [A, C, S][S]      [A, C]   [A, C]   [A, C]   [C]      []       []       []       
[]       [S]      []       [S]      [S]      [S]      [S]      [A]      []       []       
[S]      [A, C, S][S]      [A, C, S][A, C, S][A, C, S][S]      [A, C]   [C]      []       
[S]      [A, C, S][S]      [A, C, S][A, C, S][A, C, S][S]      [A, C]   []       [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [S]      [S]      []       []       []       []       []       
[]       [A, C, S][]       [A, C, S][A, C, S][A, C, S][]       []       []       []       
[S]      [A, C, S][S]      []       []       [A, C, S][S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
C[{ C-->a }]
S[{ S-->SC }, { S-->CC }, { S-->SS }, { S-->b }]

}
word='babaaababb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    []    []    []    []    []    []    
[S]   [B]   [S]   [C]   []    []    []    []    []    []    
[S]   [B]   [S]   [S]   [C]   []    []    []    []    []    
[S]   [B]   [S]   [B, S][S]   [C]   []    []    []    []    
[S]   [B]   [S]   [B, S][S]   [B]   [S]   []    []    []    
[S]   [B]   [S]   [B, S][S]   [B]   [S]   [C]   []    []    
[S]   [B]   [S]   [B, S][S]   [B]   [S]   [B]   [S]   []    
[S]   [B]   [S]   [B, S][S]   [B]   [S]   [B]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][] [B][] [] [] [] [] [] 
[S][B][] [B][S][] [] [] [] [] 
[S][B][] [B][S][B][] [] [] [] 
[S][B][] [B][S][B][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->BA }]
S[{ S-->AB }]

}
word='ababbaaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [A]   []    []    []    []    []    []    []    
[]    [A]   [S]   [B]   []    []    []    []    []    []    
[S]   [B, S][]    [A]   [B]   []    []    []    []    []    
[S]   [B, S][]    [A]   [B]   [A]   []    []    []    []    
[S]   [B, S][]    [A]   [B]   []    [A]   []    []    []    
[S]   [B, S][]    [A]   [B]   []    []    [A]   []    []    
[]    [A]   [S]   [B, S][A]   []    []    [S]   [B]   []    
[S]   [B, S][]    [A]   [B, S][]    []    []    [A]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    [A]   []    []    []    []    []    []    
[S]   []    []    [A]   []    []    []    []    []    []    
[]    [A]   []    [B, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->SC }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SS }, { C-->b }]

}
word='ababbaaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[C]      [A]      [S]      []       []       []       []       []       []       []       
[C]      [A]      [B, S]   [C]      []       []       []       []       []       []       
[C]      [A]      [B, S]   []       [C]      []       []       []       []       []       
[A, B, S][]       [C]      []       [A]      [S]      []       []       []       []       
[C]      [A]      [A, B, S][]       []       [C]      [S]      []       []       []       
[A, B, S][]       [C]      []       [A]      [A, B, S][C]      [S]      []       []       
[A, B, S][]       [C]      []       [A]      [A, B, S][C]      [B, S]   [C]      []       
[A, B, S][]       [C]      []       [A]      [A, B, S][C]      [B, S]   []       [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][A][] [] [] [] 
[] [] [] [] [A][A][C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
S[{ S-->AS }, { S-->a }, { S-->AA }]

}
word='ababbaaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [A]   []    []    []    []    []    []    
[A, S][A, S][S]   [S]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [A]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SA }]

}
word='ababbaaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [S]   [S]   []    []    []    []    []    []    
[S, C][S, C][A]   [A]   [S]   []    []    []    []    []    
[C]   [C]   []    []    [C]   [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[A]   [A]   [S, C][C, S][A]   [S]   [S]   [S]   [S]   []    
[S, C][S, C][A]   [A]   [C, S][A]   [A]   [A]   [A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [S, C][A]   []    [C, S][A]   [A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }]
S[{ S-->BA }, { S-->BB }]
C[{ C-->AB }]

}
word='ababbaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [B]      []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [B]      []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C]   [B, C]   [B, C]   [B]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
B[{ B-->CC }, { B-->SS }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='aaaabbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[A, C]   [A, B, S][C]      []       []       []       []       []       []       []       
[A, B, S][A, C]   [A, B, S][C]      []       []       []       []       []       []       
[A, B, S][A, C]   [A, B, S][A, C]   [S]      []       []       []       []       []       
[A, B, S][A, C]   [A, B, S][A, C]   [B]      [S]      []       []       []       []       
[A, C]   [A, B, S][A, C]   [A, B, S][]       []       [C]      []       []       []       
[A, C]   [A, B, S][A, C]   [A, B, S][]       []       [A, C]   [S]      []       []       
[A, B, S][A, C]   [A, B, S][A, C]   []       [B]      [A, B, S][]       [C]      []       
[A, B, S][A, C]   [A, B, S][A, C]   []       [B]      [A, B, S][]       [A, C]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[A, B, S][]       [A, B, S][]       []       []       []       []       []       []       
[A, C]   []       [A, C]   []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[A, B, S][]       [A, B, S][]       []       [B]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
S[{ S-->BB }]
C[{ C-->b }, { C-->BC }]

}
word='aaaabbabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[]       []       [S]      [B]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C]   [C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C]   []       [C]      []       []       []       []       
[S]      [S]      [S]      [S]      []       []       [B]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][]       []       [B, C]   [C]      []       []       
[S]      [S]      [S]      [S]      []       []       [S]      []       [B]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][]       []       [B, C, S][]       [B, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][]       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][]       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='aaaabbabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[C]   [B, S][C]   []    []    []    []    []    []    []    
[B, S][C]   [B, S][C]   []    []    []    []    []    []    
[B, S][C]   [B, S][C]   [S]   []    []    []    []    []    
[B, S][C]   [B, S][C]   []    [S]   []    []    []    []    
[C]   [B, S][C]   [B, S][]    []    [C]   []    []    []    
[C]   [B, S][C]   [B, S][]    []    [C]   [S]   []    []    
[B, S][C]   [B, S][C]   []    []    [B, S][]    [C]   []    
[B, S][C]   [B, S][C]   []    []    [B, S][]    [C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][]    [B, S][]    []    []    []    []    []    []    
[C]   []    [C]   []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B, S][]    [B, S][]    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }]
C[{ C-->BA }]
S[{ S-->AA }]

}
word='aaaabbabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[B, C][A]   [B]   []    []    []    []    []    []    []    
[A, S][B, C][A]   [B]   []    []    []    []    []    []    
[A, S][B, C][A, S][B, C][A]   []    []    []    []    []    
[A, S][B, C][A, S][B, C][S]   [A]   []    []    []    []    
[B, C][A, S][B, C][A]   []    []    [B]   []    []    []    
[B, C][A, S][B, C][A, S][]    []    [B, C][A]   []    []    
[A, S][B, C][A, S][B, C][]    [S]   [A]   []    [B]   []    
[A, S][B, C][A, S][B, C][]    [S]   [A, S][]    [B, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    
[B, C][S]   [B, C][]    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[S]   [B, C][S]   []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    [S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
S[{ S-->BB }, { S-->b }]
C[{ C-->BB }]

}
word='aaaabbabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S, C][B]   []    []    []    []    []    []    []    []    
[B]   [S, C][B]   []    []    []    []    []    []    []    
[S, C][B]   [S, C][B]   []    []    []    []    []    []    
[S, C][B]   [S, C][B]   [S]   []    []    []    []    []    
[S, C][B]   [S, C][B]   []    [S]   []    []    []    []    
[B]   [S, C][B]   [S, C][]    []    [B]   []    []    []    
[B]   [S, C][B]   [S, C][]    []    [B]   [S]   []    []    
[S, C][B]   [S, C][B]   []    []    [S, C][]    [B]   []    
[S, C][B]   [S, C][B]   []    []    [S, C][]    [B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][]    [S, C][]    []    []    []    []    []    []    
[B]   []    [B]   []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[S, C][]    [S, C][]    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
S[{ S-->AA }, { S-->b }]

}
word='aababbabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][A][S][] [] [] [] [] [] [] 
[A][S][] [A][] [] [] [] [] [] 
[A][S][] [A][S][] [] [] [] [] 
[A][S][] [A][] [S][] [] [] [] 
[S][A][] [S][] [] [A][] [] [] 
[S][A][] [S][] [] [A][S][] [] 
[A][S][] [A][] [] [S][] [A][] 
[S][A][] [S][] [] [A][] [S][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->BS }]
C[{ C-->SB }]
S[{ S-->a }, { S-->SS }, { S-->BB }]

}
word='aababbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[C]      [C]      [A, B]   [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [C]      [B]      []       []       []       []       []       
[C]      [C]      [A, B, C][S]      [S]      [B]      []       []       []       []       
[C]      [C]      [A, B, C][S]      [S]      [A, B]   [S]      []       []       []       
[S]      [S]      [S]      [C]      [A, B, C][S]      [C]      [B]      []       []       
[S]      [S]      [S]      [C]      [A, B, C][S]      [C]      [A, B]   [S]      []       
[S]      [S]      [S]      [C]      [A, B, C][S]      [C]      [A, B]   [S]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[C]      []       [A, B, C][]       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[S]      [S]      [S]      []       [A, B, C][]       []       []       []       []       
[]       []       [S]      [C]      [C]      [S]      []       []       []       []       
[]       []       [S]      [C]      [C]      [S]      [C]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AA }]
S[{ S-->BB }]
C[{ C-->AB }]

}
word='aababbabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B, S][A, C][B]   []    []    []    []    []    []    []    
[A, C][B]   []    [A]   []    []    []    []    []    []    
[A, C][B, S][]    [A, C][B]   []    []    []    []    []    
[A, C][B, S][]    [A, C][S]   [B]   []    []    []    []    
[B, S][A, C][S]   [B]   []    []    [A]   []    []    []    
[B, S][A, C][S]   [B, S][]    []    [A, C][B]   []    []    
[A, C][B, S][]    [A, C][]    [S]   [B]   []    [A]   []    
[B, S][A, C][S]   [B, S][]    []    [A, C][S]   [B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[B, S][A, C][S]   []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AS }]
C[{ C-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='aababbabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A, B]   [S]      []       []       []       []       []       []       []       
[A, B, C][S]      [C]      [A]      []       []       []       []       []       []       
[A, B, C][S]      [C]      [A, B]   [S]      []       []       []       []       []       
[A, B, C][S]      [C]      [A, B]   []       [S]      []       []       []       []       
[S]      [A, B, C][]       [S]      []       [C]      [A]      []       []       []       
[S]      [A, B, C][]       [S]      []       [C]      [A, B]   [S]      []       []       
[A, B, C][S]      [C]      [A, B, C][]       []       [S]      [C]      [A]      []       
[S]      [A, B, C][]       [S]      []       [C]      [A, B, C][]       [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[C]      [S]      [C]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AA }, { A-->b }, { A-->CA }]
B[{ B-->CA }, { B-->CC }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->a }]

}
word='aababbabaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [C]      []       []       []       []       []       []       []       []       
[A, B, S][A, B]   [A]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [C]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B]   [A]      []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [C]      []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, B]   [A]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [C]      []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, B, S][A, S]   [A, B]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][]       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, B, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=50

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=50
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->AB }]
S[{ S-->AA }]

}
word='abaaaabaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[A, S][A]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='abaaaabaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[S][A][A][] [] [] [] [] [] [] 
[A][S][S][A][] [] [] [] [] [] 
[S][A][A][S][A][] [] [] [] [] 
[A][S][S][A][S][A][] [] [] [] 
[A][S][S][A][S][A][S][] [] [] 
[S][A][A][S][A][S][A][A][] [] 
[A][S][S][A][S][A][S][S][A][] 
[S][A][A][S][A][S][A][A][S][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [] [A][] [A][] [] [] [] [] 
[A][S][] [A][] [A][] [] [] [] 
[] [] [A][] [A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->BB }, { C-->b }]

}
word='abaaaabaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[C, S][S]   [B]   []    []    []    []    []    []    []    
[B, S][]    [C, S][B]   []    []    []    []    []    []    
[C, S][S]   [B, S][C, S][B]   []    []    []    []    []    
[B, S][]    [C, S][B, S][C, S][B]   []    []    []    []    
[B, S][]    [C, S][B, S][C, S][B]   [C]   []    []    []    
[C, S][S]   [B, S][C, S][B, S][C, S][S]   [B]   []    []    
[B, S][]    [C, S][B, S][C, S][B, S][]    [C, S][B]   []    
[C, S][S]   [B, S][C, S][B, S][C, S][S]   [B, S][C, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   [S]   []    []    []    []    []    []    
[C, S][]    [B, S][]    [B, S][]    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[C, S][]    [B, S][]    [B, S][C, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->SS }]
S[{ S-->AS }, { S-->a }, { S-->SS }]

}
word='abaaaabaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B, S][S]   [S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->BS }, { B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->b }]
C[{ C-->BB }]

}
word='abaaaabaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[S, C][A, B][B]   []    []    []    []    []    []    []    
[A, B][S, C][S, C][B]   []    []    []    []    []    []    
[S, C][A, B][A, B][S, C][B]   []    []    []    []    []    
[A, B][S, C][S, C][A, B][S, C][B]   []    []    []    []    
[A, B][S, C][S, C][A, B][S, C][B]   [S]   []    []    []    
[S, C][A, B][A, B][S, C][A, B][S, C][A, B][B]   []    []    
[A, B][S, C][S, C][A, B][S, C][A, B][S, C][S, C][B]   []    
[S, C][A, B][A, B][S, C][A, B][S, C][A, B][A, B][S, C][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][S, C][]    []    []    []    []    []    []    []    
[A]   [S, C][S, C][A]   []    []    []    []    []    []    
[]    []    [A, B][]    [A, B][]    []    []    []    []    
[A, B][S, C][]    [A, B][]    [A, B][]    []    []    []    
[]    []    [A, B][]    [A, B][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->BC }, { B-->a }, { B-->BB }]
C[{ C-->CB }, { C-->b }]
S[{ S-->BC }]

}
word='aabbaaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[A, B, S][B, S]   [C]      []       []       []       []       []       []       []       
[A, B, S][B, S]   []       [C]      []       []       []       []       []       []       
[A, B, S][A, B, S][]       [C]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][]       [C]      [A, B]   [B]      []       []       []       []       
[A, B, S][A, B, S][]       [C]      [A, B]   [A, B]   [B]      []       []       []       
[A, B, S][A, B, S][]       [C]      [A, B, S][A, B, S][B, S]   [C]      []       []       
[A, B, S][A, B, S][]       [C]      [A, B, S][A, B, S][A, B, S][C]      [B]      []       
[A, B, S][A, B, S][]       [C]      [A, B, S][A, B, S][A, B, S][C]      [B, S]   [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [S][] [] [] [] [] 
[S][] [] [] [S][S][] [] [] [] 
[S][] [] [] [S][S][A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
S[{ S-->AC }, { S-->CA }, { S-->CC }]
C[{ C-->CA }, { C-->a }, { C-->AA }]

}
word='aabbaaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [C, S]   [A]      []       []       []       []       []       []       []       
[S]      [C, S]   [C]      [A]      []       []       []       []       []       []       
[S]      [C, S]   [C, S]   [A, S]   [C]      []       []       []       []       []       
[S]      [C, S]   [C, S]   [A, S]   [S]      [C]      []       []       []       []       
[S]      [C, S]   [C, S]   [A, S]   []       [S]      [C]      []       []       []       
[S]      [C, S]   [A, C, S][A, S, C][]       [S]      [C, S]   [A]      []       []       
[S]      [C, S]   [A, C, S][A, S, C][]       [S]      [C, S]   [A, S]   [C]      []       
[S]      [C, S]   [A, C, S][A, S, C][]       [S]      [C, S]   [A, S, C][C, S]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[S][] [A][] [] [] [] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 
[S][] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->a }]
S[{ S-->BA }]
C[{ C-->BB }]

}
word='aabbaaabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[B, C][B, C][B]   [B]   [B]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B]   []    []    []    []    
[]    []    []    []    []    [C]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='aabbaaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A, S][C]   [S]   []    []    []    []    []    []    []    
[A, S][C]   [A]   [S]   []    []    []    []    []    []    
[C]   [S]   []    []    [C]   []    []    []    []    []    
[A, S][C]   []    [A]   [S]   [C]   []    []    []    []    
[C]   [A, S][]    []    [C]   [S]   [C]   []    []    []    
[C]   [A, S][]    []    [C]   [A, S][C]   [S]   []    []    
[A, S][C]   []    [A]   [A, S][C]   [S]   []    [C]   []    
[A, S][C]   []    [A]   [A, S][C]   [A, S][]    [C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    [A]   [C]   []    []    []    []    
[A, S][]    []    [A]   [A, S][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->a }, { C-->CC }]

}
word='aabbaaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [C]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [C]   [C]   []    []    []    []    
[A]   [A]   [A]   [A]   [C]   [C]   [C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BA }]
B[{ B-->a }, { B-->BB }]
S[{ S-->AA }, { S-->AB }]
C[{ C-->BB }]

}
word='abbbaaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][B]   []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][B, C][B]   []    []    []    
[S]   [S]   [S]   [S]   [B, C][B, C][B, C][B]   []    []    
[S]   [S]   [S]   [S]   [B, C][B, C][B, C][B, C][B]   []    
[A, S][A, S][A, S][A, S][A]   [A]   [A]   [A]   [A]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CC }, { S-->b }]

}
word='abbbaaaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[S][C][S][] [] [] [] [] [] [] 
[C][A][C][S][] [] [] [] [] [] 
[S][C][S][A][C][] [] [] [] [] 
[A][S][A][C][S][C][] [] [] [] 
[C][A][C][S][A][S][C][] [] [] 
[S][C][S][A][C][A][S][C][] [] 
[A][S][A][C][S][C][A][S][C][] 
[S][C][S][A][C][A][S][C][] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[C][] [C][S][] [] [] [] [] [] 
[] [C][S][] [C][] [] [] [] [] 
[A][S][] [C][] [C][] [] [] [] 
[S][] [S][A][C][A][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
C[{ C-->SS }, { C-->BB }]
S[{ S-->BB }, { S-->b }]

}
word='abbbaaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[B]   [C]   [S]   []    []    []    []    []    []    []    
[B]   []    [C]   [S]   []    []    []    []    []    []    
[S, C][]    []    []    [B]   []    []    []    []    []    
[B]   []    []    [C]   [S, C][B]   []    []    []    []    
[S, C][]    []    []    [B]   [S, C][B]   []    []    []    
[B]   []    []    [C]   [S, C][B]   [S, C][B]   []    []    
[S, C][]    []    []    [B]   [S, C][B]   [S, C][B]   []    
[S, C][]    []    []    [B]   [S, C][B]   [S, C][B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [S, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='abbbaaaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A]   []    [S]   []    []    []    []    []    []    []    
[A]   []    []    [S]   []    []    []    []    []    []    
[S]   []    []    [B]   [A]   []    []    []    []    []    
[A, B][]    []    []    [S]   [A]   []    []    []    []    
[S]   []    []    [B]   [A, B][S]   [A]   []    []    []    
[A, B][]    []    []    [S]   [A, B][S]   [A]   []    []    
[S]   []    []    [B]   [A, B][S]   [A, B][S]   [A]   []    
[S]   []    []    [B]   [A, B][S]   [A, B][S]   [A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    [B]   [B]   [S]   [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->BB }, { C-->BS }]
S[{ S-->BB }, { S-->b }]

}
word='abbbaaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S, C][B]   [S]   []    []    []    []    []    []    []    
[B]   [C]   [B]   [S]   []    []    []    []    []    []    
[S, C][B]   [S, C][C]   [B]   []    []    []    []    []    
[C]   [S, C][C]   [B]   [S, C][B]   []    []    []    []    
[B]   [C]   [B]   [S, C][C]   [S, C][B]   []    []    []    
[S, C][B]   [S, C][C]   [B]   [C]   [S, C][B]   []    []    
[C]   [S, C][C]   [B]   [S, C][B]   [C]   [S, C][B]   []    
[S, C][B]   [S, C][C]   [B]   [C]   [S, C][B]   [C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[B]   []    [B]   [S, C][]    []    []    []    []    []    
[]    [B]   [S, C][]    [B]   []    []    []    []    []    
[C]   [S, C][]    [B]   []    [B]   []    []    []    []    
[S, C][]    [S, C][]    [B]   []    [S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->SB }, { B-->BB }]
S[{ S-->a }, { S-->SS }, { S-->BS }]

}
word='aabbbabbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][B]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   [B]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CA }, { B-->AA }, { B-->CC }]
C[{ C-->AC }, { C-->AA }, { C-->CC }, { C-->b }]
S[{ S-->AC }]

}
word='aabbbabbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [A]      []       []       []       []       []       []       []       []       
[B, C, S][C, S]   [C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [C]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B, C]   [C]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [A]      []       []       []       []       
[B, C, S][B, C, S][B, C]   [B, C]   [B, C]   [C, S]   [C]      []       []       []       
[B, C, S][B, C, S][B, C]   [B, C]   [B, C]   [B, C, S][B, C]   [C]      []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [A]      []       
[B, C, S][B, C, S][B, C]   [B, C]   [B, C]   [B, C, S][B, C]   [B, C]   [B, C]   [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B, C]   []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[B, C, S][B, C, S][B, C]   [B, C]   [B, C]   [B, C, S][B, C]   []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=41
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
S[{ S-->BA }]

}
word='aabbbabbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[A][B][] [] [] [] [] [] [] [] 
[B][S][A][] [] [] [] [] [] [] 
[S][A][B][A][] [] [] [] [] [] 
[A][B][S][B][A][] [] [] [] [] 
[S][A][B][A][] [B][] [] [] [] 
[A][B][S][B][] [S][A][] [] [] 
[B][S][A][S][B][A][B][A][] [] 
[A][B][S][B][A][S][A][] [B][] 
[S][A][B][A][S][B][S][B][A][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][B][] [] [] [] [] [] [] [] 
[S][] [B][] [] [] [] [] [] [] 
[A][B][S][] [] [] [] [] [] [] 
[B][] [A][S][] [] [] [] [] [] 
[] [B][S][B][A][S][] [] [] [] 
[S][] [B][A][S][B][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CC }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->a }, { C-->BB }]

}
word='aabbbabbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[C, S][S]   [B]   []    []    []    []    []    []    []    
[S]   [B]   [C, S][B]   []    []    []    []    []    []    
[B]   [C, S][S]   [C, S][B]   []    []    []    []    []    
[S]   [B]   [C, S][B]   []    [C]   []    []    []    []    
[B]   [C, S][S]   [C, S][]    [S]   [B]   []    []    []    
[C, S][S]   [B]   [S]   [C, S][B]   [C, S][B]   []    []    
[B]   [C, S][S]   [C, S][B]   [S]   [B]   []    [C]   []    
[S]   [B]   [C, S][B]   [S]   [C, S][S]   [C, S][B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [C, S][]    []    []    []    []    []    []    []    
[]    []    [C, S][]    []    []    []    []    []    []    
[B]   [C, S][S]   []    []    []    []    []    []    []    
[C, S][]    [B]   [S]   []    []    []    []    []    []    
[]    [C, S][S]   [C, S][B]   []    []    []    []    []    
[]    []    [C, S][B]   [S]   [C, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CS }]
S[{ S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->CC }, { C-->b }]

}
word='aabbbabbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [S, C]   [C]      []       []       []       []       []       []       
[A, S]   [A, S]   [B, S, C][S, C]   [C]      []       []       []       []       []       
[A, S]   [A, S]   [A, B, S][A, B, S][B]      [S]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[A, S]   [A, S]   [A, B, S][A, B, S][B]      [A, S]   [S, C]   [C]      []       []       
[A, S]   [A, S]   [A, B, S][A, B, S][B]      [A, S]   [A, B, S][B]      [S]      []       
[A, S]   [A, S]   [A, B, S][A, B, S][B]      [A, S]   [A, B, S][B]      [A, S]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [B]      [A, B, S][B]      []       []       []       []       []       
[]       []       [B]      [A, B, S][B]      []       [A, B, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AA }, { S-->AB }]

}
word='abbabababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[B, S][B, S][A]   []    []    []    []    []    []    []    
[B, S][B, S][A, S][B]   []    []    []    []    []    []    
[A, S][A, S][B, S][A]   [A]   []    []    []    []    []    
[A, S][A, S][B, S][A, S][A, S][B]   []    []    []    []    
[B, S][B, S][A, S][B, S][B, S][A]   [A]   []    []    []    
[B, S][B, S][A, S][B, S][B, S][A, S][A, S][B]   []    []    
[A, S][A, S][B, S][A, S][A, S][B, S][B, S][A]   [A]   []    
[A, S][A, S][B, S][A, S][A, S][B, S][B, S][A, S][A, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[A]   []    [B, S][]    []    []    []    []    []    []    
[B]   []    [A, S][B]   []    []    []    []    []    []    
[B, S][B, S][]    [B, S][B, S][]    []    []    []    []    
[S]   [A, S][]    [S]   [A, S][B]   []    []    []    []    
[A]   []    [B, S][A]   []    [B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->SC }]
S[{ S-->a }, { S-->CS }]
C[{ C-->SC }, { C-->b }]

}
word='abbabababa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, C]   [C]      []       []       []       []       []       []       []       []       
[A]      [A]      [C]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [C]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [C]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AC }, { S-->CA }]

}
word='abbabababa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][]       [C]      []       []       []       []       []       []       []       
[S]      []       [S]      [A]      []       []       []       []       []       []       
[A, C, S][]       [S]      [A, C, S][C]      []       []       []       []       []       
[S]      []       []       [S]      [S]      [A]      []       []       []       []       
[A, C, S][]       [S]      [A, C, S][S]      [A, C, S][C]      []       []       []       
[S]      []       []       [S]      []       [S]      [S]      [A]      []       []       
[A, C, S][]       [S]      [A, C, S][S]      [A, C, S][S]      [A, C, S][C]      []       
[S]      []       []       [S]      []       [S]      []       [S]      [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A, C, S][]       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A, C, S][]       [A, C, S][]       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->a }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->CC }, { C-->b }, { C-->BC }]

}
word='abbabababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][B]   []    []    []    []    []    []    
[C, S][C]   [C]   [C, S][C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][B]   []    []    []    []    
[C, S][C]   [C]   [C, S][C]   [C, S][C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][B]   []    []    
[C, S][C]   [C]   [C, S][C]   [C, S][C]   [C, S][C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[C, S][C]   [C]   [C, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[C, S][C]   [C]   [C, S][C]   [C, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=50

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=50
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
S[{ S-->AC }, { S-->CA }]
C[{ C-->a }, { C-->AA }]

}
word='abbabababa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    [C]   [A, S][C]   []    []    []    []    []    []    
[S]   [A, S][C]   [S]   [A]   []    []    []    []    []    
[S]   [A, S][C]   [S]   [A, S][C]   []    []    []    []    
[]    [C]   [A, S][]    [C]   [S]   [A]   []    []    []    
[]    [C]   [A, S][]    [C]   [S]   [A, S][C]   []    []    
[S]   [A, S][C]   [S]   [A, S][]    [C]   [S]   [A]   []    
[S]   [A, S][C]   [S]   [A, S][]    [C]   [S]   [A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    [C]   []    []    []    []    []    
[]    [A, S][C]   []    []    []    []    []    []    []    
[S]   []    [C]   [S]   []    []    [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='aabaababbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[B, S, C][B, S]   [S]      []       []       []       []       []       []       []       
[C]      [C]      [C]      [B]      []       []       []       []       []       []       
[]       []       []       [C]      [B]      []       []       []       []       []       
[B, S, C][B, S, C][C]      [B, S, C][B, S]   [S]      []       []       []       []       
[C]      [C]      []       [C]      [C]      [C]      [B]      []       []       []       
[B, S, C][B, S, C][C]      [B, S, C][B, S, C][C]      [B, S]   [S]      []       []       
[B, S, C][B, S, C][C]      [B, S, C][B, S, C][C]      [B, S]   []       [S]      []       
[B, S, C][B, S, C][C]      [B, S, C][B, S, C][C]      [B, S]   []       []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       [C]      []       []       []       []       []       []       
[B, S, C][B, S, C][]       [B, S, C][B, S, C][]       []       []       []       []       
[]       [B, S, C][C]      []       [B, S, C][C]      []       []       []       []       
[]       [B, S, C][C]      []       [B, S, C][C]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->a }]
S[{ S-->SB }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->SB }, { C-->BB }, { C-->SS }]

}
word='aabaababbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S, C][B]   []    []    []    []    []    []    []    []    
[S, C][A]   [S]   []    []    []    []    []    []    []    
[S, C][A]   [S, C][B]   []    []    []    []    []    []    
[S, C][A]   [S, C][S, C][B]   []    []    []    []    []    
[S, C][A]   [S, C][S, C][A]   [S]   []    []    []    []    
[S, C][A]   [S, C][S, C][A]   [S, C][B]   []    []    []    
[S, C][A]   [S, C][S, C][A]   [S, C][A]   [S]   []    []    
[S, C][A]   [S, C][S, C][A]   [S, C][A]   [S, C][S]   []    
[S, C][A]   [S, C][S, C][A]   [S, C][A]   [S, C][S, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[S, C][A]   []    [S, C][]    []    []    []    []    []    
[S, C][A]   []    [S, C][A]   []    []    []    []    []    
[S, C][A]   []    [S, C][A]   [S, C][]    []    []    []    
[S, C][A]   []    [S, C][A]   [S, C][A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=36

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=36
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SC }, { C-->b }]

}
word='aabaababbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[A, S, C][S, C]   [C]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [S]      []       []       []       []       []       []       
[]       []       []       [A]      [S]      []       []       []       []       []       
[A, S, C][A, S, C][A]      [A, S, C][S, C]   [C]      []       []       []       []       
[A]      [A]      []       [A]      [A]      [A]      [S]      []       []       []       
[A, S, C][A, S, C][A]      [A, S, C][A, S, C][A]      [S, C]   [C]      []       []       
[A, S, C][A, S, C][A]      [A, S, C][A, S, C][A]      [S, C]   []       [C]      []       
[A, S, C][A, S, C][A]      [A, S, C][A, S, C][A]      [S, C]   []       []       [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       [A]      []       []       []       []       []       []       
[A, S, C][A, S, C][]       [A, S, C][A, S, C][]       []       []       []       []       
[]       [A, S, C][A]      []       [A, S, C][A]      []       []       []       []       
[]       [A, S, C][A]      []       [A, S, C][A]      []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
S[{ S-->SA }, { S-->a }]

}
word='aabaababbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][] [S][] [] [] [] [] [] 
[A][S][] [A][S][] [] [] [] [] 
[A][S][] [A][S][A][] [] [] [] 
[S][A][] [S][A][] [S][] [] [] 
[S][A][] [S][A][] [S][A][] [] 
[S][A][] [S][A][] [S][] [A][] 
[S][A][] [S][A][] [S][] [] [A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SS }, { C-->b }]

}
word='aabaababbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [S]   [C]   []    []    []    []    []    []    []    
[B, S][C]   [B]   [S]   []    []    []    []    []    []    
[C]   [B, S][]    [C]   [S]   []    []    []    []    []    
[C]   [B, S][]    [C]   [S]   [C]   []    []    []    []    
[B, S][C]   [B]   [B, S][C]   [B]   [S]   []    []    []    
[B, S][C]   [B]   [B, S][C]   [B]   [S]   [C]   []    []    
[B, S][C]   [B]   [B, S][C]   [B]   [S]   []    [C]   []    
[B, S][C]   [B]   [B, S][C]   [B]   [S]   []    []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    [B, S][]    []    []    []    []    []    
[B]   [C]   [B]   [B]   [C]   []    []    []    []    []    
[B]   [C]   [B]   [B]   [C]   [B]   []    []    []    []    
[B]   [C]   [B]   [B]   [C]   [B]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->SC }]
C[{ C-->a }, { C-->SS }]
S[{ S-->SC }, { S-->b }]

}
word='bbabaabaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[C]      [B, S]   [C]      []       []       []       []       []       []       []       
[A, B, S][C]      [A]      [S]      []       []       []       []       []       []       
[A, B, S][C]      [A]      [B, S]   [C]      []       []       []       []       []       
[A, B, S][C]      [A]      [B, S]   []       [C]      []       []       []       []       
[C]      [A, B, S][]       [C]      []       [A]      [S]      []       []       []       
[C]      [A, B, S][]       [C]      []       [A]      [B, S]   [C]      []       []       
[C]      [A, B, S][]       [C]      []       [A]      [B, S]   []       [C]      []       
[A, B, S][C]      [A]      [A, B, S][]       []       [C]      []       [A]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [C]      [A]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       [A]      []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='bbabaabaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[B, C][B, C][B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }, { S-->SC }]
C[{ C-->CS }, { C-->SS }, { C-->b }]

}
word='bbabaabaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S, C][S, C][S]   []    []    []    []    []    []    []    
[S, C][S, C][S]   [C]   []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [S]   []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [S]   [C]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C]   [S]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C]   [S]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
C[{ C-->a }]
S[{ S-->SS }, { S-->SC }, { S-->CC }, { S-->b }]

}
word='bbabaabaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A, S][C]   []    []    []    []    []    []    []    
[S]   [S]   [A]   [S]   []    []    []    []    []    []    
[A, S][A, S][A]   [A, S][C]   []    []    []    []    []    
[A, S][A, S][A]   [A, S][S]   [C]   []    []    []    []    
[S]   [S]   [A]   [S]   [S]   [A]   [S]   []    []    []    
[A, S][A, S][A]   [A, S][A, S][A]   [A, S][C]   []    []    
[A, S][A, S][A]   [A, S][A, S][A]   [A, S][S]   [C]   []    
[S]   [S]   [A]   [S]   [S]   [A]   [S]   [S]   [A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A, S][A]   []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[A]   [A, S][A]   [A]   [A, S][]    []    []    []    []    
[A]   [A, S][A]   [A]   [A, S][A]   []    []    []    []    
[]    [S]   [A]   []    [S]   [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BA }]
S[{ S-->BB }, { S-->AB }]

}
word='bbabaabaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A, B, S][A, B]   [A]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B]   [A]      []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B]   [A]      [A]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, B]   [A]      []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, B]   [A]      [A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][]       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   []       []       []       []       []       
[]       [S]      []       [S]      [S]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->AA }]

}
word='baaaababab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[C]      [C]      [A]      []       []       []       []       []       []       []       
[]       []       [C]      [A]      []       []       []       []       []       []       
[]       []       []       [C]      [A]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->BA }, { B-->a }]
S[{ S-->AB }]

}
word='baaaababab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[S]      [A, B]   [A, B]   [A, B]   [A, B]   [A]      []       []       []       []       
[]       [S]      [S]      [S]      [S]      [S]      [B]      []       []       []       
[S]      [A, B, S][A, B, S][A, B, S][A, B, S][S]      [A, B]   [A]      []       []       
[]       [S]      [S]      [S]      [S]      []       [S]      [S]      [B]      []       
[S]      [A, B, S][A, B, S][A, B, S][A, B, S][S]      [A, B, S][S]      [A, B]   [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [S]      [S]      [S]      []       []       []       []       []       []       
[]       [A, B, S][A, B, S][A, B, S][A, B, S][]       []       []       []       []       
[]       [S]      [S]      [S]      []       []       []       []       []       []       
[]       [A, B, S][A, B, S][A, B, S][A, B, S][]       [A, B, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }, { B-->CS }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CS }, { S-->b }]

}
word='baaaababab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [C]      []       []       []       []       []       []       []       
[]       []       [A, B]   [C]      []       []       []       []       []       []       
[]       []       []       [A, B]   [C]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [C]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [C]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
B[{ B-->SC }, { B-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SC }, { S-->b }]

}
word='baaaababab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[B, S]   [A, B]   [C]      []       []       []       []       []       []       []       
[B, S]   []       [A, B]   [C]      []       []       []       []       []       []       
[B, S]   []       []       [A, B]   [C]      []       []       []       []       []       
[B, S]   []       []       [A, B]   [A, C]   [S]      []       []       []       []       
[B, S]   []       []       [A, B]   [A, B, C][B, S]   [C]      []       []       []       
[B, S]   []       []       [A, B]   [A, B, C][B, S]   [A, C]   [S]      []       []       
[B, S]   []       []       [A, B]   [A, B, C][B, S]   [A, B, C][B, S]   [C]      []       
[B, S]   []       []       [A, B]   [A, B, C][B, S]   [A, B, C][B, S]   [A, C]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    [A, B][B]   []    []    []    []    []    
[]    []    []    [A, B][B]   []    []    []    []    []    
[]    []    []    [A, B][B]   []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
S[{ S-->AS }, { S-->SA }, { S-->b }]
C[{ C-->AA }]

}
word='baaaababab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S]   [A]      []       []       []       []       []       []       []       []       
[A, S, C][C]      [A]      []       []       []       []       []       []       []       
[A, S, C][]       [C]      [A]      []       []       []       []       []       []       
[A, S, C][]       []       [C]      [A]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [A]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SC }, { C-->b }]

}
word='bbbbbbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[C]      [A, B, S][C]      []       []       []       []       []       []       []       
[A, B, S][C]      [A, B, S][C]      []       []       []       []       []       []       
[C]      [A, B, S][C]      [A, B, S][C]      []       []       []       []       []       
[A, B, S][C]      [A, B, S][C]      [A, B, S][C]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[C]      [A, B, S][C]      [A, B, S][C]      [A, B, S][C]      [C]      []       []       
[]       []       []       []       []       []       []       []       [S]      []       
[A, B, S][C]      [A, B, S][C]      [A, B, S][C]      [A, B, S][A, B, S][C]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SC }, { C-->b }]

}
word='bbbbbbabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[C]   [B, S][C]   []    []    []    []    []    []    []    
[B, S][C]   [B, S][C]   []    []    []    []    []    []    
[C]   [B, S][C]   [B, S][C]   []    []    []    []    []    
[B, S][C]   [B, S][C]   [B, S][C]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[C]   [B, S][C]   [B, S][C]   [B, S][C]   [C]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[B, S][C]   [B, S][C]   [B, S][C]   [B, S][B, S][C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
C[{ C-->AC }, { C-->CC }, { C-->b }]
S[{ S-->CA }, { S-->CC }]

}
word='bbbbbbabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->a }, { S-->AA }]

}
word='bbbbbbabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[A]   [B, S][A]   []    []    []    []    []    []    []    
[B, S][A]   [B, S][A]   []    []    []    []    []    []    
[A]   [B, S][A]   [B, S][A]   []    []    []    []    []    
[B, S][A]   [B, S][A]   [B, S][A]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[A]   [B, S][A]   [B, S][A]   [B, S][A]   [A]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[B, S][A]   [B, S][A]   [B, S][A]   [B, S][B, S][A]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->a }]
C[{ C-->SB }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='bbbbbbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->a }]
S[{ S-->CB }]
C[{ C-->CC }, { C-->BB }, { C-->b }]

}
word='bbaabbbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, C][C]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[A, C][A, C][C]   [B]   []    []    []    []    []    []    
[A, C][A, C][A, C][A]   [C]   []    []    []    []    []    
[A, C][A, C][A, C][A]   [A, C][C]   []    []    []    []    
[A, C][A, C][A, C][A]   [A, C][A, C][C]   []    []    []    
[A, C][A, C][A, C][A]   [A, C][A, C][A, C][C]   []    []    
[A, C][A, C][A, C][A]   [A, C][A, C][A, C][A, C][C]   []    
[S]   [S]   [S]   []    [S]   [S]   [S]   [S]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [A, C][A]   []    []    []    []    []    []    
[]    []    [A, C][A]   []    []    []    []    []    []    
[]    []    [A, C][A]   []    []    []    []    []    []    
[S]   [S]   []    []    [S]   [S]   [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
C[{ C-->CB }, { C-->b }]
S[{ S-->CC }]

}
word='bbaabbbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C]   [B]      []       []       []       []       []       []       []       
[B, C, S][B, C]   []       [B]      []       []       []       []       []       []       
[S]      [S]      []       []       [C]      []       []       []       []       []       
[]       []       []       []       [S]      [C]      []       []       []       []       
[]       []       []       []       []       [S]      [C]      []       []       []       
[]       []       []       []       []       []       [S]      [C]      []       []       
[]       []       []       []       []       []       []       [S]      [C]      []       
[B, C, S][B, C, S][]       []       [B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AA }, { A-->CA }]
S[{ S-->CA }]
C[{ C-->b }]

}
word='bbaabbbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [A]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[A, S][A, S][A]   [A]   [A]   [C]   []    []    []    []    
[A, S][A, S][A]   [A]   [A, S][A]   [C]   []    []    []    
[A, S][A, S][A]   [A]   [A, S][A, S][A]   [C]   []    []    
[A, S][A, S][A]   [A]   [A, S][A, S][A, S][A]   [C]   []    
[A, S][A, S][A]   [A]   [A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [S][] [] [] [] [] 
[S][S][] [] [S][S][] [] [] [] 
[S][S][] [] [S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }]
C[{ C-->BA }, { C-->BB }]
S[{ S-->AA }, { S-->AB }]

}
word='bbaabbbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][B]   []    []    []    []    []    []    []    
[A, S][A, S][C]   [B]   []    []    []    []    []    []    
[A, S][A, S][]    [C]   [A]   []    []    []    []    []    
[A, S][A, S][]    [C]   [A, S][A]   []    []    []    []    
[A, S][A, S][]    [C]   [A, S][A, S][A]   []    []    []    
[A, S][A, S][]    [C]   [A, S][A, S][A, S][A]   []    []    
[A, S][A, S][]    [C]   [A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][]    [C]   [A, S][A, S][A, S][A, S][A, S][B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
S[{ S-->BB }, { S-->b }, { S-->BS }]

}
word='bbaabbbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[S]   []    [B]   []    []    []    []    []    []    []    
[S]   [B]   [S]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
C[{ C-->AC }, { C-->CC }, { C-->b }]
S[{ S-->CA }]

}
word='bababbbbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[S][S][S][A][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[S][S][S][S][S][S][S][S][S][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->SB }, { C-->SS }]

}
word='bababbbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][B]   []    []    []    []    []    []    []    []    
[B, C][]    [S]   []    []    []    []    []    []    []    
[B, C][]    [S, C][B]   []    []    []    []    []    []    
[S, C][]    [B, C][]    [S]   []    []    []    []    []    
[B, C][]    [S, C][]    [B, C][S]   []    []    []    []    
[S, C][]    [B, C][]    [S, C][B, C][S]   []    []    []    
[B, C][]    [S, C][]    [B, C][S, C][B, C][S]   []    []    
[S, C][]    [B, C][]    [S, C][B, C][S, C][B, C][S]   []    
[S, C][]    [B, C][]    [S, C][B, C][S, C][B, C][S, C][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
S[{ S-->AS }, { S-->a }, { S-->AA }]

}
word='bababbbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [S]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->CA }]
S[{ S-->AC }, { S-->CA }, { S-->AA }]
C[{ C-->a }, { C-->AA }]

}
word='bababbbbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [C]      []       []       []       []       []       []       []       []       
[C, S]   [B, S]   [A]      []       []       []       []       []       []       []       
[C, S]   [B, S]   [A, S]   [C]      []       []       []       []       []       []       
[A, B, S][]       [C, S]   [B, S]   [A]      []       []       []       []       []       
[C, S]   [B, S]   [A, B, S][]       [C, S]   [A]      []       []       []       []       
[A, B, S][]       [C, S]   [B, S]   [A, B, S][C, S]   [A]      []       []       []       
[C, S]   [B, S]   [A, B, S][]       [C, S]   [A, B, S][C, S]   [A]      []       []       
[A, B, S][]       [C, S]   [B, S]   [A, B, S][C, S]   [A, B, S][C, S]   [A]      []       
[A, B, S][]       [C, S]   [B, S]   [A, B, S][C, S]   [A, B, S][C, S]   [A, S]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[]       []       [C, S]   []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[]       []       [C, S]   []       [A, B, S][]       []       []       []       []       
[]       []       [C, S]   [B, S]   [B]      [C]      [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->AC }, { B-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }]

}
word='bababbbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [C]   []    []    []    []    
[]    []    []    []    []    [B]   [C]   []    []    []    
[]    []    []    []    []    []    [B]   [C]   []    []    
[]    []    []    []    []    []    []    [B]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->AB }, { B-->BA }]
C[{ C-->BB }]
S[{ S-->BB }]

}
word='aabbbbbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][B]      []       []       []       []       []       []       
[B]      [B]      [B]      [A, C, S][B]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][B]      [A, C, S][B]      []       []       []       []       
[B]      [B]      [B]      [A, C, S][B]      [A, C, S][B]      []       []       []       
[B]      [B]      [B]      [A, C, S][B]      [A, C, S][B]      [A]      []       []       
[A, C, S][A, C, S][A, C, S][B]      [A, C, S][B]      [A, C, S][B]      [B]      []       
[A, C, S][A, C, S][A, C, S][B]      [A, C, S][B]      [A, C, S][B]      [B]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][]       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[B]      [B]      []       [A, C, S][]       []       []       []       []       []       
[A, C, S][A, C, S][]       [B]      []       [B]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][]       [A, C, S][]       [A, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }, { S-->BS }]

}
word='aabbbbbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [B]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [A, S]   [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [B]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AC }, { B-->CC }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->AA }, { C-->b }]

}
word='aabbbbbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[A, B, S][B, S]   [C]      []       []       []       []       []       []       []       
[B, S]   [C]      [A, B, S][C]      []       []       []       []       []       []       
[C]      [A, B, S][B, S]   [A, B, S][C]      []       []       []       []       []       
[A, B, S][B, S]   [C]      [B, S]   [A, B, S][C]      []       []       []       []       
[B, S]   [C]      [A, B, S][C]      [B, S]   [A, B, S][C]      []       []       []       
[A, B, S][B, S]   [C]      [B, S]   [A, B, S][C]      []       [A]      []       []       
[B, S]   [C]      [A, B, S][C]      [B, S]   [A, B, S][]       [B, S]   [C]      []       
[A, B, S][B, S]   [C]      [B, S]   [A, B, S][C]      []       []       []       [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [A, B, S][]       []       []       []       []       []       []       []       
[A, B, S][]       [C]      []       []       []       []       []       []       []       
[]       [C]      []       [C]      []       []       []       []       []       []       
[A, B, S][]       [C]      [B, S]   [A, B, S][]       []       []       []       []       
[]       [C]      []       [C]      [B, S]   []       []       []       []       []       
[A, B, S][]       [C]      [B, S]   [A, B, S][]       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
C[{ C-->SA }, { C-->AA }]
S[{ S-->a }, { S-->AA }]

}
word='aabbbbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[S, C][C]   [A]   []    []    []    []    []    []    []    
[C]   [A]   [S, C][A]   []    []    []    []    []    []    
[A]   [S, C][C]   [S, C][A]   []    []    []    []    []    
[S, C][C]   [A]   [C]   [S, C][A]   []    []    []    []    
[C]   [A]   [S, C][A]   [C]   [S, C][A]   []    []    []    
[S, C][C]   [A]   [C]   [S, C][A]   []    [S]   []    []    
[C]   [A]   [S, C][A]   [C]   [S, C][]    [C]   [A]   []    
[S, C][C]   [A]   [C]   [S, C][A]   []    []    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[S, C][]    [A]   []    []    []    []    []    []    []    
[]    [A]   []    [A]   []    []    []    []    []    []    
[S, C][]    [A]   [C]   [S, C][]    []    []    []    []    
[]    [A]   []    [A]   [C]   []    []    []    []    []    
[S, C][]    [A]   [C]   [S, C][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->SB }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->SB }]

}
word='aabbbbbaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   [S]   []    []    []    []    []    []    
[S]   []    [S]   [S]   [S]   []    []    []    []    []    
[S]   []    [S]   [S]   [S]   [S]   []    []    []    []    
[S]   []    [S]   [S]   [S]   [S]   [S]   []    []    []    
[S, C][]    [S, C][S, C][S, C][S, C][S, C][B]   []    []    
[S]   []    [S]   [S]   [S]   [S]   [S]   []    [S]   []    
[S, C][]    [S, C][S, C][S, C][S, C][S, C][]    [S, C][B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][C][C][C][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }, { C-->CC }]
S[{ S-->BB }]

}
word='baabbabaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[B]   [C]   [C]   []    []    []    []    []    []    []    
[B, S][A, C][A, C][B]   []    []    []    []    []    []    
[B, S][A, C][A, C][S]   [B]   []    []    []    []    []    
[B, S][A, C][A, C][S]   [B]   [C]   []    []    []    []    
[B, S][A, C][A, C][S]   [B, S][A, C][B]   []    []    []    
[B, S][A, C][A, C][S]   [B, S][A, C][B]   [C]   []    []    
[B, S][A, C][A, C][S]   [B, S][A, C][B]   [C]   [C]   []    
[B, S][A, C][A, C][S]   [B, S][A, C][B]   [C]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A]   [A, C][]    []    []    []    []    []    []    
[S]   [A]   [A, C][S]   []    []    []    []    []    []    
[S]   [A]   [A, C][S]   [S]   []    []    []    []    []    
[S]   [A]   [A, C][S]   [S]   []    []    []    []    []    
[S]   [A]   [A, C][S]   [S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='baabbabaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][A][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[B][A][B][S][] [] [] [] [] [] 
[S][B][S][A][S][] [] [] [] [] 
[B][A][B][S][B][A][] [] [] [] 
[S][B][S][A][] [B][S][] [] [] 
[B][A][B][S][] [] [B][A][] [] 
[A][S][A][B][A][S][A][S][A][] 
[S][B][S][A][S][B][S][B][S][A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [A][B][] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[] [A][B][] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[S][B][] [A][S][B][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->b }]

}
word='baabbabaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [B]   []    []    []    []    []    []    []    
[A, S][]    [B]   [S]   []    []    []    []    []    []    
[A, S][]    [B]   [A]   [S]   []    []    []    []    []    
[A, S][]    [B]   [A]   [S]   [B]   []    []    []    []    
[A, S][]    [B]   [A]   [A, S][B]   [S]   []    []    []    
[A, S][]    [B]   [A]   [A, S][B]   [S]   [B]   []    []    
[A, S][]    [B]   [A]   [A, S][B]   [S]   []    [B]   []    
[A, S][]    [B]   [A]   [A, S][B]   [S]   []    []    [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][A][] [] [] [] [] [] 
[] [] [B][A][A][] [] [] [] [] 
[] [] [B][A][A][] [] [] [] [] 
[] [] [B][A][A][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->SS }]
S[{ S-->AS }, { S-->a }, { S-->SS }]
C[{ C-->AS }, { C-->AA }]

}
word='baabbabaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[B, S, C][B, S]   [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [A]      []       []       []       []       []       []       
[]       []       []       [C]      [A]      []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [S, C]   [S, C]   [S]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [A]      []       []       []       
[B, S, C][B, S]   [B, S]   [B, S, C][B, S, C][B, S]   [S, C]   [S]      []       []       
[B, S, C][B, S]   [B, S]   [B, S, C][B, S, C][B, S]   [B, S, C][B, S]   [S]      []       
[B, S, C][B, S]   [B, S]   [B, S, C][B, S, C][B, S]   [B, S, C][B, S]   [B, S]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B, S, C][B, S, C][]       []       []       []       []       
[C]      []       []       [C]      [C]      []       []       []       []       []       
[C]      []       []       [C]      [C]      []       [C]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->BA }]
B[{ B-->b }]
S[{ S-->BA }, { S-->AA }, { S-->AB }]

}
word='baabbabaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }]
S[{ S-->SB }, { S-->a }, { S-->BB }]

}
word='abbabbabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [S]   []    []    []    []    []    []    
[S]   [B, S][B, S][S]   [B]   []    []    []    []    []    
[S]   [B, S][B, S][S]   [S]   [B]   []    []    []    []    
[S]   [B, S][B, S][S]   [S]   [B]   [S]   []    []    []    
[S]   [B, S][B, S][S]   [B, S][B, S][S]   [B]   []    []    
[S]   [B, S][B, S][S]   [B, S][B, S][S]   [S]   [B]   []    
[S]   [B, S][B, S][S]   [B, S][B, S][S]   [S]   [B]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [S][] [B][] [] [] [] [] 
[] [] [S][] [] [S][] [] [] [] 
[] [] [S][] [] [S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->BA }]
S[{ S-->BB }, { S-->AB }]

}
word='abbabbabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[S]      [A, B, S][A, B]   [A]      []       []       []       []       []       []       
[]       [S]      [S]      [S]      [B]      []       []       []       []       []       
[]       []       []       []       [S]      [B]      []       []       []       []       
[S]      [A, B, S][A, B, S][S]      [A, B, S][A, B]   [A]      []       []       []       
[]       [S]      [S]      []       [S]      [S]      [S]      [B]      []       []       
[]       []       []       []       []       []       []       [S]      [B]      []       
[S]      [A, B, S][A, B, S][S]      [A, B, S][A, B, S][S]      [A, B, S][A, B]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->CA }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->CA }, { C-->b }]

}
word='abbabbabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [C]      []       []       []       []       []       []       []       []       
[A, S]   [S]      [C]      []       []       []       []       []       []       []       
[A, S]   [S]      [B, C]   [A]      []       []       []       []       []       []       
[A, S]   [S]      [B, C, S][A, S]   [C]      []       []       []       []       []       
[A, S]   [S]      [B, C, S][A, S]   [S]      [C]      []       []       []       []       
[A, S]   [S]      [B, C, S][A, S]   [S]      [B, C]   [A]      []       []       []       
[A, S]   [S]      [B, C, S][A, S]   [S]      [B, C, S][A, S]   [C]      []       []       
[A, S]   [S]      [B, C, S][A, S]   [S]      [B, C, S][A, S]   [S]      [C]      []       
[A, S]   [S]      [B, C, S][A, S]   [S]      [B, C, S][A, S]   [S]      [B, C]   [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [A, S][]    []    []    []    []    []    
[A, S][S]   [S]   [A, S][S]   []    []    []    []    []    
[A, S][S]   [S]   [A, S][S]   [S]   []    []    []    []    
[A, S][S]   [S]   [A, S][S]   [S]   [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=40
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
S[{ S-->a }, { S-->AA }]

}
word='abbabbabba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[S][S][A][] [] [] [] [] [] [] 
[S][S][A][S][] [] [] [] [] [] 
[A][A][S][A][A][] [] [] [] [] 
[S][S][A][S][S][A][] [] [] [] 
[S][S][A][S][S][A][S][] [] [] 
[A][A][S][A][A][S][A][A][] [] 
[S][S][A][S][S][A][S][S][A][] 
[S][S][A][S][S][A][S][S][A][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[S][] [A][] [] [] [] [] [] [] 
[S][S][] [S][] [] [] [] [] [] 
[] [A][] [] [A][] [] [] [] [] 
[S][] [A][S][] [A][] [] [] [] 
[S][S][] [S][S][] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AB }]
S[{ S-->BA }]

}
word='abbabbabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[A, B]   []       [B]      []       []       []       []       []       []       []       
[S]      []       [S]      [A]      []       []       []       []       []       []       
[A, B, S][]       [S]      [A, B]   [B]      []       []       []       []       []       
[A, B, S][]       [S]      [A, B]   []       [B]      []       []       []       []       
[S]      []       []       [S]      []       [S]      [A]      []       []       []       
[A, B, S][]       [S]      [A, B, S][]       [S]      [A, B]   [B]      []       []       
[A, B, S][]       [S]      [A, B, S][]       [S]      [A, B]   []       [B]      []       
[S]      []       []       [S]      []       []       [S]      []       [S]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='aaabbbabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [C]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [C]   []    []    []    []    []    
[A]   [A]   [A]   [A, C][S]   [C]   []    []    []    []    
[A]   [A]   [A]   [A, C][B, S][C]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][A, C][S]   [A]   [C]   []    []    
[B, S][B, S][B, S][B, S][A, C][B, S][A]   [C]   [S]   []    
[B, S][B, S][B, S][B, S][A, C][B, S][A]   [C]   [B, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [A, C][]    []    []    []    []    
[]    []    []    [B, S][A]   [B, S][]    []    []    []    
[]    []    []    [B, S][A]   [B, S][A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->a }, { B-->SS }]
S[{ S-->BB }, { S-->b }]
C[{ C-->BS }]

}
word='aaabbbabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[C]   [A, S][B]   []    []    []    []    []    []    []    
[A, S][B]   [C]   [S]   []    []    []    []    []    []    
[B]   [C]   [A, S][B]   [S]   []    []    []    []    []    
[C]   [A, S][B]   [C]   [B]   [S]   []    []    []    []    
[B]   [C]   [A, S][B]   [A, S][]    [B]   []    []    []    
[C]   [A, S][B]   [C]   [B]   []    [C]   [S]   []    []    
[B]   [C]   [A, S][B]   [A, S][]    []    []    [B]   []    
[A, S][B]   [C]   [A, S][C]   [B]   [A, S][B]   [A, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, S][B]   []    []    []    []    []    []    []    
[B]   [C]   []    [B]   []    []    []    []    []    []    
[]    [A, S][B]   [C]   []    []    []    []    []    []    
[B]   [C]   []    [B]   []    []    []    []    []    []    
[]    [B]   [C]   [A, S][C]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->SA }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->a }, { S-->SS }]
C[{ C-->SS }]

}
word='aaabbbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S, C][S]      []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][S]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][S]      [S]      [S]      [S]      []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S]      [S]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][B, C][B, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->a }]
S[{ S-->BB }, { S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->BB }, { C-->BS }]

}
word='aaabbbabaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S, C]   [B]      []       []       []       []       []       []       []       []       
[A, S, C][S, C]   [B]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S]      [S]      []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S]      [S]      [S]      []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[A, S, C][A, S, C][A, S, C][S]      [S]      [S]      [A, S, C][S]      []       []       
[]       []       []       []       []       []       []       []       [B]      []       
[A, S, C][A, S, C][A, S, C][S]      [S]      [S]      [A, S, C][S]      [S, C]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[A, C][A, C][A, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CS }]
B[{ B-->CS }]
S[{ S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='aaabbbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [S]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [C]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      [C]      []       []       []       []       []       
[A]      [A]      [A]      [A, B, C][S]      [C]      []       []       []       []       
[A]      [A]      [A]      [A, B, C][A, S]   [A, B, C][S]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, B, C][S]      [A]      [C]      []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, B, C][A, S]   [A]      [A, B, C][S]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, B, C][A, S]   [A]      [A, B, C][A, S]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [B, C][]    []    []    []    []    
[]    []    []    [S]   []    [A, S][]    []    []    []    
[]    []    []    [S]   []    [A, S][A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
S[{ S-->a }, { S-->SC }, { S-->SS }]
C[{ C-->b }]

}
word='abaaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   [S]   []    []    []    []    []    []    
[S]   []    [S]   [S]   [S]   []    []    []    []    []    
[B, S][]    [B, S][B, S][B, S][C]   []    []    []    []    
[B, S][]    [B, S][B, S][B, S][]    [C]   []    []    []    
[B, S][]    [B, S][B, S][B, S][]    []    [C]   []    []    
[B, S][]    [B, S][B, S][B, S][]    []    []    [C]   []    
[S]   []    [S]   [S]   [S]   []    []    []    []    [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][B][] [] [] [] [] [] 
[] [] [B][B][] [] [] [] [] [] 
[] [] [B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->BB }]
S[{ S-->BB }, { S-->AB }]

}
word='abaaabbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C]   [A]      []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[]       []       [C, S]   [B]      []       []       []       []       []       []       
[]       []       []       [C, S]   [B]      []       []       []       []       []       
[B, C, S][B]      [A, C]   [A, C]   [A, C]   [A]      []       []       []       []       
[A, C, S][A, C, S][B, C, S][B, C, S][B, C, S][B]      [A]      []       []       []       
[B, C, S][B, C, S][A, C, S][A, C, S][A, C, S][A, S, C][B]      [A]      []       []       
[A, C, S][A, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A, S, C][B]      [A]      []       
[S]      [S]      [C, S]   [C, S]   [C, S]   [C, S]   [S]      [C, S]   [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A]   [B, C][B, C][]    []    []    []    []    []    
[B, C][C, S][S]   [S]   [S]   []    []    []    []    []    
[S]   [A]   [B, C][B, C][B, C][C, S][]    []    []    []    
[S]   [S]   [C, S][C, S][C, S][C, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CS }, { B-->CC }]
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->CC }, { C-->b }]

}
word='abaaabbbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[S]      [B, S]   [S]      []       []       []       []       []       []       []       
[S]      [B, S]   [S]      [S]      []       []       []       []       []       []       
[S]      [B, S]   [S]      [S]      [S]      []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       [A, B, C][C]      []       []       []       
[]       []       []       []       []       [A, B, C][A, B, C][C]      []       []       
[]       []       []       []       []       [A, B, C][A, B, C][A, B, C][C]      []       
[S]      [B, S]   [S]      [S]      [S]      [B, S]   [B, S]   [B, S]   [B, S]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AC }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CA }, { S-->CC }, { S-->AA }]

}
word='abaaabbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A, S]   [B, C]   [C]      []       []       []       []       []       []       []       
[B, C, S][A, S]   [A, S]   [C]      []       []       []       []       []       []       
[A, S]   [B, S, C][B, S, C][A, S]   [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [A]      []       []       []       []       
[]       []       []       []       []       [S]      [A]      []       []       []       
[]       []       []       []       []       []       [S]      [A]      []       []       
[]       []       []       []       []       []       []       [S]      [A]      []       
[B, C, S][A, S]   [A, S]   [B, S, C][A, S]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
S[{ S-->a }, { S-->SC }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='abaaabbbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [A, C]   [S]      []       []       []       []       []       []       []       
[S]      [A, C]   []       [S]      []       []       []       []       []       []       
[S]      [A, C]   []       []       [S]      []       []       []       []       []       
[S]      [A, C, S][]       []       [S]      [C]      []       []       []       []       
[S]      [A, C, S][]       []       [S]      [S]      [C]      []       []       []       
[S]      [A, C, S][]       []       [S]      [A, C, S][S]      [C]      []       []       
[S]      [A, C, S][]       []       [S]      [A, S, C][A, C, S][S]      [C]      []       
[S]      [A, C, S][]       []       [S]      [A, S, C][A, C, S][S]      [A, C]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->SB }, { B-->SS }]
S[{ S-->SB }, { S-->a }]

}
word='abbaabbbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[A, B, S][A]      [B]      []       []       []       []       []       []       []       
[A, B]   []       [A]      [S]      []       []       []       []       []       []       
[A, B, S][]       [A]      [B]      [S]      []       []       []       []       []       
[A, B, S][]       [A]      [A, B, S][B, S]   [B]      []       []       []       []       
[A, B, S][]       [A]      [A, B, S][A, B, S][A]      [B]      []       []       []       
[A, B, S][]       [A]      [A, B, S][A, B, S][]       [A]      [B]      []       []       
[A, B, S][]       [A]      [A, B, S][A, B, S][]       []       [A]      [B]      []       
[A, B, S][]       [A]      [A, B, S][A, B]   []       []       []       [A]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BB }]
S[{ S-->CB }]
C[{ C-->a }]

}
word='abbaabbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[A, S][A, B][B]   []    []    []    []    []    []    []    
[A, S][A, B][B]   [C]   []    []    []    []    []    []    
[A, S][A, B][B]   []    [C]   []    []    []    []    []    
[A, S][A, B][A, B][]    [A, S][B]   []    []    []    []    
[A, S][A, B][A, B][]    [A, S][A, B][B]   []    []    []    
[A, S][A, B][A, B][]    [A, S][A, B][A, B][B]   []    []    
[A, S][A, B][A, B][]    [A, S][A, B][A, B][A, B][B]   []    
[A, S][A, B][A, B][]    [A, S][A, B][A, B][A, B][B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    [A, S][]    []    []    []    []    
[A, S][]    []    []    [A, S][]    []    []    []    []    
[A, S][]    []    []    [A, S][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->b }, { B-->CC }]
C[{ C-->a }, { C-->BB }]
S[{ S-->BB }]

}
word='abbaabbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A, B][C, S][B]   []    []    []    []    []    []    []    
[A]   [A, B][A]   [C]   []    []    []    []    []    []    
[C, S][A]   [C, S][A, B][C]   []    []    []    []    []    
[A]   [A, B][A]   [C, S][]    [B]   []    []    []    []    
[A, B][C, S][A, B][A]   [A, B][C, S][B]   []    []    []    
[C, S][A]   [C, S][A, B][C, S][A]   [C, S][B]   []    []    
[A]   [A, B][A]   [C, S][A]   [A, B][A]   [C, S][B]   []    
[C, S][A]   [C, S][A, B][C, S][A]   [C, S][A, B][A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[A, B][]    [A, B][A]   []    []    []    []    []    []    
[C, S][]    []    [A, B][C, S][]    []    []    []    []    
[A]   [A, B][]    [C, S][A]   [A, B][]    []    []    []    
[C, S][]    [C, S][]    [C, S][]    [C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->SA }, { B-->SS }]
S[{ S-->AA }, { S-->b }]

}
word='abbaabbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A]   [B]   [S]   []    []    []    []    []    []    []    
[S]   []    [B]   [A]   []    []    []    []    []    []    
[A, B][]    [B]   [S]   [A]   []    []    []    []    []    
[A, B][]    [B]   [B, S][A]   [S]   []    []    []    []    
[A, B][]    [B]   [B, S][A]   [B]   [S]   []    []    []    
[A, B][]    [B]   [B, S][A]   []    [B]   [S]   []    []    
[A, B][]    [B]   [B, S][A]   []    []    [B]   [S]   []    
[B, S][]    [B]   [A, B][S]   []    []    []    [B]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [B][A][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AS }]
B[{ B-->AA }, { B-->SS }]
S[{ S-->SA }, { S-->a }]

}
word='abbaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A, B][A]   []    []    []    []    []    []    []    
[B, S][A, B][A]   [S]   []    []    []    []    []    []    
[B, S][A, B][A]   [B]   [S]   []    []    []    []    []    
[B, S][A, B][A, B][B]   [S]   [A]   []    []    []    []    
[B, S][A, B][A, B][B]   [S]   [A, B][A]   []    []    []    
[B, S][A, B][A, B][B]   [S]   [A, B][A, B][A]   []    []    
[B, S][A, B][A, B][B]   [S]   [A, B][A, B][A, B][A]   []    
[B, S][A, B][A, B][B]   [B, S][A, B][A, B][A, B][A]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    [A, B][]    []    []    []    []    []    []    
[B]   []    [A, B][B]   []    []    []    []    []    []    
[B]   []    [A, B][B]   []    []    []    []    []    []    
[B]   []    [A, B][B]   []    []    []    []    []    []    
[B]   []    [A, B][B]   [B]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->AB }]
B[{ B-->a }]
S[{ S-->BA }, { S-->AA }]

}
word='bbbaaababb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [B]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [B]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A, S][S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][S]   [A, S][S]   [A, S][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    [A, S][S]   []    []    []    []    
[]    []    []    []    [A, S][S]   [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->a }, { C-->BB }, { C-->CC }]
S[{ S-->BB }, { S-->CC }]

}
word='bbbaaababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C, S][B]   []    []    []    []    []    []    []    []    
[B]   [C, S][B]   []    []    []    []    []    []    []    
[B]   [C, S][B]   [C]   []    []    []    []    []    []    
[B]   [C, S][B]   [C, S][C]   []    []    []    []    []    
[B]   [C, S][B]   [C, S][C, S][C]   []    []    []    []    
[C, S][B]   [C, S][]    []    []    [B]   []    []    []    
[C, S][B]   [C, S][]    []    []    [B]   [C]   []    []    
[B]   [C, S][B]   [C, S][C, S][C, S][C, S][]    [B]   []    
[C, S][B]   [C, S][]    []    []    [B]   [C, S][C, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[B]   []    [B]   []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->SB }, { B-->a }]
S[{ S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->SS }]

}
word='bbbaaababb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S, C][S]      []       []       []       []       []       []       []       []       
[A, S, C][A, S, C][S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [A, S]   [A, S]   [S]      []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [S]      []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->AA }]

}
word='bbbaaababb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [A]   [A]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->a }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->SS }, { S-->BB }, { S-->b }, { S-->BS }]

}
word='bbbaaababb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [B]      []       []       []       []       []       []       
[S]      [S]      [S]      [S, C]   [B]      []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [B]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [B]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, C][A, C][A, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }]
S[{ S-->BA }, { S-->AA }]

}
word='bbbaababba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [B]   []    []    []    []    []    []    
[A, S][A, S][A]   []    [B]   []    []    []    []    []    
[A, S][A, S][A, S][]    [S]   [A]   []    []    []    []    
[A, S][A, S][A, S][]    [S]   [A]   [B]   []    []    []    
[A, S][A, S][A, S][]    [S]   [A, S][S]   [A]   []    []    
[A, S][A, S][A, S][]    [S]   [A, S][S]   [A, S][A]   []    
[A, S][A, S][A, S][]    [S]   [A, S][S]   [A, S][A]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [S]   [A, S][]    []    []    []    
[]    []    []    []    [S]   [A, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }]
C[{ C-->CB }, { C-->b }]
S[{ S-->CC }]

}
word='bbbaababba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   []       [B]      []       []       []       []       []       
[S]      [S]      [S]      []       []       [C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][]       []       [B, C]   [B]      []       []       []       
[S]      [S]      [S]      []       []       [S]      []       [C]      []       []       
[]       []       []       []       []       []       []       [S]      [C]      []       
[B, C, S][B, C, S][B, C, S][]       []       [B, C, S][]       [B, C, S][B, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][]       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->BS }]
S[{ S-->a }, { S-->BB }]

}
word='bbbaababba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[A, B][A, S][B]   []    []    []    []    []    []    []    
[A, B][A, S][A, B][S]   []    []    []    []    []    []    
[A, B][A, S][A, B][]    [S]   []    []    []    []    []    
[A, S][A, B][A, S][]    []    [B]   []    []    []    []    
[A, S][A, B][A, S][]    []    [A, B][S]   []    []    []    
[A, B][A, S][A, B][]    []    [A, S][]    [B]   []    []    
[A, S][A, B][A, S][]    []    [A, B][]    [A, S][B]   []    
[A, S][A, B][A, S][]    []    [A, B][]    [A, S][A, B][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
S[{ S-->AC }, { S-->CA }, { S-->AA }]
C[{ C-->a }, { C-->AA }]

}
word='bbbaababba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C, S][A]   []    []    []    []    []    []    []    []    
[A, S][C, S][A]   []    []    []    []    []    []    []    
[A, S][C, S][A, S][C]   []    []    []    []    []    []    
[A, S][C, S][A, S][]    [C]   []    []    []    []    []    
[C, S][A, S][C, S][]    [S]   [A]   []    []    []    []    
[C, S][A, S][C, S][]    [S]   [A, S][C]   []    []    []    
[A, S][C, S][A, S][]    []    [C, S][S]   [A]   []    []    
[C, S][A, S][C, S][]    [S]   [A, S][]    [C, S][A]   []    
[C, S][A, S][C, S][]    [S]   [A, S][]    [C, S][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[C]   []    []    []    [S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->SB }, { B-->a }]
S[{ S-->SB }, { S-->b }]

}
word='bbbaababba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   []       [B]      []       []       []       []       []       
[A]      [A]      [A]      []       [A]      [S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][]       [A]      [B, S]   [B]      []       []       []       
[A]      [A]      [A]      []       []       [A]      [A]      [S]      []       []       
[]       []       []       []       []       []       []       []       [S]      []       
[A, B, S][A, B, S][A, B, S][]       [A]      [A, B, S][A]      [B, S]   [B, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][]       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->AB }, { B-->a }]
S[{ S-->BB }]

}
word='aaaabbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[B]   [A, S][B]   []    []    []    []    []    []    []    
[A, S][B]   [A, S][B]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[B]   [A, S][B]   [A, S][B]   [B]   [B]   []    []    []    
[A, S][B]   [A, S][B]   [A, S][A, S][A, S][B]   []    []    
[B]   [A, S][B]   [A, S][B]   [B]   [B]   [A, S][B]   []    
[A, S][B]   [A, S][B]   [A, S][A, S][A, S][B]   [A, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    [B]   [A, S][]    []    []    []    []    
[B]   []    [B]   []    []    []    []    []    []    []    
[]    [B]   []    [B]   [A, S][A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->b }, { B-->BA }, { B-->AA }, { B-->BB }]
S[{ S-->AA }, { S-->AB }]

}
word='aaaabbaaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [B]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [B]      [B]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [B]      [B]      [A]      []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [B]      [B]      [A, B, S][A]      []       []       
[B, S]   [B, S]   [B, S]   [S]      [B]      [B]      [A, B, S][A, B, S][A]      []       
[B, S]   [B, S]   [B, S]   [S]      [B]      [B]      [A, B, S][A, B, S][A, B, S][A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [B, S][S]   []    []    []    []    []    []    
[S]   [S]   [B, S][S]   []    []    []    []    []    []    
[S]   [S]   [B, S][S]   []    []    []    []    []    []    
[S]   [S]   [B, S][S]   []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AB }]

}
word='aaaabbaaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[A][B][] [] [] [] [] [] [] [] 
[S][A][B][] [] [] [] [] [] [] 
[B][S][A][B][] [] [] [] [] [] 
[S][A][B][] [A][] [] [] [] [] 
[A][B][S][A][B][A][] [] [] [] 
[S][A][B][S][A][S][B][] [] [] 
[B][S][A][B][S][B][A][B][] [] 
[A][B][S][A][B][A][S][A][B][] 
[S][A][B][S][A][S][B][S][A][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[A][B][S][] [] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 
[B][S][] [B][] [] [] [] [] [] 
[] [B][S][] [B][A][] [] [] [] 
[S][] [B][S][A][] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='aaaabbaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[C]   [A, S][C]   []    []    []    []    []    []    []    
[A, S][C]   [A, S][C]   []    []    []    []    []    []    
[A, S][C]   [A, S][C]   [S]   []    []    []    []    []    
[A, S][C]   [A, S][C]   []    [S]   []    []    []    []    
[C]   [A, S][C]   [A, S][]    []    [C]   []    []    []    
[A, S][C]   [A, S][C]   []    []    [A, S][C]   []    []    
[C]   [A, S][C]   [A, S][]    []    [C]   [A, S][C]   []    
[A, S][C]   [A, S][C]   []    []    [A, S][C]   [A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    [A, S][]    []    []    []    []    []    []    
[C]   []    [C]   []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[C]   []    [C]   []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->CC }, { B-->BB }]
C[{ C-->a }, { C-->CC }]
S[{ S-->CC }, { S-->BC }]

}
word='aaaabbaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [C]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C, S][C]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C, S][B, C, S][C]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C, S][B, C, S][B, C, S][C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->AC }]
S[{ S-->CA }, { S-->CC }, { S-->AA }]
C[{ C-->a }]

}
word='abaabbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [A, B]   [C]      []       []       []       []       []       []       []       
[S]      [A, B]   [S]      [C]      []       []       []       []       []       []       
[S]      [A, S]   []       [S]      [A]      []       []       []       []       []       
[S]      [A, S]   []       [S]      [A, S]   [A]      []       []       []       []       
[S]      [A, B, S][]       [S]      [A, B, S][A, B]   [C]      []       []       []       
[S]      [A, S]   []       [S]      [A, S]   [A, S]   [S]      [A]      []       []       
[S]      [A, B, S][]       [S]      [A, B, S][A, B, S][S]      [A, B]   [C]      []       
[S]      [A, S]   []       [S]      [A, S]   [A, S]   [S]      [A, S]   [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       [S]      []       []       []       []       []       []       
[S]      []       []       [S]      []       []       []       []       []       []       
[S]      []       []       [S]      [B]      [A, B, S][]       []       []       []       
[S]      []       []       [S]      []       [A, S]   [S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
S[{ S-->CB }]
C[{ C-->BB }, { C-->b }]

}
word='abaabbabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[C]   [S]   [B]   []    []    []    []    []    []    []    
[B, S][]    [C]   [B]   []    []    []    []    []    []    
[B, S][]    [C]   [B]   [C]   []    []    []    []    []    
[B, S][]    [C]   [B]   []    [C]   []    []    []    []    
[C]   [S]   [B, S][C]   []    [S]   [B]   []    []    []    
[C]   [S]   [B, S][C]   []    [S]   [B]   [C]   []    []    
[B, S][]    [C]   [B, S][]    []    [C]   [S]   [B]   []    
[B, S][]    [C]   [B, S][]    []    [C]   [S]   [B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[C]   []    [B, S][]    []    []    []    []    []    []    
[C]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AA }]
S[{ S-->AB }]

}
word='abaabbabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [A]   [A]   []    []    []    []    []    []    []    
[A, S][B]   [B]   [A]   []    []    []    []    []    []    
[S]   []    []    [S]   [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[B]   [A, S][A, S][B]   [A]   [A]   [A]   []    []    []    
[]    [S]   [S]   []    [S]   [S]   [S]   [B]   []    []    
[A, S][B]   [B]   [A, S][B]   [B]   [B]   [A]   [A]   []    
[S]   []    []    [S]   []    []    []    [S]   [S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    [S]   []    []    []    []    []    
[]    [B]   [B]   []    [B]   [B]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->AB }]

}
word='abaabbabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][B]   []    []    []    []    []    []    []    []    
[A]   [A, S][A]   []    []    []    []    []    []    []    
[A]   [A, S][A]   [A]   []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][B]   []    []    []    []    []    
[]    []    []    []    [S]   [B]   []    []    []    []    
[A]   [A, S][A]   [A]   [A, S][A, S][A]   []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][B]   []    []    
[A]   [A, S][A]   [A]   [A, S][A, S][A]   [A, S][A]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][]    []    []    []    []    
[A]   [A, S][A]   [A]   [A, S][A, S][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CC }]
S[{ S-->a }, { S-->SC }, { S-->CS }, { S-->CC }]
C[{ C-->CS }, { C-->b }]

}
word='abaabbabab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S]   [C]      []       []       []       []       []       []       []       []       
[A, S]   [S, C]   [S]      []       []       []       []       []       []       []       
[A, S]   [S, C]   []       [S]      []       []       []       []       []       []       
[A, S]   [A, S, C][]       [A, S]   [C]      []       []       []       []       []       
[A, S]   [A, S, C][]       [A, S]   [A, S]   [C]      []       []       []       []       
[A, S]   [A, S, C][]       [A, S]   [A, S, C][S, C]   [S]      []       []       []       
[A, S]   [A, S, C][]       [A, S]   [A, S, C][A, S, C][A, S]   [C]      []       []       
[A, S]   [A, C, S][]       [A, S]   [A, S, C][A, S, C][A, S]   [S, C]   [S]      []       
[A, S]   [A, C, S][]       [A, S]   [A, S, C][A, S, C][A, S]   [A, S, C][A, S]   [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->a }, { S-->SS }]

}
word='abbaaaabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][] [A][] [] [] [] [] [] [] 
[S][] [B][S][] [] [] [] [] [] 
[S][] [B][S][S][] [] [] [] [] 
[S][] [B][S][S][S][] [] [] [] 
[S][] [B][S][S][S][S][] [] [] 
[S][] [B][S][S][S][S][A][] [] 
[S][] [B][S][S][S][S][] [A][] 
[S][] [B][S][S][S][S][] [] [A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->BB }, { B-->CC }]
S[{ S-->CB }, { S-->BB }, { S-->CC }]
C[{ C-->a }]

}
word='abbaaaabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      [A, B, S][B]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[S]      [A, B, S][A, B, S][B, S]   [C]      []       []       []       []       []       
[]       []       []       [S]      [B, S]   [C]      []       []       []       []       
[S]      [A, B, S][A, B, S][A, B, S][S]      [B, S]   [C]      []       []       []       
[S]      [A, B, S][A, B, S][A, B, S][S]      [A, B, S][S]      [B]      []       []       
[S]      [A, B, S][A, B, S][A, B, S][S]      [A, B, S][S]      [A, B, S][B]      []       
[S]      [A, B, S][A, B, S][A, B, S][S]      [A, B, S][S]      [A, B, S][A, B, S][B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A, B, S][]       []       []       []       []       []       
[S]      []       []       [A, B, S][S]      []       []       []       []       []       
[S]      []       []       [A, B, S][S]      [A, B, S][]       []       []       []       
[S]      []       []       [A, B, S][S]      [A, B, S][S]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SC }, { S-->SS }]
C[{ C-->b }]

}
word='abbaaaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[B, S][]    [A]   [S]   []    []    []    []    []    []    
[B, S][]    [A]   [B, S][S]   []    []    []    []    []    
[B, S][]    [A]   [B, S][B, S][S]   []    []    []    []    
[B, S][]    [A]   [B, S][B, S][B, S][S]   []    []    []    
[B, S][]    [A]   [B, S][B, S][B, S][S]   [C]   []    []    
[B, S][]    [A]   [B, S][B, S][B, S][S]   []    [C]   []    
[B, S][]    [A]   [B, S][B, S][B, S][S]   []    []    [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }, { B-->BB }]
S[{ S-->b }, { S-->BS }]

}
word='abbaaaabbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[B][B][S][] [] [] [] [] [] [] 
[B][B][] [B][] [] [] [] [] [] 
[B][B][] [B][B][] [] [] [] [] 
[B][B][] [B][B][B][] [] [] [] 
[B][B][] [B][B][B][B][] [] [] 
[S][S][B][S][S][S][S][S][] [] 
[B][B][S][B][B][B][B][B][S][] 
[S][S][B][S][S][S][S][S][B][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[B][] [S][B][B][B][] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->BB }, { B-->SS }]
S[{ S-->SB }, { S-->a }]

}
word='abbaaaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [B]   []    []    []    []    []    []    []    
[A, B][]    []    [S]   []    []    []    []    []    []    
[S]   [B]   [B]   [A, B][S]   []    []    []    []    []    
[A, B][]    []    [S]   [A, B][S]   []    []    []    []    
[S]   [B]   [B]   [A, B][S]   [A, B][S]   []    []    []    
[S]   [B]   [B]   [A, B][S]   [A, B][S]   [B]   []    []    
[S]   [B]   [B]   [A, B][S]   [A, B][S]   [B]   [B]   []    
[S]   [B]   [B]   [A, B][S]   [A, B][S]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    [A, B][]    [A, B][]    []    []    []    
[]    []    []    [A, B][]    [A, B][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }]
B[{ B-->b }, { B-->BC }, { B-->BB }]
C[{ C-->CB }, { C-->a }]
S[{ S-->CC }]

}
word='abbabbaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C]      [A, B]   [B]      []       []       []       []       []       []       []       
[A, S, C][A, B]   [B]      [C]      []       []       []       []       []       []       
[A, S, C][A, B]   [A, B]   [C]      [B]      []       []       []       []       []       
[A, S, C][A, B]   [A, B]   [C]      [A, B]   [B]      []       []       []       []       
[A, S, C][A, B]   [A, B]   [A, C, S][A, B]   [B]      [C]      []       []       []       
[A, S, C][A, B]   [A, B]   [A, C, S][A, B]   [B]      [A, S]   [C]      []       []       
[A, S, C][A, B]   [A, B]   [A, C, S][A, B]   [B]      []       [A, S]   [C]      []       
[A, S, C][A, B]   [A, B]   [A, C, S][A, B]   [B]      []       []       [A, S]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][]    [A]   []    []    []    []    []    []    []    
[A, S][]    [A]   [A, S][]    []    []    []    []    []    
[A, S][]    [A]   [A, S][]    []    []    []    []    []    
[A, S][]    [A]   [A, S][]    []    []    []    []    []    
[A, S][]    [A]   [A, S][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->BB }, { S-->AB }]

}
word='abbabbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[B, S][A, B][A]   []    []    []    []    []    []    []    
[B, S][B, S][S]   [B]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[B, S][B, S][S]   [B, S][A, B][A]   []    []    []    []    
[B, S][B, S][S]   [B, S][B, S][S]   [B]   []    []    []    
[B, S][B, S][S]   [B, S][B, S][S]   [B, S][B]   []    []    
[B, S][B, S][S]   [B, S][B, S][S]   [B, S][B, S][B]   []    
[B, S][B, S][S]   [B, S][B, S][S]   [B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, S][S]   []    []    []    []    []    []    []    
[]    [B, S][S]   []    [B, S][]    []    []    []    []    
[]    [B, S][S]   []    [B, S][S]   []    []    []    []    
[]    [B, S][S]   []    [B, S][S]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AA }]
S[{ S-->BB }]
C[{ C-->AB }]

}
word='abbabbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[B]   [A]   [A]   [A]   []    []    []    []    []    []    
[S]   [C]   [C]   [C]   [B]   []    []    []    []    []    
[]    []    []    []    [S]   [B]   []    []    []    []    
[A, C][B, S][B, S][B]   [A]   [A]   [A]   []    []    []    
[B, S][A, C][A, C][A, C][B, S][B, S][B]   [A]   []    []    
[A, C][B, S][B, S][B, S][A, C][A, C][A, C][B]   [A]   []    
[B, S][A, C][A, C][A, C][B, S][B, S][B, S][A, C][B]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [C]   [C]   [A, C][B, S][]    []    []    []    []    
[A, C][B, S][B, S][S]   [C]   [C]   []    []    []    []    
[S]   [C]   [C]   [A, C][B, S][B, S][S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }, { B-->CC }, { B-->CS }]
S[{ S-->a }, { S-->CC }, { S-->SS }]
C[{ C-->b }]

}
word='abbabbaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[S]   [B, S][C]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [S]   []    []    []    []    []    []    
[B]   [B]   []    [B]   [C]   []    []    []    []    []    
[S]   [S]   [B]   [S]   [B, S][C]   []    []    []    []    
[S]   [S]   [B]   [S]   [S]   [B]   [S]   []    []    []    
[S]   [S]   [B]   [S]   [S]   [B]   [S]   [S]   []    []    
[S]   [S]   [B]   [S]   [S]   [B]   [S]   [S]   [S]   []    
[S]   [S]   [B]   [S]   [S]   [B]   [S]   [S]   [S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [S][B][] [] [] [] [] [] [] 
[] [S][B][] [S][] [] [] [] [] 
[] [S][B][] [S][B][] [] [] [] 
[] [S][B][] [S][B][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->b }, { S-->BS }]

}
word='abbabbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][]    [S]   []    []    []    []    []    []    []    
[B, S][B]   [B]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [B]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AA }, { B-->BB }]
C[{ C-->BA }, { C-->AB }]
S[{ S-->AB }]

}
word='babaabbaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C]   [A]      []       []       []       []       []       []       []       []       
[C, S]   [C, S]   [B]      []       []       []       []       []       []       []       
[B]      [B]      [A, C]   [A]      []       []       []       []       []       []       
[A, C, S][A, C, S][B]      [B]      [A]      []       []       []       []       []       
[C, S]   [C, S]   [B]      [B]      [C, S]   [B]      []       []       []       []       
[C, S]   [C, S]   [B]      [B]      [C, S]   [B]      [B]      []       []       []       
[B]      [B]      [A, C, S][A, C, S][B]      [A, C]   [A, C]   [A]      []       []       
[A, C, S][A, C, S][B]      [B]      [A, C, S][B]      [B]      [B]      [A]      []       
[C, S]   [C, S]   [B]      [B]      [C, S]   [B]      [B]      [B]      [C, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A, C, S][]       []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[C, S]   [C, S]   []       [B]      []       []       []       []       []       []       
[B]      [B]      [S]      [A, C, S][B]      []       []       []       []       []       
[S]      [A, C, S][B]      []       [A, C, S][B]      []       []       []       []       
[C, S]   []       []       [B]      []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->AS }]
S[{ S-->AS }, { S-->SS }, { S-->b }]

}
word='babaabbaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [B, S][S]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [A]   [A]   []    []    []    []    []    
[S]   [B, S][S]   [B, S][B, S][S]   []    []    []    []    
[S]   [B, S][S]   [B, S][B, S][S]   [S]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    [A]   [A]   []    
[S]   [B, S][S]   [B, S][B, S][S]   [S]   [B, S][B, S][S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
B[{ B-->CS }, { B-->CC }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CS }, { S-->b }]

}
word='babaabbaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, C]   [C]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [C]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, C]   [C]      []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][]       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=39

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=39
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }]
C[{ C-->BA }, { C-->BB }]
S[{ S-->AA }, { S-->AB }]

}
word='babaabbaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C]   [A]      []       []       []       []       []       []       []       []       
[B, C, S][B, S]   [B]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C]   [A]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [A]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S]   [B, S]   [B]      []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [B]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C]   [A, C]   [A]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [A]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, C, S][B, S]   [B, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][]       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][]       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, C, S][]       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=58

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=58
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AC }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CA }]

}
word='babaabbaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [C]      []       []       []       []       []       []       []       []       
[S]      [S]      [A]      []       []       []       []       []       []       []       
[A]      [A]      [B, C]   [C]      []       []       []       []       []       []       
[B, C, S][B, C, S][A]      [A]      [C]      []       []       []       []       []       
[S]      [S]      []       []       [S]      [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[A]      [A]      [B, C, S][B, S, C][A]      [B, C]   [B, C]   [C]      []       []       
[B, C, S][B, C, S][A]      [A]      [B, S, C][A]      [A]      [A]      [C]      []       
[S]      [S]      []       []       [S]      []       []       []       [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[S]      [B, C, S][]       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [B, C, S][A]      []       [B, S, C][A]      []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->BC }, { B-->BB }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->a }]

}
word='abaaabbbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [C]   []    []    []    []    []    []    []    
[S]   [B]   [A]   [C]   []    []    []    []    []    []    
[S]   [B]   []    [A]   [C]   []    []    []    []    []    
[S]   [B, S][]    []    [S]   [B]   []    []    []    []    
[S]   [B, S][]    []    [S]   [B, S][B]   []    []    []    
[S]   [B, S][]    []    [S]   [B, S][B, S][B]   []    []    
[S]   [B, S][]    []    [S]   [B, S][B, S][B]   [C]   []    
[S]   [B, S][]    []    [S]   [B, S][B, S][B]   [A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [S][] [] [] [] [] 
[S][] [] [] [S][] [] [] [] [] 
[S][] [] [] [S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->CA }]
C[{ C-->CA }, { C-->CC }, { C-->b }]
S[{ S-->AA }, { S-->CC }]

}
word='abaaabbbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A, S]   [B, C]   [A]      []       []       []       []       []       []       []       
[A, S]   [B, C]   [S]      [A]      []       []       []       []       []       []       
[A, S]   [B, C]   []       [S]      [A]      []       []       []       []       []       
[A, S]   [B, C, S][]       [S]      [A]      [C]      []       []       []       []       
[A, S]   [B, C, S][]       [S]      [A]      [C, S]   [C]      []       []       []       
[A, S]   [B, C, S][]       [S]      [A]      [C, S]   [C, S]   [C]      []       []       
[A, S]   [B, C, S][]       [S]      [A, S]   [B, C, S][B, C, S][B, C]   [A]      []       
[A, S]   [B, C, S][]       [S]      [A, S]   [B, C, S][B, C, S][B, C]   [S]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][S][B][] [] [] [] 
[S][] [] [S][S][B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
C[{ C-->AS }]
S[{ S-->SA }, { S-->AA }, { S-->b }]

}
word='abaaabbbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, C]   [S]      []       []       []       []       []       []       []       []       
[A, C, S][S]      [A]      []       []       []       []       []       []       []       
[A, S, C][S]      [S]      [A]      []       []       []       []       []       []       
[A, C, S][S]      [A, C, S][S]      [A]      []       []       []       []       []       
[A, C, S][S]      [A, C, S][S]      [A, C]   [S]      []       []       []       []       
[A, C, S][S]      [A, C, S][S]      [A, C]   []       [S]      []       []       []       
[A, C, S][S]      [A, C, S][S]      [A, C]   []       []       [S]      []       []       
[A, C, S][S]      [A, S, C][A, S, C][A, C, S][]       []       [S]      [A]      []       
[A, C, S][S]      [A, S, C][A, S, C][A, C, S][]       []       [S]      [S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    []    [A, C][]    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->a }]
C[{ C-->BB }]
S[{ S-->BB }]

}
word='abaaabbbaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[B, C, S][B]      [B]      []       []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [B]      []       []       []       []       []       []       
[]       []       []       [C, S]   [B]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B]      [B]      [B]      [B]      []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][]    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CS }]
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->CC }, { C-->b }]

}
word='abaaabbbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [B, S][S]   []    []    []    []    []    []    []    
[S]   [B, S][S]   [S]   []    []    []    []    []    []    
[S]   [B, S][S]   [S]   [S]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    [C]   [C]   []    []    []    
[]    []    []    []    []    [C]   [C]   [C]   []    []    
[S]   [B, S][S]   [S]   [S]   [B, S][B, S][B, S][S]   []    
[S]   [B, S][S]   [S]   [S]   [B, S][B, S][B, S][S]   [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [B][B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }]
S[{ S-->SA }, { S-->SS }, { S-->b }]

}
word='babbbbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   [S]   []    []    []    []    []    []    
[S]   []    [S]   [S]   [S]   []    []    []    []    []    
[S]   []    [S]   [S]   [S]   [S]   []    []    []    []    
[B, S][]    [B, S][B, S][B, S][B, S][A]   []    []    []    
[S]   []    [S]   [S]   [S]   [S]   []    [S]   []    []    
[B, S][]    [B, S][B, S][B, S][B, S][]    [B, S][A]   []    
[S]   []    [S]   [S]   [S]   [S]   []    [S]   []    [S]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][B][B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
C[{ C-->a }]
S[{ S-->BB }]

}
word='babbbbabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SS }]

}
word='babbbbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[A, C][S]   [S]   []    []    []    []    []    []    []    
[B, S][A, C][A, C][S]   []    []    []    []    []    []    
[A, C][B, S][B, S][A, C][S]   []    []    []    []    []    
[B, S][A, C][A, C][B, S][A, C][S]   []    []    []    []    
[B]   []    []    [B]   []    [B]   [A]   []    []    []    
[A, C][B, S][B, S][A, C][B, S][A, C][S]   [S]   []    []    
[]    [B]   [B]   []    [B]   []    [B]   [B]   [A]   []    
[B, S][A, C][A, C][B, S][A, C][B, S][A, C][A, C][S]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[B, S][A, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    [A, C][]    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [A, C][A, C][]    [A, C][]    [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->b }, { C-->BC }]

}
word='babbbbabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B, S][C]   [C]   []    []    []    []    []    []    []    
[C, S][B, S][B, S][C]   []    []    []    []    []    []    
[B, S][S, C][S, C][B, S][C]   []    []    []    []    []    
[C, S][B, S][B, S][S, C][B, S][C]   []    []    []    []    
[S]   []    []    [S]   []    [S]   [B]   []    []    []    
[B, S][S, C][S, C][B, S][S, C][B, S][C]   [C]   []    []    
[]    [S]   [S]   []    [S]   []    [S]   [S]   [B]   []    
[C, S][B, S][B, S][S, C][B, S][S, C][B, S][B, S][C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[C, S][B]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    [B, S][]    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [B, S][B, S][]    [B, S][]    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->CA }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->CC }]
C[{ C-->CA }, { C-->b }]

}
word='babbbbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][A]      []       []       []       []       []       []       []       []       
[B, C, S][A, S]   [C]      []       []       []       []       []       []       []       
[B, S, C][A, S]   [B, S]   [C]      []       []       []       []       []       []       
[B, S, C][A, S]   []       [B, S]   [C]      []       []       []       []       []       
[B, S, C][A, S]   []       []       [B, S]   [C]      []       []       []       []       
[B, S, C][A, S]   []       []       [B, S]   [B, C, S][A]      []       []       []       
[B, S, C][A, S]   []       []       [B, S]   [B, C, S][A, S]   [C]      []       []       
[B, C, S][A, S]   []       []       [B, S]   [B, C, S][A, S]   [B, C, S][A]      []       
[B, C, S][A, S]   []       []       [B, S]   [B, C, S][A, S]   [B, C, S][A, S]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->AC }]
S[{ S-->CA }]
C[{ C-->CC }, { C-->AA }, { C-->b }]

}
word='abbaabbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B]   [C]      []       []       []       []       []       []       []       []       
[A, B]   [C]      [C]      []       []       []       []       []       []       []       
[C]      [S]      [S]      [A]      []       []       []       []       []       []       
[A, B, S][C]      [C]      [C]      [A]      []       []       []       []       []       
[A, B, S][C]      [C]      [C]      [A, B]   [C]      []       []       []       []       
[A, B, S][C]      [C]      [C]      [A, B]   [C]      [C]      []       []       []       
[C]      [S]      [S]      [A, B, S][C]      [S]      [S]      [A]      []       []       
[C]      [S]      [S]      [A, B, S][C]      [S]      [S]      [A, B]   [C]      []       
[A, B, S][C]      [C]      [C]      [A, B, S][C]      [C]      [C]      [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      []       []       [C]      []       []       []       []       []       []       
[C]      [S]      []       [A, B, S][C]      []       []       []       []       []       
[C]      [S]      [S]      [S]      [C]      [S]      []       []       []       []       
[A, B, S][C]      [C]      []       [A, B, S][C]      [C]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->BB }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->a }, { C-->CC }]

}
word='abbaabbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B, S][B]   []    []    []    []    []    []    []    
[S]   [B, S][B]   [C]   []    []    []    []    []    []    
[S]   [B, S][B]   [C]   [C]   []    []    []    []    []    
[S]   [B, S][B, S][S]   [S]   [B]   []    []    []    []    
[S]   [B, S][B, S][S]   [S]   [B, S][B]   []    []    []    
[S]   [B, S][B, S][S]   [S]   [B, S][B]   [C]   []    []    
[S]   [B, S][B, S][S]   [S]   [B, S][B, S][S]   [B]   []    
[S]   [B, S][B, S][S]   [S]   [B, S][B, S][S]   [B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    [B, S][]    []    []    []    []    []    []    
[S]   []    [B, S][S]   []    []    []    []    []    []    
[S]   []    [B, S][S]   [S]   []    []    []    []    []    
[S]   []    [B, S][S]   [S]   []    []    []    []    []    
[S]   []    [B, S][S]   [S]   []    [B, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->SA }, { S-->a }]

}
word='abbaabbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[S, C][B]   [A]   []    []    []    []    []    []    []    
[A]   []    [C]   [S]   []    []    []    []    []    []    
[S, C][]    [B]   [A]   [S]   []    []    []    []    []    
[S, C][]    [B]   [A, B][S, C][A]   []    []    []    []    
[S, C][]    [B]   [A, B][S, C][B]   [A]   []    []    []    
[A, B][]    [C]   [S, C][A]   []    [C]   [S]   []    []    
[A, B][]    [C]   [S, C][A, B][]    [C]   [S, C][A]   []    
[S, C][]    [B]   [A, B][S, C][]    [B]   [A]   [C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [B]   [A, B][]    []    []    []    []    []    
[]    []    [C]   [S, C][]    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [B]   [B]   []    []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
C[{ C-->AS }, { C-->SA }, { C-->AA }, { C-->SS }]
S[{ S-->SA }, { S-->a }]

}
word='abbaabbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[S, C][C]   [A]   []    []    []    []    []    []    []    
[C, S][C]   [A, C][S]   []    []    []    []    []    []    
[C, S][C]   [A, C][C]   [S]   []    []    []    []    []    
[C, S][C]   [A, C][C]   [S, C][A]   []    []    []    []    
[C, S][C]   [A, C][C]   [S, C][C]   [A]   []    []    []    
[C, S][C]   [A, C][C]   [S, C][C]   [A, C][S]   []    []    
[C, S][C]   [A, C][C]   [S, C][C]   [A, C][S, C][A]   []    
[C, S][C]   [A, C][C]   [S, C][C]   [A, C][S, C][A, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C]   [A, C][]    []    []    []    []    []    []    
[C, S][C]   [A, C][C]   []    []    []    []    []    []    
[C, S][C]   [A, C][C]   [S, C][]    []    []    []    []    
[C, S][C]   [A, C][C]   [S, C][C]   []    []    []    []    
[C, S][C]   [A, C][C]   [S, C][C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=42

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=42
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
S[{ S-->CB }]
C[{ C-->b }, { C-->BC }]

}
word='abbaabbaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, C]   [C]      []       []       []       []       []       []       []       []       
[B, C]   []       [C]      []       []       []       []       []       []       []       
[S]      []       [S]      [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[B, C, S][]       [S]      [B, C]   [B, C]   [C]      []       []       []       []       
[B, C, S][]       [S]      [B, C]   [B, C]   []       [C]      []       []       []       
[S]      []       []       [S]      [S]      []       [S]      [B]      []       []       
[B, C, S][]       [S]      [B, C, S][B, C, S][]       [S]      [B, C]   [C]      []       
[S]      []       []       [S]      [S]      []       []       [S]      [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       [B, C, S][]       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }]
C[{ C-->BA }, { C-->AA }]
S[{ S-->BA }]

}
word='abbbabbbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C, S][A]   []    []    []    []    []    []    []    []    
[C, S][A, C][A]   []    []    []    []    []    []    []    
[C, S][A, C][A, C][A]   []    []    []    []    []    []    
[C, S][A, C][A, C][A]   [B]   []    []    []    []    []    
[C, S][A, C][A, C][A, C][C, S][A]   []    []    []    []    
[C, S][A, C][A, C][A, C][C, S][A, C][A]   []    []    []    
[C, S][A, C][A, C][A, C][C, S][A, C][A, C][A]   []    []    
[C, S][A, C][A, C][A, C][C, S][A, C][A, C][A, C][A]   []    
[C, S][A, C][A, C][A, C][C, S][A, C][A, C][A, C][A, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][]    []    [A, C][]    []    []    []    []    []    
[C, S][]    []    [A, C][C, S][]    []    []    []    []    
[C, S][]    []    [A, C][C, S][]    []    []    []    []    
[C, S][]    []    [A, C][C, S][]    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->a }, { S-->AA }]

}
word='abbbabbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[A, B][A, B][S]   [A]   []    []    []    []    []    []    
[B]   [B]   []    [B]   [S]   []    []    []    []    []    
[S]   [S]   [A, B][S]   [A, B][A]   []    []    []    []    
[A, B][A, B][S]   [A, B][S]   [S]   [A]   []    []    []    
[S]   [S]   [A, B][S]   [A, B][A, B][S]   [A]   []    []    
[A, B][A, B][S]   [A, B][S]   [S]   [A, B][S]   [A]   []    
[S]   [S]   [A, B][S]   [A, B][A, B][S]   [A, B][S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    [A, B][]    [A, B][]    []    []    []    []    []    
[S]   []    [A, B][]    []    []    []    []    []    []    
[]    [A, B][]    [A, B][S]   []    []    []    []    []    
[S]   []    [A, B][]    []    [A, B][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->SA }, { S-->a }, { S-->AA }]

}
word='abbbabbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [A, S][S]   [A]   []    []    []    []    []    []    
[S]   [A, S][S]   [A]   [S]   []    []    []    []    []    
[S]   [A, S][A, S][A, S][S]   [A]   []    []    []    []    
[S]   [A, S][A, S][A, S][S]   [S]   [A]   []    []    []    
[S]   [A, S][A, S][A, S][S]   [A, S][S]   [A]   []    []    
[S]   [A, S][A, S][A, S][S]   [A, S][A, S][S]   [A]   []    
[S]   [A, S][A, S][A, S][S]   [A, S][A, S][A, S][S]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->AB }]
C[{ C-->BA }]
S[{ S-->BB }]

}
word='abbbabbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[A, S][A, S][B]   []    []    []    []    []    []    []    
[B, C][B, C][A, S][B]   []    []    []    []    []    []    
[C]   [C]   []    [C]   [A]   []    []    []    []    []    
[A, S][A, S][B, C][A, S][B]   [B]   []    []    []    []    
[B, C][B, C][A, S][B, C][A, S][A, S][B]   []    []    []    
[A, S][A, S][B, C][A, S][B, C][B, C][A, S][B]   []    []    
[B, C][B, C][A, S][B, C][A, S][A, S][B, C][A, S][B]   []    
[A, S][A, S][B, C][A, S][B, C][B, C][A, S][B, C][A, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[C]   [B, C][]    [B, C][]    []    []    []    []    []    
[A, S][]    [B, C][]    [C]   []    []    []    []    []    
[C]   [B, C][]    [B, C][A, S][]    []    []    []    []    
[A, S][]    [B, C][]    [C]   [B, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }]
S[{ S-->SB }, { S-->a }, { S-->BB }]

}
word='abbbabbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [B, S][S]   [B]   []    []    []    []    []    []    
[S]   [B, S][S]   [B]   [S]   []    []    []    []    []    
[S]   [B, S][B, S][B, S][S]   [B]   []    []    []    []    
[S]   [B, S][B, S][B, S][S]   [S]   [B]   []    []    []    
[S]   [B, S][B, S][B, S][S]   [B, S][S]   [B]   []    []    
[S]   [B, S][B, S][B, S][S]   [B, S][B, S][S]   [B]   []    
[S]   [B, S][B, S][B, S][S]   [B, S][B, S][B, S][S]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->CB }, { B-->a }]
S[{ S-->CB }, { S-->BB }, { S-->BC }]
C[{ C-->b }, { C-->BC }]

}
word='abababaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][C]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       
[]       []       []       []       []       []       []       [S]      [B]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, S, C][B, C, S][B, C, S][B, C, S][C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
S[{ S-->AS }, { S-->SA }, { S-->a }]
C[{ C-->SA }, { C-->SS }]

}
word='abababaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S, C][A]      []       []       []       []       []       []       []       []       
[C, S]   [S]      [S]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A]      []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [S]      [S]      []       []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       []       []       
[C, S]   [C, S]   [C, S]   [S, C]   [C, S]   [S]      [S]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [S]      []       []       
[]       []       []       []       []       []       []       [C]      [S]      []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CS }, { S-->SC }, { S-->b }]

}
word='abababaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, S, C][C, S]   [C]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][C, S]   [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, S, C][C, S]   [C]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, S, C][A, C, S][A]      [C]      []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, S, C][A, C, S][]       [A]      [C]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BA }, { B-->AA }]
S[{ S-->AB }]

}
word='abababaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[A, B, S][B]      [A]      []       []       []       []       []       []       []       
[A, B, S][B]      [A, S]   [B]      []       []       []       []       []       []       
[A, B, S][B]      [A, B, S][B]      [A]      []       []       []       []       []       
[A, B, S][B]      [A, B, S][B]      [A, S]   [B]      []       []       []       []       
[A, B, S][B]      [A, B, S][B]      [A, B, S][B]      [A]      []       []       []       
[A, B, S][B]      [A, B, S][B]      [A, B, S][B]      [B]      [A]      []       []       
[A, B, S][B]      [A, B, S][B]      [A, B, S][B]      [A, B, S][B]      [A]      []       
[A, B, S][B]      [A, B, S][B]      [A, B, S][B]      [A, B, S][B]      [A, S]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][] [B][] [] [] [] [] 
[B][] [B][] [B][] [] [] [] [] 
[B][] [B][] [B][] [B][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->BB }, { S-->BC }]
C[{ C-->b }]

}
word='abababaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][C]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][C]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
C[{ C-->a }, { C-->CC }, { C-->CS }]
S[{ S-->SS }, { S-->CC }, { S-->b }]

}
word='bbbaabaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [C]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [C, S]   [C]      []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [C, S]   [C]      [S]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, C, S][C, S]   [A]      [C]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, C, S][A, C, S][A, S]   [C, S]   [C]      []       []       
[A, S]   [A, S]   [A, S]   [A, C, S][A, C, S][A, S]   [A, C, S][C, S]   [C]      []       
[A, S]   [A, S]   [A, S]   [A, C, S][A, C, S][A, S]   [A, C, S][C, S]   [C]      [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   []    []    [A]   []    []    []    []    []    
[A]   [A]   []    []    [A]   []    []    []    []    []    
[A]   [A]   []    []    [A]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->CC }, { B-->AA }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }, { S-->CC }]

}
word='bbbaabaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[]       [B, S]   [C]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [A]      []       []       []       []       []       
[B, C, S][B, C, S][B, S, C][C]      [C]      [C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A]      []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [A]      []       []       
[]       []       []       []       []       []       []       [B]      [A]      []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, C, S][B, S, C][C]      [C]      [C]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, S, C][]       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->SS }, { S-->b }]
C[{ C-->SS }, { C-->BS }]

}
word='bbbaabaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [S]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [B]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   []       [B]      []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][]       [B, C]   [S]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][]       [B, C]   [A, S]   [B]      []       []       []       
[A, S, C][A, S, C][A, S, C][]       [B, C]   [A, S]   []       [B]      []       []       
[A, S, C][A, S, C][A, S, C][]       [B, C]   [A, S]   []       []       [B]      []       
[A, S, C][A, S, C][A, S, C][]       [B, C]   [A, S, C][]       []       [B, C]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SB }]
B[{ B-->a }, { B-->BB }]
S[{ S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->SS }]

}
word='bbbaabaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [S]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [B]      []       []       []       []       []       []       
[A]      [A]      [A]      [B]      [B]      []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [A, S]   [A, S]   [S]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [B]      []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [B]      [B]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [B]      [B]      [B]      []       
[S, C]   [S, C]   [S, C]   [A, S, C][A, S, C][S, C]   [A, S]   [A, S]   [A, S]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   []       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[S, C]   [S, C]   [S, C]   [A, S, C][A, S, C][S, C]   []       []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->BC }]
S[{ S-->CB }, { S-->BB }, { S-->CC }]
C[{ C-->a }, { C-->BB }]

}
word='bbbaabaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C, S]   [B]      []       []       []       []       []       []       []       []       
[A, B, S][C, S]   [B]      []       []       []       []       []       []       []       
[A, B, S][S, C]   [B]      [C]      []       []       []       []       []       []       
[A, B, S][S, C]   [B]      [S]      [C]      []       []       []       []       []       
[C, S]   [A, B, S][C, S]   []       [A, S]   [B]      []       []       []       []       
[C, S]   [A, B, S][C, S]   []       [A, S]   [B]      [C]      []       []       []       
[C, S]   [A, B, S][C, S]   []       [A, S]   [B]      [S]      [C]      []       []       
[C, S]   [A, B, S][C, S]   []       [A, S]   [B]      []       [S]      [C]      []       
[A, B, S][S, C]   [A, B, S][]       [S]      [C, S]   []       []       [A, S]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[C]   [A, S][]    []    [A, S][]    []    []    []    []    
[C]   [A, S][]    []    [A, S][]    []    []    []    []    
[A, B][]    []    []    [S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->SS }, { B-->AA }]
S[{ S-->a }, { S-->SS }, { S-->AA }]
C[{ C-->SS }, { C-->AA }]

}
word='aabbbbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S, C][S]      []       []       []       []       []       []       []       []       
[B]      [B]      [A]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][A]      []       []       []       []       []       []       
[B]      [B]      [B]      [B, S, C][A]      []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B]      [B, S, C][A]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][]       [B, S, C][]       [S]      []       []       []       
[B, C, S][B, S, C][B, S, C][]       [B, S, C][]       [B, S, C][S]      []       []       
[B, C, S][B, C, S][B, S, C][]       [B, S, C][]       [B, S, C][B, S, C][S]      []       
[B, C, S][B, C, S][B, C, S][]       [B, S, C][]       [B, S, C][B, S, C][B, S, C][S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][]       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='aabbbbaaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->BB }]
C[{ C-->a }, { C-->CC }, { C-->BB }]
S[{ S-->CC }, { S-->BB }]

}
word='aabbbbaaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C, S]      [C]         []          []          []          []          []          []          []          []          
[A]         [A]         [B]         []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [B, C, S]   [B]         []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, B, C, S][B, C, S]   [B]         []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, B, C, S][A, B, C, S][B, C, S]   [B]         []          []          []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      []          [C]         []          []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      []          [C, S]      [C]         []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      []          [C, S]      [C, S]      [C]         []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      []          [C, S]      [C, S]      [C, S]      [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='aabbbbaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='aabbbbaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }]
B[{ B-->SC }, { B-->CC }, { B-->SS }]
S[{ S-->a }, { S-->CS }]
C[{ C-->CS }, { C-->SC }, { C-->b }]

}
word='babbabaaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [S]         []          []          []          []          []          []          []          []          
[B, C]      [B, C]      [C]         []          []          []          []          []          []          []          
[B]         [B]         [B]         [C]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [S]         []          []          []          []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, S, C]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B]      [S]         []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->CC }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CS }, { S-->b }]

}
word='babbabaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, C][C]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][C]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CS }]
C[{ C-->a }, { C-->SC }, { C-->CS }]
S[{ S-->CS }, { S-->SS }, { S-->b }]

}
word='babbabaaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [C]         []          []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [S]         []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [S]         [S]         []          []          []          []          []          []          
[A, C]      [A, C]      [C]         [C]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [S]         []          []          []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [C]         [C]         []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [S]         []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [C]         [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->CS }]
C[{ C-->CS }, { C-->SC }, { C-->b }]

}
word='babbabaaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [S]         []          []          []          []          []          []          []          []          
[C]         [C]         [C]         []          []          []          []          []          []          []          
[]          []          []          [C]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   [S]         []          []          []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, S, C]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][B]         [S]         []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AS }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->a }]

}
word='babbabaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, C][S]   []    []    []    []    []    []    []    []    
[A]   [C]   [A]   []    []    []    []    []    []    []    
[A]   [C]   [A]   [A]   []    []    []    []    []    []    
[A, C][C]   [A, C][A, C][S]   []    []    []    []    []    
[A]   [C]   [A]   [A]   [C]   [A]   []    []    []    []    
[A, C][C]   [A, C][A, C][C]   [A, C][S]   []    []    []    
[A, C][C]   [A, C][A, C][C]   [A, C][]    [S]   []    []    
[A]   [C]   [A]   [A]   [C]   [A]   []    [C]   [A]   []    
[A, C][C]   [A, C][A, C][C]   [A, C][]    [C]   [A, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A, C][C]   []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, C][C]   [C]   [A, C][]    []    []    []    []    []    
[A, C][C]   [C]   [A, C][C]   []    []    []    []    []    
[A]   [C]   []    [A]   [C]   []    []    []    []    []    
[A, C][C]   [C]   [A, C][C]   []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }, { A-->SA }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->AS }, { S-->SA }, { S-->SS }, { S-->b }]
C[{ C-->SA }]

}
word='aabbbababb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [S]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, S]      [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, S]      [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->b }, { S-->BS }]

}
word='aabbbababb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[B][B][B][S][] [] [] [] [] [] 
[S][S][S][B][S][] [] [] [] [] 
[] [] [] [B][] [B][] [] [] [] 
[B][B][B][S][B][S][S][] [] [] 
[B][B][B][] [B][] [] [B][] [] 
[S][S][S][B][S][B][B][S][S][] 
[B][B][B][S][B][S][S][B][B][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [S][] [] [] [] [] 
[B][B][] [S][] [] [S][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->CB }]
B[{ B-->BC }, { B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->CC }, { C-->b }, { C-->BC }]
S[{ S-->CC }]

}
word='aabbbababb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C]         []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='aabbbababb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->AA }]
S[{ S-->BA }]

}
word='aabbbababb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, C]      [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, C]      [A]         []          [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, C, S]   [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [A, C, S]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [B, C]      []          []          []          []          []          []          []          []          
[]          []          [B]         [A, B, C, S][]          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          [A, S]      []          []          []          []          []          
[]          []          []          []          []          []          [B]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->CC }, { C-->b }]

}
word='abbbbbbbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[A]         [A, B, C, S][C]         []          []          []          []          []          []          []          
[A]         [A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A]         [A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A]         [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[]          [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->BB }]
S[{ S-->a }, { S-->BB }, { S-->BS }]
C[{ C-->BB }, { C-->BS }]

}
word='abbbbbbbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          [A, B, S, C][B]         []          []          []          []          []          []          []          
[]          [A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[]          [A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[]          [A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[]          [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[]          [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          
[]          [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[]          [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='abbbbbbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abbbbbbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AS }]
B[{ B-->AA }]
C[{ C-->AS }, { C-->AA }]
S[{ S-->a }, { S-->AA }]

}
word='abbbbbbbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          [A, B, S, C][A]         []          []          []          []          []          []          []          
[]          [A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          
[]          [A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[]          [A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[]          [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[]          [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[]          [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          
[]          [A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='babaabbabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->CC }]
C[{ C-->CB }, { C-->a }]
S[{ S-->CB }, { S-->CC }]

}
word='babaabbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [A, C, S][B]      []       []       []       []       []       []       []       
[A]      [B, S]   [A]      [C]      []       []       []       []       []       []       
[A]      [A, C, S][A]      [B, S]   [C]      []       []       []       []       []       
[A]      [A, C, S][A]      [A, B, S][A, C, S][B]      []       []       []       []       
[A]      [A, C, S][A]      [A, B, S][A, C, S][A]      [B]      []       []       []       
[A]      [A, B, S][A]      [A, C, S][B, S]   []       [A]      [C]      []       []       
[A]      [A, B, S][A]      [A, C, S][A, B, S][]       [A]      [A, C, S][B]      []       
[A]      [A, B, S][A]      [A, C, S][A, B, S][]       [A]      [A, C, S][A]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A, C, S][]       []       []       []       []       []       []       []       
[A]      [A, C, S][A]      []       []       []       []       []       []       []       
[A]      [A, C, S][A]      [B, S]   []       []       []       []       []       []       
[A]      [A, B, S][A]      [C, S]   []       []       []       []       []       []       
[A]      [A, B, S][A]      []       []       []       []       []       []       []       
[A]      [A, B, S][A]      []       []       []       [A]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AA }]

}
word='babaabbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
S[{ S-->AC }, { S-->CA }]
C[{ C-->AA }, { C-->CC }, { C-->b }]

}
word='babaabbabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, S]      [A]         []          []          []          []          []          []          []          []          
[]          [B, S]      [C]         []          []          []          []          []          []          []          
[]          []          [B, S]      [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          [B, S]      [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SA }]
B[{ B-->AS }, { B-->SS }]
C[{ C-->AS }, { C-->SA }, { C-->SS }]
S[{ S-->SA }, { S-->AA }, { S-->b }]

}
word='babaabbabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, S, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][S]         [A]         []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, B, C]   [B, C]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, B, C]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [B, C]      [S]         []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][S]         [A, B, C]   [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='abaabaaaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
S[{ S-->AS }, { S-->b }]

}
word='abaabaaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[S][S][S][S][S][S][S][S][S][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->AS }, { B-->SA }, { B-->AA }]
S[{ S-->AS }, { S-->SA }, { S-->AA }, { S-->b }]
C[{ C-->AS }, { C-->SA }, { C-->AA }]

}
word='abaabaaaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [S]         []          []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A]         []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A, B, S, C][A]         []          []          []          []          []          []          
[]          []          [B, S, C]   [B, S, C]   [S]         []          []          []          []          []          
[]          []          [B, S, C]   [B, S, C]   [B, S, C]   [A]         []          []          []          []          
[]          []          [B, S, C]   [B, S, C]   [B, S, C]   [A, B, S, C][A]         []          []          []          
[]          []          [B, C, S]   [B, S, C]   [B, S, C]   [A, B, S, C][A, B, S, C][A]         []          []          
[]          []          []          []          []          [B, S, C]   [B, S, C]   [B, S, C]   [S]         []          
[]          []          []          []          []          [B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [A]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [B, S, C][]       []       []       []       []       []       []       
[]       []       [B, S, C][B, S, C][]       []       []       []       []       []       
[]       []       [B, C, S][B, S, C][]       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       [B, S, C][B, S, C][]       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }]

}
word='abaabaaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[B][B][B][B][B][B][B][B][B][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->BC }, { B-->a }]
C[{ C-->CB }, { C-->b }]

}
word='abaabaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[A, B][C]   [B]   []    []    []    []    []    []    []    
[A, B][C]   [A]   [B]   []    []    []    []    []    []    
[A, B][C]   [A]   [B]   [C]   []    []    []    []    []    
[A, B][C]   [A]   [A, B][C]   [B]   []    []    []    []    
[A, B][C]   [A]   [A, B][C]   [A]   [B]   []    []    []    
[A, B][C]   [A]   [A, B][C]   []    [A]   [B]   []    []    
[A, B][C]   [A]   [A, B][C]   []    [A]   [B]   [C]   []    
[A, B][C]   [A]   [A, B][C]   []    [A]   [A, B][C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][C][A][] [] [] [] [] [] [] 
[A][C][A][A][] [] [] [] [] [] 
[A][C][A][A][] [] [] [] [] [] 
[A][C][A][A][] [] [] [] [] [] 
[A][C][A][A][] [] [A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }]
B[{ B-->SC }, { B-->CC }]
S[{ S-->a }, { S-->CC }, { S-->SC }, { S-->CS }]
C[{ C-->SC }, { C-->b }]

}
word='aaabababbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[]          [A]         [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [S]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }]
B[{ B-->AS }, { B-->SA }, { B-->AA }, { B-->SS }]
C[{ C-->AS }, { C-->SA }, { C-->AA }]
S[{ S-->SA }, { S-->SS }, { S-->b }]

}
word='aaabababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, C]      [A]         []          []          []          []          []          []          []          []          
[]          [B, C]      [A]         []          []          []          []          []          []          []          
[]          [B, C]      [A, B, C]   [S]         []          []          []          []          []          []          
[]          [B, C]      [A, B, C]   [B, S, C]   [A]         []          []          []          []          []          
[]          [B, C]      [A, B, C]   [A, B, S, C][A, B, C]   [S]         []          []          []          []          
[]          [B, C]      [A, B, C]   [A, B, S, C][A, B, C]   [B, S, C]   [A]         []          []          []          
[]          [B, C]      [A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][A, B, C]   [S]         []          []          
[]          [B, C]      [A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][A, B, C]   [A, B, S]   [S]         []          
[]          [B, C]      [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][A, B, S]   [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B, C][]    [A]   []    []    []    []    []    []    
[]    [B, C][]    [A]   []    []    []    []    []    []    
[]    [B, C][]    [A]   []    [A]   []    []    []    []    
[]    [B, C][]    [A]   []    [A]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }]
B[{ B-->AC }, { B-->CA }, { B-->AA }]
S[{ S-->CC }]
C[{ C-->b }]

}
word='aaabababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, B][A, B][A]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][C]   []    []    []    []    []    []    
[A, B][A, B][A, B][B]   [A]   []    []    []    []    []    
[A, B][A, B][A, B][B]   [A, B][C]   []    []    []    []    
[A, B][A, B][A, B][B]   [A, B][B]   [A]   []    []    []    
[A, B][A, B][A, B][B]   [A, B][B]   [A, B][C]   []    []    
[A, B][A, B][A, B][B]   [A, B][B]   [A, B][S]   [C]   []    
[A, B][A, B][A, B][B]   [A, B][B]   [A, B][]    [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    [A, B][B]   []    []    []    []    []    []    
[]    []    [A, B][B]   [A, B][]    []    []    []    []    
[]    []    [A, B][B]   [A, B][B]   []    []    []    []    
[]    []    [A, B][B]   [A, B][B]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='aaabababbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BB }]
S[{ S-->CB }, { S-->CC }, { S-->BB }, { S-->BC }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->BC }]

}
word='aaabababbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[]          [S]         [C]         []          []          []          []          []          []          []          
[]          [S]         [A, C, S]   [B]         []          []          []          []          []          []          
[]          [S]         [A, C, S]   [A, B, C, S][C]         []          []          []          []          []          
[]          [S]         [A, C, S]   [A, B, C, S][A, C, S]   [B]         []          []          []          []          
[]          [S]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][C]         []          []          []          
[]          [S]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, C, S]   [B]         []          []          
[]          [S]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][B]         []          
[]          [S]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->AC }, { B-->CA }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->AA }]
S[{ S-->AC }, { S-->CA }, { S-->CC }]

}
word='aaabababba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[]          [S]         [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [B, S, C]   [B, C, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[B, C, S]   [B, C, S]   [B, S, C]   [B, C, S]   [B, S, C]   [B, C, S]   [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][C]         [A]         []          
[B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, S, C]   [B, C, S]   [B, S, C]   [B, C, S]   [B, C, S]   [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SC }]
B[{ B-->CC }, { B-->CS }, { B-->SS }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CS }, { S-->b }]

}
word='aaabababba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [C]      []       []       []       []       []       []       []       []       
[]       [A, B]   [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [S]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->AS }]

}
word='aaabababba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][S]      []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][]       [S]      []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]
S[{ S-->AA }]

}
word='aaabababba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->AA }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->BA }, { C-->BB }]

}
word='aaabababba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B]      [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [A]         []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S]      [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          
[B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, S]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          
[B, C, S]   [B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [B, S]      [B]         []          []          
[S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B]         [B]         [B]         [B]         []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [S, C]      []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=46

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=46
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='bbabbbbaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->AS }, { B-->SA }, { B-->AA }, { B-->SS }]
S[{ S-->SA }, { S-->a }, { S-->AA }]

}
word='bbabbbbaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, S]   [A]      []       []       []       []       []       []       []       []       
[A, B]   [B]      [S]      []       []       []       []       []       []       []       
[A, B, S][B]      [B, S]   [A]      []       []       []       []       []       []       
[A, B, S][B, S]   [A, B, S][B, S]   [A]      []       []       []       []       []       
[A, B, S][B, S]   [A, B, S][B, S]   [B, S]   [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A, B]   [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A, B]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       [S]      [S]      []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->BB }]

}
word='bbabbbbaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][] [S][] [] [] [] [] [] [] 
[S][] [] [B][] [] [] [] [] [] 
[] [S][B][S][B][] [] [] [] [] 
[B][] [S][] [S][B][] [] [] [] 
[S][B][] [B][] [S][B][] [] [] 
[B][] [S][] [S][B][] [S][] [] 
[] [S][B][S][B][] [S][B][S][] 
[S][B][] [B][] [S][B][] [B][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->BC }]
B[{ B-->b }, { B-->BB }, { B-->CC }]
S[{ S-->CB }, { S-->CC }, { S-->BC }]
C[{ C-->a }, { C-->CC }, { C-->BC }]

}
word='bbabbbbaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B]      [B]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [C]         []          []          []          []          []          []          []          
[S]         [S]         [S]         [B]         []          []          []          []          []          []          
[S]         [S]         [S]         [A, B]      [B]         []          []          []          []          []          
[S]         [S]         [S]         [A, B]      [A, B]      [B]         []          []          []          []          
[S]         [S]         [S]         [A, B]      [A, B]      [A, B]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S]         []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='bbabbbbaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->SB }, { B-->a }]
C[{ C-->SB }]
S[{ S-->b }, { S-->BS }]

}
word='abbabaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][B]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }]
B[{ B-->AS }, { B-->SA }]
C[{ C-->AS }]
S[{ S-->b }]

}
word='abbabaaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A]   [A, B][A, B][A]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][S]   []    []    []    []    []    
[A]   [A, B][A, B][A]   [A, B][A]   []    []    []    []    
[A]   [A, B][A, B][A]   [A, B][A]   [A]   []    []    []    
[A]   [A, B][A, B][A]   [A, B][A]   [A]   [A]   []    []    
[A]   [A, B][A, B][A]   [A, B][A]   [A]   [A]   [A]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][B, C][]    []    []    []    []    []    []    []    
[A]   [A, B][A, B][]    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[]    [B]   [B]   []    [B]   []    []    []    []    []    
[]    [B]   [B]   []    [B]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }]
C[{ C-->SC }, { C-->b }]

}
word='abbabaaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[S, C][]    [C]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[S, C][]    []    [S, C][C]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[S, C][]    []    [S, C][]    [S, C][S, C][S, C][S, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }]

}
word='abbabaaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[C]   [A]   [B]   []    []    []    []    []    []    []    
[C]   [A]   [A, B][C]   []    []    []    []    []    []    
[C]   [A]   [A, B][C]   [B]   []    []    []    []    []    
[C]   [A]   [A, B][C]   [A, B][C]   []    []    []    []    
[C]   [A]   [A, B][C]   [A, B][]    [C]   []    []    []    
[C]   [A]   [A, B][C]   [A, B][]    []    [C]   []    []    
[C]   [A]   [A, B][C]   [A, B][]    []    []    [C]   []    
[C]   [A]   [A, B][C]   [A, B][]    []    []    [C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]

}
word='abbabaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
S[{ S-->SA }, { S-->a }]

}
word='babaaaaaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[A][S][A][S][] [] [] [] [] [] 
[A][S][A][] [S][] [] [] [] [] 
[A][S][A][] [] [S][] [] [] [] 
[A][S][A][] [] [] [S][] [] [] 
[A][S][A][] [] [] [] [S][] [] 
[A][S][A][] [] [] [] [] [S][] 
[A][S][A][] [] [] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->SC }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='babaaaaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[C]      [C]      [S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][C]      [C]      []       []       []       []       []       []       
[C]      [C]      [A, B, S][A, B, S][C]      []       []       []       []       []       
[A, B, S][A, B, S][C]      [C]      [A, B, S][C]      []       []       []       []       
[C]      [C]      [A, B, S][A, B, S][C]      [A, B, S][C]      []       []       []       
[A, B, S][A, B, S][C]      [C]      [A, B, S][C]      [A, B, S][C]      []       []       
[C]      [C]      [A, B, S][A, B, S][C]      [A, B, S][C]      [A, B, S][C]      []       
[A, B, S][A, B, S][C]      [C]      [A, B, S][C]      [A, B, S][C]      [A, B, S][C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[]       [C]      [A, B, S][]       []       []       []       []       []       []       
[A, B, S][]       []       [C]      []       []       []       []       []       []       
[]       [C]      [A, B, S][]       [C]      []       []       []       []       []       
[A, B, S][]       []       [C]      []       [C]      []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->CC }]
C[{ C-->a }, { C-->CC }]
S[{ S-->CC }, { S-->BC }]

}
word='babaaaaaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [C]         []          []          []          []          []          []          []          []          
[]          [B]         [B]         []          []          []          []          []          []          []          
[]          [A, B, S]   [A, B, S]   [C]         []          []          []          []          []          []          
[]          [A, B, S]   [A, B, S]   [A, B, C, S][C]         []          []          []          []          []          
[]          [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][C]         []          []          []          []          
[]          [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[]          [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[]          [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[]          [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->CS }, { S-->SC }, { S-->SS }]
C[{ C-->b }]

}
word='babaaaaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      [S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]

}
word='babaaaaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, B][A, B][A]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][A]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->BS }, { B-->BB }]
S[{ S-->a }, { S-->SS }, { S-->BB }]

}
word='abaaaaabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[]       [B]      [A, S]   [S]      []       []       []       []       []       []       
[]       [B]      [A, S]   [A, S]   [S]      []       []       []       []       []       
[]       [B]      [A, S]   [A, S]   [A, S]   [S]      []       []       []       []       
[]       [B]      [A, S]   [A, S]   [A, S]   [A, S]   [S]      []       []       []       
[A, S]   [B, S]   []       []       []       []       []       [B]      []       []       
[A, S]   [B, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [B, S]   [B]      []       
[A, S]   [A, B, S][A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [B, S]   [B, S]   [B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }]
B[{ B-->b }, { B-->AA }]

}
word='abaaaaabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[A, B][A]   [A, B][A]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   []    [B]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [B]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    [A]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BA }, { B-->AA }]
C[{ C-->AA }, { C-->AB }]
S[{ S-->AA }, { S-->AB }]

}
word='abaaaaabbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, C, S]   [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][B]         [A]         []          []          []          []          []          []          []          
[A, B, C, S][B]         [B, C, S]   [A]         []          []          []          []          []          []          
[A, B, C, S][B]         [A, B, C, S][B, C, S]   [A]         []          []          []          []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][B, C, S]   [A]         []          []          []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A]         []          []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C, S]   [B]         []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C, S]   []          [B]         []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C, S]   []          []          [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    [B]   []    []    []    []    []    
[B]   []    []    []    [B]   [C, S][]    []    []    []    
[B]   []    []    []    [B]   [C, S][]    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CS }]
S[{ S-->SC }, { S-->b }]

}
word='abaaaaabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[C][S][] [C][] [] [] [] [] [] 
[C][S][] [] [C][] [] [] [] [] 
[C][S][] [] [] [C][] [] [] [] 
[C][S][] [] [] [] [C][] [] [] 
[C][S][] [] [] [] [C][S][] [] 
[C][S][] [] [] [] [C][] [S][] 
[C][S][] [] [] [] [C][] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->a }, { B-->BB }]

}
word='abaaaaabbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][A][] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][B][] [] [] [] [] [] 
[B][] [B][B][B][] [] [] [] [] 
[B][] [B][B][B][B][] [] [] [] 
[B][] [B][B][B][B][B][] [] [] 
[B][] [B][B][B][B][B][A][] [] 
[B][] [B][B][B][B][B][] [A][] 
[B][] [B][B][B][B][B][] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BA }]
C[{ C-->BA }, { C-->AB }]

}
word='bbaababbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][]       [A]      []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='bbaababbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][A, B][B]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][B]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SB }]
B[{ B-->BS }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->SS }, { C-->BS }]
S[{ S-->b }, { S-->BS }]

}
word='bbaababbab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, C]      [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][B, C]      [S]         []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='bbaababbab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AA }]
C[{ C-->AC }, { C-->CA }, { C-->b }]

}
word='bbaababbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, B][C]   [A]   []    []    []    []    []    []    []    
[A, B][C]   [B]   [A]   []    []    []    []    []    []    
[C]   [A]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [A, B][C]   [C]   [C]   [A]   []    []    []    []    
[A, B][C]   [A, B][A, B][A]   [C]   [C]   []    []    []    
[C]   [A, B][C]   [C]   [C]   [A, B][A]   [C]   []    []    
[C]   [A, B][C]   [C]   [C]   [A, B][A, B][C]   [A]   []    
[A, B][C]   [A, B][A, B][A, B][C]   [C]   [A]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [A, B][C]   []    []    []    []    []    []    []    
[B]   [C]   [A, B][A, B][]    []    []    []    []    []    
[C]   [B]   []    []    [C]   []    []    []    []    []    
[]    [A, B][C]   [C]   []    [A]   []    []    []    []    
[B]   [C]   [A, B][A, B][B]   []    [C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AC }, { S-->CA }, { S-->CC }]

}
word='bbbababbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[]       [B, S]   [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, S, C][C, S]   [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, S, C][C, S]   [C]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, S, C][B, C, S][B, S, C][B, S, C][C, S]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][]       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=41
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SB }]
S[{ S-->a }, { S-->BS }]
C[{ C-->BS }]

}
word='bbbababbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[]          [A]         [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [B]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B]         []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   [S]         []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AC }, { B-->CA }, { B-->AA }]
C[{ C-->a }, { C-->AA }]
S[{ S-->AA }]

}
word='bbbababbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C, S][A]      []       []       []       []       []       []       []       []       
[A, B]   [B, C, S][A]      []       []       []       []       []       []       []       
[A, B]   [B, C, S][A, B]   [C]      []       []       []       []       []       []       
[B, C, S][A, B]   [B, C, S][B]      [A]      []       []       []       []       []       
[B, C, S][A, B]   [B, C, S][B]      [A, B]   [C]      []       []       []       []       
[A, B]   [B, C, S][A, B]   []       [B, C, S][B]      [A]      []       []       []       
[B, C, S][A, B]   [B, C, S][B]      [A, B]   []       [B, C, S][A]      []       []       
[B, C, S][A, B]   [B, C, S][B]      [A, B]   []       [B, C, S][A, B]   [C]      []       
[A, B]   [B, C, S][A, B]   []       [B, C, S][B]      [A, B]   [B, C, S][B]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[C, S]   []       [B, C, S][]       []       []       []       []       []       []       
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [A, B]   [B, C, S][]       []       []       []       []       []       []       
[C, S]   []       [B, C, S][B]      []       []       []       []       []       []       
[A, B]   []       []       []       [B, C, S][]       [A, B]   []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]

}
word='bbbababbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='bbbababbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->SA }, { B-->SS }]
C[{ C-->AS }, { C-->AA }, { C-->SS }]
S[{ S-->SA }, { S-->SS }, { S-->b }]

}
word='aababbbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[C]      [A, C]   [S]      []       []       []       []       []       []       []       
[C]      [A, C]   [B, S]   [A]      []       []       []       []       []       []       
[C]      [A, C]   [B, S, C][A, C]   [S]      []       []       []       []       []       
[C]      [A, C]   [B, S, C][A, C]   [B, S, C][S]      []       []       []       []       
[C]      [A, C]   [B, S, C][A, C]   [B, S, C][B, S, C][S]      []       []       []       
[C]      [A, C]   [B, C, S][A, C]   [B, S, C][B, S, C][B, S, C][S]      []       []       
[C]      [A, C]   [B, C, S][A, C]   [B, S, C][B, S, C][B, S, C][B, S, C][S]      []       
[C]      [A, C]   [B, C, S][A, C]   [B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->CC }, { B-->AA }]
C[{ C-->AC }, { C-->a }, { C-->AA }]
S[{ S-->AC }]

}
word='aababbbbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[A]         [A]         [A]         []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [C, S]      [C]         []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [B, C]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }]
C[{ C-->SC }, { C-->CC }, { C-->b }]

}
word='aababbbbbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BB }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->BC }]
S[{ S-->BB }]

}
word='aababbbbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          [A, C]      [B]         []          []          []          []          []          []          []          
[]          []          [A, C]      [C]         []          []          []          []          []          []          
[]          []          [A, C]      [A, C]      [B]         []          []          []          []          []          
[]          []          [A, C]      [A, C]      [A, B, C, S][B]         []          []          []          []          
[]          []          [A, C]      [A, C]      [A, B, C, S][A, B, C, S][B]         []          []          []          
[]          []          [A, C]      [A, C]      [A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          
[]          []          [A, C]      [A, C]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          
[]          []          [A, C]      [A, C]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='aababbbbbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CB }, { B-->a }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->b }, { C-->BC }]

}
word='abaabbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C, S]   [C]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [C, S]   [C]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [C]      []       []       []       []       
[]       []       []       []       []       [A]      [C]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [C]      []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
S[{ S-->AS }, { S-->AA }, { S-->b }]
C[{ C-->SS }]

}
word='abaabbbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [A]      []       []       []       []       []       []       []       
[A, S, C][S, C]   [S]      [A]      []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S]      [S]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [S]      []       []       []       []       
[]       []       []       []       []       [C]      [S]      []       []       []       
[A, S, C][A, S, C][A, S]   [A, S]   [A]      [A]      [A]      [A]      []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [C, S]   [C, S]   [C, S]   [S]      [S]      []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->BC }, { B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->BB }, { S-->CC }, { S-->BC }]
C[{ C-->b }]

}
word='abaabbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[S]      [A, S]   [B]      []       []       []       []       []       []       []       
[]       []       [S]      [B]      []       []       []       []       []       []       
[]       []       [S]      [A, B, S][C]      []       []       []       []       []       
[]       []       [S]      [A, B, S][A, B, S][C]      []       []       []       []       
[]       []       [S]      [A, B, S][A, B, S][A, B, S][C]      []       []       []       
[]       []       []       [S]      [S]      [S]      [A, S]   [B]      []       []       
[]       []       []       [S]      [S]      [S]      [A, S]   [A, B, S][C]      []       
[]       []       []       [S]      [S]      [S]      [A, S]   [A, B, S][A, B, S][C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [A, B][]    []    []    []    []    []    
[]    []    []    [S]   [S]   []    []    []    []    []    
[]    []    []    [S]   [S]   [S]   []    []    []    []    
[]    []    []    [S]   [S]   [S]   [A, S][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
S[{ S-->AA }]
C[{ C-->AA }]

}
word='abaabbbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S, C][A]      []       []       []       []       []       []       []       []       
[A, S, C][A, S, C][A]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->AB }, { B-->a }, { B-->BB }]
C[{ C-->BA }, { C-->AB }]
S[{ S-->BB }]

}
word='abaabbbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[B, S]   [B, C]   [B]      []       []       []       []       []       []       []       
[B, S]   [B, S, C][B, S]   [B]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [A]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [A]      [A]      []       []       []       []       
[C]      [C]      [C]      [C]      [A]      [A]      [A]      []       []       []       
[B, S]   [B, S, C][B, S]   [B, S]   [B, C]   [B, C]   [B, C]   [B]      []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [A]      []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [A]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      []       []       []       []       []       []       
[B, S]   [B, S, C][B, S]   [B, S]   []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SC }]
B[{ B-->CC }, { B-->SS }]
C[{ C-->a }]
S[{ S-->CS }, { S-->SS }, { S-->b }]

}
word='aaabbbaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [C]      []       []       []       []       []       []       []       []       
[]       [A, B]   [C]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [S]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [C]      []       []       []       
[]       []       []       []       []       []       [A, B]   [C]      []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [A, S]   [A, S]   [S]      []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='aaabbbaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AC }, { C-->CA }, { C-->a }]

}
word='aaabbbaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[C]   [A]   [C]   []    []    []    []    []    []    []    
[C]   [A, B][C]   [A]   []    []    []    []    []    []    
[C]   [A, B][C]   [B]   [A]   []    []    []    []    []    
[C]   [A, B][C]   []    [B]   [A]   []    []    []    []    
[A, B][C]   [A]   [C]   [C]   [C]   [C]   []    []    []    
[C]   [A, B][C]   [A, B][A, B][A, B][A]   [C]   []    []    
[C]   [A, B][C]   [A, B][A, B][A, B][A, B][C]   [A]   []    
[A, B][C]   [A, B][C]   [C]   [C]   [C]   [A]   [C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[C]   [B]   [C]   [A, B][A, B][]    []    []    []    []    
[]    [A, B][]    [A]   [A]   [A]   []    []    []    []    
[B]   [C]   [B]   []    []    []    [C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->BS }]
B[{ B-->BS }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->SB }, { S-->SS }, { S-->b }]

}
word='aaabbbaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, C]      [B]         []          []          []          []          []          []          []          []          
[]          [A, C]      [B]         []          []          []          []          []          []          []          
[]          [A, C]      [A, B]      [S]         []          []          []          []          []          []          
[]          [A, C]      [A, B, C]   [A, B, S]   [S]         []          []          []          []          []          
[]          [A, C]      [A, B, C]   [A, B, S, C][A, B, S]   [S]         []          []          []          []          
[]          [A, C]      [A, B, C]   [A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          
[]          [A, C]      [A, B, C]   [A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [B]         []          []          
[]          [A, C]      [A, B, C]   [A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, B]      [S]         []          
[]          [A, C]      [A, B, C]   [A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, B, C]   [B, S, C]   [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, C]      []          []          []          []          []          []          []          []          
[]          [A, C]      []          []          []          []          []          []          []          []          
[]          [A, C]      []          []          []          []          []          []          []          []          
[]          [A, C]      []          []          []          []          []          []          []          []          
[]          [A, C]      []          []          []          [A, B, S, C][]          []          []          []          
[]          [A, C]      []          []          []          [A, B, S, C][A, C]      []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->BS }, { B-->SB }, { B-->BB }]
C[{ C-->SB }, { C-->SS }]
S[{ S-->a }, { S-->BB }]

}
word='aaabbbaaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, C]      [S]         []          []          []          []          []          []          []          []          
[]          [A, C]      [S]         []          []          []          []          []          []          []          
[B, C]      [B, C]      [B, C]      [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][B, S]      [B]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][B, S, C]   [B, S]      [B]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][B]         [S]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][B]         [A, C]      [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, S]      [B, C]      [B, C]      [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [B, C]      [B]         [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [A]   [C]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->CA }]
B[{ B-->AC }]
C[{ C-->b }]

}
word='bababaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[B]   [B]   [C]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [C]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [C]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SS }, { A-->SC }, { A-->CS }]
B[{ B-->SC }, { B-->CS }, { B-->CC }, { B-->SS }]
C[{ C-->SC }, { C-->CS }, { C-->a }, { C-->SS }]
S[{ S-->SS }, { S-->b }]

}
word='bababaabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [C]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [S]         []          []          []          []          []          []          []          
[A, B]      [A, B]      [A, B, C]   [C]         []          []          []          []          []          []          
[A, B]      [A, B]      [A, B, C]   [A, B, C]   [S]         []          []          []          []          []          
[]          []          [A, B]      [A, B]      [A, B, C]   [C]         []          []          []          []          
[]          []          []          []          [A, B]      [A, B]      [C]         []          []          []          
[]          []          []          []          [A, B]      [A, B]      [A, B, C]   [S]         []          []          
[]          []          []          []          [A, B]      [A, B]      [A, B, C]   [A, B, C, S][S]         []          
[]          []          []          []          [A, B]      [A, B]      [A, B, C]   [A, B, C, S][A, B, C, S][S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][A, B][]    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    [A, B][A, B][]    []    []    []    
[]    []    []    []    [A, B][A, B][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->b }]
C[{ C-->BS }]

}
word='bababaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B, C][S]   []    []    []    []    []    []    []    
[S]   [B, C][S]   [B]   []    []    []    []    []    []    
[S]   [B, C][S]   [B, C][S]   []    []    []    []    []    
[S]   [B, C][S]   [B, C][S]   [B]   []    []    []    []    
[S]   [B, C][S]   [B, C][S]   []    [B]   []    []    []    
[S]   [B, C][S]   [B, C][S]   []    [B, C][S]   []    []    
[S]   [B, C][S]   [B, C][S]   []    [B, C][]    [S]   []    
[S]   [B, C][S]   [B, C][S]   []    [B, C][]    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bababaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]

}
word='bababaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='bbbbbbbaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
C[{ C-->SB }]
S[{ S-->SS }, { S-->BB }, { S-->b }]

}
word='bbbbbbbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[B, S, C][B, S]   [S]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [S]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S]   [S]      []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S]      []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][S, C]   [C]      [B]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S]   [S]      [B]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][S, C]   [C]      [S]      [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [C]   [S, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
C[{ C-->AA }, { C-->BB }]
S[{ S-->AA }, { S-->BB }]

}
word='bbbbbbbaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          [A, C, S]   [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
C[{ C-->a }]
S[{ S-->SS }, { S-->SC }, { S-->CC }, { S-->b }]

}
word='bbbbbbbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [S]      [C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->b }]
B[{ B-->AS }, { B-->AA }]
C[{ C-->AS }, { C-->AA }]
S[{ S-->a }, { S-->AA }]

}
word='bbbbbbbaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, C]      [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, C]      [A]         [S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       [A, B, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bbbabbaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
C[{ C-->a }, { C-->SC }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='bbbabbaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    [A]   [S]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [S]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [A]   [S]   []    []    []    []    
[A, S][A, S][A, S][S]   [C]   [C]   [C]   []    []    []    
[C]   [C]   [C]   [C]   [A, S][A, S][S]   [C]   []    []    
[A, S][A, S][A, S][A, S][C]   [C]   [C]   [S]   [C]   []    
[C]   [C]   [C]   [C]   [A, S][A, S][A, S][C]   [S]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    [C]   [A, S][]    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[]    []    []    [C]   [A, S][A, S][A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BB }, { A-->BS }, { A-->SB }]
B[{ B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->SS }, { C-->BB }]
S[{ S-->SS }, { S-->BB }, { S-->b }]

}
word='bbbabbaaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         [A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S, C]   [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, B, S, C][]          []          []          []          []          []          []          []          
[]          []          [A, B, S, C][]          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          [B]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->a }, { C-->SS }]
S[{ S-->CC }, { S-->b }]

}
word='bbbabbaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[B]   [B, C][S]   []    []    []    []    []    []    []    
[B, C][A, S][B]   [C]   []    []    []    []    []    []    
[B]   [B, C][]    [B]   [S]   []    []    []    []    []    
[A, S][B]   [B, C][A, S][B, C][S]   []    []    []    []    
[B]   [B, C][A, S][B]   [A, S][B]   [C]   []    []    []    
[B, C][A, S][B]   [B, C][B]   [B, C][A, S][C]   []    []    
[A, S][B]   [B, C][A, S][B, C][A, S][B]   [A, S][C]   []    
[B]   [B, C][A, S][B]   [A, S][B]   [B, C][B]   [A, S][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[A, S][B]   []    []    []    []    []    []    []    []    
[]    [B, C][A, S][]    []    []    []    []    []    []    
[B, C][A, S][]    [B, C][]    []    []    []    []    []    
[A, S][]    [B, C][]    [B, C][A, S][]    []    []    []    
[]    [B, C][A, S][]    [A, S][]    [B, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->CA }]
B[{ B-->CA }]
S[{ S-->AC }, { S-->CA }, { S-->AA }, { S-->CC }]
C[{ C-->a }, { C-->AA }, { C-->CC }]

}
word='bbbabbaaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C, S]   [A]      []       []       []       []       []       []       []       []       
[A, B, S][C, S]   [A]      []       []       []       []       []       []       []       
[A, B, S][C, S]   [A, S]   [C]      []       []       []       []       []       []       
[C, S]   [A, B, S][C, S]   [A, B, S][A]      []       []       []       []       []       
[A, B, S][C, S]   [A, B, S][C, S]   [C, S]   [A]      []       []       []       []       
[A, B, S][C, S]   [A, B, S][C, S]   [C, S]   [A, S]   [C]      []       []       []       
[A, B, S][C, S]   [A, B, S][C, S]   [C, S]   [A, S]   [C, S]   [C]      []       []       
[A, B, S][C, S]   [A, B, S][C, S]   [C, S]   [A, S]   [C, S]   [C, S]   [C]      []       
[A, B, S][C, S]   [A, B, S][C, S]   [C, S]   [A, S]   [C, S]   [C, S]   [C, S]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[A, B][]    [A, B][]    []    []    []    []    []    []    
[B]   [C]   [B]   []    []    []    []    []    []    []    
[B]   [C]   [B]   []    [C]   []    []    []    []    []    
[B]   [C]   [B]   []    [C]   []    []    []    []    []    
[B]   [C]   [B]   []    [C]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->b }]
S[{ S-->CB }]
C[{ C-->a }, { C-->BB }, { C-->CC }, { C-->BC }]

}
word='bbbaaabaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[A, C, S][C]      [B]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [C]      []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [C]      []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bbbaaabaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, C][C]   []    []    []    []    []    []    []    []    
[A, C][A, C][C]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][C]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][C]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AC }, { B-->AA }, { B-->CC }]
S[{ S-->CA }]
C[{ C-->a }, { C-->AA }]

}
word='bbbaaabaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [A]      []       []       []       []       []       []       []       []       
[A, B, S][B, C]   [A]      []       []       []       []       []       []       []       
[A, B, S][B, C]   [A, B]   [C]      []       []       []       []       []       []       
[A, B, S][B, C]   [A, B]   [B]      [C]      []       []       []       []       []       
[A, B, S][B, C]   [A, B]   []       [B]      [C]      []       []       []       []       
[B, C]   [A, B, S][B, C]   []       []       [S]      [A]      []       []       []       
[B, C]   [A, B, S][B, C]   []       []       [S]      [A, B]   [C]      []       []       
[B, C]   [A, B, S][B, C]   []       []       [S]      [A, B]   [B]      [C]      []       
[B, C]   [A, B, S][B, C]   []       []       [S]      [A, B]   []       [B]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    [S]   []    []    []    []    
[B, C][S]   []    []    []    [S]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->BB }]
C[{ C-->a }, { C-->BB }, { C-->CC }, { C-->BC }]

}
word='bbbaaabaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, C]   [B]      []       []       []       []       []       []       []       []       
[A, B, C][B, C]   [B]      []       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [B]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
C[{ C-->BB }]

}
word='bbbaaabaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, C][B]   []    []    []    []    []    []    []    []    
[B, C][B, C][B]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][B]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='aaabbabbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->BS }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->SS }]
S[{ S-->SS }, { S-->b }]

}
word='aaabbabbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          []          [B]         []          []          []          []          []          []          []          
[]          []          [A, B]      [S]         []          []          []          []          []          []          
[]          []          [A, B]      [A, B, S, C][S]         []          []          []          []          []          
[]          []          []          [C]         [C]         [B]         []          []          []          []          
[]          []          []          [C]         [C]         [A, B]      [S]         []          []          []          
[]          []          []          [C]         [C]         [A, B]      [A, B, S, C][S]         []          []          
[]          []          []          [C]         [C]         [A, B]      [A, B, S, C][A, B, S, C][S]         []          
[]          []          []          [C]         [C]         [A, B]      [A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='aaabbabbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S, C][S]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S]   []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S]   []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    []    
[C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->AA }, { C-->AB }]
S[{ S-->AA }]

}
word='aaabbabbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][A]      []       []       []       []       []       
[]       []       []       []       [C]      [B]      []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [B, C, S][A, C]   [A]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][A, C]   [B, C, S][B, C, S][A]      []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [B, C, S][A, C]   [A, C]   [B, C, S][A]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][A, C]   [B, C, S][B, C, S][A, C]   [B, C, S][A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][B, S][B, S][]    [A, C][]    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[B, S][B, S][B, S][]    [A, C][B, S][]    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->AA }]
S[{ S-->BA }, { S-->AA }]

}
word='aaabbabbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          []          [B]         []          []          []          []          []          []          []          
[]          []          [C, S]      [A]         []          []          []          []          []          []          
[]          []          [C, S]      [A, B, C, S][A]         []          []          []          []          []          
[]          []          []          []          []          [B]         []          []          []          []          
[]          []          []          []          []          [C, S]      [A]         []          []          []          
[]          []          []          []          []          [C, S]      [A, B, C, S][A]         []          []          
[]          []          []          []          []          [C, S]      [A, B, C, S][A, B, C, S][A]         []          
[]          []          []          []          []          [C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [C, S][]    []    []    []    
[]    []    []    []    []    [C, S][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CS }]
S[{ S-->SC }, { S-->b }]

}
word='abababbbbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[C][S][C][S][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[C][S][C][S][C][S][] [] [] [] 
[C][S][C][S][C][] [S][] [] [] 
[C][S][C][S][C][] [] [S][] [] 
[C][S][C][S][C][] [] [] [S][] 
[C][S][C][S][C][] [] [] [] [S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
C[{ C-->AA }]

}
word='abababbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A, C][A]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][A]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
S[{ S-->CB }, { S-->BB }]
C[{ C-->a }, { C-->BB }]

}
word='abababbbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [B]         []          []          []          []          []          []          []          []          
[A]         [A]         [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S]   [B]         []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, C, S][B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][]          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->AS }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='abababbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[B]      [B]      [A]      []       []       []       []       []       []       []       
[B, S, C][S, C]   [B, S]   [S]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [A]      []       []       []       []       []       
[B, S, C][S, C]   [B, S, C][S, C]   [B, S]   [S]      []       []       []       []       
[B, S, C][S, C]   [B, S, C][S, C]   [B, S, C][S, C]   [S]      []       []       []       
[B, S, C][S, C]   [B, S, C][S, C]   [B, S, C][S, C]   [S, C]   [S]      []       []       
[B, S, C][S, C]   [B, S, C][S, C]   [B, S, C][S, C]   [S, C]   [S, C]   [S]      []       
[B, C, S][S, C]   [B, S, C][S, C]   [B, S, C][S, C]   [S, C]   [S, C]   [S, C]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B, S, C][S, C]   [B, S, C][]       []       []       []       []       []       []       
[B]      []       [B]      []       []       []       []       []       []       []       
[B]      []       [B]      []       [B]      []       []       []       []       []       
[B]      []       [B]      []       [B]      []       []       []       []       []       
[B]      []       [B]      []       [B]      []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->AC }, { B-->CA }]
C[{ C-->AC }, { C-->CC }, { C-->b }]
S[{ S-->CA }]

}
word='abababbbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [C]         []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [A]         []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C]   [C]         []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [A]         []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, B, C]   [C]         []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, B, C]   [C]         [C]         []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, B, C]   [C]         [C]         [C]         []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, B, C]   [C]         [C]         [C]         [C]         []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, B, C]   [C]         [C]         [C]         [C]         [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[B, S]      [B, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][]          []          []          []          []          []          []          
[S]         []          [S]         []          []          []          []          []          []          []          
[S]         []          [S]         []          []          []          []          []          []          []          
[S]         []          [S]         []          []          []          []          []          []          []          
[S]         []          [S]         []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }]
B[{ B-->AS }, { B-->SS }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SS }]

}
word='baaabbbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B, S]   [S]      []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [S]      []       []       []       []       
[]       []       []       []       []       [B, C]   [S]      []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, C, S][B, C, S][B, C, S][B, S]   [S]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[B, C][B, C][B, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='baaabbbabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][A, B][B]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][B]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->BS }, { B-->SS }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->a }, { S-->SS }, { S-->BB }]

}
word='baaabbbabb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B]      [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [A, S, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C]   [A, S, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [C]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [A, S, C]   [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }, { A-->CA }]
B[{ B-->AA }, { B-->CC }]
S[{ S-->AA }, { S-->CC }]
C[{ C-->CC }, { C-->b }]

}
word='baaabbbabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [B, C, S][C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [B, C, S][B, C, S][C]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      [A]      [A]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      [A]      [A]      [A]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      [A]      [A]      [A]      [B, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->SA }, { B-->SS }, { B-->AA }]
C[{ C-->AS }, { C-->SA }, { C-->AA }]
S[{ S-->a }, { S-->AA }]

}
word='baaabbbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [S]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[]       []       [B]      [S]      []       []       []       []       []       []       
[B, S, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       
[A, B, C][B, S, C][B, S, C][B, S, C][B, S, C][A]      []       []       []       []       
[B, S, C][A, B, C][A, B, C][A, B, C][A, B, C][B, S, C][A]      []       []       []       
[B]      [B, C]   [B, C]   [B, C]   [B, C]   [B]      [B, C]   [S]      []       []       
[A, B, C][B, S, C][B, S, C][B, S, C][B, S, C][A, B, C][B, S, C][A, B, C][A]      []       
[B, S, C][A, B, C][A, B, C][A, B, C][A, B, C][B, S, C][A, B, C][B, S, C][B, S, C][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C]   [S]      [S]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [B, C]   [B, C]   [B, C]   [B, C]   []       []       []       []       []       
[A, B, C][B, S, C][B, S, C][B, S, C][B, S, C][A, B, C][]       []       []       []       
[]       []       []       []       [A, C]   []       [A, C]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->b }, { B-->BA }, { B-->AA }]
C[{ C-->AA }, { C-->AB }]
S[{ S-->AA }]

}
word='aaaaaaabaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [B]         []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [B]         [A]         []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [B]         [A, B, C, S][A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BA }]
B[{ B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->BA }, { C-->BB }]

}
word='aaaaaaabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A]         []          []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [B]         []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [A, B, S, C][B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->a }, { C-->CC }, { C-->BC }]

}
word='aaaaaaabaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S]         [S]         [S]         [S]         [S]         []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BA }]
B[{ B-->a }, { B-->BB }]
C[{ C-->BB }]
S[{ S-->BB }, { S-->AB }]

}
word='aaaaaaabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         [A]         []          []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [B]         []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [A, B, C, S][B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->BC }, { B-->a }]
C[{ C-->BB }, { C-->b }]

}
word='aaaaaaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[B]   [A, C][B]   []    []    []    []    []    []    []    
[A, C][B]   [A, C][B]   []    []    []    []    []    []    
[B]   [A, C][B]   [A, C][B]   []    []    []    []    []    
[A, C][B]   [A, C][B]   [A, C][B]   []    []    []    []    
[B]   [A, C][B]   [A, C][B]   [A, C][B]   []    []    []    
[B]   [A, C][B]   [A, C][B]   [A, C][B]   [C]   []    []    
[A, C][B]   [A, C][B]   [A, C][B]   [A, C][]    [B]   []    
[B]   [A, C][B]   [A, C][B]   [A, C][B]   []    [A, C][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[B]   []    [B]   []    []    []    []    []    []    []    
[]    [A, C][]    [A, C][]    []    []    []    []    []    
[]    [B]   []    [B]   []    [B]   []    []    []    []    
[B]   []    [B]   []    [B]   []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->CB }, { C-->CC }, { C-->b }, { C-->BC }]
S[{ S-->BC }]

}
word='aaaabbbaab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[]          [A]         [B]         []          []          []          []          []          []          []          
[]          []          [A]         [B]         []          []          []          []          []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [C, S]      [C, S]      [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->AA }]

}
word='aaaabbbaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [A, S][A]   []    []    []    []    
[B]   [B]   [B]   [B]   [A, S][A, S][A]   []    []    []    
[B]   [B]   [B]   [B]   []    []    []    [B]   []    []    
[B]   [B]   [B]   [B]   []    []    []    [B]   [B]   []    
[B]   [B]   [B]   [B]   []    []    []    [B]   [B]   [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->BB }, { S-->b }]

}
word='aaaabbbaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[A, B, S][B, S]   [B]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [A]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B]      [S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A]      [B]      [S]      []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B]      [B, S]   []       [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B, S][B]      [B, S]   [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B, S][A]      [A, B]   [A]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [A]      [A, B]   []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       [A]      []       [A, B, S][A]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->b }, { B-->CC }]
C[{ C-->a }, { C-->BB }]

}
word='aaaabbbaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[A]   [B]   [C]   []    []    []    []    []    []    []    
[A, C][A]   [B]   [C]   []    []    []    []    []    []    
[A]   [B]   [A, C][]    [B]   []    []    []    []    []    
[B]   [A, C][A]   [B]   [A, C][B]   []    []    []    []    
[A, C][A]   [B]   [A, C][A]   [A, C][B]   []    []    []    
[B]   [A, C][A]   [B]   [A, C][B]   [A]   [C]   []    []    
[A]   [B]   [A, C][A]   [B]   [A]   [A, C][B]   [C]   []    
[B]   [A, C][A]   [B]   [A, C][B]   [A]   [A, C][]    [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[B]   [A, C][A]   []    []    []    []    []    []    []    
[A, C][A]   [B]   [A, C][]    []    []    []    []    []    
[]    [A, C][]    []    [A, C][]    []    []    []    []    
[]    []    [A, C][]    [B]   []    []    []    []    []    
[B]   [A, C][A]   [B]   []    [B]   [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->SS }, { B-->AA }]
C[{ C-->AS }]
S[{ S-->a }, { S-->AA }]

}
word='aaaabbbaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][S]   []    []    []    []    []    []    []    []    
[C]   [A, B][S]   []    []    []    []    []    []    []    
[B, S][C]   [A, B][S]   []    []    []    []    []    []    
[C]   [A, B][B, S][]    [A]   []    []    []    []    []    
[A, B][B, S][C]   [A, B][B, S][A]   []    []    []    []    
[B, S][C]   [A, B][B, S][C]   [B, S][A]   []    []    []    
[A, B][B, S][C]   [A, B][B, S][A, B][C]   [S]   []    []    
[C]   [A, B][B, S][C]   [A, B][C]   [B, S][A, B][S]   []    
[A, B][B, S][C]   [A, B][B, S][A, B][C]   [B, S][]    [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[A, B][B, S][C]   []    []    []    []    []    []    []    
[B, S][C]   [A, B][B, S][]    []    []    []    []    []    
[]    [B, S][C]   []    [B, S][]    []    []    []    []    
[C]   []    [B, S][C]   [A, B][]    []    []    []    []    
[A, B][B, S][C]   [A, B][]    [A, B][C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
B[{ B-->CC }]
S[{ S-->a }]
C[{ C-->SC }, { C-->CC }, { C-->b }]

}
word='aababbbbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A, C]   [A, C]   [C]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [S]      []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [A, C]   [C]      []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [A, B, C][B, C]   [C]      []       []       []       []       
[A, B, C][A, B, C][B, C]   [A, B, C][B, C]   [B, C]   [C]      []       []       []       
[A, B, C][A, B, C][B, C]   [A, B, C][B, C]   [B, C]   [B, C]   [C]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [S]      []       
[A, B, C][A, B, C][B, C]   [A, B, C][B, C]   [B, C]   [B, C]   [B, C]   [A, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][]       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A]      [A]      []       [A]      []       []       []       []       []       []       
[A]      [A]      []       [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[A, B, C][A, B, C][B, C]   [A, B, C][B, C]   [B, C]   [B, C]   []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->CB }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->BC }]
S[{ S-->CB }, { S-->BB }]

}
word='aababbbbab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->BB }, { B-->CC }]
C[{ C-->CB }, { C-->b }]

}
word='aababbbbab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][B][] [] [] [] [] [] 
[B][B][B][] [C][] [] [] [] [] 
[] [] [C][B][B][C][] [] [] [] 
[B][B][B][] [C][B][C][] [] [] 
[] [] [C][B][B][C][B][C][] [] 
[] [] [C][B][B][C][B][C][B][] 
[B][B][B][] [C][B][C][B][] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [C][] [C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->BS }, { B-->a }, { B-->SS }]
S[{ S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->SS }]

}
word='aababbbbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [S]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[]          []          []          []          []          []          []          []          [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SB }]
B[{ B-->BS }, { B-->a }]
C[{ C-->SB }, { C-->SS }, { C-->BS }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='aababbbbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [S]         []          []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [B, S, C]   [S]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][A, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, B, S, C][A, S, C]   [A, S, C]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, B, C, S][A, S, C]   [A, S, C]   [A, S, C]   [S]         []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [B]         []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [B, S, C]   [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][A, S, C]   [A, S, C]   [A, S, C]   []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=46

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=46
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->a }, { B-->CC }]
C[{ C-->BB }, { C-->b }]

}
word='aaabaaaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[A]   [A, C][B]   []    []    []    []    []    []    []    
[A, C][B]   [A]   [C]   []    []    []    []    []    []    
[A]   [A, C][]    []    [B]   []    []    []    []    []    
[B]   [A]   [A, C][B]   [A, C][B]   []    []    []    []    
[A, C][B]   [A]   [A, C][A]   [A, C][B]   []    []    []    
[A]   [A, C][B]   [A]   [B]   [A]   [A, C][B]   []    []    
[A, C][B]   [A]   [A, C][A]   [A, C][B]   [A]   [C]   []    
[B]   [A]   [A, C][B]   [A, C][B]   [A]   [A, C][B]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [B]   [A]   [A, C][]    []    []    []    []    []    
[A]   []    [B]   [A]   [B]   []    []    []    []    []    
[A, C][B]   []    [A, C][]    [A, C][]    []    []    []    
[B]   []    [A, C][]    [A, C][B]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }]
B[{ B-->BC }, { B-->a }, { B-->BB }]
C[{ C-->b }, { C-->BC }]

}
word='aaabaaaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [B]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [C]      []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   []       [B]      []       []       []       []       []       
[A, B]   [A, B]   [A, B]   []       [A, B]   [B]      []       []       []       []       
[A, B]   [A, B]   [A, B]   []       [A, B]   [A, B]   [B]      []       []       []       
[A, B]   [A, B]   [A, B]   []       [A, B]   [A, B]   [A, B]   [B]      []       []       
[A, B, C][A, B, C][A, B, C][A]      [A, B, C][A, B, C][A, B, C][B, C]   [C]      []       
[A, B, C][A, B, C][A, B, C][A]      [A, B, C][A, B, C][A, B, C][A, B, C][A]      [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [A, B, C][]       []       []       []       []       []       []       
[]       []       [A, B, C][A]      []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->CB }, { B-->CC }]
C[{ C-->CB }, { C-->a }, { C-->CC }, { C-->BC }]
S[{ S-->CB }, { S-->CC }]

}
word='aaabaaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }, { B-->BB }]
S[{ S-->a }, { S-->BS }]
C[{ C-->SS }]

}
word='aaabaaaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    [C]   [S]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[S, C][S, C][C, S][S]   [S]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S]   []    []    []    []    
[]    []    []    []    []    [C]   [S]   []    []    []    
[]    []    []    []    []    []    [C]   [S]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->BB }]
S[{ S-->CB }]
C[{ C-->b }]

}
word='aaabaaaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][C][] [] [] [] [] [] 
[B][B][B][S][B][] [] [] [] [] 
[B][B][B][S][B][B][] [] [] [] 
[B][B][B][S][B][B][B][] [] [] 
[B][B][B][S][B][B][B][B][] [] 
[B][B][B][S][B][B][B][B][C][] 
[B][B][B][S][B][B][B][B][] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SB }, { S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->BB }]

}
word='baaabaabaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[S]         [A, S, C]   [B]         []          []          []          []          []          []          []          
[S]         [A, B, S]   [A, S, C]   [B]         []          []          []          []          []          []          
[S]         [A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          []          
[S]         [A, B, S, C][A, B, S, C][A, B, S, C][S]         [B]         []          []          []          []          
[S]         [A, B, C, S][A, B, S, C][A, B, S, C][S]         [A, S, C]   [B]         []          []          []          
[S]         [A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, B, S, C][A, B, S]   [S]         []          []          
[S]         [A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, B, S, C][A, B, S, C][S]         [B]         []          
[S]         [A, B, S, C][A, B, C, S][A, B, C, S][S]         [A, B, S, C][A, B, S, C][S]         [A, S, C]   [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][] [] [C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->SS }, { C-->b }]

}
word='baaabaabaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[]          []          []          []          [C]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[]          []          []          []          []          []          []          [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='baaabaabaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BA }]
C[{ C-->BA }]
S[{ S-->AA }]

}
word='baaabaabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, S]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, S]      [A, S]      [A]         []          []          []          []          []          []          
[B]         [B]         [B]         [B]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, S]      [A]         []          []          []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, S]      [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SB }]
B[{ B-->SB }, { B-->a }, { B-->BB }]
C[{ C-->BB }, { C-->BS }]
S[{ S-->b }]

}
word='baaabaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][B]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [S]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][]       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }, { B-->SS }]
S[{ S-->b }, { S-->BS }]
C[{ C-->BS }]

}
word='babababbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[B]      [B, S, C][S]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[B, S, C][B, S, C][B]      [B, S, C][S]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B]      [B, S, C][S]      []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B]      [S]      []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B]      [S]      []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B]      [S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CS }]
B[{ B-->SC }, { B-->CS }, { B-->SS }]
C[{ C-->SC }, { C-->CS }, { C-->a }, { C-->SS }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

}
word='babababbbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [S]         []          []          []          
[A, B, S, C][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][S]         []          []          
[A, B, S, C][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C, S][S]         []          
[A, B, S, C][A, B, C]   [A, B, S, C][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->BA }, { B-->a }]
C[{ C-->BA }, { C-->AA }]
S[{ S-->AA }, { S-->AB }]

}
word='babababbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[A, S, C][B, C]   [A]      []       []       []       []       []       []       []       
[A, S, C][B, C]   [A, S]   [B]      []       []       []       []       []       []       
[A, S, C][B, C]   [A, S, C][B, C]   [A]      []       []       []       []       []       
[A, S, C][B, C]   [A, S, C][B, C]   [A, S]   [B]      []       []       []       []       
[A, S, C][B, C]   [A, S, C][B, C]   [A, S, C][B, C]   [A]      []       []       []       
[A, S, C][B, C]   [A, S, C][B, C]   [A, S, C][B, C]   [S, C]   [A]      []       []       
[A, S, C][B, C]   [A, S, C][B, C]   [A, S, C][B, C]   []       [S, C]   [A]      []       
[A, S, C][B, C]   [A, S, C][B, C]   [A, S, C][B, C]   []       []       [S, C]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][] [C][] [] [] [] [] 
[C][] [C][] [C][] [] [] [] [] 
[C][] [C][] [C][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='babababbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S, C][S]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S]   []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S]   []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    []    
[C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->BA }, { C-->AB }]

}
word='babababbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AC }, { A-->CA }]
B[{ B-->AC }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->CC }]
C[{ C-->CC }, { C-->b }]

}
word='aabbbabbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          [A, B, S]   [C]         []          []          []          []          []          []          []          
[]          [A, B, S]   [A, B, C, S][C]         []          []          []          []          []          []          
[]          [A, B, S]   [A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[]          []          [A, S]      [A, S]      [A, S]      [A]         []          []          []          []          
[]          []          [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [C]         []          []          []          
[]          []          [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][C]         []          []          
[]          []          [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][C]         []          
[]          []          [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       [A, B, S][A, B, S][]       []       []       []       []       []       
[]       []       [A, B, S][A, B, S][A, B, S][]       []       []       []       []       
[]       []       [A, B, S][A, B, S][A, B, S][]       []       []       []       []       
[]       []       [A, B, S][A, B, S][A, B, S][]       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=33

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=33
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BA }, { B-->BB }]
S[{ S-->BA }, { S-->BB }]
C[{ C-->BB }, { C-->AB }]

}
word='aabbbabbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='aabbbabbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AA }]
C[{ C-->AA }]

}
word='aabbbabbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->SS }]
S[{ S-->SS }, { S-->b }]

}
word='aabbbabbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          [A]         [S]         []          []          []          []          []          []          []          
[]          [A]         [A, B, S, C][S]         []          []          []          []          []          []          
[]          [A]         [A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[]          []          [C]         [C]         [C]         [B]         []          []          []          []          
[]          []          []          []          []          [A]         [S]         []          []          []          
[]          []          []          []          []          [A]         [A, B, S, C][S]         []          []          
[]          []          []          []          []          [A]         [A, B, S, C][A, B, S, C][S]         []          
[]          []          []          []          []          [A]         [A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AC }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CA }, { S-->CC }]

}
word='abaaababab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, S]      [A]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, S]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [C]         []          []          []          []          []          
[B, S]      [B, S]      [B, S]      []          [B, S]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, C]      [C]         []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      []          [B, S]      [B, S]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S]   [A, C]      [C]         []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          [B, S]      [B, S]      [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B, S]      []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B, S]      [B, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][]          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][]          [A, B, C, S][]          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=54

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=54
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->BC }, { B-->a }, { B-->BB }]
C[{ C-->CB }, { C-->b }, { C-->BC }]
S[{ S-->CB }, { S-->BB }, { S-->BC }]

}
word='abaaababab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [B]         []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [B, S]      [B]         []          []          []          []          []          []          
[A, B, C, S][C, S]      [B, S]      [B, S]      [B]         []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [B]         []          []          []          
[A, B, S, C][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, B, C, S][C]         []          []          
[A, B, S, C][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, B, C, S][C, S]      [B]         []          
[A, B, S, C][C, S]      [A, B, S, C][A, B, C, S][A, B, C, S][C, S]      [A, B, C, S][C, S]      [A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }]
B[{ B-->AA }]
C[{ C-->AS }]
S[{ S-->b }]

}
word='abaaababab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[A, B][A]   [A]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][A]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   [A]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [S]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [A]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=35

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=35
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->AC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AA }]

}
word='abaaababab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[A, S][A]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
C[{ C-->SB }, { C-->BS }]
S[{ S-->BB }, { S-->b }, { S-->BS }]

}
word='abaaababab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S, C][S]      []       []       []       []       []       []       []       []       
[S, C]   [C]      [B]      []       []       []       []       []       []       []       
[B, C, S][]       [S]      [B]      []       []       []       []       []       []       
[B, S, C][C]      [B, S, C][S]      [B]      []       []       []       []       []       
[B, C, S][C]      [B, S, C][B, S, C][B, S, C][S]      []       []       []       []       
[B, C, S][C]      [B, S, C][B, S, C][S, C]   [C]      [B]      []       []       []       
[B, C, S][C]      [B, S, C][B, S, C][B, S, C][C]      [B, S, C][S]      []       []       
[B, C, S][C]      [B, S, C][B, S, C][B, S, C][]       [S, C]   [C]      [B]      []       
[B, C, S][C]      [B, C, S][B, S, C][B, S, C][C]      [B, S, C][C]      [B, S, C][S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       [B, S, C][]       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       [B, S, C][]       [B, S, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->BC }, { B-->a }]
C[{ C-->BB }, { C-->CC }, { C-->b }, { C-->BC }]

}
word='baabbbabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, C]   [C]      [B]      []       []       []       []       []       []       []       
[A, C]   [A, B, C][A, B, C][C]      []       []       []       []       []       []       
[A, C]   [A, B, C][A, B, C][A, C]   [C]      []       []       []       []       []       
[A, C]   [A, B, C][A, B, C][A, C]   [A, C]   [C]      []       []       []       []       
[A, C]   [A, B, C][C]      []       []       []       [B]      []       []       []       
[A, C]   [A, B, C][A, B, C][A, C]   [A, C]   [A, C]   [A, B, C][C]      []       []       
[A, C]   [A, B, C][A, B, C][A, C]   [A, C]   [A, C]   [A, B, C][A, C]   [C]      []       
[A, C]   [A, B, C][A, B, C][A, C]   [A, C]   [A, C]   [A, B, C][A, C]   [A, C]   [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }]
C[{ C-->BB }]

}
word='baabbbabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[]       [A]      [S]      []       []       []       []       []       []       []       
[S, C]   [B]      [B]      [B]      []       []       []       []       []       []       
[A, B]   [A, S, C][A, S, C][S, C]   [B]      []       []       []       []       []       
[A, S, C][A, B]   [A, B]   [A, B]   [S, C]   [B]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [S]      []       []       []       
[A, B]   [A, S, C][A, S, C][A, S, C][A, B]   [S, C]   [B]      [B]      []       []       
[A, S, C][A, B]   [A, B]   [A, B]   [A, S, C][A, B]   [A, S, C][S, C]   [B]      []       
[A, B]   [A, S, C][A, S, C][A, S, C][A, B]   [A, S, C][A, B]   [A, B]   [S, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[A, B]   [A, S, C][A, S, C][A, S, C][A, B]   []       []       []       []       []       
[A]      [A]      [A]      [B]      [A]      [B]      []       []       []       []       
[B]      [S, C]   [S, C]   [A]      [B]      [A]      [A]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]

}
word='baabbbabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, B][A, B][A]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][A]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->SA }]
S[{ S-->a }]
C[{ C-->SS }]

}
word='baabbbabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->a }]
S[{ S-->BA }]
C[{ C-->AA }]

}
word='baabbbabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[A, C, S][A, S]   [A, S]   [A]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [A]      []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [A]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, C, S][A, C, S][A, S]   [A]      []       []       
[A, C, S][A, C, S][A, S, C][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->a }, { B-->BB }]
S[{ S-->BB }, { S-->AB }]
C[{ C-->BB }, { C-->AB }]

}
word='aaaababbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A]         []          []          []          
[]          []          []          []          []          []          []          [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AS }]
S[{ S-->AA }, { S-->b }]
C[{ C-->AA }]

}
word='aaaababbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][A]   []    []    []    []    []    []    []    []    
[A, B][S, C][A]   []    []    []    []    []    []    []    
[S, C][A, B][S, C][A]   []    []    []    []    []    []    
[S, C][A, B][S, C][A, B][S]   []    []    []    []    []    
[A, B][S, C][A, B][S, C][]    [A]   []    []    []    []    
[A, B][S, C][A, B][S, C][]    [A, B][S]   []    []    []    
[A, B][S, C][A, B][S, C][]    [A, B][]    [S]   []    []    
[S, C][A, B][S, C][A, B][]    [S, C][]    []    [A]   []    
[A, B][S, C][A, B][S, C][]    [A, B][]    []    [S, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[A, B][]    [A, B][]    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[A, B][]    [A, B][]    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AA }, { A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->AB }]
C[{ C-->BB }, { C-->AB }]

}
word='aaaababbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A]         []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, C, S]   [B]         []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A]         [A, S]      [A]         []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A]         [A, S]      [A]         [A]         []          []          
[A, C, S]   [A, S, C]   [A, S, C]   [A, S, C]   [A, C, S]   [A, S, C]   [A, C, S]   [A, C, S]   [B]         []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, S, C]   [A, C, S]   [A, S, C]   [A, C, S]   [A, C, S]   [A, B, C]   [B]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[C, S][S, C][S, C][S, C][C, S][S, C][]    []    []    []    
[C, S][C, S][C, S][S, C][C, S][S, C][C, S][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=40

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=40
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->AS }, { S-->a }, { S-->SS }]
C[{ C-->SS }]

}
word='aaaababbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S, C][S]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S]   [S]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   [S]   [S]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->CA }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->CC }, { S-->AA }]

}
word='aaaababbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [C]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [A]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [C, S]   [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][]       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SC }]
B[{ B-->CS }, { B-->SC }, { B-->CC }]
C[{ C-->CS }, { C-->a }, { C-->SS }]
S[{ S-->SS }, { S-->CS }, { S-->SC }, { S-->b }]

}
word='aaaabaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B]      [C]         []          []          []          []          []          []          []          []          
[]          [A, B]      [C]         []          []          []          []          []          []          []          
[]          []          [A, B]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [C]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   []          [A, B]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }, { B-->CC }]
S[{ S-->a }, { S-->CS }]
C[{ C-->SS }, { C-->SC }, { C-->b }]

}
word='aaaabaaabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [S]         []          []          []          []          []          []          []          []          
[C, S]      [A, B, C]   [S]         []          []          []          []          []          []          []          
[A, B, S, C][S, C]      [A, B, C]   [S]         []          []          []          []          []          []          
[B, C]      [B, C]      [B, C]      [C]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][S]         [S]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [C, S]      [A, B, C]   [S]         []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [C]         [C]         []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][A, C][A, C][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AC }, { B-->CC }, { B-->AA }]
S[{ S-->AC }, { S-->CA }, { S-->CC }, { S-->AA }]
C[{ C-->a }, { C-->AA }]

}
word='aaaabaaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[B, S]   [A, B, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, S]   [A, B, S][C]      []       []       []       []       []       []       
[B, S]   [A, B, S][B, C, S][S]      [A]      []       []       []       []       []       
[B, C, S][B, S]   [A, B, S][]       [B, S]   [C]      []       []       []       []       
[A, B, S][B, C, S][B, S]   [A, B, S][B, C, S][A, B, S][C]      []       []       []       
[B, S]   [A, B, S][B, C, S][B, S]   [A, B, S][B, S]   [A, B, S][C]      []       []       
[A, B, S][B, C, S][B, S]   [A, B, S][B, C, S][A, B, S][B, C, S][S]      [A]      []       
[B, C, S][B, S]   [A, B, S][B, C, S][B, S]   [B, C, S][B, S]   [A, B, S][B, C, S][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[B]      [A, B, S][]       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[]       [B, C, S][]       []       []       []       []       []       []       []       
[]       []       [B, C, S][]       [A, B, S][]       []       []       []       []       
[A, B, S][B, C, S][B]      [A, B, S][]       [A, B, S][]       []       []       []       
[B, C, S][B]      [A, B, S][B, C, S][]       [B, C, S][B]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=46

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=46
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->AA }]
C[{ C-->BA }, { C-->AA }, { C-->BB }, { C-->AB }]
S[{ S-->AA }]

}
word='aaaabaaabb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->SC }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SS }, { C-->SC }, { C-->b }]

}
word='aaaabaaabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [C]         [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [C]         [S]         []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B, C, S]   [B, C]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      [A]         [A]         [S]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][C, S]      [S]         [C]         [S]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][S, C]      [A, B, C]   [C]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [B, C, S]   [B, C]      [C]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][C, S]      [S]         [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[]       [B, C]   []       []       []       []       []       []       []       []       
[A]      [A]      [A, C]   []       []       []       []       []       []       []       
[]       [B, C]   [B, C]   [C, S]   []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [B, C]   []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CB }]
B[{ B-->BC }, { B-->CB }, { B-->a }]
C[{ C-->CB }, { C-->b }]

}
word='babbbbbaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, C][B]      []       []       []       []       []       []       []       []       
[A, B, C][B]      [C]      []       []       []       []       []       []       []       
[A, B, C][B]      [A]      [C]      []       []       []       []       []       []       
[A, B, C][B]      []       [A]      [C]      []       []       []       []       []       
[A, B, C][B]      []       []       [A]      [C]      []       []       []       []       
[A, B, C][B]      []       []       []       [A]      [C]      []       []       []       
[A, B, C][B]      [A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       
[A, B, C][B]      [A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      [C]      []       
[A, B, C][B]      [A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      [A, B, C][B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AC }, { B-->CC }]
C[{ C-->CA }, { C-->b }]

}
word='babbbbbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[A, B][B]   [C]   []    []    []    []    []    []    []    
[B, C][]    [A, B][C]   []    []    []    []    []    []    
[A, B][B]   [B, C][A, B][C]   []    []    []    []    []    
[B, C][]    [A, B][B, C][A, B][C]   []    []    []    []    
[A, B][B]   [B, C][A, B][B, C][A, B][C]   []    []    []    
[A, B][B]   [B, C][A, B][B, C][A, B][C]   [A]   []    []    
[B, C][]    [A, B][B, C][A, B][B, C][A, B][B]   [C]   []    
[B, C][]    [A, B][B, C][A, B][B, C][A, B][B]   [C]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    [B, C][]    []    []    []    []    []    []    
[A, B][B]   [B]   [A]   [B]   []    []    []    []    []    
[]    []    []    [B, C][]    [B, C][]    []    []    []    
[]    []    [A]   [B]   [A]   [B]   [A, B][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->AC }, { B-->CC }]
C[{ C-->CA }, { C-->CC }, { C-->b }]
S[{ S-->CA }, { S-->CC }]

}
word='babbbbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C, S]      [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][B]         [C]         []          []          []          []          []          []          []          
[A, B, C, S][B]         [A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A]         []          []          
[A, B, C, S][B]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [C]         []          
[A, B, S, C][B]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [C, S]      [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          [A, B, C, S][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]

}
word='babbbbbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, B][A, B][A]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][A]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AC }, { A-->CA }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->CC }, { C-->b }]

}
word='babbbbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          
[A, B, S, C][A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         []          []          
[A, B, S, C][A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          
[A, B, S, C][A, B, S]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bbbabbaabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }, { A-->SA }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->SS }, { S-->b }]
C[{ C-->SS }, { C-->AA }]

}
word='bbbabbaabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B]      [A]         []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B]      [A, B]      [S]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, S, C]   [S]         []          []          []          []          
[C]         [C]         [C]         [C]         [A, B, C]   [A, B]      [A]         []          []          []          
[]          []          []          []          [C]         [C]         [C]         [A]         []          []          
[]          []          []          []          [C]         [C]         [C]         [A, B]      [S]         []          
[]          []          []          []          [C]         [C]         [C]         [A, B, C]   [A, S, C]   [S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][]    []    []    []    []    []    []    []    
[A, B][A, B][A, B][]    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   [C]   []    []    []    []    
[]    []    []    []    [C]   [C]   [C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AS }, { B-->SA }, { B-->SS }]
C[{ C-->AS }, { C-->AA }]
S[{ S-->SS }, { S-->AA }, { S-->b }]

}
word='bbbabbaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [A]      []       []       []       []       []       []       
[B]      [B]      [B]      [A, B, C][S]      []       []       []       []       []       
[B]      [B]      [B]      [A, B, C][B, S]   [S]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [S, C]   [B]      [B]      [A]      []       []       []       
[B]      [B]      [B]      [A, B, C][B, S]   [B, S]   [S, C]   [A]      []       []       
[B]      [B]      [B]      [A, B, C][B, S]   [B, S]   [B, S, C][A, B, C][S]      []       
[B]      [B]      [B]      [A, B, C][B, S]   [B, S]   [B, S, C][A, B, C][B, S]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S, C][]    []    []    []    []    []    
[B]   [B]   []    [A, C][B, S][]    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    [S, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }]
B[{ B-->SS }, { B-->CS }, { B-->CC }]
C[{ C-->a }, { C-->SS }, { C-->CS }]
S[{ S-->SC }, { S-->b }]

}
word='bbbabbaabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, S]      [C]         []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][B, C]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, C]   [A, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, C]   [A, S]      [B]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B, C, S][A, B, S, C][B]         [B, C]      [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][B, C]      [A, B, C, S][A, B, S, C][B]         [B, C]      [A, B, C]   [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C]         []          []          []          []          []          []          []          []          []          
[]          [A, S]      []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[]          []          [C]         [C]         []          []          []          []          []          []          
[]          []          [C]         [C]         [A]         []          []          []          []          []          
[]          []          [C]         []          [A, S]      [A, B, S, C][]          []          []          []          
[]          []          [C]         []          []          [A, B, S, C][B]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AA }]
C[{ C-->AA }]

}
word='bbbabbaabb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->a }]
S[{ S-->CB }, { S-->CC }, { S-->BB }]
C[{ C-->CC }, { C-->b }, { C-->BC }]

}
word='bbbbbbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       []       
[]       []       []       []       []       []       [S]      [B]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, C]   [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CA }]
B[{ B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='bbbbbbaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A]         []          []          []          
[]          []          []          []          []          []          []          [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         [C]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CB }, { B-->a }, { B-->CC }, { B-->BB }]
C[{ C-->b }]

}
word='bbbbbbaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, B][C]   []    []    []    []    []    []    []    []    
[B]   [A, B][C]   []    []    []    []    []    []    []    
[B]   [B]   [A, B][C]   []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][C]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [A, B][C]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AS }, { S-->a }, { S-->AA }]
C[{ C-->AS }]

}
word='bbbbbbaabb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [S, C]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A]         [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   []          [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [A, B, S]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
C[{ C-->a }, { C-->SS }]
S[{ S-->SS }, { S-->CS }, { S-->b }]

}
word='bbbbbbaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, C, S][S]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][S]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][S]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][S]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][S]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[]       []       []       []       []       []       []       [C]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][S]      [S]      [S]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }]
B[{ B-->a }, { B-->BB }, { B-->CC }]
C[{ C-->CB }, { C-->b }]
S[{ S-->BB }, { S-->BC }]

}
word='aaabbaaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B, S][B]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][B]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [C]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][C]      [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][C]      [A, B, S][B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][C]      [A, B, S][A, B, S][B]      []       []       
[S]      [S]      [S]      [C, S]   [A, B]   [S]      [S]      [S]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][C, S]   [A, B, S][A, B, S][A, B, S][A, B]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][]       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A, B]   []       []       []       []       []       []       
[]       []       []       [A, B]   []       []       []       []       []       []       
[S]      [S]      []       [C]      [A, B]   [S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [C]      [A, B, S][A, B, S][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AA }, { A-->b }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
C[{ C-->a }, { C-->CC }]
S[{ S-->CC }]

}
word='aaabbaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B]      [A, B]      [B]         [A]         []          []          []          []          []          []          
[A, B]      [A, B]      [B]         [A]         [A]         []          []          []          []          []          
[B]         [B]         []          [B]         [B]         [C]         []          []          []          []          
[A, B]      [A, B]      [B]         [A, B]      [A, B]      [A, B, C, S][C]         []          []          []          
[A, B]      [A, B]      [B]         [A, B]      [A, B]      [A, B, C, S][A, B, C, S][C]         []          []          
[A, B]      [A, B]      [B]         [A]         [A]         [A, B]      [A, B]      [B]         [A]         []          
[A, B]      [A, B]      [B]         [A]         [A]         [A, B]      [A, B]      [B]         [A]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[A, B][A, B][]    [A, B][]    []    []    []    []    []    
[B]   [A, B][B]   [B]   []    []    []    []    []    []    
[B]   [A, B][B]   []    []    []    []    []    []    []    
[B]   [A, B][B]   []    []    [B]   [A, B][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]
C[{ C-->BB }]

}
word='aaabbaaabb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->BA }, { B-->a }, { B-->BB }, { B-->AA }]
C[{ C-->BA }, { C-->BB }, { C-->AA }]
S[{ S-->AB }]

}
word='aaabbaaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, C]   [B]      []       []       []       []       []       []       []       []       
[B, C]   [B, C]   [B]      []       []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [A]      []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [A, B, C][A]      []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C, S][S]      [B]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C, S][S]      [B, C]   [B]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C, S][S]      [B, C]   [B, C]   [B]      []       []       
[B, C]   [B, C]   [B, C]   [B, C, S][S]      [B, C]   [B, C]   [B, C]   [A]      []       
[B, C]   [B, C]   [B, C]   [B, C, S][S]      [B, C]   [B, C]   [B, C]   [A, B, C][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [B, C, S][]       []       []       []       []       []       
[]       []       []       [B, C, S][S]      []       []       []       []       []       
[]       []       []       [B, C, S][S]      []       []       []       []       []       
[]       []       []       [B, C, S][S]      []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }, { A-->SC }]
B[{ B-->CC }, { B-->SS }]
C[{ C-->a }, { C-->CC }]
S[{ S-->CC }, { S-->CS }, { S-->SS }, { S-->b }]

}
word='aaabbaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, C, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [C]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, S]      [S]         []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [S]         []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         [C]         []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B, C, S]   [C]         []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][B, C, S]   [C]         []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, S]      [S]         []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][]       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abbbbaabbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
C[{ C-->AC }, { C-->b }]

}
word='abbbbaabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[C][C][A][C][] [] [] [] [] [] 
[A][A][C][A][C][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[C][C][A][C][A][C][C][C][] [] 
[A][A][C][A][C][A][A][A][C][] 
[C][C][A][C][A][C][C][C][A][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [C][] [C][A][] [] [] [] 
[] [C][] [C][] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->CS }, { A-->SC }]
B[{ B-->SC }, { B-->SS }, { B-->CC }]
S[{ S-->SS }, { S-->b }]
C[{ C-->SC }, { C-->a }, { C-->SS }]

}
word='abbbbaabbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[A, B]      [A, B, C, S][S]         []          []          []          []          []          []          []          
[A, B]      [A, B, C, S][A, B, C, S][S]         []          []          []          []          []          []          
[A, B]      [A, B, C, S][A, B, C, S][A, B, C, S][S]         []          []          []          []          []          
[A, B]      [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         []          []          []          []          
[]          [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [C]         []          []          []          
[]          []          []          []          []          []          [A]         [S]         []          []          
[]          []          []          []          []          []          [A, B]      [A, B, C, S][S]         []          
[]          []          []          []          []          []          [A, B]      [A, B, C, S][A, B, C, S][S]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][A, B][A, B][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='abbbbaabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AC }, { A-->CA }]
B[{ B-->AC }, { B-->CA }]
C[{ C-->CC }, { C-->AA }, { C-->b }]

}
word='abbbbaabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B]   [C]      []       []       []       []       []       []       []       []       
[A, B, C][A, C]   [C]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [C]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, B]   [C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BB }]
S[{ S-->CB }, { S-->BB }, { S-->BC }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->BC }]

}
word='bbabbabbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [C]         []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [B]         []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, B, C, S][B]         []          []          []          []          []          
[]          []          []          [A, C, S]   [A, C, S]   [C]         []          []          []          []          
[]          []          []          [A, C, S]   [A, C, S]   [A, C, S]   [B]         []          []          []          
[]          []          []          [A, C, S]   [A, C, S]   [A, C, S]   [A, B, C, S][B]         []          []          
[]          []          []          [A, C, S]   [A, C, S]   [A, C, S]   [A, B, C, S][A, B, C, S][B]         []          
[]          []          []          []          []          []          [A, C, S]   [A, C, S]   [A, C, S]   [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][]       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       [A, C, S][]       []       []       []       []       []       
[]       []       []       [A, C, S][A, C, S][]       []       []       []       []       
[]       []       []       [A, C, S][A, C, S][]       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
C[{ C-->SB }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='bbabbabbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[B, S, C][B, S]   [S]      [S]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [B, S]   [S]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [B]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [S]      [S]      []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [B, S]   [S]      []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [S]      []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][]       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }, { A-->SB }]
B[{ B-->b }, { B-->SB }, { B-->BB }]
C[{ C-->SB }, { C-->BS }]
S[{ S-->a }, { S-->BS }]

}
word='bbabbabbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [B]      []       []       []       []       []       []       []       []       
[A, S, C][A, S, C][S]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [B]      []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [B]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CB }, { C-->CC }, { C-->b }, { C-->BC }]

}
word='bbabbabbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][B][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][B][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->BA }, { B-->BB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]

}
word='bbabbabbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [B]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [B, S]   [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, B, S][A]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, B, S][A, S]   [B]      []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, B, S][A, S]   [B, S]   [B]      []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, B, S][A, S]   [B, S]   [B, S]   [B]      []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, B, S][A, S]   [A, B, S][A, B, S][A, B, S][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abbabbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->AB }]
S[{ S-->BA }, { S-->AB }]

}
word='abbabbbaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C, S]      [A]         []          []          []          []          []          []          []          []          
[C, S]      [A, B]      [A]         []          []          []          []          []          []          []          
[C, S]      [A, B, C, S][A, C, S]   [B]         []          []          []          []          []          []          
[C, S]      [A, B, C, S][A, B]      [C, S]      [A]         []          []          []          []          []          
[C, S]      [A, B, C, S][A, B, C, S][C, S]      [A, B]      [A]         []          []          []          []          
[C, S]      [A, B, C, S][A, B, C, S][C, S]      [A, B, C, S][A, B]      [A]         []          []          []          
[C, S]      [A, B, C, S][A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, C, S]   [B]         []          []          
[C, S]      [A, B, C, S][A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, B]      [C, S]      [A]         []          
[C, S]      [A, B, C, S][A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, C, S]   [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C, S]      []          []          []          []          []          []          []          []          []          
[C, S]      []          []          []          []          []          []          []          []          []          
[C, S]      []          [A, B, C, S][]          []          []          []          []          []          []          
[C, S]      []          [A, B, C, S][C, S]      []          []          []          []          []          []          
[C, S]      []          [A, B, C, S][C, S]      []          []          []          []          []          []          
[C, S]      []          [A, B, C, S][C, S]      []          []          []          []          []          []          
[C, S]      []          [A, B, C, S][C, S]      []          []          [A, B, C, S][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=46

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=46
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
S[{ S-->AS }, { S-->SA }, { S-->b }]
C[{ C-->AS }]

}
word='abbabbbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S, C][S]      []       []       []       []       []       []       []       []       
[A, S, C][]       [S]      []       []       []       []       []       []       []       
[A, S, C][]       [S]      [A]      []       []       []       []       []       []       
[A, S, C][]       [S]      [A, S, C][S]      []       []       []       []       []       
[A, S, C][]       [S]      [A, S, C][]       [S]      []       []       []       []       
[A, S, C][]       [S]      [A, S, C][]       []       [S]      []       []       []       
[A, S, C][]       [S]      [A, S, C][]       []       [S]      [A]      []       []       
[A, C, S][]       [S]      [A, S, C][]       []       [S]      [A, S, C][S]      []       
[A, C, S][]       [S]      [A, S, C][]       []       [S]      [A, S, C][S]      [A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='abbabbbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S, C][S]      []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][S]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][S]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][S]      []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S]      []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
B[{ B-->CC }, { B-->CS }]
S[{ S-->a }]
C[{ C-->SC }, { C-->CC }, { C-->b }]

}
word='abbabbbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, C]   [C]      []       []       []       []       []       []       []       []       
[A, B, C][B, C]   [C]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [S]      []       []       []       []       []       []       
[A, B, C][B, C]   [B, C]   [A, C]   [C]      []       []       []       []       []       
[A, B, C][B, C]   [B, C]   [A, B, C][B, C]   [C]      []       []       []       []       
[A, B, C][B, C]   [B, C]   [A, B, C][B, C]   [B, C]   [C]      []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [S]      []       []       
[A, B, C][B, C]   [B, C]   [A, B, C][B, C]   [B, C]   [B, C]   [A, C]   [C]      []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B]   []       []       []       []       []       []       []       []       []       
[A, B, C][B, C]   []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      []       []       [A]      []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   []       []       []       []       []       
[A, B, C][B, C]   [B, C]   [A, B, C][B, C]   [B, C]   []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=48

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=48
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->SS }]
S[{ S-->SS }, { S-->b }, { S-->BS }]

}
word='bbbabaabba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [S]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S]         [S]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B]         []          []          []          []          
[]          []          []          []          []          []          [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [S]         [S]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S, C]   [B, S, C]   [S]         []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][]       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->CB }]
C[{ C-->a }, { C-->BB }]

}
word='bbbabaabba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][B][] [] [] [] [] [] [] [] 
[B][C][B][] [] [] [] [] [] [] 
[B][C][B][C][] [] [] [] [] [] 
[C][B][C][B][B][] [] [] [] [] 
[C][B][C][B][B][C][] [] [] [] 
[C][B][C][B][B][] [C][] [] [] 
[B][C][B][C][C][B][B][B][] [] 
[C][B][C][B][B][C][C][C][B][] 
[C][B][C][B][B][C][C][C][B][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[C][] [C][B][] [] [] [] [] [] 
[B][] [B][C][] [] [] [] [] [] 
[] [B][] [] [B][C][] [] [] [] 
[C][] [C][B][] [C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }]
B[{ B-->SA }]
C[{ C-->AS }, { C-->SA }, { C-->SS }]
S[{ S-->SA }, { S-->b }]

}
word='bbbabaabba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, C]      [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [B, S, C]   [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, C]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, S, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, S, C]   []          [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, B, S, C][]          [A, C]      [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, B, S, C][]          [A, C]      [A, C]      [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, B, S, C][]          [A, C]      [A, C]      [B, S, C]   [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    [A, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SC }]
B[{ B-->CS }, { B-->SC }, { B-->CC }, { B-->SS }]
S[{ S-->a }, { S-->CS }, { S-->SC }]
C[{ C-->CS }, { C-->CC }, { C-->b }]

}
word='bbbabaabba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [C]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S, C][B]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S, C][B]         [A, B, S]   [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S, C][B]         [A, B, S]   [A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, S]   [A, B, C, S][B]         [A, B, S]   [A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          [A, B, S, C][]          []          []          []          []          
[]          []          []          []          [A, B, S, C][B]         []          []          []          []          
[]          []          []          []          [A, B, C, S][B]         []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AB }, { B-->a }]
S[{ S-->BA }]
C[{ C-->AA }, { C-->AB }]

}
word='bbbabaabba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[]          [C]         [A]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [B]         []          []          []          []          []          []          
[C, S]      [C, S]      [C, S]      [S]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, B, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, B, C]   []          [B]         []          []          []          
[C, S]      [C, S]      [C, S]      []          [C, S]      []          [S]         [A]         []          []          
[]          []          []          []          []          []          []          [C]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, B, C, S][]          [S]         [A, B, C]   [A, B, C]   [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C, S]      [C, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[]          []          [A, B, C, S][S]         []          []          []          []          []          []          
[C, S]      [C, S]      []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='abaabbbbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BA }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }]
S[{ S-->AB }]

}
word='abaabbbbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, C]      [A]         []          []          []          []          []          []          []          []          
[S]         [S]         [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[A, B, C]   [A, B]      [A, C]      [A, C]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A]         []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CB }]
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }]
S[{ S-->BB }, { S-->BC }]

}
word='abaabbbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C]   [B]      []       []       []       []       []       []       []       []       
[A, C]   [B, S]   [C]      []       []       []       []       []       []       []       
[A, C]   [B, S]   []       [C]      []       []       []       []       []       []       
[A, C]   [A, B, S][]       [A, C]   [B]      []       []       []       []       []       
[A, C]   [A, B, S][]       [A, C]   [A, S]   [B]      []       []       []       []       
[A, C]   [A, B, S][]       [A, C]   []       [A, S]   [B]      []       []       []       
[A, C]   [A, B, S][]       [A, C]   []       []       [A, S]   [B]      []       []       
[A, C]   [A, B, S][]       [A, C]   []       []       []       [A, S]   [B]      []       
[A, C]   [A, B, S][]       [A, C]   []       []       []       [A, S]   [B, S]   [C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->CA }, { C-->a }, { C-->AA }]

}
word='abaabbbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[A]   []    [C]   []    []    []    []    []    []    []    
[A, C][C]   [A]   [C]   []    []    []    []    []    []    
[A, C][C]   [A, C][C]   [A]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][C]   [A]   []    []    []    []    
[A, C][A, C][A, C][A, C][C]   [C]   [A]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [C]   [A]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   [C]   [A]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->AS }, { S-->SA }, { S-->SS }, { S-->b }]

}
word='abaabbbbba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][A][] [] [] [] [] [] [] 
[S][S][] [A][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->a }, { B-->BB }]
C[{ C-->CB }, { C-->BB }, { C-->CC }, { C-->b }, { C-->BC }]

}
word='aabaaaabba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B, C][B]      []       []       []       []       []       []       []       []       
[A, C]   [A, C]   [C]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [B]      []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, B, C][B]      []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, B, C][A, B, C][B]      []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, B, C][A, B, C][A, B, C][B]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->AA }]
C[{ C-->BA }, { C-->AA }]
S[{ S-->BA }, { S-->AA }]

}
word='aabaaaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C, S][A]      []       []       []       []       []       []       []       []       
[B, C, S][A]      [B]      []       []       []       []       []       []       []       
[A, C, S][B, C, S][A, C, S][A]      []       []       []       []       []       []       
[B, C, S][A, C, S][B, C, S][B, C, S][A]      []       []       []       []       []       
[A, C, S][B, C, S][A, C, S][A, C, S][B, C, S][A]      []       []       []       []       
[B, C, S][A, C, S][B, C, S][B, C, S][A, C, S][B, C, S][A]      []       []       []       
[B, C, S][A, C, S][B, C, S][B, C, S][A, C, S][B, C, S][A]      [B]      []       []       
[B, C, S][A, C, S][B, C, S][B, C, S][A, C, S][B, C, S][A]      []       [B]      []       
[A, C, S][B, C, S][A, C, S][A, C, S][B, C, S][A, C, S][B, C, S][A, C, S][A, C, S][A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[]       [A, C, S][]       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[]       [A, C, S][B, C, S][]       []       []       []       []       []       []       
[B]      [C, S]   [B, C, S][B]      [C, S]   []       []       []       []       []       
[B]      [C, S]   [B, C, S][B]      [C, S]   [B]      []       []       []       []       
[A, C, S][]       []       [A, C, S][]       [A, C, S][]       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=43

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=43
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SS }]
B[{ B-->CC }, { B-->CS }]
C[{ C-->a }, { C-->SC }, { C-->SS }]
S[{ S-->CS }, { S-->SC }, { S-->b }]

}
word='aabaaaabba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B]      [C]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [A, B]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          [A, B]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][C, S]      [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A, B][A, B][A, B][]    []    []    []    
[]    []    []    [C]   [C]   [C]   [C]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BB }, { A-->SB }]
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->BS }]
C[{ C-->SS }, { C-->BB }, { C-->BS }]

}
word='aabaaaabba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, C]      [A]         [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A]         [B]         []          []          
[]          []          []          []          []          []          []          [A, C]      [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      [S, C]      [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='aabaaaabba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->CB }, { B-->a }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->BB }, { C-->b }]

}
word='bababaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[A, C][A, C][B, S][B]   []    []    []    []    []    []    
[]    []    [S]   [S]   [C]   []    []    []    []    []    
[B, S][B, S][A, C][A, C][B, S][B]   []    []    []    []    
[A, C][A, C][B, S][B, S][A, C][A, C][B]   []    []    []    
[B, S][B, S][A, C][A, C][B, S][B, S][A, C][B]   []    []    
[S]   [S]   []    []    [S]   [S]   []    [S]   [C]   []    
[A, C][A, C][B, S][B, S][A, C][A, C][B, S][A, C][B, S][B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[A, C][]    []    [B, S][]    []    []    []    []    []    
[]    [B, S][A, C][]    []    []    []    []    []    []    
[S]   []    []    []    [S]   []    []    []    []    []    
[A, C][A, C][]    []    [A, C][A, C][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='bababaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SC }]
C[{ C-->CS }, { C-->b }]

}
word='bababaaaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[C][S][C][S][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[C][S][C][S][C][S][] [] [] [] 
[C][S][C][S][C][] [S][] [] [] 
[C][S][C][S][C][] [] [S][] [] 
[C][S][C][S][C][] [] [S][C][] 
[C][S][C][S][C][] [] [S][C][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->CC }]
C[{ C-->a }, { C-->BC }]
S[{ S-->CC }]

}
word='bababaaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [C]         []          []          []          []          []          []          []          []          
[A]         [A]         [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C]   [C]         []          []          []          []          []          []          
[A]         []          [A]         [A]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [B, S]      [C]         []          []          
[A]         [A]         [A]         [A]         [A]         [A]         []          [A]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, C]   [A, B, S]   [A, B, C]   [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, C, S][]          [A, B, C, S][]          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][]          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=42

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=42
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }]
B[{ B-->SC }, { B-->SS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SC }, { C-->SS }, { C-->b }]

}
word='bababaaaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[A]         [B, S, C]   [C]         []          []          []          []          []          []          []          
[]          [A, B, C]   [A]         [S]         []          []          []          []          []          []          
[A]         [A, B, S, C][A]         [B, S, C]   [C]         []          []          []          []          []          
[A]         [A, B, S, C][]          [A, B, C]   [A]         [S]         []          []          []          []          
[A]         [A, B, S, C][A]         [A, B, S, C][]          [A, B, C]   [S]         []          []          []          
[A]         [A, B, C, S][A]         [A, B, S, C][A]         [A, B, S, C][A, B, C]   [S]         []          []          
[A]         [A, B, C, S][A]         [A, B, S, C][A]         [A, B, S, C][A, B, S, C][B, S, C]   [C]         []          
[A]         [A, B, C, S][A]         [A, B, S, C][A]         [A, B, S, C][A, B, S, C][A, B, C]   [A]         [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, B, S, C][]          []          []          []          []          []          []          []          
[A]         []          []          []          []          []          []          []          []          []          
[A]         [A, B, S, C][]          []          []          []          []          []          []          []          
[A]         [A, B, C, S][A]         [A, B, S, C][]          []          []          []          []          []          
[A]         [A, B, C, S][A]         [A, B, S, C][A]         []          []          []          []          []          
[A]         [A, B, C, S][A]         [A, B, S, C][A]         []          [A]         []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=43

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=43
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]

}
word='aaaaababba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->BB }, { C-->AB }]

}
word='aaaaababba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, C, S][B]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][B]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [A]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, S]   [A]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, S]   [A]      [A]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, C, S][C, S]   [C, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       [B, C, S][]       []       []       []       []       
[]       []       []       []       [B, C, S][C, S]   []       []       []       []       
[]       []       []       []       [B, C, S][C, S]   [B, C, S][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->b }, { B-->BS }, { B-->SS }, { B-->BB }]
S[{ S-->a }, { S-->SS }]
C[{ C-->SS }]

}
word='aaaaababba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[B]         [B]         [B]         [B]         []          [B]         []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      []          [A, B]      [S]         []          []          []          
[B]         [B]         [B]         [B]         []          [B]         []          [B]         []          []          
[B]         [B]         [B]         [B]         []          [B]         []          [B]         [B]         []          
[A, B]      [A, B]      [A, B]      [A, B]      []          [A, B]      []          [A, B]      [A, B]      [S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BB }]
S[{ S-->BB }]

}
word='aaaaababba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C, S][B]      []       []       []       []       []       []       []       []       
[]       [A, C, S][B]      []       []       []       []       []       []       []       
[B]      []       [A, C, S][B]      []       []       []       []       []       []       
[A, C, S][B]      []       [A, C, S][B]      []       []       []       []       []       
[B]      []       [A, C, S][B]      []       [A]      []       []       []       []       
[A, C, S][B]      []       [A, C, S][]       []       [B]      []       []       []       
[B]      []       [A, C, S][B]      []       []       []       [A]      []       []       
[]       [A, C, S][B]      []       [A, C, S][B]      [A, C, S][B]      [A]      []       
[B]      []       [A, C, S][B]      []       [A, C, S][]       [A, C, S][]       [B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->SC }]
C[{ C-->b }]

}
word='aaaaababba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [C]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][]    [S]   [C]   []    []    
[B, S][B, S][B, S][B, S][B, S][]    [S]   []    [C]   []    
[B, S][B, S][B, S][B, S][B, S][]    [B, S][]    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
C[{ C-->a }, { C-->BC }]
S[{ S-->BC }]

}
word='ababbbbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A, C, S][C, S]   [C]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [B]      [B]      []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [B]      []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      []       []       
[A, C, S][A, C, S][A, C, S][C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BA }]
C[{ C-->BB }]

}
word='ababbbbbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [A]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][B]      [B]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [A, C]   [B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B]   [A, B]   [A, C]   [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   [B]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   []       [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }]
B[{ B-->AC }, { B-->CA }, { B-->AA }, { B-->CC }]
C[{ C-->AC }, { C-->a }]
S[{ S-->AA }, { S-->CC }]

}
word='ababbbbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[A, B, S][B, C]   [C]      []       []       []       []       []       []       []       
[A, B, S][B]      [B]      [A]      []       []       []       []       []       []       
[A, B, S][B]      [B]      [A, B, S][A]      []       []       []       []       []       
[A, B, S][B]      [B]      [A, B, S][A, B, S][A]      []       []       []       []       
[A, B, S][B]      [B]      [A, B, S][A, B, S][A, B, S][A]      []       []       []       
[A, B, S][B]      [B]      [A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       
[B, C]   [A, B, S][A, B, S][B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       
[A, B, S][B, C]   [B, C]   [A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[A, B, S][B]      []       []       []       []       []       []       []       []       
[A, B, S][B]      [B]      []       []       []       []       []       []       []       
[A, B, S][B]      [B]      []       []       []       []       []       []       []       
[A, B, S][B]      [B]      []       []       []       []       []       []       []       
[C]      [A, B, S][A, B, S][]       []       []       []       []       []       []       
[]       []       [C]      [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='ababbbbbaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BB }]
C[{ C-->BB }, { C-->AA }]

}
word='ababbbbbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[A, C][A]   [A]   []    []    []    []    []    []    []    
[B, C][B, C][B]   [B]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    []    
[A, C][A, C][A, C][A]   [A]   [A]   [A]   [A]   [A]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
B[{ B-->SC }, { B-->CS }]
C[{ C-->a }, { C-->SC }, { C-->CC }, { C-->CS }]
S[{ S-->CC }, { S-->CS }, { S-->b }]

}
word='bbaaaaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }, { A-->SC }]
B[{ B-->CS }, { B-->SC }]
S[{ S-->a }, { S-->SS }, { S-->SC }]
C[{ C-->SS }, { C-->SC }, { C-->b }]

}
word='bbaaaaabab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          [A, B]      [S]         []          []          []          []          []          []          []          
[]          [A, B]      [A, S, C]   [S]         []          []          []          []          []          []          
[]          [A, B]      [A, B, S, C][A, S, C]   [S]         []          []          []          []          []          
[]          [A, B]      [A, B, S, C][A, B, S, C][A, S, C]   [S]         []          []          []          []          
[]          [A, B]      [A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         []          []          []          
[]          [A, B]      [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          
[]          [A, B]      [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [S]         []          
[]          [A, B]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A, B, S, C][C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          [A, B, S, C][]          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->BC }, { B-->a }, { B-->BB }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->CB }, { C-->BB }, { C-->b }, { C-->BC }]

}
word='bbaaaaabab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          [A, C, S]   [B]         []          []          []          []          []          []          []          
[]          [A, C, S]   [A, B, C]   [B]         []          []          []          []          []          []          
[]          [A, C, S]   [A, B, C, S][A, B, C]   [B]         []          []          []          []          []          
[]          [A, C, S]   [A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          []          
[]          [A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          
[]          [A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[]          [A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          
[]          [A, C, S]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }]
B[{ B-->CC }, { B-->CS }, { B-->SS }]
S[{ S-->a }, { S-->CS }, { S-->SS }, { S-->SC }]
C[{ C-->SS }, { C-->b }]

}
word='bbaaaaabab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, S]      [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->BS }, { B-->SB }, { B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->BS }]
C[{ C-->SS }, { C-->BS }]

}
word='bbaaaaabab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
S[{ S-->BB }, { S-->b }]

}
word='aaaababbbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[S][B][S][B][S][] [] [] [] [] 
[B][S][B][S][] [B][] [] [] [] 
[B][S][B][S][] [B][S][] [] [] 
[B][S][B][S][] [B][] [S][] [] 
[B][S][B][S][] [B][] [] [S][] 
[B][S][B][S][] [B][] [] [] [S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->a }, { B-->SS }]
S[{ S-->BB }, { S-->b }]

}
word='aaaababbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A]   [S]   [B]   []    []    []    []    []    []    []    
[A, B][A]   [S]   [B]   []    []    []    []    []    []    
[A]   [S]   [A, B][A]   [S]   []    []    []    []    []    
[A, B][A]   [S]   []    []    [B]   []    []    []    []    
[A]   [S]   [A, B][]    []    [A]   [S]   []    []    []    
[S]   [A, B][A]   [S]   [A, B][S]   [A, B][S]   []    []    
[A, B][A]   [S]   [A, B][A]   [A, B][A]   [A, B][S]   []    
[A]   [S]   [A, B][A]   [S]   [A]   [S]   [A]   [A, B][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[A, B][]    [S]   [A, B][A]   [A, B][]    []    []    []    
[]    [S]   [A, B][]    [S]   []    [S]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='aaaababbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]

}
word='aaaababbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->AA }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->CA }, { C-->a }]

}
word='aaaababbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[]          [S]         [C]         []          []          []          []          []          []          []          
[]          []          [S]         [C]         []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C]      [A]         []          []          []          []          []          
[S]         [S]         [S]         [S]         [S]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, C]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B, C]   [B]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B, C]   []          [B]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B, C]   []          []          [B]         [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[]          []          []          [A, B, C, S][B, S]      []          []          []          []          []          
[]          []          []          [A, B, C, S][B, S]      []          []          []          []          []          
[]          []          []          [A, B, C, S][B, S]      []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='bbbabbbbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][A, B][B]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][B]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BB }]
C[{ C-->CB }, { C-->a }, { C-->BB }]
S[{ S-->BB }]

}
word='bbbabbbbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A]         [A]         [A]         [C]         []          []          []          []          []          []          
[A]         [A]         [A]         [A, C]      [B]         []          []          []          []          []          
[A]         [A]         [A]         [A, C]      [A, B, C, S][B]         []          []          []          []          
[A]         [A]         [A]         [A, C]      [A, B, C, S][A, B, C, S][B]         []          []          []          
[A]         [A]         [A]         [A, C]      [A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          
[A]         [A]         [A]         [A, C]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          
[]          []          []          []          [A]         [A]         [A]         [A]         [A]         [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [] [A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->AB }, { B-->BB }]
C[{ C-->BA }, { C-->BB }, { C-->AB }]
S[{ S-->BB }]

}
word='bbbabbbbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[C]         [C]         [C]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      [B]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BB }]
C[{ C-->a }, { C-->BB }, { C-->BC }]
S[{ S-->BB }, { S-->BC }]

}
word='bbbabbbbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         [A, B, C, S][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         [A, B, C, S][A, B, C, S][B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         [A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          [A, B, C, S][]          []          []          []          []          []          []          
[]          []          [A, B, C, S][A]         []          []          []          []          []          []          
[]          []          [A, B, C, S][A]         []          []          []          []          []          []          
[]          []          [A, B, C, S][A]         []          []          []          []          []          []          
[]          []          [A, B, C, S][A]         []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->BA }]
C[{ C-->BA }]
S[{ S-->AB }]

}
word='bbbabbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[B, C, S][A]      [B]      []       []       []       []       []       []       []       
[B, C, S][A]      [B, C]   [A]      []       []       []       []       []       []       
[A]      [B, S, C][A]      [S]      [B]      []       []       []       []       []       
[B, C, S][A]      [B, C, S][]       [A]      [B]      []       []       []       []       
[A]      [B, S, C][A]      [S]      [B, C, S][A]      [B]      []       []       []       
[B, C, S][A]      [B, C, S][]       [A]      [B, C, S][A]      [B]      []       []       
[A]      [B, S, C][A]      [S]      [B, C, S][A]      [B, C, S][A]      [B]      []       
[A]      [B, S, C][A]      [S]      [B, C, S][A]      [B, C, S][A]      [B, C]   [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[]       [B, S, C][]       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[]       [B, S, C][A]      []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[]       [B, S, C][A]      []       [B, C, S][]       []       []       []       []       
[A]      [S]      [A]      [S]      [S]      [A]      [S]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
S[{ S-->AA }]

}
word='abbbbbbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->CA }]
B[{ B-->CA }, { B-->AA }]
C[{ C-->AC }, { C-->a }, { C-->AA }]
S[{ S-->AC }]

}
word='abbbbbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B]      [A]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A]         []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][S, C][C, S][C, S][C, S][C, S][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abbbbbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abbbbbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->a }, { B-->CC }]
C[{ C-->CB }, { C-->b }]
S[{ S-->CB }, { S-->CC }, { S-->BC }]

}
word='abbbbbbaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [A, B, S][C]      []       []       []       []       []       []       []       
[S]      [S, C]   [A, B, S][C]      []       []       []       []       []       []       
[]       [A, B, S][C, S]   [A, B, S][C]      []       []       []       []       []       
[S]      [S, C]   [A, B, S][C, S]   [A, B, S][C]      []       []       []       []       
[]       [A, B, S][C, S]   [A, B, S][C, S]   [A, B, S][C]      []       []       []       
[]       [A, B, S][C, S]   [A, B, S][C, S]   [A, B, S][C, S]   [B]      []       []       
[S]      [S, C]   [A, B, S][C, S]   [A, B, S][C, S]   [A, B, S][S]      [C]      []       
[S]      [S, C]   [A, B, S][C, S]   [A, B, S][C, S]   [A, B, S][S]      [C, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [S, C]   []       []       []       []       []       []       []       []       
[]       []       [C, S]   []       []       []       []       []       []       []       
[]       [A, B]   []       [A, B]   []       []       []       []       []       []       
[]       [S, C]   []       [C, S]   []       [C, S]   []       []       []       []       
[S]      []       [A, B]   []       [A, B]   []       [A, B, S][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BB }]
B[{ B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->CC }, { C-->BB }, { C-->b }]
S[{ S-->BB }, { S-->BC }]

}
word='bbaaabbbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][B]         [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S]      [A, C, S]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [S]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->BC }]
B[{ B-->b }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->CC }]
S[{ S-->BB }]

}
word='bbaaabbbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C, S][B]      []       []       []       []       []       []       []       []       
[A, C]   [A]      [C]      []       []       []       []       []       []       []       
[A, C]   [A]      [A, C]   [C]      []       []       []       []       []       []       
[A, C]   [A]      [A, C]   [A, C]   [C]      []       []       []       []       []       
[A, C]   [A]      [A, C]   [A, C]   [C]      [B]      []       []       []       []       
[A, C]   [A]      [A, C]   [A, C]   [A, C]   [A, C, S][B]      []       []       []       
[A, C]   [A]      [A, C]   [A, C]   [A, C]   [A, C]   [A, C, S][B]      []       []       
[A, C]   [A]      [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C, S][B]      []       
[A, C]   [A]      [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C, S][B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CC }, { B-->SS }]
S[{ S-->a }, { S-->CC }]
C[{ C-->CC }, { C-->SS }, { C-->b }]

}
word='bbaaabbbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [C]         []          []          []          []          []          []          []          []          
[A, B, C]   []          [S]         []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A, B, C]   [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          [A, B, C]   [S]         []          []          []          []          []          
[B, S, C]   [B, S, C]   [A, B, C]   [B, S, C]   []          [C]         []          []          []          []          
[A, B, C, S][B, S, C]   [A, B, C, S][B, S, C]   [A, B, C]   [B, S, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, S, C]   [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }, { B-->BB }]
S[{ S-->AA }, { S-->BB }]
C[{ C-->AA }]

}
word='bbaaabbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S, C][A]      []       []       []       []       []       []       []       []       
[A, S, C][A]      [B]      []       []       []       []       []       []       []       
[A, S, C][A]      [B, S]   [B]      []       []       []       []       []       []       
[A, S, C][A]      [B, S]   [B, S]   [B]      []       []       []       []       []       
[A, S, C][A, S, C][]       []       []       [A]      []       []       []       []       
[A, S, C][A, S, C][]       []       []       [A, S, C][A]      []       []       []       
[A, S, C][A, S, C][]       []       []       [A, S, C][A, S, C][A]      []       []       
[A, C, S][A, S, C][]       []       []       [A, S, C][A, S, C][A, S, C][A]      []       
[A, C, S][A, C, S][]       []       []       [A, S, C][A, S, C][A, S, C][A, S, C][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]

}
word='bbaaabbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BB }, { B-->AA }]
S[{ S-->BA }]
C[{ C-->BB }]

}
word='abbbababaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B]      [B]         []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [B]         []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [B, C]      [B]         []          []          []          []          []          []          
[A, B, S]   [A, S]      [A, S]      [A, S]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, S]      [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, S]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [B]         [A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C, S][C, S][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->AS }, { S-->a }]
C[{ C-->AS }, { C-->SA }, { C-->SS }]

}
word='abbbababaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][S]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, S, C][S]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, S, C][B, C, S][B, S, C][S]      []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->CC }]
C[{ C-->AA }, { C-->b }]

}
word='abbbababaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [B]   [C]   []    []    []    []    []    []    []    
[]    []    [B]   [C]   []    []    []    []    []    []    
[C]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[B]   []    []    []    []    [C]   []    []    []    []    
[A]   [B, C][B, C][B, C][C]   [A]   [A]   []    []    []    
[]    [B]   [B]   [B]   [B]   []    []    [C]   []    []    
[B, C][A]   [A]   [A]   [A]   [B, C][C]   [A]   [A]   []    
[A]   [B, C][B, C][B, C][B, C][A]   [A]   [B, C][C]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    [B]   [B]   [B]   []    []    []    []    []    []    
[]    [A]   [A]   [A]   [A]   []    []    []    []    []    
[A]   [B, C][B, C][B, C][B]   []    [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='abbbababaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->SS }, { B-->SC }]
C[{ C-->a }, { C-->CS }, { C-->SS }, { C-->SC }, { C-->CC }]
S[{ S-->CS }, { S-->SS }, { S-->b }]

}
word='abbbababaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C, S]      [S]         []          []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [S]         []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [S]         []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [S]         []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][A, B][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AC }, { A-->CA }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
C[{ C-->CA }, { C-->a }, { C-->CC }]
S[{ S-->CC }]

}
word='aabaaaabaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      [A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      [A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      [A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [C]         []          
[A, B, S, C][A, B, S, C][A, B]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, C, S][C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->AB }]
C[{ C-->BA }, { C-->AB }]

}
word='aabaaaabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B]      [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [S, C]      [B]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [A, B]      [B]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][S, C]      [A, B, S, C][A, B]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][S, C]      [A, B, S, C][A, B, S, C][A, B]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][S, C]      [A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         []          []          
[A, B, C, S][A, B, C, S][S, C]      [A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [S, C]      [B]         []          
[A, B, S, C][A, B, C, S][S, C]      [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, B]      [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, B, S, C][]          []          []          []          []          []          []          []          
[]          [A, B, S, C][S, C]      []          []          []          []          []          []          []          
[]          [A, B, C, S][S, C]      []          []          []          []          []          []          []          
[]          [A, B, C, S][S, C]      []          []          []          []          []          []          []          
[]          [A, B, C, S][S, C]      []          []          []          []          []          []          []          
[]          [A, B, C, S][S, C]      []          []          []          [A, B, S, C][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=38

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=38
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }]
C[{ C-->AA }]

}
word='aabaaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[A, C][A, C][A]   [A]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A]   []    []    []    []    []    
[]    []    []    []    [C]   [A]   []    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   [A]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->AA }]
C[{ C-->AA }, { C-->b }]

}
word='aabaaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, C][A]   []    []    []    []    []    []    []    []    
[B, C][A]   [C]   []    []    []    []    []    []    []    
[A]   [B, C][]    [A]   []    []    []    []    []    []    
[B, C][A]   []    [B, C][A]   []    []    []    []    []    
[A]   [B, C][]    [A]   [B, C][A]   []    []    []    []    
[B, C][A]   []    [B, C][A]   [B, C][A]   []    []    []    
[B, C][A]   []    [B, C][A]   [B, C][A]   [C]   []    []    
[A]   [B, C][]    [A]   [B, C][A]   [B, C][]    [A]   []    
[B, C][A]   []    [B, C][A]   [B, C][A]   []    [B, C][A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    [B, C][]    []    []    []    []    []    
[A]   []    []    [A]   []    [A]   []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->AS }]
S[{ S-->AS }, { S-->a }]
C[{ C-->SA }, { C-->SS }]

}
word='aabaaaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, C]   [S]      []       []       []       []       []       []       []       []       
[]       [C]      [A]      []       []       []       []       []       []       []       
[B, C, S][A, C]   [B, S]   [S]      []       []       []       []       []       []       
[A, C]   [B, S, C][A, C]   [A, C]   [S]      []       []       []       []       []       
[B, C, S][A, C]   [B, S, C][B, C, S][A, C]   [S]      []       []       []       []       
[A, C]   [B, S, C][A, C]   [A, C]   [B, C, S][A, C]   [S]      []       []       []       
[]       [C]      []       []       [C]      []       [C]      [A]      []       []       
[B, C, S][A, C]   [B, S, C][B, C, S][A, C]   [B, C, S][A, C]   [B, S]   [S]      []       
[A, C]   [B, S, C][A, C]   [A, C]   [B, C, S][A, C]   [B, C, S][A, C]   [A, C]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B, S, C][]       []       []       []       []       []       []       []       
[B, C, S][]       [C]      []       []       []       []       []       []       []       
[]       [B, S, C][A]      []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, C]   []       []       [A, C]   []       []       []       []       []       
[]       [B, S, C][A]      []       [B, C, S][]       [B, C, S][]       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='bbbbabbaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
C[{ C-->a }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

}
word='bbbbabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][S]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [C]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][]    [B, S][S]   []    []    []    
[B, S][B, S][B, S][B, S][]    [B, S][S]   [C]   []    []    
[B, S][B, S][B, S][B, S][]    [B, S][S]   []    [C]   []    
[B, S][B, S][B, S][B, S][]    [B, S][S]   []    []    [C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->CA }]
S[{ S-->AC }]
C[{ C-->a }, { C-->AA }]

}
word='bbbbabbaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, C]      [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [A, C]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [A, C, S]   [A, S]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [A, C, S]   [A, S]      []          [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [A, C, S]   [A, S]      []          []          [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          [A, B, C, S][]          []          []          []          []          []          
[]          []          []          [A, B, C, S][B]         []          []          []          []          []          
[]          []          []          [A, B, C, S][B]         [S]         []          []          []          []          
[]          []          []          [A, B, C, S][B]         [S]         []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->CC }]
B[{ B-->SS }]
C[{ C-->a }, { C-->SC }]
S[{ S-->SC }, { S-->CS }, { S-->b }]

}
word='bbbbabbaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B]      [S]         []          []          []          []          []          []          []          []          
[]          [A, B]      [S]         []          []          []          []          []          []          []          
[]          []          [A, B]      [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, S]      [S]         []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][C, S]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [A]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   []          [A]         [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][]          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->SC }]
B[{ B-->SC }, { B-->SS }, { B-->CC }]
C[{ C-->SC }, { C-->CS }, { C-->a }]
S[{ S-->CC }, { S-->CS }, { S-->b }]

}
word='bbbbabbaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B]      [S]         []          []          []          []          []          []          []          []          
[]          [A, B]      [S]         []          []          []          []          []          []          []          
[]          []          [A, B]      [S]         []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[]    []    []    []    []    [S]   [S]   []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->b }, { B-->AB }, { B-->BB }]
C[{ C-->BA }, { C-->AA }, { C-->BB }, { C-->AB }]
S[{ S-->AA }, { S-->AB }]

}
word='abaabbbbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, S, C][B]      []       []       []       []       []       []       []       []       
[C]      [C]      [A]      []       []       []       []       []       []       []       
[C]      [C]      [A, S, C][A]      []       []       []       []       []       []       
[B, S, C][B, C]   [B, S, C][B, S, C][B]      []       []       []       []       []       
[B, C, S][B, C]   [B, S, C][B, S, C][B, C]   [B]      []       []       []       []       
[B, C, S][B, C]   [B, S, C][B, S, C][B, C]   [B, C]   [B]      []       []       []       
[B, C, S][B, C]   [B, S, C][B, S, C][B, C]   [B, C]   [B, C]   [B]      []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [A]      []       
[B, C, S][B, C]   [B, C, S][B, S, C][B, C]   [B, C]   [B, C]   [B, C]   [B, S, C][B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[B, S, C][B, C]   []       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[S]      []       [S]      [S]      []       []       []       []       []       []       
[S]      []       [S]      [S]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      []       []       []       []       
[B, C, S][B, C]   [B, C, S][B, S, C][B, C]   [B, C]   [B, C]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }]
C[{ C-->CB }, { C-->a }]

}
word='abaabbbbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C]   [B]      []       []       []       []       []       []       []       []       
[A]      [A]      [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[A, B, C][A]      [B, C]   [B, C]   [B]      []       []       []       []       []       
[A, B, C][A]      [B, C]   [B, C]   []       [B]      []       []       []       []       
[A, B, C][A]      [B, C]   [B, C]   []       []       [B]      []       []       []       
[A, B, C][A]      [B, C]   [B, C]   []       []       []       [B]      []       []       
[A]      []       [A]      [A]      []       []       []       [A]      [C]      []       
[A, B, C][A]      [A, B, C][A, B, C][]       []       []       [A]      [B, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[A, B, C][]       [A, B, C][]       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='abaabbbbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, C][C]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][C]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->CA }]
B[{ B-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->AA }]

}
word='abaabbbbab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, C]      [C]         []          []          []          []          []          []          []          []          
[A, S]      [A]         [A]         []          []          []          []          []          []          []          
[S]         [S]         [S]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, C]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          [B]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          [B]         [C]         []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A]         [A]         [A]         [A]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }]
S[{ S-->a }, { S-->SS }, { S-->BS }]

}
word='abaabbbbab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][B][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[A][A][A][A][B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[S][S][S][S][S][S][S][S][S][] 
[A][A][A][A][A][A][A][A][A][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abaabbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }, { B-->BB }]
C[{ C-->b }]

}
word='abaabbaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][B][] [] [] [] [] [] 
[B][] [B][B][C][] [] [] [] [] 
[B][] [B][B][] [C][] [] [] [] 
[B][] [B][B][] [] [B][] [] [] 
[B][] [B][B][] [] [B][B][] [] 
[B][] [B][B][] [] [B][B][C][] 
[B][] [B][B][] [] [B][B][] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->AS }, { A-->SA }]
B[{ B-->AS }, { B-->AA }]
C[{ C-->AS }, { C-->AA }]
S[{ S-->SS }, { S-->b }]

}
word='abaabbaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[A, B, C][A]      [A]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][S]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, S]   [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][S]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, S]   [S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }]
C[{ C-->SS }]

}
word='abaabbaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [C]   [S]   []    []    []    []    []    []    
[C, S][S]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [C, S][C, S][S]   [B]   []    []    []    []    
[]    []    [C]   [C]   [C]   []    [S]   []    []    []    
[]    []    []    []    []    []    [C]   [S]   []    []    
[C, S][C, S][B]   [B]   [B]   [S]   [B]   [B]   [B]   []    
[B]   [B]   [C, S][C, S][S, C][B]   [C, S][C, S][S]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   [C, S][]    []    []    []    []    []    []    
[]    []    [C]   [C]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   [C, S][C, S][C]   [B]   [C, S][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->a }, { B-->BB }, { B-->AA }]
C[{ C-->AB }]

}
word='abaabbaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [A, C]   [B]      []       []       []       []       []       []       []       
[A, B]   [A, B, C][A, B]   [B]      []       []       []       []       []       []       
[A, B]   [A, B, C][A, B]   []       [A]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [A]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [B]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   []       [A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->a }, { S-->SS }, { S-->AA }]
C[{ C-->SS }]

}
word='aabbaaabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [B]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [A, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S, C][A, B, S]   [A, B]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [S]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [S]         [A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->a }, { B-->CC }]
C[{ C-->BB }, { C-->CC }, { C-->b }]

}
word='aabbaaabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, C]   [B]      []       []       []       []       []       []       []       []       
[B, C]   [A]      [C]      []       []       []       []       []       []       []       
[A, B, C][A, C]   [B, C]   [C]      []       []       []       []       []       []       
[A, B, C][A]      [A, C]   []       [B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [A, C]   [B]      []       []       []       []       
[A, B, C][A, C]   [A, B, C][A, C]   [A]      [A, C]   [B]      []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [A, C]   [B, C]   [A]      [C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [B, C]   [C]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[]       [A, B, C][A]      []       []       []       []       []       []       []       
[]       []       []       [A, C]   []       []       []       []       []       []       
[]       [A]      []       []       [A, C]   []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->AS }, { B-->SS }]
S[{ S-->a }, { S-->AA }]

}
word='aabbaaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, B][S]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[B]   [A, B][S]   [A]   []    []    []    []    []    []    
[S]   [B]   [A, B][B]   [S]   []    []    []    []    []    
[A, B][S]   [B]   [S]   [A, B][S]   []    []    []    []    
[B]   [A, B][S]   [A, B][B]   [A, B][S]   []    []    []    
[A, B][S]   [B]   [S]   [A, B][S]   []    [A]   []    []    
[S]   [B]   [A, B][B]   [S]   [B]   [A, B][S]   [A]   []    
[B]   [A, B][S]   [A, B][B]   [A, B][S]   [B]   [S]   [A]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[B]   []    [S]   [A, B][]    []    []    []    []    []    
[A, B][S]   []    []    [A, B][]    []    []    []    []    
[S]   [B]   [A, B][]    [S]   [B]   []    []    []    []    
[B]   [A, B][]    [A, B][B]   [A, B][S]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
C[{ C-->BB }, { C-->b }]

}
word='aabbaaabbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][B][] [] [] [] [] [] [] [] 
[C][B][C][] [] [] [] [] [] [] 
[C][B][] [C][] [] [] [] [] [] 
[B][C][] [] [B][] [] [] [] [] 
[C][B][] [] [C][B][] [] [] [] 
[B][C][] [] [B][C][B][] [] [] 
[B][C][] [] [B][C][B][C][] [] 
[B][C][] [] [B][C][B][] [C][] 
[B][C][] [] [B][C][B][] [] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->SA }, { B-->SS }, { B-->AA }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->AA }]
C[{ C-->AS }, { C-->SS }, { C-->AA }]

}
word='aabbaaabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, C]      [S]         []          []          []          []          []          []          []          []          
[B, C]      [B, S]      [A]         []          []          []          []          []          []          []          
[B, C]      [B, S, C]   [A, B, S, C][A]         []          []          []          []          []          []          
[]          [B, C]      [B, S, C]   [S, C]      [S]         []          []          []          []          []          
[]          []          [B, C]      [B, C]      [B, C]      [S]         []          []          []          []          
[]          []          []          []          []          [B, C]      [S]         []          []          []          
[]          []          []          []          []          [B, C]      [B, S]      [A]         []          []          
[]          []          []          []          []          [B, C]      [B, S, C]   [A, B, S, C][A]         []          
[]          []          []          []          []          [B, C]      [B, S, C]   [A, B, S, C][A, B, S, C][A]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->BC }]
B[{ B-->a }, { B-->BB }]
S[{ S-->CB }, { S-->BB }, { S-->BC }]
C[{ C-->CB }, { C-->BB }, { C-->CC }, { C-->b }]

}
word='aabaaabbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, S]      [C]         []          []          []          []          []          []          []          
[A, C, S]   [A, S]      [C, S]      [B]         []          []          []          []          []          []          
[A, C, S]   [A, S]      [A, C, S]   [A, B, C, S][B]         []          []          []          []          []          
[A, C, S]   [A, S]      [A, C, S]   [A, B, C, S][A, B, C, S][B]         []          []          []          []          
[A, C, S]   [A, S]      [A, C]      [A, S, C]   [A, C, S]   [A, S]      [C]         []          []          []          
[A, C, S]   [A, S]      [A, C]      [A, S, C]   [A, C, S]   [A, S]      [A, C]      [C]         []          []          
[A, C, S]   [A, S]      [A, C]      [A, S, C]   [A, C, S]   [A, S]      [A, C]      [A, C]      [C]         []          
[A, C, S]   [A, S]      [A, C]      [A, S, C]   [A, C, S]   [A, S]      [A, C]      [A, C]      [A, C]      [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C, S][]       []       []       []       []       []       []       []       []       
[A, C, S][A, S]   []       []       []       []       []       []       []       []       
[A, C, S][A, S]   []       []       []       []       []       []       []       []       
[A, C, S][A, S]   []       []       []       []       []       []       []       []       
[A, C, S][A, S]   []       [S]      [A, C, S][]       []       []       []       []       
[A, C, S][A, S]   []       [S]      [A, C, S][A, S]   []       []       []       []       
[A, C, S][A, S]   []       [S]      [A, C, S][A, S]   []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=49

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=49
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->a }, { B-->BB }, { B-->AA }]
C[{ C-->BB }, { C-->AA }]
S[{ S-->AA }]

}
word='aabaaabbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A]         [A]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C, S]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C, S]   [A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
C[{ C-->AA }, { C-->b }]

}
word='aabaaabbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][A][C][] [] [] [] [] [] [] 
[A][C][] [A][] [] [] [] [] [] 
[C][A][] [C][A][] [] [] [] [] 
[A][C][] [A][C][A][] [] [] [] 
[A][C][] [A][C][A][C][] [] [] 
[A][C][] [A][C][A][] [C][] [] 
[A][C][] [A][C][A][] [] [C][] 
[A][C][] [A][C][A][] [] [] [C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->BB }, { S-->SS }, { S-->b }]

}
word='aabaaabbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B, S][B]   [S]   []    []    []    []    []    []    []    
[B, S][S]   [B]   [B]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='aabaaabbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][A, B][B]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][B]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->BA }, { B-->BB }]
S[{ S-->BB }, { S-->AB }]
C[{ C-->BA }, { C-->AA }, { C-->AB }]

}
word='abbbaabbab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [B]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, B, S]   [B]         []          []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, B, S]   [B]         []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, B, S, C][A, B, C]   [A]         []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, B, S, C][A, B, C]   [C]         [A]         []          []          []          []          
[A, C, S]   [A, B, C, S][A, B, S, C][A, B, C, S][C]         [A, S, C]   [B]         []          []          []          
[A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][C]         [A, S, C]   [A, B, S]   [B]         []          []          
[A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][C]         [A, S, C]   [A, B, S, C][A, B, C]   [A]         []          
[A, C, S]   [A, B, S, C][A, B, C, S][A, B, C, S][C]         [A, S, C]   [A, B, S, C][A, B, C, S][A, S, C]   [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          [A, B, C, S][]          []          []          []          []          []          
[]          []          []          [A, B, C, S][C]         []          []          []          []          []          
[]          []          []          [A, B, C, S][C]         []          []          []          []          []          
[]          []          []          [A, B, C, S][C]         []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->a }, { C-->AA }]

}
word='abbbaabbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[C]      [A, C]   [A]      []       []       []       []       []       []       []       
[C]      [A, C, S][A, C]   [A]      []       []       []       []       []       []       
[C]      [A, C, S][A, C, S][A, S]   [C]      []       []       []       []       []       
[C]      [A, C, S][A, C, S][A, S]   []       [C]      []       []       []       []       
[C]      [A, C, S][A, C, S][A, S, C][]       [C]      [A]      []       []       []       
[C]      [A, C, S][A, C, S][A, S, C][]       [C]      [A, C]   [A]      []       []       
[C]      [A, C, S][A, C, S][A, S, C][]       [C]      [A, C, S][A, S]   [C]      []       
[C]      [A, C, S][A, C, S][A, S, C][]       [C]      [A, C, S][A, S, C][C]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='abbbaabbab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BS }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->SS }, { S-->BB }, { S-->b }]

}
word='abbbaabbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[B, S, C]   [A, B, S]   [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          []          []          
[B, S, C]   [A, B, S, C][S, C]      [C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [S, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S]   [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      [C]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         [B]         [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          [C]         []          []          []          []          
[]          []          []          []          []          []          [A, B, S, C][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BA }, { B-->BB }]
C[{ C-->BA }, { C-->BB }, { C-->AB }]

}
word='abbbaabbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[C]   [B, C][B]   []    []    []    []    []    []    []    
[C]   [B, C][B, C][B]   []    []    []    []    []    []    
[C]   [B, C][B, C][B, C][A]   []    []    []    []    []    
[C]   [B, C][B, C][B, C][]    [A]   []    []    []    []    
[C]   [B, C][B, C][B, C][]    [C]   [B]   []    []    []    
[C]   [B, C][B, C][B, C][]    [C]   [B, C][B]   []    []    
[C]   [B, C][B, C][B, C][]    [C]   [B, C][B, C][A]   []    
[C]   [B, C][B, C][B, C][]    [C]   [B, C][B, C][C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [C][] [] [] [] 
[C][] [] [] [] [C][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->CC }]
C[{ C-->CB }, { C-->a }, { C-->CC }]
S[{ S-->CB }, { S-->CC }, { S-->BC }]

}
word='aabababaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, C, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, C, S]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, C, S]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [B, C, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C, S][B, C, S]   [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[] [B][] [B][] [] [] [] [] [] 
[] [B][] [B][] [B][] [] [] [] 
[] [B][] [B][] [B][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->CB }, { B-->a }]
C[{ C-->CB }, { C-->BB }, { C-->b }]
S[{ S-->BC }]

}
word='aabababaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, C]      [B]         []          []          []          []          []          []          []          []          
[]          [A, S]      [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, C, S]   [A, B, C]   [B]         []          []          []          []          []          []          
[A, S]      []          [A, S]      [A, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [B]         []          []          []          []          
[A, S]      [A, S]      [A, S]      []          [A, S]      [A, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, C, S][]          [A, B, C, S][]          []          []          []          []          []          []          
[A, S]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [A, B, C, S][]          []          []          []          []          
[]          []          []          []          []          [S]         []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }, { C-->BC }]
S[{ S-->CB }, { S-->BC }]

}
word='aabababaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[A]         [A, C, S]   [B]         []          []          []          []          []          []          []          
[A]         [A, C, S]   [A, B, C, S][C]         []          []          []          []          []          []          
[A]         [A, C, S]   [A, B, C, S][A, C, S]   [B]         []          []          []          []          []          
[A]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][C]         []          []          []          []          
[A]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, C, S]   [B]         []          []          []          
[A]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][C]         []          []          
[A]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A]         [C]         []          
[A]         [A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][]          [A]         [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->BS }, { B-->SB }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->SS }]
C[{ C-->SB }, { C-->BS }]

}
word='aabababaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, S]      [S]         []          []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][A, B, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][A, B, C]   [B, S, C]   [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][A, B, C]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][A, B, C]   [B, S]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][B, S]      [S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [A][] [A][] [] [] [] [] [] 
[] [A][] [A][] [] [] [] [] [] 
[] [A][] [A][] [A][] [] [] [] 
[] [A][] [A][] [A][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->BS }, { B-->SB }]
S[{ S-->a }, { S-->SS }, { S-->BS }]

}
word='aabababaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [S]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }]
C[{ C-->CC }, { C-->CS }, { C-->b }]

}
word='bbbbbbabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][S][] [] [] 
[C][C][C][C][C][C][] [C][] [] 
[C][C][C][C][C][C][] [C][C][] 
[C][C][C][C][C][C][] [C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }]
C[{ C-->a }, { C-->SS }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

}
word='bbbbbbabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, C, S][S]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][S]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][S]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][S]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][S]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][S]      [C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A]      [S]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A]      [A, C, S][S]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A]      [A, C, S][A, C, S][S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       [A, C, S][]       []       []       []       
[]       []       []       []       []       [A, C, S][A]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
S[{ S-->a }, { S-->CC }, { S-->SC }]
C[{ C-->CC }, { C-->b }]

}
word='bbbbbbabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S, C]   [C]      []       []       []       []       []       []       []       []       
[A, S, C][S, C]   [C]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][S, C]   [C]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [C]      []       []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][S, C]   [C]      []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [S]      []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [S]      [C]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [S]      [S, C]   [C]      []       
[A]      [A]      [A]      [A]      [A]      [A]      [S]      [A, S, C][S, C]   [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->CC }, { C-->b }]

}
word='bbbbbbabbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [B]         []          []          []          
[]          []          []          []          []          []          [A]         [C]         []          []          
[]          []          []          []          []          []          [A]         [A, B, C, S][C]         []          
[]          []          []          []          []          []          [A]         [A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AB }, { B-->a }, { B-->AA }]
S[{ S-->AA }]
C[{ C-->AA }, { C-->AB }]

}
word='bbbbbbabbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, C]   [B, S, C]   [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [B, S, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][B, S, C]   []          [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   []          [B, S, C]   [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][]          [A, B, C]   [B, S, C]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->CA }, { B-->CC }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->a }, { C-->AA }]

}
word='baaaababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S]      [C]         []          []          []          []          []          []          []          []          
[A, S]      [B]         [C]         []          []          []          []          []          []          []          
[A, S]      []          [B]         [C]         []          []          []          []          []          []          
[A, S]      []          []          [B]         [C]         []          []          []          []          []          
[A, S, C]   []          []          [B]         [B, C]      [A]         []          []          []          []          
[A, B, S, C][]          []          [B]         [B, C]      [A, S]      [C]         []          []          []          
[A, B, S, C][]          []          [B]         [B, C]      [A, S, C]   [B, C]      [A]         []          []          
[A, B, C, S][]          []          [B]         [B, C]      [A, B, S, C][B, C]      [C]         [A]         []          
[A, B, C, S][]          []          [B]         [B, C]      [A, B, S, C][B, C]      [A, B, S, C][C]         [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [B][] [C][] [] [] [] 
[] [] [] [B][] [C][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]
S[{ S-->AA }]

}
word='baaaababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CC }]
B[{ B-->SS }]
S[{ S-->a }, { S-->CS }, { S-->SS }, { S-->SC }]
C[{ C-->CS }, { C-->SS }, { C-->b }]

}
word='baaaababbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S, C]      [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      [A]         [C]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      []          [A]         [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->AA }]

}
word='baaaababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A]   [B]   [C]   []    []    []    []    []    []    []    
[A]   []    [B]   [C]   []    []    []    []    []    []    
[A]   []    []    [B]   [C]   []    []    []    []    []    
[C]   []    []    []    []    [A]   []    []    []    []    
[B, C][]    []    []    []    [A]   [C]   []    []    []    
[A]   []    []    []    [B]   [C]   []    [A]   []    []    
[B, C][]    []    []    []    [A]   [B]   [C]   [A]   []    
[A]   []    []    []    [B]   [B, C][]    [A]   [C]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->AB }, { B-->AA }]
C[{ C-->AA }, { C-->AB }]
S[{ S-->AA }]

}
word='baaaababbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[A]         [B, C, S]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][B, C]      [B, C, S]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, C]      [B, C, S]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   []          []          [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         [B, C]      [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][A]         [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [A]         [B]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       []       []       []       []       []       
[]       [B, C]   []       []       []       []       []       []       []       []       
[]       []       [B, C, S][]       []       []       []       []       []       []       
[]       [S]      [S]      []       []       []       []       []       []       []       
[]       []       [B, C, S][B, C, S][]       []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
S[{ S-->a }, { S-->CS }]
C[{ C-->SS }, { C-->b }]

}
word='babbaaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[C]   [C]   [A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][C]   [C]   [C]   [S]   []    []    []    []    
[C]   [C]   [A, S][A, S][A, S][C]   [S]   []    []    []    
[A, S][A, S][C]   [C]   [C]   [A, S][C]   [S]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[C]   [C]   [A, S][A, S][A, S][C]   [A, S][C]   [A, S][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, S][C]   []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [A, S][C]   [C]   []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->AB }]
B[{ B-->a }]
S[{ S-->AA }]

}
word='babbaaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A, S][]    [A]   []    []    []    []    []    []    []    
[A, S][]    [A, S][A]   []    []    []    []    []    []    
[A, S][]    [A, S][A]   [B]   []    []    []    []    []    
[A, S][]    [A, S][A, S][A]   [B]   []    []    []    []    
[A, S][]    [A, S][A, S][A]   [A]   [B]   []    []    []    
[A, S][]    [A, S][A, S][A, S][A]   [A]   [B]   []    []    
[A, S][]    [A, S][A, S][A, S][A, S][A, S][]    [A]   []    
[A, S][]    [A, S][A, S][A, S][A, S][A, S][]    [A]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CS }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SS }, { C-->b }]

}
word='babbaaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[S]   [A, C][S]   [C]   []    []    []    []    []    []    
[A, C][B]   [A, C][B]   [S]   []    []    []    []    []    
[B]   [S]   [B]   [S]   [A, C][S]   []    []    []    []    
[S]   [A, C][S]   [A, C][B]   [A, C][S]   []    []    []    
[A, C][B]   [A, C][B]   [S]   [B]   [A, C][S]   []    []    
[S]   [A, C][S]   [A, C][B]   [A, C][S]   []    [C]   []    
[A, C][B]   [A, C][B]   [S]   [B]   [A, C][]    [B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   []    [S]   [A, C][]    []    []    []    []    []    
[A, C][B]   [A, C][]    [S]   []    []    []    []    []    
[]    [A, C][]    [A, C][B]   [A, C][]    []    []    []    
[A, C][B]   [A, C][]    [S]   [B]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->CB }, { C-->a }]

}
word='babbaaaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[B][C][B][] [] [] [] [] [] [] 
[B][C][] [B][] [] [] [] [] [] 
[B][C][] [B][C][] [] [] [] [] 
[B][C][] [B][] [C][] [] [] [] 
[B][C][] [B][] [] [C][] [] [] 
[B][C][] [B][] [] [] [C][] [] 
[B][C][] [B][] [] [] [C][B][] 
[B][C][] [B][] [] [] [C][B][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->CB }, { B-->CC }]
C[{ C-->CB }, { C-->a }, { C-->CC }]
S[{ S-->CB }, { S-->CC }, { S-->BC }]

}
word='babbaaaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[S]         [B, C, S]   [B]         []          []          []          []          []          []          []          
[S]         [B, C, S]   []          [B]         []          []          []          []          []          []          
[S]         [A, B, C, S][]          [S]         [C]         []          []          []          []          []          
[S]         [A, B, C, S][]          [S]         [A, B, C, S][C]         []          []          []          []          
[S]         [A, B, C, S][]          [S]         [A, B, C, S][A, B, C, S][C]         []          []          []          
[S]         [A, B, C, S][]          [S]         [A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[S]         [A, B, C, S][]          [S]         [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B]         []          
[S]         [A, B, C, S][]          [S]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 
[S][] [] [S][] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='bbaaabaaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->AB }, { B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->BA }, { C-->BB }, { C-->AB }]

}
word='bbaaabaaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BA }, { B-->AA }]
S[{ S-->BA }, { S-->AA }, { S-->AB }]
C[{ C-->BA }, { C-->AA }, { C-->AB }]

}
word='bbaaabaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C, S]      [C, S]      [C, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C, S]      [C, S]      [C, S]      [C, S]      [C, S]      [C, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=62

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=62
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->CS }]
B[{ B-->SC }, { B-->CC }]
C[{ C-->a }, { C-->SC }]
S[{ S-->CC }, { S-->b }]

}
word='bbaaabaaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[B, C]   [B, C]   [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, S][C]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, C][A, B, S][B, C]   [C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, S][A, B, C][A, B, S][A, B, S][C]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, C][A, B, S][A, B, C][A, B, C][A, B, S][B, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, C][]       []       []       []       []       []       
[A]      [A]      [B, C]   []       [B, C]   []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, C][A, B, S][A, B, C][A, B, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=52

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=52
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AC }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->AA }]

}
word='bbaaabaaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=62

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=62
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->BA }]
B[{ B-->b }]

}
word='babaaababb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][B][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][B][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][B][] 
[A][A][A][A][A][A][A][A][] [B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
C[{ C-->AC }, { C-->CA }, { C-->a }]

}
word='babaaababb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A, C][A, C][A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }]
B[{ B-->AC }, { B-->CA }, { B-->AA }, { B-->CC }]
C[{ C-->AC }, { C-->b }]

}
word='babaaababb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[A, B][B, C][C]   []    []    []    []    []    []    []    
[A, B][B]   [B]   [A]   []    []    []    []    []    []    
[A, B][B]   [B]   [A, B][A]   []    []    []    []    []    
[A, B][B]   [B]   [A, B][A, B][A]   []    []    []    []    
[B, C][A, B][A, B][B, C][B, C][B, C][C]   []    []    []    
[B]   [A, B][A, B][B]   [B]   [B]   [B]   [A]   []    []    
[A, B][B, C][B, C][A, B][A, B][A, B][A, B][B, C][C]   []    
[B, C][A, B][A, B][B, C][B, C][B, C][B, C][A, B][A, B][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][B]   [B]   []    []    []    []    []    []    []    
[C]   [A, B][A, B][]    []    []    []    []    []    []    
[]    []    [A, B][B]   [B]   []    []    []    []    []    
[A, B][]    [C]   [A, B][A, B][A, B][]    []    []    []    
[C]   [A]   []    []    []    []    [C]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->a }, { S-->AA }]

}
word='babaaababb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][]       [B]      [S]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [A]      [A]      [A]      [A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [S]      [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [B][B][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->BS }, { B-->a }, { B-->BB }]
C[{ C-->SB }, { C-->SS }, { C-->BS }]
S[{ S-->b }, { S-->BS }]

}
word='babaaababb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [B]         []          []          []          []          []          []          []          []          
[C]         [A, B, S, C][S]         []          []          []          []          []          []          []          
[C]         [B, C]      [C]         [B]         []          []          []          []          []          []          
[C]         [B, C]      [C]         [B]         [B]         []          []          []          []          []          
[C]         [B, C]      [C]         [B]         [B]         [B]         []          []          []          []          
[C]         [A, B, C, S][C]         [A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[C]         [B, C]      [C]         [B, C]      [B, C]      [B, C]      [C]         [B]         []          []          
[C]         [A, B, C, S][C]         [A, B, C, S][A, B, S, C][A, B, S, C][C]         [A, B, S, C][S]         []          
[C]         [A, B, C, S][C]         [A, B, C, S][A, B, S, C][A, B, S, C][C]         [A, B, S, C][C]         [S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C]         []          []          []          []          []          []          []          []          []          
[C]         [B, C]      []          []          []          []          []          []          []          []          
[C]         [B, C]      [C]         []          []          []          []          []          []          []          
[C]         [A, B, C, S][C]         []          []          []          []          []          []          []          
[C]         [B, C]      [C]         []          []          []          []          []          []          []          
[C]         [A, B, C, S][C]         []          []          [A, B, S, C][]          []          []          []          
[C]         [A, B, C, S][C]         []          []          [A, B, S, C][C]         []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=39

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=39
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->a }]
C[{ C-->CB }, { C-->b }]

}
word='ababbaaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[B][C][B][] [] [] [] [] [] [] 
[B][C][B][C][] [] [] [] [] [] 
[B][C][B][] [C][] [] [] [] [] 
[B][C][B][] [C][B][] [] [] [] 
[B][C][B][] [C][] [B][] [] [] 
[B][C][B][] [C][] [] [B][] [] 
[B][C][B][] [C][] [] [B][C][] 
[B][C][B][] [C][] [] [B][] [C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
C[{ C-->CA }, { C-->a }]

}
word='ababbaaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[A, C][]    [A, C][A]   []    []    []    []    []    []    
[A, C][]    [A, C][]    [A]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[A, C][]    [A, C][]    []    [A, C][A, C][A, C][A]   []    
[A, C][]    [A, C][]    []    [A, C][A, C][A, C][]    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->SS }]
B[{ B-->SC }, { B-->SS }]
S[{ S-->a }, { S-->SC }, { S-->CC }, { S-->SS }]
C[{ C-->CC }, { C-->b }]

}
word='ababbaaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[A, B, S][A]      [S]      []       []       []       []       []       []       []       
[A, B, S][A]      [A, B, S][C]      []       []       []       []       []       []       
[A, B, S][A]      [A, B, S][S, C]   [C]      []       []       []       []       []       
[A, B, S][A]      [A, B, S][A, B, S][A]      [S]      []       []       []       []       
[A, B, S][A]      [A, B, S][A, B, S][A]      [A, B, S][S]      []       []       []       
[A, B, S][A]      [A, B, S][A, B, S][A]      [A, B, S][A, B, S][S]      []       []       
[A, B, S][A]      [A, B, S][A, B, S][A]      [A, B, S][A, B, S][A, B, S][C]      []       
[A, B, S][A]      [A, B, S][A, B, S][A]      [A, B, S][A, B, S][A, B, S][S, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, S][]       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A]      []       [A, B, S][]       []       []       []       []       []       
[A, B, S][A]      []       [A, B, S][A]      []       []       []       []       []       
[A, B, S][A]      []       [A, B, S][A]      []       []       []       []       []       
[A, B, S][A]      []       [A, B, S][A]      []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=42

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=42
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->CS }]
C[{ C-->a }, { C-->CS }, { C-->SC }]
S[{ S-->CC }, { S-->b }]

}
word='ababbaaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C]   [S]      []       []       []       []       []       []       []       []       
[S]      [A, C]   [C]      []       []       []       []       []       []       []       
[S]      [A, B, C][B, C]   [S]      []       []       []       []       []       []       
[S]      [A, B, C][B, C]   []       [S]      []       []       []       []       []       
[A, B, C][S]      [S]      [A, C]   [A, C]   [C]      []       []       []       []       
[S]      [A, B, C][A, B, C][S]      [S]      [S]      [C]      []       []       []       
[A, B, C][S]      [S]      [A, B, C][A, B, C][A, B, C][S]      [C]      []       []       
[A, B, C][S]      [S]      [A, B, C][A, B, C][A, B, C][S]      [B, C]   [S]      []       
[A, B, C][S]      [S]      [A, B, C][A, B, C][A, B, C][S]      [B, C]   []       [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      []       []       []       []       []       []       []       []       []       
[S]      [A, B, C][]       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[]       [B]      [A, B, C][S]      []       []       []       []       []       []       
[A, B, C][S]      []       [B]      [B]      []       []       []       []       []       
[A]      [S]      [S]      [A, B, C][A, B, C][A]      []       []       []       []       
[A]      [S]      [S]      [A, B, C][A, B, C][A]      [S]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=41
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->BC }, { B-->BB }]
C[{ C-->CB }, { C-->a }, { C-->BC }]
S[{ S-->CB }, { S-->BC }]

}
word='ababbaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C, S]      [B]         []          []          []          []          []          []          []          []          
[A, C, S]   [B, C, S]   [C]         []          []          []          []          []          []          []          
[A, C, S]   [B, C, S]   [C, S]      [B]         []          []          []          []          []          []          
[A, C, S]   [B, C, S]   [C, S]      [B]         [B]         []          []          []          []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [B, C, S]   [B, C, S]   [C]         []          []          []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, B, C, S][A]         [C]         []          []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, B, C, S][]          [A]         [C]         []          []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, B, C, S][]          [A]         [C, S]      [B]         []          
[A, C, S]   [A, B, C, S][A, C, S]   [A, B, C, S][A, B, C, S][]          [A]         [C, S]      [B]         [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CC }]
C[{ C-->CB }, { C-->a }]

}
word='aaaabbabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[C][B][C][] [] [] [] [] [] [] 
[B][C][B][C][] [] [] [] [] [] 
[B][C][B][C][B][] [] [] [] [] 
[B][C][B][C][] [B][] [] [] [] 
[C][B][C][B][] [] [C][] [] [] 
[C][B][C][B][] [] [C][B][] [] 
[B][C][B][C][] [] [B][] [C][] 
[B][C][B][C][] [] [B][] [C][B]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[C][] [C][] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->BB }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->BC }]

}
word='aaaabbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[]       [A]      [C]      []       []       []       []       []       []       []       
[]       []       [A]      [C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->AS }, { S-->SA }, { S-->AA }, { S-->b }]
C[{ C-->AS }, { C-->SA }]

}
word='aaaabbabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][S]         [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][]          [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          [B, S, C]   [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][]          [B, S, C]   [A, B, S, C][S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][]          [B, S, C]   [A, B, S, C][B, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][]          [B, S, C]   [A, B, S, C][B, S, C]   [A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->CC }, { B-->BB }]
S[{ S-->CB }, { S-->CC }, { S-->BC }]
C[{ C-->a }, { C-->BC }]

}
word='aaaabbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, S][C]      []       []       []       []       []       []       []       []       
[S, C]   [A, B, S][C]      []       []       []       []       []       []       []       
[A, B, S][C, S]   [A, B, S][C]      []       []       []       []       []       []       
[B]      [S]      [B]      [S]      [B]      []       []       []       []       []       
[B]      [S]      [B]      [S]      [B]      [B]      []       []       []       []       
[S, C]   [A, B, S][S, C]   [A, B, S][C, S]   [C, S]   [C]      []       []       []       
[S]      [B]      [S]      [B]      [S]      [S]      [S]      [B]      []       []       
[A, B, S][C, S]   [A, B, S][S, C]   [A, B, S][A, B, S][A, B, S][C, S]   [C]      []       
[B]      [S]      [B]      [S]      [B]      [B]      [B]      [S]      [S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      [S]      [B]      []       []       []       []       []       []       []       
[S, C]   [A, B, S][S, C]   [A, B, S][]       []       []       []       []       []       
[]       [B]      []       [B]      [S]      []       []       []       []       []       
[A, B, S][C, S]   [A, B, S][S, C]   [A, B, S][A, B, S][]       []       []       []       
[B]      []       [B]      []       []       []       [B]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=36

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=36
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->CA }, { B-->AA }]
C[{ C-->CA }, { C-->a }, { C-->CC }]

}
word='aaaabbabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][A]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B]   [A]   []    []    []    []    
[C]   [C]   [C]   [C]   []    []    [C]   []    []    []    
[B, C][B, C][B, C][B, C][]    []    [B, C][A]   []    []    
[C]   [C]   [C]   [C]   []    []    [C]   []    [C]   []    
[B, C][B, C][B, C][B, C][]    []    [B, C][]    [B, C][A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }]
B[{ B-->SA }, { B-->AA }, { B-->SS }]
S[{ S-->SA }, { S-->b }]
C[{ C-->SA }]

}
word='aababbabaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[B]         [A]         [S]         []          []          []          []          []          []          []          
[B]         [A, B]      [A, B, S, C][A]         []          []          []          []          []          []          
[B]         [A, B]      [A, B, S, C][A]         [S]         []          []          []          []          []          
[B]         [A, B]      [A, B, S, C][A]         [B]         [S]         []          []          []          []          
[B]         [A, B]      [A, B, C, S][A, B]      [A, B, S, C][A, B, S, C][A]         []          []          []          
[B]         [A, B]      [A, B, C, S][A, B]      [A, B, S, C][A, B, S, C][A]         [S]         []          []          
[B]         [A, B]      [A, B, C, S][A, B]      [A, B, S, C][A, B, S, C][A, B]      [A, B, S, C][A]         []          
[B]         [A, B]      [A, B, C, S][A, B]      [A, B, S, C][A, B, S, C][A, B]      [A, B, S, C][B]         [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BA }]
C[{ C-->BA }, { C-->AA }, { C-->AB }]
S[{ S-->BB }]

}
word='aababbabaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[B, C]      [B, C]      [B]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A]         []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S, C]   [B, C]      [B]         []          []          []          []          []          
[S]         [S]         [S]         [S]         [S]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, C]   [A]         []          []          []          
[B, S, C]   [B, S, C]   [B, S, C]   [B, C, S]   [B, S, C]   [B, S, C]   [B, C]      [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, C]   [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, C]   [C]         [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][]          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='aababbabaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->BS }]
S[{ S-->SB }, { S-->a }, { S-->SS }]
C[{ C-->SB }, { C-->SS }, { C-->BB }, { C-->BS }]

}
word='aababbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [B]      []       []       []       []       []       []       []       
[S, C]   [S, C]   [A, B, C][S]      []       []       []       []       []       []       
[S, C]   [S, C]   [A, B, C][S, C]   [B]      []       []       []       []       []       
[S, C]   [S, C]   [A, B, C][S, C]   [C]      [B]      []       []       []       []       
[S, C]   [S, C]   [A, B, C][S, C]   [C]      [A, B, C][S]      []       []       []       
[S, C]   [S, C]   [A, B, C][S, C]   [C]      [A, B, C][S, C]   [B]      []       []       
[C, S]   [S, C]   [A, B, C][S, C]   [C]      [A, B, C][S, C]   [A, B, C][S]      []       
[C, S]   [C, S]   [A, B, C][S, C]   [C]      [A, B, C][S, C]   [A, B, C][S, C]   [S]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [S, C][]    []    []    []    []    []    
[]    []    []    [S, C][C]   []    []    []    []    []    
[]    []    []    [S, C][C]   []    []    []    []    []    
[]    []    []    [S, C][C]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->BS }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->BB }, { S-->BS }]

}
word='aababbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[S]      [S]      [A, B, S][S]      []       []       []       []       []       []       
[S]      [S]      [A, B, S][S]      [B]      []       []       []       []       []       
[S]      [S]      [A, B, S][S]      [S]      [B]      []       []       []       []       
[S]      [S]      [A, B, S][S]      [A, B, S][A, B, S][S]      []       []       []       
[S]      [S]      [A, B, S][S]      [A, B, S][A, B, S][S]      [B]      []       []       
[S]      [S]      [A, B, S][S]      [A, B, S][A, B, S][S]      [A, B, S][S]      []       
[S]      [S]      [A, B, S][S]      [A, B, S][A, B, S][S]      [A, B, S][S]      [S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }]
B[{ B-->CA }, { B-->AA }]
C[{ C-->AC }, { C-->CA }, { C-->AA }, { C-->b }]
S[{ S-->AC }, { S-->CA }]

}
word='abaaaabaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, C, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][A, B, C]   [A]         []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         []          []          []          
[A, B, S, C][B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A]         []          []          
[A, B, S, C][B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C]   [A]         []          
[A, B, S, C][B, C, S]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, B, C]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [B][] [] [] [] 
[B][] [] [] [] [B][] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='abaaaabaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->CA }]
B[{ B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->a }, { C-->CC }]

}
word='abaaaabaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[A, B, C][C]      [C]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->a }]

}
word='abaaaabaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[A]   [S]   [C]   []    []    []    []    []    []    []    
[S, C][]    [A]   [C]   []    []    []    []    []    []    
[A]   [S]   [C, S][A]   [C]   []    []    []    []    []    
[S, C][]    [A]   [C, S][A]   [C]   []    []    []    []    
[S, C][]    [A]   [C, S][A]   [C]   [A]   []    []    []    
[A]   [S]   [C, S][A]   [C, S][A]   [S]   [C]   []    []    
[S, C][]    [A]   [C, S][A]   [C, S][]    [A]   [C]   []    
[A]   [S]   [C, S][A]   [C, S][A]   [S]   [C, S][A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[A]   []    [C, S][]    [C, S][]    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[A]   []    [C, S][]    [C, S][A]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }, { B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->SS }]

}
word='abaaaabaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[B, S][B, S][S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SB }]
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->SS }]
C[{ C-->SB }]

}
word='aabbaaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, S]      [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          [B]         []          []          []          []          []          []          
[A, B, S, C][B, S]      []          [A]         [S]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          [A]         [B, S]      [S]         []          []          []          []          
[A, B, C, S][A, B, S, C][]          [A]         [A, B, S, C][B, S]      [S]         []          []          []          
[A, B, C, S][A, B, C, S][]          [A]         [A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          
[A, B, C, S][A, B, C, S][]          [A]         [A, B, S, C][A, B, S, C][B, S]      [A]         [S]         []          
[A, B, C, S][A, B, C, S][]          [A]         [A, B, C, S][A, B, S, C][A, B, S, C][A]         [A, S, C]   [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C]         []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[]          []          []          [A]         []          []          [A, B, S, C][]          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->AA }]
S[{ S-->AC }, { S-->CA }, { S-->AA }]

}
word='aabbaaabab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[B]         [B, C, S]   [A]         []          []          []          []          []          []          []          
[B]         [B, C, S]   [C, S]      [A]         []          []          []          []          []          []          
[B]         [B, C, S]   [A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[B]         [B, C, S]   [A, B, C, S][A, B, C, S][B]         [C]         []          []          []          []          
[B]         [B, C, S]   [A, B, C, S][A, B, C, S][]          [B]         [C]         []          []          []          
[B]         [B, C, S]   [A, B, C, S][A, B, C, S][]          [B]         [B, C, S]   [A]         []          []          
[B]         [B, C, S]   [A, B, C, S][A, B, C, S][]          [B]         [B, C, S]   [A, B, C, S][C]         []          
[B]         [B, C, S]   [A, B, C, S][A, B, C, S][]          [B]         [B, C, S]   [A, B, C, S][B, C, S]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [B][] [] [] [] 
[B][] [] [] [] [B][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='aabbaaabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CC }]
S[{ S-->a }, { S-->CS }]
C[{ C-->SS }, { C-->b }]

}
word='aabbaaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[]    []    [A]   [C]   []    []    []    []    []    []    
[A, S][C]   [S]   [S]   [S]   []    []    []    []    []    
[A, C][A, S][A, C][A, C][C]   [S]   []    []    []    []    
[A, S][A, C][A, S][A, S][A, S][C]   [S]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    
[A, C][A, S][A, C][A, C][A, C][A, S][C]   [S]   [S]   []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [A]   [A]   [A]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[A, C][A, S][A, C][A, C][A, C][A, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=31

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=31
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]

}
word='aabbaaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B, S][B]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][B]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AC }]
C[{ C-->CA }, { C-->a }]

}
word='abbbaaaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C]   []    [A]   []    []    []    []    []    []    []    
[C]   []    []    [A]   []    []    []    []    []    []    
[A, C][]    []    [A]   [C]   []    []    []    []    []    
[A, C][]    []    [A]   [A]   [C]   []    []    []    []    
[A, C][]    []    [A]   [A, C][A]   [C]   []    []    []    
[A, C][]    []    [A]   [A, C][A, C][A]   [C]   []    []    
[A, C][]    []    [A]   [A, C][A, C][A, C][A]   [C]   []    
[A, C][]    []    [A]   [A, C][A, C][A, C][A]   [C]   [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->CB }]
B[{ B-->b }, { B-->BC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->a }, { C-->CC }]

}
word='abbbaaaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[]       [A]      [B]      []       []       []       []       []       []       []       
[]       []       [A]      [B]      []       []       []       []       []       []       
[]       []       [A]      [B]      [C]      []       []       []       []       []       
[]       []       [A]      [B]      [A, C, S][C]      []       []       []       []       
[]       []       [A]      [B]      [A, C, S][A, C, S][C]      []       []       []       
[]       []       [A]      [B]      [A, C, S][A, C, S][A, C, S][C]      []       []       
[]       []       [A]      [B]      [A, C, S][A, C, S][A, C, S][A, C, S][C]      []       
[]       []       []       [A]      [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   [A, S][A, S][A, S][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->BB }]
C[{ C-->SS }]

}
word='abbbaaaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B, S, C][B, S]   [B]      []       []       []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   []       [S]      []       []       []       []       []       
[B, C, S][B, S, C][B, S]   [B, S]   [B, C]   [S]      []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, C]   [S]      [B, C]   [S]      []       []       []       
[B, C, S][B, C, S][B, S, C][B, S]   [B, C, S][S]      [B, C]   [S]      []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][S]      [B, C]   [S]      []       
[B, S, C][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, C, S][S]      [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->AC }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->CA }]
C[{ C-->a }, { C-->AA }, { C-->CC }]

}
word='abbbaaaaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[B, C, S]   [A, B, C]   [A]         []          []          []          []          []          []          []          
[B, S, C]   [A, B, C, S][A, B, C]   [A]         []          []          []          []          []          []          
[B, C]      [B, C, S]   [B, C, S]   [B, S]      [C]         []          []          []          []          []          
[B, C]      [B, C, S]   [B, C, S]   [B, S]      [B, C]      [C]         []          []          []          []          
[B, C]      [B, C, S]   [B, C, S]   [B, S]      [B, C]      [B, C]      [C]         []          []          []          
[B, C]      [B, C, S]   [B, C, S]   [B, S]      [B, C]      [B, C]      [B, C]      [C]         []          []          
[B, C]      [B, C, S]   [B, C, S]   [B, S]      [B, C]      [B, C]      [B, C]      [B, C]      [C]         []          
[S]         [S]         [S]         []          [S]         [S]         [S]         [S]         [S]         [A]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [S]      [B, C, S][]       []       []       []       []       []       []       
[]       [S]      [B, C, S][B, S]   []       []       []       []       []       []       
[]       [S]      [B, C, S][B, S]   []       []       []       []       []       []       
[]       [S]      [B, C, S][B, S]   []       []       []       []       []       []       
[S]      [S]      []       []       [S]      [S]      [S]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->CC }]

}
word='abbbaaaaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          [A, B]      [A]         []          []          []          []          []          []          []          
[]          [A, B]      [A, B]      [A]         []          []          []          []          []          []          
[A, C, S]   [C]         [C]         [C]         [C]         []          []          []          []          []          
[A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [C]         []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      []          [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][B][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='aabbbabbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C, S][C]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->CA }, { B-->AA }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->AA }]
S[{ S-->AC }, { S-->CC }, { S-->AA }]

}
word='aabbbabbaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[S]         [B, C]      [A]         []          []          []          []          []          []          []          
[S]         [B, C, S]   [A, B, C, S][A]         []          []          []          []          []          []          
[S]         [B, C, S]   [A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[S]         [B, C, S]   [A, B, C, S][A, B, C, S][A, C, S]   [C]         []          []          []          []          
[S]         [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A]         []          []          []          
[S]         [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A]         []          []          
[S]         [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, C, S]   [C]         []          
[S]         [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, C, S]   [S]         [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [B][] [] [] [] [] 
[S][] [] [] [B][] [] [] [] [] 
[S][] [] [] [B][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
S[{ S-->a }, { S-->CC }]
C[{ C-->SS }, { C-->SC }, { C-->b }]

}
word='aabbbabbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A, C, S][C]      [C]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [C]      []       []       []       []       []       []       
[A, C, S][A, S, C][C]      [A, S]   [C]      []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [C]      []       [S]      []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, C, S][A, S]   [C]      [C]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][A, S]   [C]      []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][C]      [C]      []       [S]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][C]      [A, S]   [C]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[]       []       [A, S]   [A, C, S][]       []       []       []       []       []       
[]       []       []       []       [A, S]   []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       [C]      [C]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->SS }, { S-->AA }]
C[{ C-->AS }]

}
word='aabbbabbaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[S]         [S]         [A]         []          []          []          []          []          []          []          
[S]         [S]         [A, B, S]   [A]         []          []          []          []          []          []          
[S]         [S]         [A, B, S, C][A, B, S]   [A]         []          []          []          []          []          
[S]         [S]         [S, C]      [S, C]      [S, C]      [S]         []          []          []          []          
[S]         [S]         [S, C]      [S, C]      [S, C]      [S]         [A]         []          []          []          
[S]         [S]         [S, C]      [S, C]      [S, C]      [S]         [A, B, S]   [A]         []          []          
[S]         [S]         [S, C]      [S, C]      [S, C]      [S]         [S, C]      [S, C]      [S]         []          
[S]         [S]         [S, C]      [S, C]      [S, C]      [S]         [S, C]      [S, C]      [S]         [S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][C][] [] [] [] [] [] 
[] [] [C][C][C][] [] [] [] [] 
[] [] [C][C][C][] [] [] [] [] 
[] [] [C][C][C][] [C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AB }, { B-->BA }, { B-->a }, { B-->BB }]
C[{ C-->BB }, { C-->AA }]

}
word='aabbbabbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, C][B]   []    []    []    []    []    []    []    []    
[B, C][B]   [A]   []    []    []    []    []    []    []    
[B, C][B]   [C]   [A]   []    []    []    []    []    []    
[B, C][B]   []    [C]   [A]   []    []    []    []    []    
[B, C][B, C][B]   [B]   [B]   [B]   []    []    []    []    
[B, C][B, C][B]   [B]   [B]   [B]   [A]   []    []    []    
[B, C][B, C][B]   [B]   [B]   [B]   [C]   [A]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   [B]   [B]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
S[{ S-->a }, { S-->AA }]

}
word='abbabababa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[S][S][A][] [] [] [] [] [] [] 
[S][S][A][S][] [] [] [] [] [] 
[A][A][S][A][A][] [] [] [] [] 
[A][A][S][A][A][S][] [] [] [] 
[S][S][A][S][S][A][A][] [] [] 
[S][S][A][S][S][A][A][S][] [] 
[A][A][S][A][A][S][S][A][A][] 
[A][A][S][A][A][S][S][A][A][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[A][] [S][] [] [] [] [] [] [] 
[S][] [A][S][] [] [] [] [] [] 
[S][S][] [S][S][] [] [] [] [] 
[] [A][] [] [A][S][] [] [] [] 
[A][] [S][A][] [S][S][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]
C[{ C-->BB }]

}
word='abbabababa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B, C][B]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][B]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->SA }]
C[{ C-->AS }]
S[{ S-->a }]

}
word='abbabababa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[C][C][C][S][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[C][C][C][C][C][S][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[C][C][C][C][C][C][C][S][] [] 
[A][A][A][A][A][A][A][A][A][] 
[C][C][C][C][C][C][C][C][C][S]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->CA }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }]

}
word='abbabababa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [C]         []          []          []          []          []          []          []          []          
[A, B, C]   [B]         [C]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [C]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [C]         []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [C]         []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=12

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=12
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->a }, { C-->AA }]
S[{ S-->AC }]

}
word='abbabababa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[B]         [A, C]      [A]         []          []          []          []          []          []          []          
[B]         [A, C, S]   [A, C, S]   [C]         []          []          []          []          []          []          
[B]         [A, B, C, S][A, B, C]   [B]         [A]         []          []          []          []          []          
[B]         [A, B, C, S][A, B, C, S][B]         [A, C, S]   [C]         []          []          []          []          
[B]         [A, B, C, S][A, B, C, S][B]         [A, B, C]   [B]         [A]         []          []          []          
[B]         [A, B, C, S][A, B, C, S][B]         [A, B, C, S][B]         [A, C, S]   [C]         []          []          
[B]         [A, B, C, S][A, B, C, S][B]         [A, B, C, S][B]         [A, B, C]   [B]         [A]         []          
[B]         [A, B, C, S][A, B, C, S][B]         [A, B, C, S][B]         [A, B, C, S][B]         [A, C, S]   [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B]         []          []          []          []          []          []          []          []          []          
[B]         []          []          []          []          []          []          []          []          []          
[B]         []          [A, B, C, S][]          []          []          []          []          []          []          
[B]         []          [A, B, C, S][B]         []          []          []          []          []          []          
[B]         []          [A, B, C, S][B]         [A, B, C, S][]          []          []          []          []          
[B]         []          [A, B, C, S][B]         [A, B, C, S][B]         []          []          []          []          
[B]         []          [A, B, C, S][B]         [A, B, C, S][B]         [A, B, C, S][]          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=49

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=49
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='aabaababbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->AA }]
C[{ C-->AA }, { C-->AB }]
S[{ S-->BB }, { S-->AB }]

}
word='aabaababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, C]      [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A]         [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, S]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AS }, { B-->AA }]
S[{ S-->AA }, { S-->b }]

}
word='aabaababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[B, S][A, B][S]   []    []    []    []    []    []    []    
[A, B][B, S][]    [A]   []    []    []    []    []    []    
[B, S][A, B][]    [B, S][A]   []    []    []    []    []    
[B, S][A, B][]    [B, S][A, B][S]   []    []    []    []    
[A, B][B, S][]    [A, B][B, S][]    [A]   []    []    []    
[A, B][B, S][]    [A, B][B, S][]    [A, B][S]   []    []    
[A, B][B, S][]    [A, B][B, S][]    [A, B][]    [S]   []    
[A, B][B, S][]    [A, B][B, S][]    [A, B][]    []    [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[A, B][]    []    [A, B][]    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CA }, { S-->AA }]

}
word='aabaababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, C]      [C]         []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [A]         []          []          []          []          []          []          
[]          []          []          [S]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, S]      [A, C, S]   [A, C]      [C]         []          []          []          []          
[B, S]      [B, S]      []          [B, S]      [B, S]      [B, S]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B, S]      [A, C]      [C]         []          []          
[A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B, S]      [A, C]      []          [C]         []          
[A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B, S]      [A, C]      []          []          [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B, S]      []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B, S]      []          []          [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          [A, B, C, S][A, B, C, S][]          []          []          []          []          
[]          [A, B, C, S][B, S]      []          [A, B, C, S][B, S]      []          []          []          []          
[]          [A, B, C, S][B, S]      []          [A, B, C, S][B, S]      []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=46

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=46
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]

}
word='aabaababbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, B][A, B][A]   []    []    []    []    []    []    []    
[A, B][A, B][A, B][A]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->b }]
C[{ C-->CB }, { C-->a }, { C-->CC }, { C-->BC }]
S[{ S-->CC }]

}
word='bbabaabaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[A, C]   [A, C]   [C]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [B]      []       []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [A, C]   [C]      []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [A, C, S][C, S]   [C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [B]      []       []       []       
[A, C, S][A, C, S][C, S]   [A, C, S][C, S]   [C, S]   [A, C]   [C]      []       []       
[A, C, S][A, C, S][C, S]   [A, C, S][C, S]   [C, S]   [A, C, S][C, S]   [C]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][] [A][] [] [] [] [] [] 
[A][A][] [A][] [] [] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
C[{ C-->AS }, { C-->SS }, { C-->AA }]
S[{ S-->SA }, { S-->b }]

}
word='bbabaabaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [S]   [A]   []    []    []    []    []    []    []    
[C]   [C, S][A, C][S]   []    []    []    []    []    []    
[C]   [C, S][A, C][S]   [A]   []    []    []    []    []    
[C]   [C, S][A, C][S]   [C]   [A]   []    []    []    []    
[C]   [C, S][A, C][S, C][C]   [A, C][S]   []    []    []    
[C]   [C, S][A, C][S, C][C]   [A, C][S]   [A]   []    []    
[C]   [C, S][A, C][S, C][C]   [A, C][S]   [C]   [A]   []    
[C]   [C, S][A, C][S, C][C]   [A, C][S, C][C]   [A, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   []    [S, C][]    []    []    []    []    []    
[C]   [C]   []    [S, C][C]   []    []    []    []    []    
[C]   [C]   []    [S, C][C]   []    []    []    []    []    
[C]   [C]   []    [S, C][C]   []    [S, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->SA }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='bbabaabaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A]      []       []       []       []       []       []       []       
[C]      [C]      [C]      [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [A, B, C][A]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][S]      [S]      [A]      []       []       []       []       
[C]      [C]      [C]      []       []       [C]      [S]      []       []       []       
[S]      [S]      [S]      [A, B, C][A, B, C][S]      [A, B, C][A]      []       []       
[A, B, C][A, B, C][A, B, C][S]      [S]      [A, B, C][S]      [S]      [A]      []       
[C]      [C]      [C]      []       []       [C]      []       []       [C]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[]       []       [A, B, C][]       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[]       []       [A, B, C][S]      []       [A, B, C][]       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->SA }, { B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->a }]
C[{ C-->AS }, { C-->SA }]

}
word='bbabaabaab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A, B]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AC }, { B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->CC }]
S[{ S-->AC }, { S-->CA }]

}
word='bbabaabaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][C]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][A]      []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B, C, S][C]      []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [B, C, S][B, C]   [C]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A]      []       []       []       
[B, C, S][B, C, S][B, C]   [B, C, S][B, C]   [B, C]   [B, C, S][C]      []       []       
[B, C, S][B, C, S][B, C]   [B, C, S][B, C]   [B, C]   [B, C, S][B, C]   [C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][] [S][] [] [] [] [] [] 
[S][S][] [S][] [] [] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='baaaababab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->AS }, { B-->AA }]
S[{ S-->SA }, { S-->b }]

}
word='baaaababab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, S]   [A]      []       []       []       []       []       []       []       []       
[A, B, S][B]      [A]      []       []       []       []       []       []       []       
[A, B, S][]       [B]      [A]      []       []       []       []       []       []       
[A, B, S][]       []       [B]      [A]      []       []       []       []       []       
[B]      []       []       []       [B]      [S]      []       []       []       []       
[A, B, S][]       []       []       [B]      [A, S]   [A]      []       []       []       
[B]      []       []       []       []       [B]      [B]      [S]      []       []       
[A, B, S][]       []       []       [B]      [A, B, S][B]      [A, S]   [A]      []       
[B]      []       []       []       []       [B]      []       [B]      [B]      [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       [A, B, S][]       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
B[{ B-->SC }, { B-->CC }, { B-->CS }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SC }, { S-->CC }, { S-->b }]

}
word='baaaababab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [C]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S, C][B, S]      [C]         []          []          []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, C, S][B, S]      [C]         []          []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, C, S][B, S]      [A, B, C]   [S]         []          []          []          []          
[A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          []          
[A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   [S]         []          []          
[A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [C]         []          
[A, B, S]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, C]   [S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='baaaababab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->SA }, { B-->SS }]
C[{ C-->AS }, { C-->SS }]
S[{ S-->SA }, { S-->a }, { S-->SS }]

}
word='baaaababab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, C]      [S]         []          []          []          []          []          []          []          []          
[A, C]      [A, B, S, C][S]         []          []          []          []          []          []          []          
[A, C]      [A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, C]      [A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, C]      [A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          
[A, C]      [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          []          []          
[A, C]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, B, S]   [A]         []          []          
[A, C]      [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, B, S, C][A, C]      [S]         []          
[A, C]      [A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, C]      [A, B, S, C][A, C]      [A, B, S]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][] [C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]
C[{ C-->BB }]
S[{ S-->BB }]

}
word='bbbbbbabab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AS }]
S[{ S-->a }]
C[{ C-->AA }]

}
word='bbbbbbabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A, C][A]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][A]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   [S]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][]    [A]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][]    [A]   [S]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][]    [A, C][]    [A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
S[{ S-->AA }]

}
word='bbbbbbabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][A, S][A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='bbbbbbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][S, C][S]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S]   []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S]   []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    []    
[C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }]
B[{ B-->SA }, { B-->SS }]
S[{ S-->SA }, { S-->SS }, { S-->b }]
C[{ C-->SA }, { C-->SS }]

}
word='bbbbbbabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [S]         []          []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [S]         []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S, C]   [S]         []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [S]         []          []          []          []          []          
[B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A]         [A, B, S, C][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A]         [A, B, S, C][A]         [S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='bbaabbbbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bbaabbbbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='bbaabbbbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }]
B[{ B-->CA }, { B-->AA }, { B-->CC }]
C[{ C-->AC }, { C-->CA }, { C-->a }]
S[{ S-->AC }, { S-->AA }]

}
word='bbaabbbbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         [B, C]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         [B, C]      [A, B, S]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][B]         [B, C]      [A, B, S]   [A, B, S]   [A]         []          []          []          
[A, B, C, S][A, B, C, S][B]         [B, C]      [A, B, S]   [A, B, S]   [A, B, S]   [A]         []          []          
[A, B, S, C][A, B, C, S][B]         [B, C]      [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A]         []          
[A, B, S, C][A, B, S, C][B]         [B, C]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, B, C, S][]          []          []          []          []          []          []          []          
[]          [A, B, C, S][B]         []          []          []          []          []          []          []          
[]          [A, B, C, S][B]         []          []          []          []          []          []          []          
[]          [A, B, C, S][B]         []          []          []          []          []          []          []          
[]          [A, B, C, S][B]         []          []          []          []          []          []          []          
[]          [A, B, S, C][B]         []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=29

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=29
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->a }, { B-->AA }, { B-->BB }]
C[{ C-->AB }]

}
word='bbaabbbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   [C]   [B]   []    []    []    []    []    []    []    
[B]   [C]   [B]   [B]   []    []    []    []    []    []    
[B]   [C]   [B]   [B]   [A]   []    []    []    []    []    
[B]   [C]   [B]   [B]   [B]   [A]   []    []    []    []    
[B]   [C]   [B]   [B]   [B, C][B]   [A]   []    []    []    
[B]   [C]   [B]   [B]   [B, C][B, C][B]   [A]   []    []    
[B]   [C]   [B]   [B]   [B, C][B, C][B, C][B]   [A]   []    
[B]   [C]   [B]   [B]   [B, C][B, C][B, C][B]   [C]   [B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[B][C][] [] [C][] [] [] [] [] 
[B][C][] [] [C][C][] [] [] [] 
[B][C][] [] [C][C][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->CC }]
C[{ C-->b }, { C-->BC }]

}
word='bababbbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [B]      []       []       []       []       []       []       []       []       
[B, S]   [C]      [C]      []       []       []       []       []       []       []       
[]       [A, S]   [A, S]   [B]      []       []       []       []       []       []       
[A, C, S][B, S]   [B, S]   [C]      [C]      []       []       []       []       []       
[B, S]   [A, S, C][A, S, C][B, S]   [B, S]   [C]      []       []       []       []       
[A, C, S][B, S]   [B, S]   [A, C, S][A, S, C][B, S]   [C]      []       []       []       
[B, S]   [A, S, C][A, S, C][B, S]   [B, S]   [A, S, C][B, S]   [C]      []       []       
[A, C, S][B, S]   [B, S]   [A, C, S][A, S, C][B, S]   [A, S, C][B, S]   [C]      []       
[A, S]   []       []       [A, S]   [A, S]   []       [A, S]   []       [A, S]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [B, S]   []       []       []       []       []       []       []       []       
[]       [A, S]   [A, S, C][]       []       []       []       []       []       []       
[A, C, S][B]      []       [A, S]   []       []       []       []       []       []       
[]       [A, S]   [A, S, C][B]      []       []       []       []       []       []       
[A, C, S][B]      []       [A, S]   [A, S, C][]       []       []       []       []       
[]       []       []       [A, S]   []       []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='bababbbbba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->BB }]
S[{ S-->BB }]
C[{ C-->BB }]

}
word='bababbbbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }]
B[{ B-->AB }, { B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->AA }, { C-->AB }]
S[{ S-->BA }, { S-->AA }]

}
word='bababbbbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [A]         []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C]   [B]         []          []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      [A]         []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      [A, B, C, S][A]         []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          
[A, B, S, C][C, S]      [A, B, C, S][C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][C, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      []          []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      []          []          []          []          []          []          
[A, B, C, S][C, S]      [A, B, C, S][C, S]      []          []          []          []          []          []          
[A, B, S, C][C, S]      [A, B, C, S][C, S]      []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=68

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=68
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AB }]
B[{ B-->b }, { B-->AB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]

}
word='bababbbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A, S]   [A, B, S][B]      []       []       []       []       []       []       []       
[]       [S]      [S]      [A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       [S]      [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SC }]
B[{ B-->CS }, { B-->SS }, { B-->SC }]
C[{ C-->a }, { C-->CS }, { C-->SS }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

}
word='aabbbbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          [A, B, C]   [S]         []          []          []          []          []          []          []          
[]          [A, B, C]   [B, C, S]   [S]         []          []          []          []          []          []          
[]          [A, B, C]   [A, B, C, S][B, C, S]   [S]         []          []          []          []          []          
[]          [A, B, C]   [A, B, C, S][A, B, C, S][B, C, S]   [S]         []          []          []          []          
[]          [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [S]         []          []          []          
[]          [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          
[]          [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [S]         []          
[]          [A, B, C]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, S]   [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='aabbbbbaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SS }, { A-->CS }, { A-->SC }]
B[{ B-->CS }, { B-->SC }, { B-->SS }]
C[{ C-->CS }, { C-->a }, { C-->SS }]
S[{ S-->SS }, { S-->SC }, { S-->b }]

}
word='aabbbbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[A]         [A, B, C]   [S]         []          []          []          []          []          []          []          
[A]         [A, B, C]   [A, B, C, S][S]         []          []          []          []          []          []          
[A]         [A, B, C]   [A, B, C, S][A, B, C, S][S]         []          []          []          []          []          
[A]         [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][S]         []          []          []          []          
[A]         [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          []          []          
[A]         [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          
[A]         [A, B, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [S]         []          
[A]         [A, B, C]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, S]   [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='aabbbbbaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='aabbbbbaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->BB }, { S-->CC }]
C[{ C-->b }]

}
word='baabbabaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B, S][B, S][B]   []    []    []    []    []    []    []    
[B, S][B, S][B]   [C]   []    []    []    []    []    []    
[B, S][B, S][B]   [S]   [C]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [B]   []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [B]   [C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->SS }]
C[{ C-->a }, { C-->CC }, { C-->CS }]
S[{ S-->CC }, { S-->b }]

}
word='baabbabaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [C, S]   [C]      []       []       []       []       []       []       []       
[A]      [A, C, S][A, C]   [S]      []       []       []       []       []       []       
[A]      [A, C, S][A, C]   [A]      [S]      []       []       []       []       []       
[A]      [A, C, S][C, S]   []       [A]      [C]      []       []       []       []       
[A]      [A, C, S][A, C, S][]       [A]      [A, C]   [S]      []       []       []       
[A]      [A, C, S][A, C, S][]       [A]      [C, S]   [A]      [C]      []       []       
[A]      [A, C, S][A, C, S][]       [A]      [A, C, S][A]      [C, S]   [C]      []       
[A]      [A, C, S][A, C, S][]       [A]      [A, C, S][A]      [A, C, S][C, S]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      []       []       []       []       []       []       []       []       []       
[A]      []       []       []       [A]      []       []       []       []       []       
[A]      []       []       []       [A]      [A, C, S][]       []       []       []       
[A]      []       []       []       [A]      [A, C, S][A]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }, { S-->SC }]
C[{ C-->CS }, { C-->CC }, { C-->b }]

}
word='baabbabaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S, C][S]   []    []    []    []    []    []    []    []    
[S, C][]    [S]   []    []    []    []    []    []    []    
[S, C][]    [S]   [C]   []    []    []    []    []    []    
[S, C][]    [S]   [C]   [C]   []    []    []    []    []    
[S, C][]    [S]   [S, C][S, C][S]   []    []    []    []    
[S, C][]    [S]   [S, C][S, C][S]   [C]   []    []    []    
[S, C][]    [S]   [S, C][S, C][S]   [S, C][S]   []    []    
[S, C][]    [S]   [S, C][S, C][S]   [S, C][]    [S]   []    
[S, C][]    [S]   [S, C][S, C][S]   [S, C][]    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->AS }, { B-->SA }]
S[{ S-->SA }, { S-->a }, { S-->SS }]

}
word='baabbabaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[B]      [A, S]   [S]      []       []       []       []       []       []       []       
[B]      [A, B, S][B, S]   [A]      []       []       []       []       []       []       
[B]      [A, B, S][B, S]   []       [A]      []       []       []       []       []       
[B]      [A, B, S][A, S]   []       [B]      [S]      []       []       []       []       
[B]      [A, B, S][A, B, S][]       [B]      [B, S]   [A]      []       []       []       
[B]      [A, B, S][A, B, S][]       [B]      [A, S]   [B]      [S]      []       []       
[B]      [A, B, S][A, B, S][]       [B]      [A, B, S][B]      [A, S]   [S]      []       
[B]      [A, B, S][A, B, S][]       [B]      [A, B, S][B]      [A, B, S][A, S]   [S]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      []       []       []       [B]      []       []       []       []       []       
[B]      []       []       []       [B]      [A, B, S][]       []       []       []       
[B]      []       []       []       [B]      [A, B, S][B]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AA }]
C[{ C-->AA }]

}
word='baabbabaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->CB }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->BC }]
S[{ S-->CB }, { S-->BB }]

}
word='abbabbabba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [B]         []          []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          []          []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
S[{ S-->AS }, { S-->b }]

}
word='abbabbabba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->CA }]
B[{ B-->AC }, { B-->CA }]
C[{ C-->AC }, { C-->a }, { C-->AA }]

}
word='abbabbabba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[A, B, C][A, C]   [A]      []       []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [A]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->AB }, { B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->BA }, { S-->AA }, { S-->AB }]
C[{ C-->AA }, { C-->AB }]

}
word='abbabbabba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, S]      [A]         []          []          []          []          []          []          []          []          
[B, S]      [B, C, S]   [A]         []          []          []          []          []          []          []          
[B, S]      [A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          
[B, S]      [A, B, C, S][A, B, C, S][B, S]      [A]         []          []          []          []          []          
[B, S]      [A, B, C, S][A, B, C, S][B, S]      [B, C, S]   [A]         []          []          []          []          
[B, S]      [A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B]         []          []          []          
[B, S]      [A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B, S]      [A]         []          []          
[B, S]      [A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B, S]      [B, C, S]   [A]         []          
[B, S]      [A, B, S, C][A, B, S, C][B, S]      [A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='abbabbabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->AS }, { B-->SA }, { B-->SS }, { B-->AA }]
C[{ C-->AS }, { C-->SA }, { C-->SS }]
S[{ S-->SA }, { S-->a }]

}
word='aaabbbabaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, C]      [S]         []          []          []          []          []          []          []          []          
[]          [B, C]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         [A]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          [B]         [A]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          [B]         [A, B, C]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][]          [B]         [A, B, C]   [A, B, S, C][A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [B]         [A, B, C]   [A, B, S, C][A, B, C]   [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [B]         [A, B, C]   [A, B, S, C][A, B, C]   [B, C]      [S]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SS }]
B[{ B-->CC }, { B-->SC }]
C[{ C-->a }, { C-->CC }, { C-->SS }]
S[{ S-->CS }, { S-->b }]

}
word='aaabbbabaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B, C]   [C]      []       []       []       []       []       []       []       []       
[B, C]   [B, C]   [C]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, C]   [S]      []       []       []       []       
[B]      [B]      [B]      [B]      [B, C]   [B]      [C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, S][A, C]   [A, S]   [S]      []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B]      [B, C]   [B]      [B]      [C]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B]      [B, C]   [B]      [B]      [B, C]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, C]   [A, C]   []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, S]   []       []       []       []       []       
[]       []       []       [B, C]   []       [B, C]   []       []       []       []       
[]       []       []       [B, C]   [B]      [B, C]   [B]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='aaabbbabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[A, B][A, B][A]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [S, C][S]   []    []    []    []    []    
[]    []    []    [S, C][S, C][S]   []    []    []    []    
[A, B][A, B][A, B][A]   [A]   [A]   [A]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [A]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BB }]
B[{ B-->b }, { B-->BB }]
S[{ S-->a }, { S-->SS }, { S-->BS }]

}
word='aaabbbabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [A, B][B]   []    []    []    []    []    
[]    []    []    [A, B][A, B][B]   []    []    []    []    
[A, S][A, S][A, S][S]   [S]   [S]   [S]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->BC }, { A-->CB }]
B[{ B-->BC }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->CB }, { C-->CC }, { C-->b }]

}
word='aaabbbabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B]      [B]         []          []          []          []          []          []          []          []          
[A, B]      [A, B]      [B]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [C]         []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C]   [C]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C]   [C]         []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][B]         []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][A, B]      [B]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AS }]
S[{ S-->b }]

}
word='abaaabbbba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][] [A][] [] [] [] [] [] [] 
[A][] [A][A][] [] [] [] [] [] 
[A][] [A][A][A][] [] [] [] [] 
[A][] [A][A][A][S][] [] [] [] 
[A][] [A][A][A][] [S][] [] [] 
[A][] [A][A][A][] [] [S][] [] 
[A][] [A][A][A][] [] [] [S][] 
[A][] [A][A][A][] [] [] [] [A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='abaaabbbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->SS }]

}
word='abaaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B, S][]    [S]   []    []    []    []    []    []    []    
[B, S][]    [B, S][S]   []    []    []    []    []    []    
[B, S][]    [B, S][B, S][S]   []    []    []    []    []    
[B, S][]    [B, S][B, S][S]   [B]   []    []    []    []    
[B, S][]    [B, S][B, S][S]   []    [B]   []    []    []    
[B, S][]    [B, S][B, S][S]   []    []    [B]   []    []    
[B, S][]    [B, S][B, S][S]   []    []    []    [B]   []    
[B, S][]    [B, S][B, S][B, S][]    []    []    []    [S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CC }]
C[{ C-->a }, { C-->BC }]

}
word='abaaabbbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[B][C][C][] [] [] [] [] [] [] 
[C][B][B][C][] [] [] [] [] [] 
[B][C][C][B][C][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[C][B][B][C][B][C][C][C][C][C]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }, { A-->SB }]
B[{ B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->SS }]

}
word='abaaabbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[A]      [A, S]   [B]      []       []       []       []       []       []       []       
[A]      [A, S]   [A]      [B]      []       []       []       []       []       []       
[A]      [A, S]   []       [A]      [B]      []       []       []       []       []       
[A]      [B, C]   []       []       [A]      [S]      []       []       []       []       
[A]      [A, S]   []       []       [A]      [B, C]   [S]      []       []       []       
[A]      [A, B, C][]       []       [A]      [A, S]   [B, C]   [S]      []       []       
[A]      [A, S]   []       []       [A]      [A, B, C][A, S]   [B, C]   [S]      []       
[A]      [A, S]   []       []       [A]      [A, B, C][A, S]   [A, B, C][A, S]   [B]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    [A]   []    []    []    []    []    
[A]   []    []    []    [A]   [A]   []    []    []    []    
[A]   []    []    []    [A]   [B, C][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AA }, { A-->BA }]
B[{ B-->b }, { B-->BB }]
S[{ S-->BA }, { S-->BB }, { S-->AB }]
C[{ C-->BB }, { C-->AB }]

}
word='abbaabbbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S, C]      [B]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][B]         []          []          []          []          []          []          []          
[A]         [A, S]      [A, S]      [A]         []          []          []          []          []          []          
[A]         [A, S]      [A, S]      [A]         [A]         []          []          []          []          []          
[S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [B]         []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, B, S, C][B]         []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, B, S, C][A, B, S, C][B]         []          []          
[A, S, C]   [A, C, S]   [A, S, C]   [A, S, C]   [A, S, C]   [A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A]         [A, S]      [A, S]      [A]         [A]         [A, S]      [A, S]      [A, S]      [A, S]      [A]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][]       []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   []       []       []       []       []       []       
[S, C]   [C, S]   [S, C]   [S, C]   []       []       []       []       []       []       
[]       [S]      [S]      []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=37

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=37
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BB }]
B[{ B-->a }]
S[{ S-->SB }, { S-->SS }, { S-->b }]
C[{ C-->SB }, { C-->SS }, { C-->BS }]

}
word='abbaabbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[C]      [A, S, C][S]      []       []       []       []       []       []       []       
[C]      [A, S, C][S, C]   [B]      []       []       []       []       []       []       
[C]      [A, S, C][S, C]   [A]      [B]      []       []       []       []       []       
[C]      [A, S, C][A, S, C][]       [C]      [S]      []       []       []       []       
[C]      [A, S, C][A, S, C][]       [C]      [A, S, C][S]      []       []       []       
[C]      [A, S, C][A, S, C][]       [C]      [A, S, C][A, S, C][S]      []       []       
[C]      [A, C, S][A, S, C][]       [C]      [A, S, C][A, S, C][A, S, C][S]      []       
[C]      [A, C, S][A, C, S][]       [C]      [A, S, C][A, S, C][A, S, C][S, C]   [B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [C][] [] [] [] [] 
[C][] [] [] [C][] [] [] [] [] 
[C][] [] [] [C][] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->SA }, { S-->AA }, { S-->b }]

}
word='abbaabbbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[S]      [A]      [S]      []       []       []       []       []       []       []       
[S, C]   [A, S]   [S, C]   [A]      []       []       []       []       []       []       
[A, S, C][A, C, S][A, S, C][S]      [A]      []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A]      [C]      [S]      []       []       []       []       
[A, S, C][A, C, S][A, S, C][C, S]   [S]      [A]      [S]      []       []       []       
[A, C, S][A, C, S][A, S, C][A, S]   [A, C]   [S, C]   [A]      [S]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][S, C]   [A, S]   [S, C]   [A]      [S]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S]   [S, C]   [A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [] [A][C][] [] [] [] [] 
[] [] [] [S][] [S][] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }, { A-->SA }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->SS }, { S-->b }]
C[{ C-->AS }, { C-->AA }]

}
word='abbaabbbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [S]         []          []          []          []          []          []          []          
[A, C]      [A, C]      [A]         [A]         []          []          []          []          []          []          
[C]         [C]         [C]         [C]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          
[A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A, C]      [A]         [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[C]         [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->CA }]
B[{ B-->CA }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->a }, { C-->AA }]

}
word='abbaabbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[C, S]   [C, S]   [A]      []       []       []       []       []       []       []       
[C, S]   [C, S]   [A, S]   [C]      []       []       []       []       []       []       
[C, S]   [C, S]   [A, S]   []       [C]      []       []       []       []       []       
[A, B, S][A, B, S][C, S]   [A, B]   [A, B]   [A]      []       []       []       []       
[C, S]   [C, S]   [A, B, S][C, S]   [C, S]   [C, S]   [A]      []       []       []       
[A, B, S][A, B, S][C, S]   [A, B, S][A, B, S][A, B, S][C, S]   [A]      []       []       
[C, S]   [C, S]   [A, B, S][C, S]   [C, S]   [C, S]   [A, B, S][C, S]   [A]      []       
[C, S]   [C, S]   [A, B, S][C, S]   [C, S]   [C, S]   [A, B, S][C, S]   [A, S]   [C]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[C, S]   []       []       []       []       []       []       []       []       []       
[C, S]   [C, S]   []       []       []       []       []       []       []       []       
[S]      [A, B, S][]       []       []       []       []       []       []       []       
[C]      []       [A, B, S][C]      []       []       []       []       []       []       
[S]      [A, B, S][]       [S]      [S]      []       []       []       []       []       
[C]      []       [A, B, S][C]      [C]      []       []       []       []       []       
[C, S]   [C, S]   [B]      [C, S]   [C, S]   [C, S]   [B]      []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=39

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=39
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->BB }]
C[{ C-->SB }]
S[{ S-->a }, { S-->BB }, { S-->SS }, { S-->BS }]

}
word='bbbaaababb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, S]      [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [B]         []          []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [S]         []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [S]         [S]         []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [S]         [S]         [S]         []          []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [B]         []          []          []          
[A, S]      [A, S]      [A, S]      [S]         [S]         [S]         [A, S]      [S]         []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [B]         []          
[A, S, C]   [A, S, C]   [A, S, C]   [S, C]      [S, C]      [S, C]      [A, S, C]   [S, C]      [B, S]      [B]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      [S]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [A, S, C][]       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=41

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=41
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->CC }]
C[{ C-->CA }, { C-->b }]

}
word='bbbaaababb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A, B][C]   []    []    []    []    []    []    []    []    
[C]   [A, B][C]   []    []    []    []    []    []    []    
[C]   [A, B][C]   [A]   []    []    []    []    []    []    
[C]   [A, B][C]   []    [A]   []    []    []    []    []    
[C]   [A, B][C]   []    []    [A]   []    []    []    []    
[A, B][C]   [A, B][]    []    []    [C]   []    []    []    
[A, B][C]   [A, B][]    []    []    [C]   [A]   []    []    
[C]   [A, B][C]   []    []    []    [A, B][]    [C]   []    
[A, B][C]   [A, B][]    []    []    [C]   []    [A, B][C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='bbbaaababb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->SS }, { B-->AA }]
S[{ S-->AS }, { S-->b }]
C[{ C-->SA }]

}
word='bbbaaababb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [A]      []       []       []       []       []       
[]       []       []       []       [B]      [A]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [S]      [S]      [S]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [S]      []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->CA }]
B[{ B-->AC }, { B-->CA }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->CC }]

}
word='bbbaaababb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, C, S]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, C, S]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, S]   [C]         []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, S]   [B, C]      [C]         []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, S]   [B, C]      [B, C]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=3

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=3
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->BB }]
C[{ C-->a }]
S[{ S-->CC }]

}
word='bbbaababba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][A, B][B]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [C]   []    []    []    []    []    []    
[]    []    []    [S]   [C]   []    []    []    []    []    
[A, B][A, B][A, B][B]   [B]   [B]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   [B]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][]    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='bbbaababba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, C][C]   []    []    []    []    []    []    []    []    
[B, C][B, C][C]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->CA }]
S[{ S-->AC }, { S-->CC }]
C[{ C-->CA }, { C-->CC }, { C-->b }]

}
word='bbbaababba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C, S]      [C]         []          []          []          []          []          []          []          []          
[C, S]      [C, S]      [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          [A]         []          []          []          []          []          
[C, S]      [C, S]      [C, S]      []          [S]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [S]         [A, B, C]   [A]         []          []          []          
[C, S]      [C, S]      [C, S]      []          [S]         [C, S]      [S]         [C]         []          []          
[C, S]      [C, S]      [C, S]      []          [S]         [C, S]      [S]         [C, S]      [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [S]         [A, B, C, S][S]         [A, B, C, S][A, B, C]   [A]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          [S]         []          []          []          []          []          
[]          []          []          []          [S]         [C, S]      []          []          []          []          
[]          []          []          []          [S]         [A, B, C, S][S]         []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AC }, { A-->CA }]
B[{ B-->AC }]
S[{ S-->AC }, { S-->CA }, { S-->AA }]
C[{ C-->a }, { C-->AA }]

}
word='bbbaababba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C, S]      [A]         []          []          []          []          []          []          []          []          
[A, B, S]   [C, S]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, C, S]   [A, B, S]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, S, C]   [A, S]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [C, S]      [A, S]      [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [C, S]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, S]   [C]         

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AC }, { B-->CA }]
C[{ C-->AC }, { C-->CA }, { C-->a }]
S[{ S-->CC }]

}
word='bbbaababba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          []          [A]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [B, C]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [B, C, S]   [A, B, C]   [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [B, C, S]   [A, B, C]   [B, C]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [B, C, S]   [A, B, C]   [B, C]      []          [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][S]         [B, C, S]   [A, B, C, S][B, C, S]   [A, B, C]   [A, B, C]   [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          [A, B, C, S][]          []          []          []          []          []          []          
[]          []          [A, B, C, S][S]         []          []          []          []          []          []          
[]          []          [A, B, C, S][S]         []          []          []          []          []          []          
[]          []          [A, B, C, S][S]         []          []          []          []          []          []          
[]          []          [A, B, C, S][S]         []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AA }, { A-->b }]
B[{ B-->SS }]
C[{ C-->AS }, { C-->SS }]
S[{ S-->a }]

}
word='aaaabbaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[C]      [A, B, C][S]      []       []       []       []       []       []       []       
[A]      [C]      [A, B, C][S]      []       []       []       []       []       []       
[A]      []       [A]      []       [A]      []       []       []       []       []       
[A]      []       [A]      []       [A]      [A]      []       []       []       []       
[C]      []       [C]      []       [C]      [C]      [S]      []       []       []       
[A]      []       [A]      []       [A]      [A]      [A, B, C][S]      []       []       
[C]      []       [C]      []       [C]      [C]      [C]      [A, B, C][S]      []       
[A]      []       [A]      []       [A]      [A]      [A]      [C]      [A, B, C][S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [C][C][] [] [] [] 
[] [] [] [] [A][A][A][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }]
C[{ C-->SB }, { C-->SS }]

}
word='aaaabbaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, C][S]   []    []    []    []    []    []    []    []    
[S, C][B, C][S]   []    []    []    []    []    []    []    
[B, C][S, C][B, C][S]   []    []    []    []    []    []    
[B, C][S, C][B, C][S, C][B]   []    []    []    []    []    
[B, C][S, C][B, C][S, C][]    [B]   []    []    []    []    
[S, C][B, C][S, C][B, C][]    []    [S]   []    []    []    
[B, C][S, C][B, C][S, C][]    []    [B, C][S]   []    []    
[S, C][B, C][S, C][B, C][]    []    [S, C][B, C][S]   []    
[B, C][S, C][B, C][S, C][]    []    [B, C][S, C][B, C][S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[B, C][]    [B, C][]    []    []    []    []    []    []    
[S, C][]    [S, C][]    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[S, C][]    [S, C][]    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='aaaabbaaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }]
B[{ B-->a }]
S[{ S-->SB }, { S-->b }, { S-->BS }]
C[{ C-->BB }]

}
word='aaaabbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, C][B]   []    []    []    []    []    []    []    []    
[]    [A, C][B]   []    []    []    []    []    []    []    
[]    []    [A, C][B]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [S]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [S]   [B]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [S]   [A, C][B]   []    []    
[A]   [A]   [A]   [A]   [A]   [S]   []    [A, C][B]   []    
[A]   [A]   [A]   [A]   [A]   [S]   []    []    [A, C][B]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=22

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=22
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AA }]

}
word='aaaabbaaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abaabbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, C, S][C]      []       []       []       []       []       []       []       []       
[A, C, S][A, C, S][C]      []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
C[{ C-->SB }]
S[{ S-->a }, { S-->BS }]

}
word='abaabbabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [S]   []    []    []    []    []    []    []    
[S, C][B]   [B]   [S]   []    []    []    []    []    []    
[C]   []    []    [C]   [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[B]   [C, S][C, S][B]   [S]   [S]   [S]   []    []    []    
[]    [C]   [C]   []    [C]   [C]   [C]   [B]   []    []    
[S, C][B]   [B]   [C, S][B]   [B]   [B]   [S]   [S]   []    
[C]   []    []    [C]   []    []    []    [C]   [C]   [B]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    [C]   []    []    []    []    []    
[]    [B]   [B]   []    [B]   [B]   []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AB }, { B-->BA }, { B-->BB }]
C[{ C-->BA }, { C-->BB }, { C-->AB }]
S[{ S-->BA }, { S-->AB }]

}
word='abaabbabab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C, S][B]      []       []       []       []       []       []       []       []       
[B, C, S][B, C, S][A]      []       []       []       []       []       []       []       
[B, C, S][B, C, S][]       [A]      []       []       []       []       []       []       
[B, C, S][B, C]   [B, C, S][B, C, S][B]      []       []       []       []       []       
[B, C, S][B, C]   [B, C, S][B, C, S][B, C]   [B]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A]      []       []       []       
[B, C, S][B, C]   [B, C, S][B, C, S][B, C]   [B, C]   [B, C, S][B]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A]      []       
[B, C, S][B, C]   [B, C, S][B, C, S][B, C]   [B, C]   [B, C, S][B, C]   [B, C, S][B]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][] [S][S][] [] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][] [S][S][] [] [S][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->CC }]
S[{ S-->CB }]
C[{ C-->a }, { C-->BC }]

}
word='abaabbabab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S]      [B]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, C]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B]         [C]         []          []          []          []          []          []          
[A, S]      [A, S]      []          [A, S]      [B]         []          []          []          []          []          
[]          []          []          []          []          [B]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, C]   [A, B, C]   [C]         []          []          []          
[A, S]      [A, S]      [A, S]      []          [A, S]      [A, S]      [A, S]      [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   [C]         []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      []          [A, S]      [A, S]      [B]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S]         []          []          []          []          []          []          []          []          []          
[A, S]      []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, S]      [A, S]      []          []          [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][]          [A, B, C, S][A, B, C, S][]          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=39

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=39
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->AS }, { B-->SS }]
S[{ S-->AS }, { S-->b }]
C[{ C-->AS }, { C-->SS }]

}
word='abaabbabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[]          []          [A]         []          []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[A, B, S, C][B, C]      [A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, S, C][B, C]      [A, B, S, C][A, B, S, C][B, C]      [S]         []          []          []          []          
[]          []          []          []          []          []          [A]         []          []          []          
[A, B, S, C][B, C]      [A, B, S, C][A, B, S, C][]          [B, C]      [A, B, S, C][S]         []          []          
[]          []          []          []          []          []          []          []          [A]         []          
[A, B, S, C][B, C]      [A, B, S, C][A, B, S, C][]          [B, C]      [A, B, S, C][B, C]      [A, B, S, C][S]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->BS }]

}
word='abbaaaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    [B]   [S]   []    []    []    []    []    []    []    
[]    [B]   [S]   [B]   []    []    []    []    []    []    
[]    [B]   [S]   []    [B]   []    []    []    []    []    
[]    [B]   [S]   []    []    [B]   []    []    []    []    
[]    [B]   [S]   []    []    []    [B]   []    []    []    
[C]   [C, S][B]   []    []    []    [C]   [S]   []    []    
[]    [B]   [S, C][]    []    []    []    [B]   [S]   []    
[C]   [C, S][B]   []    []    []    [C]   [S, C][B]   [S]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BB }, { A-->BC }]
B[{ B-->a }, { B-->BB }]
S[{ S-->CB }, { S-->CC }, { S-->BB }, { S-->BC }]
C[{ C-->CC }, { C-->BB }, { C-->b }]

}
word='abbaaaabbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, S]      [C]         []          []          []          []          []          []          []          []          
[A, S]      [A, C, S]   [C]         []          []          []          []          []          []          []          
[]          [S]         [S]         [B]         []          []          []          []          []          []          
[A, S]      [A, C, S]   [A, C, S]   [A, B, C, S][B]         []          []          []          []          []          
[A, S]      [A, C, S]   [A, C, S]   [A, B, C, S][A, B, C, S][B]         []          []          []          []          
[A, S]      [A, C, S]   [A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          
[A, S]      [A, C, S]   [A, C, S]   [A, S, C]   [A, S, C]   [A, C, S]   [A, S]      [C]         []          []          
[A, S]      [A, C, S]   [A, C, S]   [A, S, C]   [A, S, C]   [A, C, S]   [A, S]      [A, C, S]   [C]         []          
[A, S]      [A, C, S]   [A, C, S]   [A, C, S]   [A, S, C]   [A, C, S]   [A, S]      [A, C, S]   [A, C, S]   [C]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, C, S][]       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       []       []       []       []       []       
[A, S]   []       []       []       []       [A, C, S][]       []       []       []       
[A, S]   []       []       []       []       [A, C, S][A, S]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->CA }]
C[{ C-->CA }, { C-->a }]

}
word='abbaaaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, C][A]   []    []    []    []    []    []    []    []    
[B, C][]    [A]   []    []    []    []    []    []    []    
[A]   []    []    [C]   []    []    []    []    []    []    
[B, C][]    []    [A]   [C]   []    []    []    []    []    
[A]   []    []    [B, C][A]   [C]   []    []    []    []    
[B, C][]    []    [A]   [B, C][A]   [C]   []    []    []    
[B, C][]    []    [A]   [B, C][A]   [B, C][A]   []    []    
[B, C][]    []    [A]   [B, C][A]   [B, C][]    [A]   []    
[B, C][]    []    [A]   [B, C][A]   [B, C][]    []    [A]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [A][] [] [] [] 
[] [] [] [A][] [A][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='abbaaaabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][A, S][S]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }]
B[{ B-->CS }, { B-->SS }]
C[{ C-->a }, { C-->CC }]
S[{ S-->SS }, { S-->CC }, { S-->b }]

}
word='abbaaaabbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[B]         [A, B, S]   [S]         []          []          []          []          []          []          []          
[]          [A]         [A]         [C]         []          []          []          []          []          []          
[B]         [A, B, S]   [A, B, S]   [C, S]      [C]         []          []          []          []          []          
[B]         [A, B, S]   [A, B, S]   [A, B, C, S][C, S]      [C]         []          []          []          []          
[B]         [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          
[B]         [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B]         [S]         []          []          
[B]         [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B]         [A, B, S]   [S]         []          
[B]         [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [B]         [A, B, S]   [A, B, S]   [S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, S][]       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       [A, B, S][]       []       []       []       
[B]      []       []       []       []       [A, B, S][B]      []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->AB }, { B-->BB }, { B-->AA }]
C[{ C-->BA }, { C-->BB }]
S[{ S-->BA }]

}
word='abbabbaaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B]      [B]         []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [B]         []          []          []          []          []          []          []          
[B, C, S]   [C, S]      [C, S]      [A]         []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [A, B]      [B]         []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [A, B, C]   [B, C]      [B]         []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [C, S]      [C, S]      [A]         []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [A, B, C, S][B, C]      [B, C]      [B]         [A]         []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [A, B, C, S][B, C, S]   [B, C, S]   [A, B, C, S][B]         [A]         []          
[A, B, S, C][B, C, S]   [B, C, S]   [A, B, C, S][B, C, S]   [B, C, S]   [A, B, C, S][A, B, C, S][B]         [A]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C, S][]       []       []       []       []       []       []       []       []       
[A, S]   [B, C, S][]       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      [B, C, S][]       []       []       []       []       []       
[S]      [S]      []       [A, S]   [B, C]   []       []       []       []       []       
[S]      [S]      []       [S]      [S]      []       []       []       []       []       
[S]      [S]      []       [S]      [S]      []       []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=30

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=30
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abbabbaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C, S][C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][C]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]
S[{ S-->AA }]

}
word='abbabbaaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AA }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->BB }]
S[{ S-->AA }]

}
word='abbabbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A, S][A, B][B]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [A]   []    []    []    []    []    []    
[A, S][A, S][A]   [A]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, B][B]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->CA }]
B[{ B-->AA }]
C[{ C-->AC }, { C-->a }]
S[{ S-->AC }]

}
word='abbabbaaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[B]         [B]         [A]         []          []          []          []          []          []          []          
[A, C, S]   [C, S]      [C, S]      [C]         []          []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [A]         [A]         []          []          []          []          []          
[B]         [B]         [B]         [B]         [B]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C, S]      [C, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B]      [A]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A, C, S]   []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[B]         [B]         [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          []          []          
[]          []          []          [C, S]      [B]         []          []          []          []          []          
[]          []          []          []          [A]         [A]         []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='babaabbaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }]
B[{ B-->b }, { B-->BA }]
S[{ S-->BA }]

}
word='babaabbaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][A]   []    []    []    []    []    []    []    []    
[B, S][A]   [B]   []    []    []    []    []    []    []    
[B, S][A]   [B, S][A]   []    []    []    []    []    []    
[B, S][A]   [B, S][A]   [A]   []    []    []    []    []    
[B, S][A]   [B, S][A]   [A]   [B]   []    []    []    []    
[B, S][A]   [B, S][A]   [A]   []    [B]   []    []    []    
[B, S][A]   [B, S][A]   [A]   []    [B, S][A]   []    []    
[B, S][A]   [B, S][A]   [A]   []    [B, S][A]   [A]   []    
[B, S][A]   [B, S][A]   [A]   []    [B, S][A]   [A]   [B]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->CB }]
C[{ C-->CB }, { C-->a }]

}
word='babaabbaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [B, C]   [B]      []       []       []       []       []       []       []       
[]       [A]      [A]      [C]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[A]      [A, B, C][A]      [B, C]   [B, C]   [B]      []       []       []       []       
[A]      [A, B, C][A]      [B, C]   [B, C]   []       [B]      []       []       []       
[]       [A]      []       [A]      [A]      []       [A]      [C]      []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A]      [A, B, C][A]      [A, B, C][A, B, C][]       [A]      [B, C]   [B, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      [A, B, C][A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SS }, { B-->BB }]
C[{ C-->SB }, { C-->BS }]
S[{ S-->a }]

}
word='babaabbaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B, C][S]      []       []       []       []       []       []       []       []       
[A, B]   [A, C]   [B]      []       []       []       []       []       []       []       
[A, B, C][A, C]   [A, B, C][S]      []       []       []       []       []       []       
[A, B, C][A, C]   [A, B, C][B]      [S]      []       []       []       []       []       
[A, B]   [A, C]   [A, B]   [A, B]   [A, C]   [B]      []       []       []       []       
[A, B]   [A, C]   [A, B]   [A, B]   [A, C]   [A, B]   [B]      []       []       []       
[A, B, C][A, C]   [A, B, C][A, B, C][A, C]   [A, B, C][A, B, C][S]      []       []       
[A, B, C][A, C]   [A, B, C][A, B, C][A, C]   [A, B, C][A, B, C][B]      [S]      []       
[A, B]   [A, C]   [A, B]   [A, B]   [A, C]   [A, B]   [A, B]   [A, B]   [A, C]   [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[A, B, C][A, C]   []       []       []       []       []       []       []       []       
[A, B]   [A, C]   []       []       []       []       []       []       []       []       
[A, B]   [A, C]   []       [A, B]   []       []       []       []       []       []       
[A, B, C][A, C]   [C]      [A, B, C][A, C]   []       []       []       []       []       
[A, B, C][A, C]   [C]      [A, B, C][A, C]   [C]      []       []       []       []       
[A, B]   [A, C]   []       [A, B]   [A, C]   []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=49

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=49
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->CC }]
S[{ S-->a }, { S-->CS }, { S-->SC }]
C[{ C-->CS }, { C-->b }]

}
word='babaabbaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][S]         [C]         []          []          []          []          []          []          []          
[A, B, S, C][S]         [A, S, C]   [S]         []          []          []          []          []          []          
[A, B, S, C][S]         [A, S, C]   []          [S]         []          []          []          []          []          
[A, B, S, C][S]         [A, B, S, C][]          [S]         [C]         []          []          []          []          
[A, B, S, C][S]         [A, B, S, C][]          [S]         [B]         [C]         []          []          []          
[A, B, C, S][S]         [A, B, C, S][]          [S]         [A, B, S, C][A, S, C]   [S]         []          []          
[A, B, C, S][S]         [A, B, C, S][]          [S]         [A, B, S, C][A, S, C]   []          [S]         []          
[A, B, C, S][S]         [A, B, C, S][]          [S]         [A, B, S, C][A, B, S, C][]          [S]         [C]         

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->BC }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->BB }]
C[{ C-->CC }, { C-->b }]

}
word='abaaabbbaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [C]      []       []       []       []       []       []       []       []       
[A, B, S][]       [B]      []       []       []       []       []       []       []       
[A, B, S][]       [A, B, S][B]      []       []       []       []       []       []       
[A, B, S][]       [A, B, S][A, B, S][B]      []       []       []       []       []       
[A, B, S][]       [A, B, S][A, B, S][A, B]   [C]      []       []       []       []       
[A, B, S][]       [A, B, S][A, B, S][A, B, S][B, C]   [C]      []       []       []       
[A, B, S][]       [A, B, S][A, B, S][A, B, S][A, B, C][B, C]   [C]      []       []       
[A, B, S][]       [A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][]       [B]      []       
[A, B, S][]       [A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][]       [A, B, S][B]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abaaabbbaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abaaabbbaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]

}
word='abaaabbbaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SS }]

}
word='abaaabbbaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
C[{ C-->AA }]

}
word='babbbbabab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, C][A]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
B[{ B-->AA }]
C[{ C-->AS }, { C-->AA }]
S[{ S-->SA }, { S-->a }]

}
word='babbbbabab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, C]   [S]      []       []       []       []       []       []       []       []       
[A, B, C][S]      [A]      []       []       []       []       []       []       []       
[A, B, C][S]      [B, C]   [A]      []       []       []       []       []       []       
[A, B, C][S]      []       [B, C]   [A]      []       []       []       []       []       
[A, B, C][S]      []       []       [B, C]   [A]      []       []       []       []       
[A, B, C][S]      []       []       [B, C]   [A, C]   [S]      []       []       []       
[A, B, C][S]      []       []       [B, C]   [A, B, C][S]      [A]      []       []       
[A, B, C][S]      []       []       [B, C]   [A, B, C][S]      [A, C]   [S]      []       
[A, B, C][S]      []       []       [B, C]   [A, B, C][S]      [A, B, C][S]      [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[B]   []    []    []    [B, C][]    []    []    []    []    
[B]   []    []    []    [B, C][B]   []    []    []    []    
[B]   []    []    []    [B, C][B]   []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->CC }, { C-->b }]

}
word='babbbbabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B, C][C]   [C]   []    []    []    []    []    []    []    
[B, C][B, C][B, C][C]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   [C]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   [C]   

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=34

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=34
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BS }]

}
word='babbbbabab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[S][S][S][S][S][S][S][S][S][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='babbbbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B, C][C]      []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][C]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='abbaabbaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->CC }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CC }]

}
word='abbaabbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }]
B[{ B-->b }, { B-->CB }]
C[{ C-->CB }, { C-->a }, { C-->BC }]
S[{ S-->BC }]

}
word='abbaabbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, C]      [B]         []          []          []          []          []          []          []          []          
[A, B, C]   [A]         [B]         []          []          []          []          []          []          []          
[A, C, S]   [C, S]      [C, S]      [C]         []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         [B]         []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C, S]      [C, S]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [B]         []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C, S]      [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[S]         [S]         [S]         [S]         [S]         [S]         []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
C[{ C-->AA }]

}
word='abbaabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A, C][A]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][A]   []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A]   []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SS }]
S[{ S-->a }, { S-->SS }, { S-->b }]

}
word='abbaabbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B, S][S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BS }, { B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }]

}
word='abbbabbbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[B]      [A, B]   [S]      []       []       []       []       []       []       []       
[B]      [B, S]   [A, B]   [S]      []       []       []       []       []       []       
[B]      [A, B, S][A, B, S][B, S]   [B]      []       []       []       []       []       
[B]      [A, B, S][A, B, S][A, B, S][B]      [S]      []       []       []       []       
[B]      [A, B, S][A, B, S][A, B, S][B]      [A, B]   [S]      []       []       []       
[B]      [A, B, S][A, B, S][A, B, S][B]      [B, S]   [A, B]   [S]      []       []       
[B]      [A, B, S][A, B, S][A, B, S][B]      [A, B, S][B, S]   [A, B]   [S]      []       
[B]      [A, B, S][A, B, S][A, B, S][B]      [A, B, S][A, B, S][B, S]   [A, B]   [S]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->BS }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->SS }]
S[{ S-->SS }, { S-->b }]

}
word='abbbabbbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B]      [S]         []          []          []          []          []          []          []          []          
[A, B]      [A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B]      [A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[]          [B, C]      [B, C]      [B, C]      [B]         []          []          []          []          []          
[]          [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [S]         []          []          []          []          
[]          [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, B, S, C][S]         []          []          []          
[]          [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, B, S, C][A, B, S, C][S]         []          []          
[]          [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[]          [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       [A, B, C][A, B, C][]       []       []       []       []       []       []       
[]       [A, B, C][A, B, C][A, B, C][]       []       []       []       []       []       
[]       [A, B, C][A, B, C][A, B, C][]       []       []       []       []       []       
[]       [A, B, C][A, B, C][A, B, C][]       []       []       []       []       []       
[]       [A, B, C][A, B, C][A, B, C][]       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=4
countRightCellCombinationsForced=42

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=42
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AB }, { B-->a }, { B-->AA }]
C[{ C-->AA }]
S[{ S-->AA }]

}
word='abbbabbbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [B, C, S][A]      []       []       []       []       []       []       []       
[]       [B]      [B, C, S][A]      []       []       []       []       []       []       
[]       [B]      [B]      [B]      [B]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       [B, C, S][A]      []       []       []       
[]       []       []       []       []       [B]      [B, C, S][A]      []       []       
[]       []       []       []       []       [B]      [B]      [B, C, S][A]      []       
[]       []       []       []       []       [B]      [B]      [B]      [B, C, S][A]      

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [B][B][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AA }]

}
word='abbbabbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B, S][A]      []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
S[{ S-->AA }]
C[{ C-->AA }]

}
word='abbbabbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S, C][A]      []       []       []       []       []       []       []       []       
[A, S, C][A, S, C][A]      []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       []       []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A]      

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->BA }, { B-->a }]
C[{ C-->AB }]

}
word='abababaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[A, B, C][C]      [A, B]   [A]      []       []       []       []       []       []       
[C]      []       [C]      [C]      [B]      []       []       []       []       []       
[A, B, C][C]      [A, B, C][C]      [A, B]   [A]      []       []       []       []       
[C]      []       [C]      []       [C]      [C]      [B]      []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[]       []       []       []       []       []       []       []       [B]      []       
[A, B, C][C]      [A, B, C][C]      [A, B, C][C]      [A, B]   [A, B]   [A, B]   [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B, C][]       [A, B, C][]       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->AC }, { B-->AA }]
S[{ S-->AC }]
C[{ C-->CA }, { C-->AA }, { C-->b }]

}
word='abababaaab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, S]      [C]         []          []          []          []          []          []          []          []          
[B, C, S]   [A, C]      [A]         []          []          []          []          []          []          []          
[]          [B, S]      [B, S]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [A]         []          []          []          []          []          
[B, S]      [B, S]      []          [B, S]      [B, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A]         []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          [B, S]      [C]         

markedRightCellCombinationForced=
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[]          [A, B, C, S][]          []          []          []          []          []          []          []          
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          [A, B, C, S][]          []          []          []          []          []          
[]          []          []          []          [B, S]      []          []          []          []          []          
[]          []          []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          []          []          []          

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BS }]

}
word='abababaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->CA }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->a }]

}
word='abababaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, B]   [A]      []       []       []       []       []       []       []       []       
[A, C]   [C]      [C]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A]      []       []       []       []       []       []       
[A, B, C][A, C]   [A, C]   [C]      [C]      []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [A, C]   [C]      [C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [A]      [C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [C]      []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][A, B][A, B][A]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }, { B-->CS }]
S[{ S-->a }, { S-->SC }]
C[{ C-->SS }, { C-->b }]

}
word='abababaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[C]   [B]   [S]   []    []    []    []    []    []    []    
[C]   [B]   [B, S][C]   []    []    []    []    []    []    
[B, S][]    [C]   [B]   [S]   []    []    []    []    []    
[B, S][]    [C]   [B]   [B, S][C]   []    []    []    []    
[C]   [B]   [B, S][]    [C]   [B]   [S]   []    []    []    
[B, S][]    [C]   [B]   [B, S][]    [C]   [S]   []    []    
[C]   [B]   [B, S][]    [C]   [B]   [B, S][C]   [S]   []    
[C]   [B]   [B, S][]    [C]   [B]   [B, S][C]   [B, S][C]   

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[C][] [] [] [C][] [] [] [] [] 
[C][B][] [] [C][B][] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->BC }]
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->CC }]
S[{ S-->BB }, { S-->CC }, { S-->BC }]
C[{ C-->CB }, { C-->a }, { C-->CC }, { C-->BC }]

}
word='bbbaabaaab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, S]      [B]         []          []          []          []          []          []          []          []          
[]          [A, S]      [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [B]         

markedRightCellCombinationForced=
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SS }]
B[{ B-->CS }]
S[{ S-->a }, { S-->CS }, { S-->SC }]
C[{ C-->SS }, { C-->b }]

}
word='bbbaabaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[]       [A]      [C]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [S]      []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [S]      [C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, C]   [A, B, S][S]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, B, S][A, C]   [A, C]   [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, C]   [A, B, S][A, B, S][A, C]   [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, C]   [A, B, S][A, B, S][A, C]   [S]      [C]      

markedRightCellCombinationForced=
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[A, C][A, C][A, C][]    [B, S][]    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][A, B][C]   [B, S][A, B][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=32

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=32
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->a }, { B-->AA }]

}
word='bbbaabaaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[B][A][] [] [] [] [] [] [] [] 
[A][B][A][] [] [] [] [] [] [] 
[A][B][A][B][] [] [] [] [] [] 
[A][B][A][] [B][] [] [] [] [] 
[B][A][B][] [] [A][] [] [] [] 
[B][A][B][] [] [A][B][] [] [] 
[B][A][B][] [] [A][] [B][] [] 
[B][A][B][] [] [A][] [] [B][] 
[A][B][A][] [] [B][] [] [] [A]

markedRightCellCombinationForced=
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=6

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=6
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->SA }, { B-->AA }, { B-->SS }]
S[{ S-->AS }, { S-->a }]
C[{ C-->AA }, { C-->SS }]

}
word='bbbaabaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [A]      []       []       []       []       []       []       []       []       
[]       [B, C]   [A]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [S]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [A]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, C, S][B, S]   [S]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [S]      []       []       
[]       []       []       []       []       []       []       [B, C]   [S]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [A, B]   [A]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B, C]   [B, C]   []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][]       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=27

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=27
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->SS }]
S[{ S-->SB }, { S-->a }, { S-->BB }]

}
word='bbbaabaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[A, B, S][A, B]   []       [S]      []       []       []       []       []       []       
[A, B, S][S]      [S]      [A, B]   [S]      []       []       []       []       []       
[A, B, S][A, B, S][S]      [A, B, S][S]      [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   []       [S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [A, B]   [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [S]      [A, B]   [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [B]      

markedRightCellCombinationForced=
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       []       [A, B]   []       []       []       []       []       []       
[]       []       []       []       [A, B, S][]       []       []       []       []       
[]       []       []       []       [A, B]   []       []       []       []       []       
[]       []       []       []       []       [A, B]   []       []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}
