Result{
		countGeneratedGrammars= 15000
		countGeneratedGrammarsPerWord= 150
		countDifferentWords= 100
		totalTime= 5488ms
		totalTime= 0min 5sec
		generatorType= DICEROLLONLY
GrammarGeneratorSettingsDiceRoll{
		minValueCompoundVariablesAreAddedTo=0
		minValueTerminalsAreAddedTo=1
		maxValueCompoundVariablesAreAddedTo=2
		maxValueTerminalsAreAddedTo=1
		favouritism=[1, 1, 1, 1]
GrammarProperties: {
		variables= [A, B, S, C]
		variableStart= S
		terminals= [a, b]
GrammarPropertiesGrammarRestrictions{
		sizeOfWord=10
		maxNumberOfVarsPerCell=3
}
GrammarPropertiesExamConstraints{
		minRightCellCombinationsForced=1
		maxSumOfProductions=10
		maxSumOfVarsInPyramid=100
}
}
}
SuccessRates{
SUCCESSRATEOVERVIEW{
			-->	SUCCESSRATE=0.0849375
			-->	SUCCESSRATEPRODUCIBILITY=0.2413125
			-->	SUCCESSRATEGRAMMARRESTRICTIONS=0.880625
			-->	SUCCESSRATEEXAMCONSTRAINTS=0.31925

			-->	SUCCESSRATE=0.0849375
		trueCount=1359
		falseCount=14641
			-->	SUCCESSRATEPRODUCIBILITY=0.2413125
		trueProducibilityCount=3861
		falseProducibilityCount=12139
}
SuccessRatesGrammarRestrictions{
		trueGrammarRestrictionsCount=14090
		falseGrammarRestrictionsCount=1910
			-->	SUCCESSRATEGrammarRestrictions=0.880625
		trueSizeOfWordCount=16000
		falseSizeOfWordCount=0
			-->	SUCCESSRATESizeOfWord=1.0
		trueMaxNumberOfVarsPerCellCount=14090
		falseMaxNumberOfVarsPerCellCount=1910
			-->	SUCCESSRATEMaxNumberOfVarsPerCell=0.880625
}
SuccessRatesExamConstraints{
		trueExamConstraints=5108
		falseExamConstraints=10892
			-->	SUCCESSRATEExamConstraints=0.31925
		trueRightCellCombinationsForcedCount=7299
		falseRightCellCombinationsForcedCount=8701
			-->	SUCCESSRATERightCellCombinationsForced=0.4561875
		trueMaxSumOfProductionsCount=14009
		falseMaxSumOfProductionsCount=1991
			-->	SUCCESSRATEMaxSumOfProductions=0.8755625
		trueMaxSumOfVarsInPyramidCount=15073
		falseMaxSumOfVarsInPyramidCount=927
			-->	SUCCESSRATEMaxSumOfVarsInPyramid=0.9420625
}
}
}



RepresentativeResultSamples{

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CA }]
S[{ S-->AC }]
C[{ C-->CC }, { C-->b }]

}
word='bbaababbbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[S][S][S][S][C][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[S][S][S][S][S][S][C][] [] [] 
[S][S][S][S][S][S][C][C][] [] 
[S][S][S][S][S][S][C][C][C][] 
[S][S][S][S][S][S][C][C][C][C]

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=26

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=26
		countRightCellCombinationsForced=26
		countRightCellCombinationsForced=26
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->SA }]
S[{ S-->AA }]

}
word='bbaababbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A]   [S]   [A]   []    []    []    []    []    []    []    
[A, S][A]   [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A]   [S]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][A]   [S]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }, { A-->CB }]
B[{ B-->SB }, { B-->SS }, { B-->BB }]
S[{ S-->SA }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->a }]

}
word='bbaababbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[S]      []       [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[B]      [B]      [S]      [S]      [S]      []       []       []       []       []       
[B, S]   [S]      []       []       []       [C]      []       []       []       []       
[B, S]   [B, S]   [A, B]   [A, B]   [B]      [S]      [S]      []       []       []       
[B, S]   [B, S]   [A, B, S][A, B, S][B, S]   [A, B]   [B]      [S]      []       []       
[B, S]   [B, S]   [A, B, S][A, B, S][B, S]   [A, B]   [B]      [B]      [S]      []       
[B, S]   [B, S]   [A, B, S][A, B, S][B, S]   [A, B]   [B]      [B]      [B]      [S]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[S]   []    []    []    []    []    []    []    []    []    
[S]   []    [A, S][A, S][S]   []    []    []    []    []    
[S]   []    [A]   [A, S][]    [A]   []    []    []    []    
[S]   []    [A]   [A, S][]    [A]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
		countRightCellCombinationsForced=19
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->SC }, { B-->SS }]
S[{ S-->BB }, { S-->CS }, { S-->AB }]
C[{ C-->AA }]

}
word='bbaababbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[B]      []       [C]      [A]      []       []       []       []       []       []       
[S]      []       [A]      [S]      [B]      []       []       []       []       []       
[B]      []       [C]      []       []       [A]      []       []       []       []       
[B, S]   [B]      [A, S]   [B, S]   [B]      [S]      [B]      []       []       []       
[B, S]   [B, S]   [S]      [S]      [S]      []       [S]      [B]      []       []       
[B, S]   [B, S]   [A, B, S][B, S]   [B, S]   [B, S]   [B]      [S]      [B]      []       
[B, S]   [B, S]   [A, B, S][B, S]   [B, S]   [S]      [B, S]   [B]      [S]      [B]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    [A, S][S]   [S]   []    []    []    []    []    
[]    []    [A]   []    [S]   []    [B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
		countRightCellCombinationsForced=11
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->CB }, { B-->a }]
C[{ C-->CA }, { C-->BB }, { C-->BS }]
S[{ S-->SC }, { S-->AB }]

}
word='bbaababbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[S][S][B][] [] [] [] [] [] [] 
[] [] [C][B][] [] [] [] [] [] 
[] [] [C][] [A][] [] [] [] [] 
[S][S][B][C][S][B][] [] [] [] 
[S][S][] [C][] [] [A][] [] [] 
[S][S][] [C][] [] [A][A][] [] 
[S][S][] [C][] [] [A][A][A][] 
[S][S][] [C][] [] [A][A][A][A]

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
		countRightCellCombinationsForced=5
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AS }, { S-->AB }, { S-->BS }]

}
word='bababbbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[B]   [A]   [B]   [A]   [B]   [A]   []    []    []    []    
[S]   [B, S][S]   [B, S][S]   [B]   [A]   []    []    []    
[A, S][S]   [A, S][S]   [A, S][S]   [B]   [A]   []    []    
[B, S][A, S][B, S][A, S][B, S][A, S][S]   [B]   [A]   []    
[S]   [B, S][S]   [B, S][S]   [B, S][A, S][S]   [B]   [A]   

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    [B]   []    []    []    []    []    []    
[A, S][]    [A, S][]    [A, S][]    []    []    []    []    
[]    [A, S][]    [A, S][]    [A, S][]    []    []    []    
[]    [B]   []    [B]   []    []    [A, S][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
		countRightCellCombinationsForced=18
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BS }, { B-->AS }, { B-->AC }, { B-->CC }]
C[{ C-->SA }]
S[{ S-->SB }, { S-->BB }, { S-->b }]

}
word='bababbbbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[S]      [B]      [S]      []       []       []       []       []       []       []       
[B, C, S][B]      [C]      [A]      []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [B]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [S]      [B]      []       [S]      []       []       []       []       
[B, S]   [B, S]   [S]      [B]      []       []       [S]      []       []       []       
[B, S]   [B, S]   [S]      [B]      []       []       []       [S]      []       []       
[B, S]   [B, S]   [S]      [B]      []       []       []       []       [S]      []       
[B, S]   [B, S]   [S]      [B]      []       []       []       []       []       [S]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=8

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=8
		countRightCellCombinationsForced=8
		countRightCellCombinationsForced=8
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }]
C[{ C-->AS }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->CS }]

}
word='bababbbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C, S][S]   [A]   []    []    []    []    []    []    []    
[A, S][A]   [C]   [S]   []    []    []    []    []    []    
[A, S][A]   [C, S][S]   [A]   []    []    []    []    []    
[A, S][A]   [C, S][S]   []    [A]   []    []    []    []    
[A, S][A]   [C, S][S]   []    []    [A]   []    []    []    
[A, S][A]   [C, S][S]   []    []    []    [A]   []    []    
[A, S][A]   [C, S][S]   []    []    []    []    [A]   []    
[A, S][A]   [C, S][S]   []    []    []    []    []    [A]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=18
		countRightCellCombinationsForced=18
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->AS }, { B-->SS }]
S[{ S-->BA }, { S-->b }, { S-->AB }]

}
word='bababbbbbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[B]      [S]      []       [A]      []       []       []       []       []       []       
[]       [A, B]   []       [B]      [S]      []       []       []       []       []       
[A, B]   [B, S]   [B]      [S]      [B]      [S]      []       []       []       []       
[B]      [A, B, S][]       [A, B]   []       [B]      [S]      []       []       []       
[A, S]   [A, B]   [A]      [B]      [A]      []       [B]      [S]      []       []       
[A, B]   [A, B, S][B]      [A, S]   [B]      [A]      []       [B]      [S]      []       
[B, S]   [A, B, S][S]      [A, B]   [S]      [B]      [A]      []       [B]      [S]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A, B][]    [B]   []    []    []    []    []    []    
[A]   [B]   []    [S]   [B]   []    []    []    []    []    
[]    [A, S][]    [A]   [S]   [B]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
		countRightCellCombinationsForced=13
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->CC }]
S[{ S-->BB }]
C[{ C-->CS }, { C-->SS }, { C-->b }]

}
word='bababbbbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    [C]   [S]   [B]   [C]   []    []    []    []    
[C]   [S]   [B]   []    []    [B]   [C]   []    []    []    
[B]   []    []    []    [S]   []    [B]   [C]   []    []    
[]    []    [S]   []    [C]   [S]   []    [B]   [C]   []    
[S, C][S]   [B, C][S, C][B]   [C]   [S]   []    [B]   [C]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=1

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=1
		countRightCellCombinationsForced=1
		countRightCellCombinationsForced=1
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BA }]
B[{ B-->BC }, { B-->AS }]
C[{ C-->CA }, { C-->a }, { C-->AA }]
S[{ S-->SA }, { S-->CC }, { S-->b }]

}
word='baababbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       [S]      [C]      [A]      [C]      []       []       []       []       []       
[]       []       []       [B]      []       [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       [S]      [C]      [A, B]   []       [S]      [A]      [C]      []       []       
[]       []       []       [B]      []       []       [B]      []       [S]      []       
[B, S]   [A, S]   [C, S]   [A, B, C][C]      [A, S]   [A, B, C][C]      [A]      [C]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    [A, C][]    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=4

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=4
		countRightCellCombinationsForced=4
		countRightCellCombinationsForced=4
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->CA }]
S[{ S-->AC }, { S-->SS }]
C[{ C-->SA }, { C-->AA }]

}
word='baababbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[A, S]   [C]      [A]      []       []       []       []       []       []       []       
[C]      [A, S]   [C]      [A]      []       []       []       []       []       []       
[A, S]   [C]      [A, S]   [C]      [A]      []       []       []       []       []       
[C, S]   [A, S]   [C]      [A, S]   [C]      [A]      []       []       []       []       
[A, S, C][C, S]   [A, S]   [C]      [A, S]   [C]      [A]      []       []       []       
[A, C, S][A, S, C][C, S]   [A, S]   [C]      [A, S]   [C]      [A]      []       []       
[A, S, C][A, C, S][A, S, C][C, S]   [A, S]   [C]      [A, S]   [C]      [A]      []       
[A, C, S][A, S, C][A, C, S][A, S, C][C, S]   [A, S]   [C]      [A, S]   [C]      [A]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[A, C][]    [A, S][]    []    []    []    []    []    []    
[]    [A, C][]    [A, S][]    []    []    []    []    []    
[]    []    [A, C][]    [A, S][]    []    []    []    []    
[]    []    []    [A, C][]    [A, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=20

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=20
		countRightCellCombinationsForced=20
		countRightCellCombinationsForced=20
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AS }]
S[{ S-->AA }]
C[{ C-->SS }, { C-->CS }]

}
word='baababbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [A]      []       []       []       []       []       []       []       
[S, C]   [A]      [S]      [A]      []       []       []       []       []       []       
[A]      [C, S]   [A]      [S]      [A]      []       []       []       []       []       
[A, S, C][A]      [S, C]   [A]      [S]      [A]      []       []       []       []       
[A, S]   [A, C, S][A]      [S, C]   [A]      [S]      [A]      []       []       []       
[A, S, C][A, S]   [A, S, C][A]      [S, C]   [A]      [S]      [A]      []       []       
[A, S, C][A, C, S][A, S]   [A, S, C][A]      [S, C]   [A]      [S]      [A]      []       
[A, C, S][A, C, S][A, S, C][A, S]   [A, S, C][A]      [S, C]   [A]      [S]      [A]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A, C][]    [C]   []    []    []    []    []    []    []    
[]    [A, C][]    [C]   []    []    []    []    []    []    
[]    []    [A, C][]    [C]   []    []    []    []    []    
[]    []    []    [A, C][]    [C]   []    []    []    []    
[]    []    []    []    [A, C][]    [C]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=17
		countRightCellCombinationsForced=17
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->SS }, { A-->AC }]
B[{ B-->SA }, { B-->SC }]
S[{ S-->AA }, { S-->BB }]
C[{ C-->CC }, { C-->b }]

}
word='baababbaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [A]      []       []       []       []       []       []       []       
[A]      [B, S]   [A]      [C]      []       []       []       []       []       []       
[S]      [B]      [S]      []       [A]      []       []       []       []       []       
[B, S]   [B]      [B, S]   []       [A]      [C]      []       []       []       []       
[B, S]   [B]      [B, S]   []       [A]      [C]      [C]      []       []       []       
[B, S]   [A, B]   [B, S]   [A]      [S]      []       []       [A]      []       []       
[A, B, S][A, B, S][B, S]   [A]      [B, S]   []       []       [A]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A]      [A]      [S]      []       [A]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    [A, B][S]   []    []    []    []    []    []    []    
[]    [A, B][S]   [A]   []    []    []    []    []    []    
[]    []    [S]   [A, S][S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=19

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=19
		countRightCellCombinationsForced=19
		countRightCellCombinationsForced=19
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->AB }, { B-->AA }]
S[{ S-->SA }, { S-->b }, { S-->BS }]

}
word='baababbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [B]   [A]   []    []    []    []    []    []    []    
[A]   [S]   []    [S]   []    []    []    []    []    []    
[A, B][S]   []    [S]   [A]   []    []    []    []    []    
[S]   [A, B][B]   [A]   []    [S]   []    []    []    []    
[A, B][S]   [S]   [S]   [B]   [A]   [S]   []    []    []    
[A, B][S]   [S]   [S]   [B]   [A, B][S]   [A]   []    []    
[S]   [A, B][A, B][A, B][S]   [S]   [A]   []    [S]   []    
[S]   [A, B][A, B][A, B][S]   [S]   [A, B][]    [S]   [A]   

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[B]   []    []    [S]   []    []    []    []    []    []    
[A, B][S]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [A, B][A, B][B]   []    [S]   []    []    []    []    
[]    [A]   [A]   [A, B][S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
		countRightCellCombinationsForced=25
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->CS }]
S[{ S-->AS }, { S-->CC }, { S-->b }]
C[{ C-->a }]

}
word='bbaaabbabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [S]      [C]      []       []       []       []       []       []       
[A]      [A]      [B]      [S]      [C]      []       []       []       []       []       
[A, S]   [A, S]   [A]      []       [B]      [S]      []       []       []       []       
[S]      [S]      [S]      []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [C]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [B]      [S]      []       
[A, S]   [A, S]   [A, B, S][B, S]   [B, S]   [S]      [S]      []       []       [S]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A]   [A, B][B]   [B]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BC }, { B-->AA }]
S[{ S-->AC }, { S-->CB }, { S-->BA }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->a }]

}
word='bbaaabbabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[]    [A]   [S]   [C]   []    []    []    []    []    []    
[A]   [S]   []    [S]   [C]   []    []    []    []    []    
[]    [A]   []    [A]   []    [S]   []    []    []    []    
[B]   []    []    []    []    [A]   [S]   []    []    []    
[B]   [A]   []    [A]   []    [S]   []    [C]   []    []    
[B, S][]    []    []    []    [A]   []    []    [S]   []    
[A, S][A, B][S]   [B]   []    []    []    []    [A]   [S]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[B][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
		countRightCellCombinationsForced=2
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }, { A-->AS }, { A-->SB }]
B[{ B-->BS }, { B-->a }]
S[{ S-->SA }, { S-->AA }, { S-->SS }]

}
word='bbaaabbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [B]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [B]      []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [A]      [B]      []       []       []       []       []       
[A, S]   [A, S]   [B, S]   [S]      []       [A]      []       []       []       []       
[A, S]   [A, S]   [A, B, S][A, S]   [B]      [S]      [A]      []       []       []       
[A, S]   [A, S]   [A, B, S][A, S]   [A, B]   [A, S]   [A]      [B]      []       []       
[A, S]   [A, S]   [A, B, S][A, B, S][B, S]   [A, S]   [S]      []       [A]      []       
[A, S]   [A, S]   [A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [B]      [S]      [A]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }]
S[{ S-->a }, { S-->BB }, { S-->SS }]

}
word='bbaaabbabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][] [S][] [] [] [] [] [] [] 
[S][] [S][S][] [] [] [] [] [] 
[S][] [S][S][S][] [] [] [] [] 
[A][] [A][A][A][B][] [] [] [] 
[S][] [S][S][S][S][B][] [] [] 
[S][] [S][S][S][S][] [S][] [] 
[A][] [A][A][A][A][] [A][B][] 
[S][] [S][S][S][S][] [S][S][B]

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [A][A][A][] [] [] [] [] 
[] [] [S][S][S][] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
S[{ S-->CA }, { S-->a }, { S-->AA }]
C[{ C-->CS }, { C-->SC }, { C-->b }]

}
word='bbaaabbabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A]   [C]   [S]   []    []    []    []    []    []    []    
[A]   [C]   []    [S]   []    []    []    []    []    []    
[A]   [C]   []    []    [S]   []    []    []    []    []    
[S]   [A]   [C]   [C]   [C]   [C]   []    []    []    []    
[S, C][S]   [A]   [A]   [A]   [A]   [C]   []    []    []    
[S, C][S]   [A]   [A]   [A]   [A]   [C]   [S]   []    []    
[A, C][C, S][S]   [S]   [S]   [S]   [A]   [C]   [C]   []    
[A, S][A, C][C, S][C, S][C, S][C, S][S]   [A]   [A]   [C]   

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S, C][]    [A]   [A]   []    []    []    []    []    []    
[S]   [S]   [A]   [A]   [A]   []    []    []    []    []    
[]    [C, S][S]   [S]   [S]   []    []    []    []    []    
[]    []    [S]   [S]   [S]   [C, S][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
		countRightCellCombinationsForced=21
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }]
S[{ S-->AS }, { S-->AA }]

}
word='bbaaabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][S]   [S]   [A]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [S]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [A]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->CB }, { B-->SB }, { B-->CS }]
C[{ C-->a }, { C-->BB }, { C-->SC }]
S[{ S-->BC }]

}
word='bbaaabbaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[B]      [S]      [C]      []       []       []       []       []       []       []       
[S]      [C]      []       [C]      []       []       []       []       []       []       
[C]      []       []       []       [C]      []       []       []       []       []       
[B, C, S][B, C]   [B]      [B]      [B]      [B]      []       []       []       []       
[B, S, C][B, C, S][C]      [C]      [C]      [C]      [B]      []       []       []       
[B, C, S][B, C, S][B]      [B]      [B]      [B]      [S]      [C]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B]      [B]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [S]      [C]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C, S][]    []    []    []    []    []    []    []    []    
[]    [B, C][C]   [C]   []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
C[{ C-->a }, { C-->b }]
S[{ S-->BB }, { S-->SC }]

}
word='bbaaabbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[] [B][C][] [] [] [] [] [] [] 
[S][] [B][C][] [] [] [] [] [] 
[S][S][] [B][C][] [] [] [] [] 
[S][S][S][] [B][C][] [] [] [] 
[S][S][S][S][] [B][C][] [] [] 
[S][S][S][S][S][] [B][C][] [] 
[S][S][S][S][S][S][] [B][C][] 
[S][S][S][S][S][S][S][] [B][C]

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=21

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=21
		countRightCellCombinationsForced=21
		countRightCellCombinationsForced=21
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->b }]
S[{ S-->AC }, { S-->a }]
C[{ C-->SA }]

}
word='bbaaabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[]    [S]   [C]   [A]   [S]   []    []    []    []    []    
[S]   [C, S][C, S][A]   [C]   [A]   []    []    []    []    
[C, S][C, S][C]   []    []    []    [A]   []    []    []    
[A]   [A]   []    []    []    []    []    [S]   []    []    
[A]   [A]   [A]   []    []    []    [S]   [C]   [A]   []    
[C, S][C, S][C]   []    []    []    [A]   []    []    [S]   

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [C, S][C, S][]    []    []    []    []    []    []    
[C, S][C, S][]    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
		countRightCellCombinationsForced=13
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->b }]
C[{ C-->AS }, { C-->SB }, { C-->CC }]
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->BS }]

}
word='bbaaabbaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [C]      [B]      []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [S]      [S]      [S]      [S]      []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      [C]      [C]      [B]      []       
[A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [S]      [S]      [S]      [S]      [S]      

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [C][C][] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->CS }, { B-->SC }]
S[{ S-->CC }, { S-->BS }]
C[{ C-->BB }, { C-->SS }, { C-->b }]

}
word='abbababaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[B, C][B]   [S]   [C]   [B]   [S]   [S]   [C]   [B]   []    
[C, S][C]   [B]   [S]   [S]   [B, C][B]   [S]   []    [C]   

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    [B]   [S]   [S]   [B, C][B]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }, { A-->CB }]
B[{ B-->b }, { B-->BB }]
S[{ S-->AC }, { S-->AA }]
C[{ C-->BS }]

}
word='abbababaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[S]   [C]   [C]   [S]   [C]   [S]   [C]   [S]   [A]   []    
[A, S][A, C][A, C][A, S][A, C][A, S][A]   [A]   []    [B]   

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A, S][A, C][A, C][A, S][A, C][A, S][A]   []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=13

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=13
		countRightCellCombinationsForced=13
		countRightCellCombinationsForced=13
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->SS }]
S[{ S-->CB }, { S-->CS }, { S-->BS }]
C[{ C-->SB }, { C-->a }, { C-->CC }]

}
word='abbababaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[C]      []       [B]      []       []       []       []       []       []       []       
[C]      []       [B]      [C]      []       []       []       []       []       []       
[B, S]   [S]      [S]      [S]      [B]      []       []       []       []       []       
[B, S]   [S]      [S]      [S]      [B]      [C]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][S]      [S]      [B]      []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][S]      [S]      [B]      [C]      []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][S]      [S]      [B]      [C]      [C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][S]      [S]      [S]      [B]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B]   []    []    []    []    []    []    []    []    []    
[]    [S]   [S]   []    []    []    []    []    []    []    
[]    [S]   [S]   [S, C][]    []    []    []    []    []    
[]    []    []    [C]   [S]   []    []    []    []    []    
[]    []    []    [C]   [S]   [S]   []    []    []    []    
[]    []    []    []    [S]   [S, C][]    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
		countRightCellCombinationsForced=15
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->CB }]
B[{ B-->SS }, { B-->SC }]
C[{ C-->AS }, { C-->SA }]
S[{ S-->a }, { S-->b }, { S-->BC }]

}
word='abbababaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[A]      []       [B]      [S]      []       []       []       []       []       []       
[C]      [A]      []       [B]      [S]      []       []       []       []       []       
[B]      [C]      [A]      []       [B]      [S]      []       []       []       []       
[A, S]   [B]      [C]      [A]      []       [B]      [S]      []       []       []       
[A, B, C][A, S]   [B]      [C]      [A]      []       [B]      [S]      []       []       
[B, C]   [A, B, C][A, S]   [B]      [C]      [A]      []       [B]      [S]      []       
[A, B, S][B, C]   [A, B, C][A, S]   [B]      [C]      [A]      []       [B]      [S]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[S]   [B]   [C]   []    []    []    []    []    []    []    
[A]   [S]   [B]   [C]   []    []    []    []    []    []    
[B, C][A]   [S]   [B]   [C]   []    []    []    []    []    
[B]   [B, C][A]   [S]   [B]   [C]   []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=23

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=23
		countRightCellCombinationsForced=23
		countRightCellCombinationsForced=23
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BS }, { A-->SB }]
B[{ B-->a }]
S[{ S-->AS }, { S-->BA }, { S-->BB }]
C[{ C-->AC }, { C-->SS }]

}
word='abbababaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[A, C]   [S]      [S]      [S]      [A]      []       []       []       []       []       
[S]      [A]      [A]      [A]      []       [B]      []       []       []       []       
[S]      [C]      [C]      [A, C]   [S]      [S]      [A]      []       []       []       
[A, C]   [S]      [S]      [S]      [A]      [A]      []       [B]      []       []       
[A, C, S][A, S]   [A, S]   [A, S]   [C]      [A, C]   [S]      [S]      [B]      []       
[S]      [C]      [C]      [A, C]   [S]      [S]      []       [A]      [S]      [A]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[S]   [A]   [A]   []    []    []    []    []    []    []    
[S]   []    []    [A, C][]    []    []    []    []    []    
[A]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[A, C][A, S][A, S][A, S][]    [A, C][]    []    []    []    
[S]   []    []    [A]   [S]   []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
		countRightCellCombinationsForced=24
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->CS }, { S-->BC }]
C[{ C-->b }]

}
word='bbababaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[S][S][S][C][] [] [] [] [] [] 
[B][B][B][] [B][] [] [] [] [] 
[S][S][S][S][S][C][] [] [] [] 
[B][B][B][B][B][] [B][] [] [] 
[B][B][B][B][B][] [B][B][] [] 
[B][B][B][B][B][] [B][B][B][] 
[S][S][S][S][S][S][S][S][S][C]

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[S][S][S][S][S][] [S][] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=9

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
		countRightCellCombinationsForced=9
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->CA }]
C[{ C-->AS }, { C-->SB }, { C-->CB }]
S[{ S-->AA }, { S-->BB }, { S-->BC }]

}
word='bbababaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[C]      [S]      [A]      []       []       []       []       []       []       []       
[B]      [C]      [S]      [A]      []       []       []       []       []       []       
[]       [B]      [C]      [S]      [A]      []       []       []       []       []       
[C]      []       [B]      [C]      [S]      [A]      []       []       []       []       
[B, C, S][C]      []       [B]      [C]      [S]      [A]      []       []       []       
[B, S, C][B, C, S][C]      []       [B]      [C]      [S]      [A]      []       []       
[B, C]   [B, S, C][B, C, S][C]      []       [B]      [C]      [S]      [A]      []       
[B, C, S][B, C]   [B, C, S][B, C, S][C]      []       [B]      [C]      [S]      [A]      

markedRightCellCombinationForced=setV
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[B, C, S][]       []       [B]      []       []       []       []       []       []       
[B]      [B, C, S][]       []       [B]      []       []       []       []       []       
[B]      [B]      [B, C, S][]       []       [B]      []       []       []       []       
[B]      [B]      [B]      [B, C, S][]       []       [B]      []       []       []       

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
		countRightCellCombinationsForced=25
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AA }]
B[{ B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->BS }]
C[{ C-->CS }, { C-->b }]

}
word='bbababaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A, B]   [B]      [B]      []       []       []       []       []       []       []       
[S]      []       []       [C]      []       []       []       []       []       []       
[A]      [A]      [A]      [B]      [B]      []       []       []       []       []       
[B, S, C][S, C]   [S]      []       []       [C]      []       []       []       []       
[A, B]   [B]      []       [A]      [A]      [B]      [B]      []       []       []       
[A]      [A]      [A]      []       []       [A]      [A]      [B]      []       []       
[A]      []       []       [A]      [A]      []       []       [A]      [B]      []       
[B, S, C][S, C]   [S]      [C, S]   [S]      [C, S]   [S]      [S]      []       [C]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   []    []    []    []    []    []    []    []    []    
[B, C][S, C][]    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    [C, S][]    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=10

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=10
		countRightCellCombinationsForced=10
		countRightCellCombinationsForced=10
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SA }]
S[{ S-->AA }, { S-->b }]

}
word='bbababaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A, S][A]   [A]   []    []    []    []    []    []    []    
[A]   []    []    [S]   []    []    []    []    []    []    
[A, S][A, S][S]   [A]   [A]   []    []    []    []    []    
[A, S][A]   [A]   []    []    [S]   []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [A]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    [S]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[A][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [A][A][] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 

isValid=true
isWordProducible=true
maxVarsPerCellSetV=2
countRightCellCombinationsForced=5

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=5
		countRightCellCombinationsForced=5
		countRightCellCombinationsForced=5
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->SB }, { A-->BA }]
B[{ B-->SA }, { B-->a }]
S[{ S-->AS }, { S-->SS }, { S-->b }]
C[{ C-->AB }, { C-->BC }]

}
word='bbababaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, B]   [A]      [B]      []       []       []       []       []       []       []       
[S]      [S]      []       [S]      []       []       []       []       []       []       
[A, B]   [A, B]   [A]      [A]      [B]      []       []       []       []       []       
[S]      [S]      [S]      [S]      []       [S]      []       []       []       []       
[A, B, C][A, B, C][A]      [A, B]   [A]      [A]      [B]      []       []       []       
[A, B, C][A, B, C][A, C]   [A, C]   [C]      [C]      []       [B]      []       []       
[A, B, C][A, C]   [C]      [C]      []       []       []       []       [B]      []       
[S]      [S]      []       []       []       []       []       []       []       [S]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   [A, C][]    [A]   []    []    []    []    []    []    
[B]   [B]   [A, C][A]   [C]   []    []    []    []    []    
[B]   [A]   [C]   []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    

isValid=true
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=14
		countRightCellCombinationsForced=14
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CC }, { A-->AA }, { A-->AS }]
B[{ B-->BS }, { B-->SA }, { B-->a }, { B-->SS }]
C[{ C-->SB }]
S[{ S-->b }, { S-->BC }]

}
word='bbaababbbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[A]         [C]         [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[]          []          []          [B]         [S]         []          []          []          []          []          
[A]         [C]         [B]         [S]         [C]         [B]         []          []          []          []          
[A]         [C]         [B]         [B, S]      [C]         [B]         [S]         []          []          []          
[A, B, C]   [A, B, C]   [B, S]      [B, S, C]   [C]         [B]         [B]         [S]         []          []          
[A, B, C]   [A, B, C]   [B, S]      [A, B, S, C][A, B, C]   [B, S]      [B, C]      [B]         [S]         []          
[A, B, C, S][A, B, C]   [B, S, C]   [A, B, S, C][A, B, C]   [B, S]      [A, B, C]   [B, C]      [B]         [S]         

markedRightCellCombinationForced=setV
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[A]      [C]      []       [B, S]   []       []       []       []       []       []       
[B, C]   [A, B, C][]       [B, C]   [C]      []       []       []       []       []       
[B, C]   [C]      []       []       [A, B, C][B]      []       []       []       []       
[B, C]   [C]      []       []       [C]      []       [B, C]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=25

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=25
		countRightCellCombinationsForced=25
		countRightCellCombinationsForced=25
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->AC }, { B-->SC }]
S[{ S-->BA }, { S-->BB }, { S-->SS }, { S-->BS }]
C[{ C-->CS }, { C-->AA }]

}
word='bbaababbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[A, S]      [S]         [A]         []          []          []          []          []          []          []          
[A, B, C, S][A]         [C]         [A]         []          []          []          []          []          []          
[A, B, C, S][A]         [C]         [A]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      [A, C]      [S]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [S]         [A]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [S]         [A]         [S]         [B]         []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [S]         [A]         [S]         [S]         [B]         []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [S]         [A]         [S]         [S]         [S]         [B]         

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [C, S][B, C][]    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [C]   []    [S]   []    []    []    []    []    
[]    []    [C]   []    [S]   []    []    []    []    []    
[]    []    [C]   []    [S]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=16

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=16
		countRightCellCombinationsForced=16
		countRightCellCombinationsForced=16
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->SC }]
C[{ C-->b }]

}
word='bbaababbbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [S][B][] [] [] [] [] [] 
[] [] [S][] [C][] [] [] [] [] 
[] [] [B][] [] [B][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }]
B[{ B-->b }, { B-->AB }, { B-->a }]
C[{ C-->CB }, { C-->BB }]

}
word='bbaababbbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[A, C]   [C]      [B]      []       []       []       []       []       []       []       
[A, B, C][A, C]   [C]      [B]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [C]      [B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, C][]    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=3
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
		countRightCellCombinationsForced=14
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->SB }, { A-->BA }]
B[{ B-->a }]
C[{ C-->b }]
S[{ S-->BC }]

}
word='bbaababbbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [S][C][] [] [] [] [] 
[] [] [A][A][] [B][] [] [] [] 
[] [] [] [] [] [S][C][] [] [] 
[] [] [] [] [] [A][] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->SS }]
C[{ C-->CB }, { C-->a }]
S[{ S-->CC }, { S-->BC }]

}
word='bababbbbbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[S][C][B][] [] [] [] [] [] [] 
[B][S][S][C][] [] [] [] [] [] 
[B][S][S][C][B][] [] [] [] [] 
[B][S][S][C][] [B][] [] [] [] 
[B][S][S][C][] [] [B][] [] [] 
[B][S][S][C][] [] [] [B][] [] 
[B][S][S][C][] [] [] [] [B][] 
[B][S][S][C][] [] [] [] [] [B]

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
		countRightCellCombinationsForced=11
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->a }]

}
word='bababbbbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CB }]
B[{ B-->SA }, { B-->CC }, { B-->BB }]
S[{ S-->AC }, { S-->CA }, { S-->SS }, { S-->BC }]
C[{ C-->CS }, { C-->a }, { C-->b }]

}
word='bababbbbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[A, S]      [B]         [C]         []          []          []          []          []          []          []          
[B, S, C]   [A, S]      [B]         [C]         []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, S]      [B]         [C]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C, S]   [A, S]      [B]         [C]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][B, C, S]   [A, S]      [B]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [B]         [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [B]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [B]         [C]         

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=7

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
		countRightCellCombinationsForced=7
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }]
B[{ B-->b }]
C[{ C-->BA }, { C-->SB }]
S[{ S-->CC }, { S-->AB }]

}
word='bababbbbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[S]   []    [C]   [A]   []    []    []    []    []    []    
[C]   [A]   []    [S]   [B]   []    []    []    []    []    
[C]   [A, S][]    [C]   []    [B]   []    []    []    []    
[]    [C, S][]    []    []    []    [B]   []    []    []    
[]    [C]   []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
		countRightCellCombinationsForced=2
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }]
C[{ C-->b }]

}
word='bababbbbbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }]
C[{ C-->a }]
S[{ S-->CC }]

}
word='baababbaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [B][B][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }, { B-->a }]
S[{ S-->AA }]

}
word='baababbaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [B][A][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][A][] [] [] [] 
[] [] [] [] [B][S][A][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [B][A][] 
[] [] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->BC }]
B[{ B-->b }]
C[{ C-->AS }, { C-->BA }, { C-->CB }]
S[{ S-->CA }, { S-->a }, { S-->BB }, { S-->BS }]

}
word='baababbaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, C]   [A]      [S]      []       []       []       []       []       []       []       
[C]      []       []       [B]      []       []       []       []       []       []       
[A, C]   [C]      [A]      [S]      [S]      []       []       []       []       []       
[A, C]   [C]      []       []       []       [B]      []       []       []       []       
[A, S, C][C]      [C]      [A, C]   [A]      [S]      [B]      []       []       []       
[A, S, C][S]      [C]      [A, C]   [A, C]   [A, S]   [S]      [S]      []       []       
[A, S, C][]       [C]      [A, C]   [C]      []       []       []       [B]      []       
[A, C, S][A, C, S][A, S]   [A, S, C][C]      [A, C]   [A, C]   [A]      [S]      [S]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[S, C][C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   [C]   [A]   []    []    []    []    []    
[]    []    [C]   [C]   []    []    []    []    []    []    
[]    []    []    [S, C][C]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=15

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=15
		countRightCellCombinationsForced=15
		countRightCellCombinationsForced=15
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }]
S[{ S-->CC }, { S-->b }]

}
word='baababbaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->SC }, { B-->a }]
S[{ S-->CA }, { S-->AB }]
C[{ C-->CB }, { C-->BB }, { C-->AA }, { C-->BS }, { C-->BC }]

}
word='baababbaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[]          [C]         [B]         []          []          []          []          []          []          []          
[A, C]      [A, S]      [A]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, S, C]   [C, S]      [S]         [B]         []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, C, S]   [A, C]      [A]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         [C]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, C]      [S]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C, S]      [A, C]      [A]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C]      [A, C, S]   [C, S]      [S]         [B]         

markedRightCellCombinationForced=setV
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[]       []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       []       [B, C, S][]       []       []       []       []       []       
[]       []       []       []       [A, C]   []       []       []       []       []       
[]       []       []       [B, S]   [C, S]   []       []       []       []       []       
[]       []       []       []       [C]      [C]      [C, S]   []       []       []       

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=17

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=17
		countRightCellCombinationsForced=17
		countRightCellCombinationsForced=17
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CC }, { C-->b }]

}
word='bbaaabbabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [C][C][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [C][C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->SS }]
S[{ S-->b }]

}
word='bbaaabbabb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [C][S][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [C][S]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->BC }, { A-->CB }]
B[{ B-->AS }, { B-->a }]
C[{ C-->CA }, { C-->SB }, { C-->CS }, { C-->SS }, { C-->BS }]
S[{ S-->AA }]

}
word='bbaaabbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[C]      []       [B]      []       []       []       []       []       []       []       
[A]      []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[C]      []       []       [A]      [C]      [S]      [A]      []       []       []       
[A, S]   []       []       []       [A]      [C]      []       [B]      []       []       
[B, S]   [S]      [A]      [C]      [A, S]   [C]      []       []       [A]      []       
[B, S, C][B, S]   [A, S]   [C]      [A, B, S][A, C]   []       [C]      [S]      [A]      

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S]   []    []    []    [A, S][]    []    []    []    []    
[B, S][B, S][A, S][]    [B]   []    []    []    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=3
countRightCellCombinationsForced=11

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=11
		countRightCellCombinationsForced=11
		countRightCellCombinationsForced=11
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }]

}
word='bbaaabbabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->a }]
C[{ C-->CA }, { C-->BB }, { C-->CC }]

}
word='bbaaabbabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[A]   [C]   [B]   []    []    []    []    []    []    []    
[C]   [A]   [C]   [B]   []    []    []    []    []    []    
[A, C][C]   [A]   [C]   [B]   []    []    []    []    []    
[A, C][A, C][C]   [A]   [C]   [B]   []    []    []    []    
[A, C][A, C][A, C][C]   [A]   [C]   [B]   []    []    []    
[A, C][A, C][A, C][A, C][C]   [A]   [C]   [B]   []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [A]   [C]   [B]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   [A]   [C]   [B]   

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[A][A][A][C][] [] [] [] [] [] 
[A][A][A][A][C][] [] [] [] [] 
[A][A][A][A][A][C][] [] [] [] 
[A][A][A][A][A][A][C][] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=28

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=28
		countRightCellCombinationsForced=28
		countRightCellCombinationsForced=28
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
S[{ S-->a }]

}
word='bbaaabbaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [S]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BC }, { B-->AS }, { B-->CA }, { B-->CC }, { B-->SS }]
S[{ S-->AC }, { S-->SC }]
C[{ C-->AA }]

}
word='bbaaabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[B, S][C]   [A]   []    []    []    []    []    []    []    
[B]   [B, S][C]   [A]   []    []    []    []    []    []    
[B, S][B]   [B, S][C]   [A]   []    []    []    []    []    
[B]   [B, S][B]   [B, S][C]   [A]   []    []    []    []    
[B, S][B]   [B, S][B]   [B, S][C]   [A]   []    []    []    
[B]   [B, S][B]   [B, S][B]   [B, S][C]   [A]   []    []    
[B, S][B]   [B, S][B]   [B, S][B]   [B, S][C]   [A]   []    
[B]   [B, S][B]   [B, S][B]   [B, S][B]   [B, S][C]   [A]   

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[B, S][]    [B, S][]    []    []    []    []    []    []    
[]    [B, S][]    [B, S][]    []    []    []    []    []    
[B, S][]    [B, S][]    [B, S][]    []    []    []    []    
[]    [B, S][]    [B, S][]    [B, S][]    []    []    []    

isValid=false
isWordProducible=false
maxVarsPerCellSetV=2
countRightCellCombinationsForced=24

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=24
		countRightCellCombinationsForced=24
		countRightCellCombinationsForced=24
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]

}
word='bbaaabbaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }, { S-->CS }, { S-->SS }]
C[{ C-->CC }, { C-->SC }, { C-->b }]

}
word='bbaaabbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[C][C][C][C][C][C][C][C][C][] 
[S][S][S][S][S][S][S][S][S][S]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=true
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
C[{ C-->a }, { C-->BC }]

}
word='bbaaabbaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [C][C][C][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [C][C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->CA }, { A-->CB }]
B[{ B-->AB }, { B-->SA }]
C[{ C-->AS }, { C-->SC }, { C-->AA }, { C-->BS }, { C-->BC }]
S[{ S-->BB }, { S-->b }]

}
word='abbababaab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[A]         []          [S]         []          []          []          []          []          []          []          
[A, C]      []          [B]         [A]         []          []          []          []          []          []          
[A, C]      [C]         [C]         [C]         [S]         []          []          []          []          []          
[A, B, C]   [A, B]      [A, B, S]   [A, B]      [B]         [A]         []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [C]         [C]         [S]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [B]         [A]         []          []          
[A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [C]         [C]         [A]         []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         [C]         [S]         

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   [B, S][]    []    []    []    []    []    []    
[]    [A]   [A]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [B, S][]    []    []    []    []    
[]    []    []    []    [A]   [A]   []    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=14

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=14
		countRightCellCombinationsForced=14
		countRightCellCombinationsForced=14
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->CC }, { C-->b }]

}
word='abbababaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->BB }]

}
word='abbababaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->BB }, { C-->CC }]

}
word='abbababaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][B][] [] [] [] [] [] [] [] 
[] [C][B][] [] [] [] [] [] [] 
[C][] [C][B][] [] [] [] [] [] 
[] [C][] [C][B][] [] [] [] [] 
[C][] [C][] [C][B][] [] [] [] 
[] [C][] [C][] [C][B][] [] [] 
[C][] [C][] [C][] [C][B][] [] 
[] [C][] [C][] [C][] [C][B][] 
[C][] [C][] [C][] [C][] [C][B]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->a }]
C[{ C-->SC }, { C-->b }]

}
word='abbababaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [C][C][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [C][C][C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->BB }]
S[{ S-->SB }, { S-->b }, { S-->BS }]

}
word='bbababaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][B][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [S][S][B][] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 
[] [] [] [] [S][S][B][] [] [] 
[] [] [] [] [S][S][B][B][] [] 
[] [] [] [] [S][S][B][B][B][] 
[] [] [] [] [] [] [S][S][S][S]

markedRightCellCombinationForced=setV
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [] [] [] [] [] 

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=2

ResultSampleExamConstraints{
		isExamConstraints=true
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=2
		countRightCellCombinationsForced=2
		countRightCellCombinationsForced=2
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }]
S[{ S-->CS }, { S-->b }]

}
word='bbababaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [S][S][S][S]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->SS }]
C[{ C-->CA }, { C-->SB }]
S[{ S-->SA }, { S-->a }, { S-->AA }, { S-->CS }, { S-->SC }, { S-->AB }]

}
word='bbababaaab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          [A]         [S]         []          []          []          []          []          []          []          
[A]         [S]         [C]         [B]         []          []          []          []          []          []          
[A]         [A, B, S]   [S]         [A]         [S]         []          []          []          []          []          
[A, S]      [S, C]      [B, C]      [S]         [C]         [B]         []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S, C][A, B, S]   [S]         [A]         [S]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      []          [B]         [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, S, C]   [A, B, C]   [S]         [A, C]      [B]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, B, S]   [S]         [C]         [B]         

markedRightCellCombinationForced=setV
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[]    []    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[A]   []    [B]   [A, S][]    []    []    []    []    []    
[]    []    [B]   [A, B][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    [B]   [A]   [A, B][]    []    []    

isValid=false
isWordProducible=true
maxVarsPerCellSetV=4
countRightCellCombinationsForced=18

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=true
		isMaxSumOfProductionsCount=false
		isMaxSumOfVarsInPyramidCount=false
		countRightCellCombinationsForced=18
		countRightCellCombinationsForced=18
		countRightCellCombinationsForced=18
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=false
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=false
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }, { B-->BB }]
S[{ S-->b }]

}
word='bbababaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [B][S][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [B][] [B][S][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [B][S]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->a }]
C[{ C-->BA }, { C-->b }]
S[{ S-->BB }]

}
word='bbababaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [C][A][S][B][] [] 
[] [] [] [] [] [] [] [S][B][] 
[] [] [] [] [] [] [] [] [] [C]

markedRightCellCombinationForced=setV
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]
[][][][][][][][][][]

isValid=false
isWordProducible=false
maxVarsPerCellSetV=1
countRightCellCombinationsForced=0

ResultSampleExamConstraints{
		isExamConstraints=false
		isRightCellCombinationsForced=false
		isMaxSumOfProductionsCount=true
		isMaxSumOfVarsInPyramidCount=true
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
		countRightCellCombinationsForced=0
}
ResultSampleGrammarRestrictions{
		isGrammarRestrictions=true
		isSizeOfWordCount=true
		isMaxNumberOfVarsPerCellCount=true
}
}
