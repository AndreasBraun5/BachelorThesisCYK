

Result{
countGeneratedGrammars= 15000
countGeneratedGrammarsPerWord= 150
countDifferentWords= 100
totalTime= 28769ms
totalTime= 0min 28sec
generatorType= DICEROLLONLY
grammarGeneratorSettingsGrammarGeneratorSettingsDiceRoll{
minValueCompoundVariablesAreAddedTo=0
minValueTerminalsAreAddedTo=1
maxValueCompoundVariablesAreAddedTo=4
maxValueTerminalsAreAddedTo=4
favouritism=[1, 1, 1, 1]
grammarProperties=GrammarProperties: {
variables= [A, B, S, C]
variableStart= S
terminals= [a, b]
GrammarPropertiesGrammarRestrictions{
sizeOfWord=10
maxNumberOfVarsPerCell=2
}
GrammarPropertiesExamConstraints{
minRightCellCombinationsForced=1
maxSumOfProductions=10
maxSumOfVarsInPyramid=100

}
}
SuccessRates{
SUCCESSRATEOVERVIEW:
			-->	SUCCESSRATE=0.0
			-->	SUCCESSRATEPRODUCIBILITY=0.9821333333333333
			-->	SUCCESSRATEGRAMMARRESTRICTIONS=0.009466666666666667
			-->	SUCCESSRATEEXAMCONSTRAINTS=0.0

SUCCESSRATE=0.0
trueCount=0
falseCount=15000
SUCCESSRATEPRODUCIBILITY=0.9821333333333333
trueProducibilityCount=14732
falseProducibilityCount=268

SuccessRatesGrammarRestrictions{
trueGrammarRestrictionsCount=142
falseGrammarRestrictionsCount=14858
			-->	SUCCESSRATEGrammarRestrictions=0.009466666666666667
trueSizeOfWordCount=15000
falseSizeOfWordCount=0
			-->	SUCCESSRATESizeOfWord=1.0
trueMaxNumberOfVarsPerCellCount=142
falseMaxNumberOfVarsPerCellCount=14858
			-->	SUCCESSRATEMaxNumberOfVarsPerCell=0.009466666666666667
}

SuccessRatesExamConstraints{
trueExamConstraints=0
falseExamConstraints=15000
			-->	SUCCESSRATEExamConstraints=0.0
trueRightCellCombinationsForcedCount=4284
falseRightCellCombinationsForcedCount=10716
			-->	SUCCESSRATERightCellCombinationsForced=0.2856
trueMaxSumOfProductionsCount=0
falseMaxSumOfProductionsCount=15000
			-->	SUCCESSRATEMaxSumOfProductions=0.0
trueMaxSumOfVarsInPyramidCount=336
falseMaxSumOfVarsInPyramidCount=14664
			-->	SUCCESSRATEMaxSumOfVarsInPyramid=0.0224
}
}
}



RepresentativeResultSamples{

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->BS }, { B-->AS }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->BB }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->b }, { C-->BS }]

word='bbaababbbb'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->b }, { A-->AB }, { A-->CA }]
B[{ B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->AS }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->a }, { C-->CC }, { C-->BC }]

word='bbaababbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S]      [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->CS }, { A-->BC }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->CC }, { B-->SC }]
S[{ S-->SA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->AA }, { C-->CS }]

word='bbaababbbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    [S]   [S]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    [S]   [B, S][]    []    
[]    []    []    []    []    []    [S]   [S]   [B, S][]    
[]    []    []    []    []    []    [S]   [S]   [S]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->a }, { B-->AA }, { B-->CC }, { B-->CS }]
C[{ C-->CA }, { C-->CS }, { C-->b }, { C-->BS }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->AB }]

word='bbaababbbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->CB }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->AB }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->a }, { C-->BB }]

word='bbaababbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A]         [A]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A]         [A]         [A]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->CC }, { A-->CS }, { A-->AC }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->BA }, { B-->a }]
S[{ S-->AC }, { S-->SA }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->AB }]

word='baaaaaabbb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AC }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->AA }, { B-->SS }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->AB }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->CC }, { S-->CS }, { S-->AB }]

word='baaaaaabbb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AB }]

word='baaaaaabbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   []          [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][]          []          [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->BB }, { B-->CS }]
S[{ S-->SA }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->CB }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BS }]

word='baaaaaabbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[B, S]      [A]         []          []          []          []          []          []          []          []          
[B, S]      []          [A]         []          []          []          []          []          []          []          
[B, S]      []          []          [A]         []          []          []          []          []          []          
[B, S]      []          []          []          [A]         []          []          []          []          []          
[B, S]      []          []          []          []          [A]         []          []          []          []          
[B, S]      []          []          []          []          []          [A]         []          []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->BC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->AB }, { S-->BC }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->CC }, { C-->BC }]

word='baaaaaabbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->BC }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->a }, { C-->SS }, { C-->BC }]

word='aabbbbaaab'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][C]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][C]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->AA }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->SS }, { C-->CS }, { C-->BS }]
S[{ S-->SA }, { S-->SB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BC }]

word='aabbbbaaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[B]         [B]         [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[]          []          []          []          [B]         []          []          []          []          []          
[]          []          []          []          []          [B]         []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, S]      [A, B, C]   [A, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         [B]         [B]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BC }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->a }, { C-->BC }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]

word='aabbbbaaab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->CA }]
B[{ B-->BS }, { B-->AS }, { B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->b }, { C-->BC }]

word='aabbbbaaab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BC }]
B[{ B-->AB }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->BC }, { S-->BS }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->CC }]

word='aabbbbaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }]
B[{ B-->AB }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->b }]
C[{ C-->SA }, { C-->CA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }]

word='ababbbbbba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->AS }, { C-->BB }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->CC }, { S-->SC }, { S-->BC }, { S-->BS }]

word='ababbbbbba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, C, S]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->BC }, { A-->SA }]
B[{ B-->b }, { B-->SA }, { B-->CA }, { B-->BB }, { B-->CC }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AA }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]

word='ababbbbbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->AA }, { B-->BB }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->BB }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->BB }, { C-->b }, { C-->BC }, { C-->BS }]

word='ababbbbbba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->BC }, { A-->CA }, { A-->BA }]
B[{ B-->BC }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->AA }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->AC }, { S-->SB }, { S-->SS }, { S-->SC }, { S-->AB }]

word='ababbbbbba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AS }, { A-->CA }]
B[{ B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SS }, { B-->CC }]
S[{ S-->AC }, { S-->SB }, { S-->a }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->a }, { C-->CC }]

word='babaabbabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->AB }, { B-->AC }, { B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->a }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->AB }, { C-->BC }]

word='babaabbabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->a }, { S-->SS }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->BA }, { C-->SS }, { C-->b }, { C-->BS }]

word='babaabbabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->b }, { A-->AB }, { A-->CA }, { A-->SB }]
B[{ B-->AB }, { B-->BS }, { B-->AC }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='babaabbabb'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->CA }, { C-->CB }, { C-->BB }, { C-->b }]

word='babaabbabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[A, S, C]   [A]         [A, B, S, C][]          []          []          []          []          []          []          
[S]         [S]         [S]         [S]         []          []          []          []          []          []          
[]          []          []          []          [S]         []          []          []          []          []          
[A, S, C]   [A]         [A, S, C]   [A]         [A]         [A, B, S, C][]          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S, C][A, B, S]   [A, B, S]   [A, B, S, C][A, B, S, C][]          []          []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         []          []          
[A, B, C, S][A, B, S]   [A, B, S, C][A, B, S]   [A, B, S]   [A, B, S, C][A, S, C]   [A]         [A, B, S, C][]          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->BA }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BC }, { S-->AC }, { S-->SA }, { S-->BS }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BC }]

word='abbabaaaba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->BC }, { B-->BS }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->AS }, { S-->BA }, { S-->a }, { S-->CS }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CS }, { C-->b }, { C-->AB }]

word='abbabaaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, S, C][A]         [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->BC }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SC }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }]

word='abbabaaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->SA }, { B-->CA }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->b }]
C[{ C-->SB }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->AB }, { C-->BC }]

word='abbabaaaba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->SA }, { S-->a }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->SA }, { C-->SB }, { C-->CC }, { C-->AB }, { C-->BC }, { C-->BS }]

word='abbabaaaba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, C]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BS }]

word='baaaabbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->a }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->CS }]
C[{ C-->a }, { C-->AA }, { C-->SC }]

word='baaaabbaba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B]      [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B]      [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->BC }, { B-->CA }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->CA }, { S-->CC }]

word='baaaabbaba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->AB }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->BB }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->AB }]

word='baaaabbaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->AB }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='baaaabbaba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->SA }]
B[{ B-->AB }, { B-->BC }, { B-->CA }, { B-->BA }, { B-->a }, { B-->CC }]
C[{ C-->AS }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->SS }, { S-->CC }, { S-->AB }, { S-->BS }]

word='abaaabbaba'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->CB }, { B-->a }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }]
C[{ C-->AA }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]

word='abaaabbaba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, S, C]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->SB }]
B[{ B-->BC }, { B-->AS }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->SC }, { C-->CS }, { C-->BS }, { C-->AS }, { C-->a }, { C-->BB }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BC }]

word='abaaabbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][C]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][]          [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->AS }, { B-->BA }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->CC }, { S-->CS }, { S-->BC }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->CC }, { C-->b }, { C-->BS }]

word='abaaabbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][C]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }]

word='abaaabbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AC }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->a }, { B-->BB }, { B-->CC }, { B-->CS }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->AB }, { S-->BS }]

word='bbabaaabaa'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->a }, { B-->CC }]
S[{ S-->SA }, { S-->a }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->SB }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->BC }]

word='bbabaaabaa'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->BA }]
B[{ B-->AB }, { B-->BC }, { B-->a }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->SS }, { C-->AB }]

word='bbabaaabaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->BB }, { B-->SS }]
C[{ C-->AC }, { C-->AS }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->AA }, { S-->SS }, { S-->b }]

word='bbabaaabaa'
setV=setV
[B, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->b }, { A-->BC }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->AA }, { B-->BB }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='bbabaaabaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AC }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->a }, { B-->CS }]
S[{ S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->CA }, { C-->CB }, { C-->a }, { C-->CC }, { C-->CS }, { C-->BC }]

word='bbabbbbaab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, S]      [A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [A, S]      [A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A, S]      [A, S]      [A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AS }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->SC }, { S-->BS }]

word='bbabbbbaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, C, S]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C, S]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->CS }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->AS }, { B-->SA }, { B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->b }]

word='bbabbbbaab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->b }, { A-->BS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }]
C[{ C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BC }]

word='bbabbbbaab'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AC }, { A-->SB }]
B[{ B-->AC }, { B-->CA }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->CA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CS }, { S-->b }]
C[{ C-->AA }, { C-->CC }, { C-->CS }]

word='bbabbbbaab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->BA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->BS }]
C[{ C-->CA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }]

word='bbbaaabbbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->SB }, { B-->a }, { B-->BB }, { B-->CC }]
C[{ C-->AS }, { C-->a }, { C-->AA }, { C-->b }]
S[{ S-->AC }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }, { S-->AB }]

word='bbbaaabbbb'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SB }, { C-->BB }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbbaaabbbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->AC }, { A-->CA }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->AB }, { S-->BS }]
C[{ C-->BA }, { C-->a }, { C-->BB }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BS }]

word='bbbaaabbbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S]      [C]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BC }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->CC }, { C-->BC }, { C-->BS }]

word='bbbaaabbbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[B, S, C]   [A]         [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A]         [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->b }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AS }, { B-->SB }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }]

word='babbabaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S]   [A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->SA }]
B[{ B-->b }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->CC }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->BC }]
S[{ S-->CA }, { S-->BA }, { S-->AA }, { S-->BB }, { S-->b }, { S-->BC }]

word='babbabaaaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[C, S]      [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->BA }, { B-->CB }, { B-->SC }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->SC }, { C-->b }]
S[{ S-->CA }, { S-->CB }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]

word='babbabaaaa'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SB }]
B[{ B-->AS }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->SB }, { C-->SC }, { C-->BS }]

word='babbabaaaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->CS }, { S-->BC }]
C[{ C-->AC }, { C-->CA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CS }]

word='babbabaaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [A, B, S, C][]          []          []          []          []          []          []          []          
[B, S]      [B, C]      [B]         []          []          []          []          []          []          []          
[B, S]      [B, C]      []          [B]         []          []          []          []          []          []          
[B, C, S]   [A, B, S, C][]          [S]         [A, B, S, C][]          []          []          []          []          
[B, C, S]   [A, B, S, C][]          [B, S]      [B, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][S]         [B, S, C]   [A, B, S, C][S]         [A, B, S, C][]          []          []          
[A, B, C, S][A, B, C, S][B, S, C]   [A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->AS }, { S-->BA }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BS }]

word='aabbbbaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->SB }]
B[{ B-->AB }, { B-->AC }, { B-->SA }, { B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->SS }]
C[{ C-->AS }, { C-->SB }, { C-->BS }]

word='aabbbbaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[A, C]      [S]         [A]         []          []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, S]      [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      []          [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [S]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, B]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->BS }, { A-->SA }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->SA }, { C-->BA }, { C-->SB }, { C-->CS }, { C-->AB }]
S[{ S-->AS }, { S-->AA }, { S-->SC }, { S-->CS }, { S-->BC }, { S-->BS }]

word='aabbbbaaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, S]      [A]         []          []          []          []          []          []          []          []          
[C]         [C]         [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[]          []          []          []          [B]         []          []          []          []          []          
[]          []          []          []          []          [B]         []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][A, B, S]   [S]         [B, C]      [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [C]         [C]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         [B, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->SA }, { B-->AA }, { B-->SS }, { B-->CS }]
C[{ C-->SA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->AS }, { S-->BB }, { S-->CC }, { S-->CS }]

word='aabbbbaaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S]      [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, S]      [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BS }, { A-->AC }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->AB }, { C-->BC }]

word='aabbbbaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, S]      [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->a }, { C-->SS }, { C-->SC }]

word='abaaaaabbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->SA }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->SA }, { C-->SC }, { C-->CS }, { C-->BS }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->b }, { C-->BC }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]

word='abaaaaabbb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->SB }]
B[{ B-->BC }, { B-->AC }, { B-->AA }, { B-->BB }]
S[{ S-->AC }, { S-->SB }, { S-->a }, { S-->CC }, { S-->BS }]
C[{ C-->BA }, { C-->SB }, { C-->b }, { C-->AB }, { C-->BS }]

word='abaaaaabbb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->BA }, { B-->CB }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->SS }, { C-->CS }, { C-->AB }, { C-->BC }]

word='abaaaaabbb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->AC }, { A-->SB }]
B[{ B-->AC }, { B-->AS }, { B-->CC }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->BS }]
S[{ S-->AS }, { S-->SB }, { S-->CC }, { S-->SC }]

word='abaaaaabbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[B, C, S]   [A, B, C]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          []          
[]          []          []          []          []          []          []          [A]         []          []          
[]          []          []          []          []          []          []          []          [A]         []          
[]          []          []          []          []          []          []          []          []          [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }, { A-->AS }]
B[{ B-->BC }, { B-->AS }, { B-->a }, { B-->AA }, { B-->SS }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->b }, { C-->BC }]

word='ababbbbaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][C]         []          []          []          []          []          []          []          []          
[A, B, S, C][]          [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][]          [A, B, S, C][C]         []          []          []          []          []          []          
[A, B, S, C][]          [A, B, S, C][]          [C]         []          []          []          []          []          
[A, B, S, C][]          [A, B, S, C][]          []          [C]         []          []          []          []          
[A, B, S, C][]          [A, B, S, C][]          []          []          [C]         []          []          []          
[A, B, S, C][]          [A, B, S, C][]          []          []          []          [A, B, S, C][]          []          
[A, B, S, C][]          [A, B, S, C][]          []          []          []          [A, B, S, C][A, B, S, C][]          
[A, B, C, S][]          [A, B, S, C][]          []          []          []          [A, B, S, C][A, B, S, C][C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->AC }, { A-->SA }, { A-->SB }]
B[{ B-->BC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->a }, { S-->CC }, { S-->SC }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BC }]

word='ababbbbaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][C]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AC }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }]

word='ababbbbaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }, { A-->CA }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->BA }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->BB }, { S-->b }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->BB }, { C-->CC }, { C-->BS }]

word='ababbbbaab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][S]         [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         []          [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BS }]

word='ababbbbaab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->SB }, { B-->a }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->a }, { S-->b }]
C[{ C-->SA }, { C-->a }, { C-->BS }]

word='babbbbaaab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CS }, { S-->BC }, { S-->BS }]
C[{ C-->SS }, { C-->SC }, { C-->BS }]

word='babbbbaaab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->CB }, { B-->a }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->CC }, { S-->SC }, { S-->CS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->SC }, { C-->BC }, { C-->BS }]

word='babbbbaaab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B]      [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BA }, { B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->BA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BS }]

word='babbbbaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BC }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->BB }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->CA }, { S-->SC }, { S-->b }, { S-->BC }]

word='babbbbaaab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->BS }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->SC }, { C-->BC }]

word='aaaabaabbb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BS }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }]
C[{ C-->AS }, { C-->a }, { C-->BB }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->b }]

word='aaaabaabbb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->a }]
S[{ S-->AC }, { S-->a }, { S-->BB }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->CS }]

word='aaaabaabbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->SS }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->CA }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->AB }]

word='aaaabaabbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BA }, { B-->CB }, { B-->SB }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }]
C[{ C-->AS }, { C-->SA }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->BS }]

word='aaaabaabbb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S]      []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S, C]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BC }, { A-->AC }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->a }, { B-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->AA }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='baabbbbaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SB }]
B[{ B-->BC }, { B-->SA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CC }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->b }, { C-->BC }]
S[{ S-->AS }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->CC }, { S-->AB }]

word='baabbbbaaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->CA }]
B[{ B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->AB }, { S-->BS }]
C[{ C-->CB }, { C-->SB }, { C-->b }, { C-->AB }, { C-->BS }]

word='baabbbbaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A]         [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->a }, { S-->AA }, { S-->SC }, { S-->CS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BS }]

word='baabbbbaaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->SB }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='baabbbbaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][B]         [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [B]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->CB }]
B[{ B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->CS }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->CC }, { C-->b }, { C-->BC }]

word='aaaaaaabab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->CS }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->AB }]

word='aaaaaaabab'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->SA }, { A-->CA }]
B[{ B-->BC }, { B-->AS }, { B-->SB }, { B-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->SC }, { C-->CS }]

word='aaaaaaabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          []          [A]         []          []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[]          []          []          []          [A]         []          []          []          []          []          
[]          []          []          []          []          [A]         []          []          []          []          
[]          []          []          []          []          []          [A]         []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->a }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->AA }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BS }]

word='aaaaaaabab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->BS }, { A-->AC }, { A-->SA }]
B[{ B-->AB }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AS }, { S-->a }, { S-->SS }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->AB }, { C-->BC }]

word='aaaaaaabab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->BA }, { A-->SB }]
B[{ B-->AB }, { B-->AS }, { B-->CB }, { B-->SB }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->CA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }]
C[{ C-->SA }, { C-->CB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BC }]

word='baaabbbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [S]         [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->CA }]
B[{ B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CB }, { B-->a }, { B-->SS }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->BC }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->CC }, { C-->BS }]

word='baaabbbaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, S, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S]      []          [A]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S]      []          []          [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, S]      [A, S]      [A, S]      [A, B, S]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->SA }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->SC }]

word='baaabbbaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->BB }, { C-->b }, { C-->BC }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->SC }, { S-->CS }, { S-->b }]

word='baaabbbaba'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AB }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->BA }, { B-->CB }, { B-->BB }, { B-->SS }, { B-->SC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->b }]
S[{ S-->SB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]

word='baaabbbaba'
setV=setV
[A, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BS }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->a }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->b }]

word='babaaaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->CB }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BC }]
S[{ S-->SA }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]

word='babaaaaabb'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->CA }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->CA }, { S-->SB }, { S-->a }, { S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->AA }, { C-->BB }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BS }]

word='babaaaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->CS }, { A-->AB }, { A-->SA }]
B[{ B-->SA }, { B-->a }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->SB }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->SB }, { C-->BB }, { C-->BC }]

word='babaaaaabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S, C]      [B]         []          []          []          []          []          []          []          []          
[A, B]      [S]         [S]         []          []          []          []          []          []          []          
[A, B, C]   [S, C]      [S, C]      [B]         []          []          []          []          []          []          
[A, B, C, S][B, S, C]   [B, S, C]   [C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][C]         [C]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [C]         [C]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [C]         [C]         [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->SA }, { B-->a }, { B-->CS }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->BC }, { S-->BS }]

word='babaaaaabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->b }, { S-->AB }, { S-->AC }, { S-->SB }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->b }, { C-->AB }, { C-->BS }]

word='bbbbabbbab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->b }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbbbabbbab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->a }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->BS }]

word='bbbbabbbab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CS }, { A-->b }, { A-->BC }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->BC }, { B-->AC }, { B-->SB }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->a }, { C-->SS }, { C-->CS }, { C-->AB }]

word='bbbbabbbab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->CS }, { S-->BC }]
C[{ C-->CA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->BS }]

word='bbbbabbbab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B]      [A, B]      []          []          []          []          []          []          []          []          
[A, B]      [A, B]      [A, B]      []          []          []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BS }]

word='bbabbaaaba'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }]
C[{ C-->AS }, { C-->SA }, { C-->SB }, { C-->a }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->CB }, { S-->SB }, { S-->BB }, { S-->CC }, { S-->AB }]

word='bbabbaaaba'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->BC }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->BB }, { B-->SC }]
C[{ C-->AS }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->b }, { C-->AB }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->SS }, { S-->AB }]

word='bbabbaaaba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, C, S]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [S]         []          [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [S]         []          []          [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->SS }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->a }, { C-->AA }, { C-->BB }]

word='bbabbaaaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->AS }, { A-->SB }]
B[{ B-->BS }, { B-->CA }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='bbabbaaaba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->BA }, { B-->a }, { B-->CS }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->BA }, { S-->CB }, { S-->SC }, { S-->BC }]

word='abbaaabbbb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [C]         []          []          []          []          []          []          []          []          
[A, C, S]   []          [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [C, S]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->BC }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->a }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->a }, { C-->CC }, { C-->b }, { C-->AB }]

word='abbaaabbbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, S, C]   [C]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, C]      [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, C]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, C]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, C]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->BC }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]

word='abbaaabbbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='abbaaabbbb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->SA }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->SC }, { C-->BC }, { C-->BS }]

word='abbaaabbbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->CA }]
B[{ B-->AS }, { B-->SA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->BC }]

word='aaabaabbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->BC }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->CA }, { B-->a }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->BS }]

word='aaabaabbab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->b }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BA }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->AB }, { S-->BC }, { S-->SA }, { S-->SB }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->SC }, { C-->CS }, { C-->b }]

word='aaabaabbab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[S, C]      [S, C]      [A, S, C]   [A, B, C]   []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [A, S, C]   [A, B, C]   []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->b }, { A-->SA }]
B[{ B-->AB }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CS }, { C-->b }]

word='aaabaabbab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->AS }, { S-->SB }, { S-->a }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='aaabaabbab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->CA }]
B[{ B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->AS }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->AB }, { C-->BS }]

word='aaabbabbba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A]         [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->b }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->BA }, { C-->SB }, { C-->a }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='aaabbabbba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->BC }]
C[{ C-->AC }, { C-->SB }, { C-->BC }]

word='aaabbabbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[A, C]      [B]         [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [B]         []          [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [B]         []          [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->b }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->AC }, { B-->AS }, { B-->BA }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->SB }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->AB }]
C[{ C-->AC }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->BS }]

word='aaabbabbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, S]      [A]         []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S]      [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->BB }, { C-->CC }, { C-->b }, { C-->BS }]

word='aaabbabbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[B, S]      [B, S]      [A, B, S]   [A, B, S, C][]          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][]          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->a }]
S[{ S-->AS }, { S-->CA }, { S-->a }, { S-->b }]
C[{ C-->AA }, { C-->SC }, { C-->CS }, { C-->BC }]

word='aaaaabaaab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [B, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [A]         [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CA }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->SS }, { C-->CS }, { C-->AB }, { C-->BC }]

word='aaaaabaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->AB }, { A-->BS }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->SB }, { S-->AA }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->SB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BC }]

word='aaaaabaaab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B]      [B]         []          []          []          []          []          []          []          []          
[A, B, S]   [A, B]      [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B]      [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->AB }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->b }]
C[{ C-->BA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SS }]

word='aaaaabaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BS }]

word='aaaaabaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AB }]
B[{ B-->b }, { B-->AB }, { B-->a }, { B-->SS }]
S[{ S-->AC }, { S-->a }, { S-->AB }]
C[{ C-->a }]

word='baabbbabba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [A, B, S, C][]          []          []          []          []          []          []          []          
[]          [A, B, S]   [A, B, S, C][]          []          []          []          []          []          []          
[]          [A, B, S]   [A, B, S]   [B]         []          []          []          []          []          []          
[]          [A, B, S]   [A, B, S]   []          [B]         []          []          []          []          []          
[]          [A, B, S]   [A, B, S]   []          []          [B]         []          []          []          []          
[]          [A, B, S]   [A, B, S]   []          []          []          [A, B, S, C][]          []          []          
[]          [A, B, S]   [A, B, S]   []          []          []          [A, B, S]   [B]         []          []          
[]          [A, B, S]   [A, B, S]   []          []          []          [A, B, S]   []          [B]         []          
[]          [A, B, S]   [A, B, S]   []          []          []          [A, B, S]   []          []          [A, B, S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AB }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->CA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }]

word='baabbbabba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->AB }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->BC }, { B-->AC }, { B-->CB }, { B-->CC }]
S[{ S-->AC }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SC }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }]

word='baabbbabba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->b }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->b }, { C-->BC }]
S[{ S-->AC }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }, { S-->BS }]

word='baabbbabba'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->a }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->CS }, { C-->b }]

word='baabbbabba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SC }, { A-->BS }, { A-->CA }, { A-->CB }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->CS }]
C[{ C-->SA }, { C-->CB }, { C-->AA }, { C-->SC }, { C-->b }]

word='aabbabaaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      [C]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         []          [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [B, S]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->SC }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->BA }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BC }]

word='aabbabaaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B]      [A]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->AB }, { B-->BS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SC }, { B-->CS }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->CC }, { S-->b }, { S-->AB }]

word='aabbabaaba'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->CS }]
S[{ S-->CB }, { S-->a }, { S-->BB }, { S-->AB }, { S-->BS }]
C[{ C-->CA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->BC }]

word='aabbabaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->BC }, { S-->BS }]
C[{ C-->SA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }]

word='aabbabaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->BC }, { A-->AC }, { A-->CA }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->AS }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->AA }, { C-->CS }, { C-->BC }, { C-->BS }]

word='aabbabaabb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [B, S]      []          []          []          []          []          []          []          []          
[B]         [B]         [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [S, C]      [B, S]      []          []          []          []          []          
[B]         [B]         [B]         [B]         [B]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S, C]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      []          []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         []          
[]          []          []          []          []          []          []          []          []          [B]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->SC }, { B-->CS }]
C[{ C-->a }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]

word='aabbabaabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->AS }, { B-->CA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->AS }, { C-->SA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->CA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BS }]

word='aabbabaabb'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->BB }]
C[{ C-->AS }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CS }, { C-->AB }, { C-->BC }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->BS }]

word='aabbabaabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AB }, { A-->BS }, { A-->BA }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->BB }]
S[{ S-->CB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->CB }, { C-->a }, { C-->SC }, { C-->b }]

word='aabbabaabb'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AS }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->CC }]
C[{ C-->SB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->AA }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]

word='bbbbbbbbaa'
setV=setV
[B, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AS }, { B-->CA }, { B-->CS }]
S[{ S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->CA }, { C-->SB }, { C-->SS }, { C-->CC }, { C-->b }]

word='bbbbbbbbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->BA }, { C-->CS }]

word='bbbbbbbbaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[B, S]      [B, S]      []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->BA }, { C-->a }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }]

word='bbbbbbbbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->BA }, { B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->SB }, { C-->SC }, { C-->b }, { C-->AB }]

word='bbbbbbbbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->b }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->AS }, { S-->a }, { S-->AA }, { S-->CS }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->BB }, { C-->b }, { C-->BC }]

word='bbaaabbaab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->SB }, { C-->a }, { C-->SS }]

word='bbaaabbaab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->SC }, { A-->CS }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->AB }, { B-->SA }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->AA }, { C-->BB }, { C-->CC }]

word='bbaaabbaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->CB }]
B[{ B-->AS }, { B-->a }, { B-->AA }, { B-->CC }, { B-->CS }]
C[{ C-->CB }, { C-->CC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->BC }]

word='bbaaabbaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   []          [B]         []          []          []          []          []          []          
[A, B, C, S][A, C, S]   []          []          [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SC }]
C[{ C-->CA }, { C-->SB }, { C-->a }, { C-->CC }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]

word='bbaaabbaab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SB }, { B-->a }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BC }]

word='baaabbbaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->SA }]
B[{ B-->AB }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->CC }]
C[{ C-->AC }, { C-->AS }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->SS }, { S-->b }, { S-->AB }]

word='baaabbbaaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C, S]   [C]         []          []          []          []          []          []          []          []          
[B, C, S]   [B, C]      [C]         []          []          []          []          []          []          []          
[B, C, S]   [B, C]      [B, C]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [B]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C, S][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][A, B, C, S][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C]      [B, C]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->CA }, { B-->AA }, { B-->BB }, { B-->SC }, { B-->CS }]
C[{ C-->CB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->CA }, { S-->SB }, { S-->AA }, { S-->b }]

word='baaabbbaaa'
setV=setV
[B, C, S]   []          []          []          []          []          []          []          []          []          
[B, C]      [C]         []          []          []          []          []          []          []          []          
[B, C]      [C]         [C]         []          []          []          []          []          []          []          
[B, C]      [C]         [C]         [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C]         [C]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }, { A-->AC }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }]
C[{ C-->SA }, { C-->a }]
S[{ S-->CA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BS }]

word='baaabbbaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, C]      [A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [B, S]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [B, S]      [B, S]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->AB }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AS }, { S-->BA }, { S-->CB }, { S-->BB }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->BB }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }]

word='baaabbbaaa'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->CB }, { C-->a }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='babaaabbba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->BC }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->a }, { B-->CS }]
C[{ C-->SA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->b }]
S[{ S-->AC }, { S-->SA }, { S-->AA }, { S-->BC }]

word='babaaabbba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, C, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->SB }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->AB }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BS }]

word='babaaabbba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->BC }, { A-->AS }, { A-->CA }]
B[{ B-->BC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->BB }, { C-->CS }, { C-->BC }]

word='babaaabbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S, C]      [A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B]         [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          [B]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->BC }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->BC }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->AB }]

word='babaaabbba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->SB }, { S-->a }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->a }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='babbbaaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AS }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }]

word='babbbaaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [B]         [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [B]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [B]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->CA }, { B-->CB }, { B-->CC }, { B-->SC }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->AB }, { C-->BS }]

word='babbbaaaaa'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BC }]

word='babbbaaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, C]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->CA }, { S-->a }, { S-->SS }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->AB }]

word='babbbaaaaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->CB }]
B[{ B-->BC }, { B-->BS }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BC }, { C-->BS }]

word='abaaaaaabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->CS }, { A-->b }]
B[{ B-->BC }, { B-->BS }, { B-->CA }, { B-->CB }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->a }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->b }]

word='abaaaaaabb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->CA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CS }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->AB }]
S[{ S-->BA }, { S-->SS }, { S-->CC }, { S-->b }, { S-->BS }]

word='abaaaaaabb'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][S]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->BC }]
B[{ B-->b }, { B-->SB }, { B-->a }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->BC }]

word='abaaaaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->BA }, { A-->CB }]
B[{ B-->AC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }]
C[{ C-->SA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->AB }]

word='abaaaaaabb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->BS }, { A-->BA }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->BB }, { B-->SS }, { B-->CS }]
C[{ C-->SA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->b }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->b }, { S-->BS }]

word='baabbaabaa'
setV=setV
[B, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [B, C, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->BC }, { A-->AS }, { A-->BA }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->SC }, { B-->CS }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->b }]
S[{ S-->SA }, { S-->BA }, { S-->AA }, { S-->b }, { S-->BC }]

word='baabbaabaa'
setV=setV
[C, S]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CA }]
B[{ B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SC }, { B-->CS }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->BC }, { S-->BS }]

word='baabbaabaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AS }, { A-->SA }]
B[{ B-->BS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->a }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->b }, { C-->AB }]

word='baabbaabaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A]         [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->a }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->BA }, { C-->a }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BS }]

word='baabbaabaa'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->BC }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->CC }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->b }, { C-->BC }, { C-->BS }]

word='bbbabaabbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->AS }, { B-->a }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }]

word='bbbabaabbb'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->b }, { C-->BC }, { C-->BS }]

word='bbbabaabbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->SA }, { C-->CA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->BS }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BS }]

word='bbbabaabbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->BS }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbbabaabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, S]      [S]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   []          [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   []          [B]         [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, S]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }]
B[{ B-->BC }, { B-->BS }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->SC }]
C[{ C-->CA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->BC }, { C-->BS }]

word='abaabbbbba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, C]      [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->BA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->BS }]

word='abaabbbbba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->CC }]

word='abaabbbbba'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->a }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->CC }, { C-->b }, { C-->BC }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->SS }, { S-->CC }, { S-->b }, { S-->BC }]

word='abaabbbbba'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->SC }, { A-->BS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->SA }, { B-->CA }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->a }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->CS }, { C-->BC }]

word='abaabbbbba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, S, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->BS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->SB }, { S-->a }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->SB }, { C-->SS }, { C-->b }, { C-->AB }]

word='abbbbaaaba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->BA }]

word='abbbbaaaba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->BA }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->AB }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->a }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='abbbbaaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][C]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->AB }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->AC }, { S-->AS }, { S-->SS }, { S-->BS }]

word='abbbbaaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C]         [B, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   []          [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   []          []          [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][C]         [C]         [C]         [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->a }, { S-->AA }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='abbbbaaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->AB }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->BA }, { B-->SB }, { B-->BB }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->BC }]

word='bbabbabbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->b }, { A-->BC }, { A-->BA }, { A-->SB }]
B[{ B-->BC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SS }, { S-->AB }]
C[{ C-->AC }, { C-->BA }, { C-->BB }, { C-->CC }, { C-->b }, { C-->BC }]

word='bbabbabbbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->b }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BA }, { B-->SB }, { B-->a }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CS }, { C-->b }]

word='bbabbabbbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->AB }, { B-->AS }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->AA }, { C-->BB }]

word='bbabbabbbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AC }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->b }]

word='bbabbabbbb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->SS }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BS }]

word='bababaaabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BA }, { B-->a }, { B-->AA }, { B-->BB }]
C[{ C-->AS }, { C-->BA }, { C-->SC }, { C-->b }, { C-->BC }]
S[{ S-->AA }, { S-->CC }, { S-->SC }, { S-->AB }, { S-->BC }, { S-->BS }]

word='bababaaabb'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S]   [B]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->a }, { B-->BB }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->AA }, { S-->CC }, { S-->b }, { S-->BC }, { S-->BS }]

word='bababaaabb'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->b }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->AC }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BC }, { C-->BS }]

word='bababaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->CS }, { A-->BC }, { A-->SA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->a }, { B-->BB }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->BC }, { C-->BS }]

word='bababaaabb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->a }, { B-->AA }, { B-->CS }]
C[{ C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CS }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->BB }]

word='abbbaabbba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->SA }, { B-->CA }, { B-->BA }, { B-->SB }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->BA }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->AB }, { C-->BC }]

word='abbbaabbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, C]      [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->AC }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->CB }, { C-->SB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->SB }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->b }]

word='abbbaabbba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->AC }]
B[{ B-->b }, { B-->SA }, { B-->a }, { B-->CC }]
S[{ S-->AS }, { S-->CA }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->CA }, { C-->SS }, { C-->SC }, { C-->b }, { C-->BC }]

word='abbbaabbba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   []          [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->b }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->BC }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->CS }, { C-->b }, { C-->BS }]

word='abbbaabbba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SC }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->AA }]
C[{ C-->AS }, { C-->SA }, { C-->a }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->b }]

word='bbbaaaaaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[A]         [C]         [A]         [C]         []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      [A]         [C]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, S]   [A]         [C]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, B, S]   [A]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   []          [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->SB }]
B[{ B-->CB }, { B-->SB }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->AA }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->b }, { C-->BC }, { C-->BS }]

word='bbbaaaaaab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->SB }]
B[{ B-->AB }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->CC }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->CC }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }]

word='bbbaaaaaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [C]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->BS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->AA }]
C[{ C-->SB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->BS }]
S[{ S-->b }]

word='bbbaaaaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][]       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][]       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SS }, { S-->SC }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->b }, { C-->AB }]

word='bbbaaaaaab'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->AC }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AS }, { B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->AC }, { S-->a }, { S-->AA }, { S-->CC }, { S-->b }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }]

word='ababbbaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->BS }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SB }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->SB }, { C-->b }, { C-->AB }, { C-->BC }]

word='ababbbaaba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->CS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->AB }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->SC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->BS }]
S[{ S-->CA }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BC }, { S-->BS }]

word='ababbbaaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, C]      [S]         []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->BA }, { C-->a }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BS }]

word='ababbbaaba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->SS }, { B-->CC }, { B-->SC }]
C[{ C-->AS }, { C-->BA }, { C-->BB }, { C-->SC }, { C-->b }, { C-->AB }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->SS }, { S-->SC }, { S-->BC }, { S-->BS }]

word='ababbbaaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, C, S]   [A]         [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [A]         [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->b }, { A-->BC }, { A-->CA }, { A-->BA }]
B[{ B-->BS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->a }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->BA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BS }]

word='babbaabbab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->AS }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->b }, { C-->BS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BC }]

word='babbaabbab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   []          [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->AS }, { B-->BA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->a }, { C-->AA }, { C-->AB }, { C-->BC }, { C-->BS }]

word='babbaabbab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->AC }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SB }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->SB }, { S-->a }, { S-->SC }, { S-->CS }, { S-->AB }]
C[{ C-->a }, { C-->AA }, { C-->AB }]

word='babbaabbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A]         [A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->b }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->a }, { B-->SC }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->CC }, { C-->b }]

word='babbaabbab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->AA }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='bbbabbbbab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->CA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->b }]

word='bbbabbbbab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BS }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->a }, { B-->SS }]
S[{ S-->CA }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->CA }, { C-->SB }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->AB }]

word='bbbabbbbab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SS }]
C[{ C-->BA }, { C-->a }, { C-->AA }, { C-->b }, { C-->BC }]
S[{ S-->SB }, { S-->b }, { S-->AB }, { S-->BS }]

word='bbbabbbbab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, C, S][A, B, C, S][]          [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][]          [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          [A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->CA }, { B-->BB }, { B-->CC }]
S[{ S-->AS }, { S-->CA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->CB }, { C-->b }, { C-->BC }]

word='bbbabbbbab'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->BC }, { A-->AC }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->SB }, { C-->CS }, { C-->BS }, { C-->AS }, { C-->CA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }]

word='bbbbaaabba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->CB }]
B[{ B-->BC }, { B-->CA }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->SC }, { C-->b }, { C-->BC }]

word='bbbbaaabba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->BC }, { B-->SA }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->SC }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->b }, { C-->AB }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->AA }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]

word='bbbbaaabba'
setV=setV
[C, S]      []          []          []          []          []          []          []          []          []          
[B, S]      [C, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [C, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B, S]      [C, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [B]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   []          [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S]         [S]         [S]         [C, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, S]      [C, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->b }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }]

word='bbbbaaabba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SC }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->BC }]

word='bbbbaaabba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->CA }]
B[{ B-->BC }, { B-->AC }, { B-->AS }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AC }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CS }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->b }]

word='abbbbbbaba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][C]         []          []          []          []          []          []          []          []          
[A, B, S, C][C]         [C]         []          []          []          []          []          []          []          
[A, B, S, C][C]         [C]         [C]         []          []          []          []          []          []          
[A, B, C, S][C]         [C]         [C]         [C]         []          []          []          []          []          
[A, B, C, S][C]         [C]         [C]         [C]         [C]         []          []          []          []          
[A, B, C, S][C]         [C]         [C]         [C]         [C]         [C]         []          []          []          
[A, B, S, C][S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [B, S, C]   []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->BA }, { B-->a }, { B-->AA }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->b }]
S[{ S-->SA }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->AB }, { S-->BC }, { S-->BS }]

word='abbbbbbaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->BC }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AB }]
C[{ C-->SA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->AB }, { C-->BS }]

word='abbbbbbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AS }, { C-->CB }, { C-->SB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]

word='abbbbbbaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->BA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->CS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->SB }, { C-->SS }, { C-->b }]

word='abbbbbbaba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[C]         [C]         []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[]          []          []          [C]         []          []          []          []          []          []          
[]          []          []          []          [C]         []          []          []          []          []          
[]          []          []          []          []          [C]         []          []          []          []          
[]          []          []          []          []          []          [C]         []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, S]      []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AS }, { B-->BA }, { B-->CB }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }]

word='babaaabaaa'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AS }, { B-->SB }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->a }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->SB }, { C-->AA }, { C-->b }, { C-->AB }, { C-->BC }]

word='babaaabaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AS }]
B[{ B-->BC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->BB }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }]

word='babaaabaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AS }]
B[{ B-->AB }, { B-->BC }, { B-->AS }, { B-->a }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->CC }, { C-->b }]

word='babaaabaaa'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->b }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->SA }, { C-->SC }, { C-->BS }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='babaaabaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->CS }]
C[{ C-->AS }, { C-->BA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->BC }]

word='baababbaaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->SA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->AA }, { S-->BC }, { S-->BS }]

word='baababbaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C, S]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][C, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AB }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->CA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CS }, { C-->BC }, { C-->BS }]

word='baababbaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][]       []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][]       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][]       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][]       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][]       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->SA }, { B-->a }, { B-->AA }, { B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->AA }, { S-->BB }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->SS }, { C-->SC }, { C-->b }]

word='baababbaaa'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, C]      [B]         []          []          []          []          []          []          []          []          
[A, B, C]   [S]         [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [S]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [S]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->SB }, { S-->a }, { S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->b }, { C-->BS }]

word='baababbaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->BC }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->SC }, { C-->b }, { C-->AB }]

word='baabbabbaa'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->AS }, { S-->CA }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->AA }, { C-->CS }, { C-->b }, { C-->AB }]

word='baabbabbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->b }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->BB }, { B-->SC }]
S[{ S-->CA }, { S-->BB }, { S-->CC }, { S-->b }]
C[{ C-->SA }, { C-->CA }, { C-->CB }, { C-->AA }, { C-->b }, { C-->BS }]

word='baabbabbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AC }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->a }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }]

word='baabbabbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->CB }, { B-->AA }, { B-->SC }]
S[{ S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->BC }]

word='baabbabbaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[C]         [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][C]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SS }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->b }, { C-->BS }]

word='aaabaaabba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->SC }, { C-->CS }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->b }, { C-->BC }]

word='aaabaaabba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->CC }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->b }, { C-->AB }, { C-->BS }]

word='aaabaaabba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A]         [S, C]      []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          [S]         []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          [S]         []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A]         [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][B, S, C]   []          [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->AA }]
S[{ S-->AS }, { S-->a }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->b }]

word='aaabaaabba'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CS }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->BC }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->SS }, { C-->CC }]

word='aaabaaabba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->CC }, { B-->CS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BC }, { S-->BS }]

word='baaabababb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SB }, { B-->a }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->AA }, { C-->SC }, { C-->BC }, { C-->BS }]

word='baaabababb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->SB }]
S[{ S-->AS }, { S-->CA }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->BB }, { C-->SS }, { C-->CS }, { C-->BC }, { C-->BS }]

word='baaabababb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B]      [A]         []          []          []          []          []          []          []          []          
[]          []          [A]         []          []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   []          []          []          []          []          
[A, B, S, C][A, B]      [A, B]      [A, B]      [A, B]      [A]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B]      [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S]   []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AC }, { A-->AS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->AA }]
S[{ S-->AS }, { S-->a }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }]

word='baaabababb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AB }, { A-->CB }]
B[{ B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->CS }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->CS }]

word='baaabababb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->BA }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
C[{ C-->BA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->BS }]
S[{ S-->BB }, { S-->AB }, { S-->BC }]

word='ababaaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[B, C]      [A, B, S]   [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][]          [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      [A, B, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          [B, C]      [A, B, S]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->SA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->AA }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->SC }, { C-->b }]
S[{ S-->AC }, { S-->SA }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }]

word='ababaaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, C, S]   [A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [S]         [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->CA }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BC }, { C-->BS }]

word='ababaaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->BC }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }]

word='ababaaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->AB }, { A-->SA }, { A-->CB }]
B[{ B-->AC }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->SS }, { B-->CC }]
S[{ S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->CB }, { C-->SB }, { C-->a }, { C-->CC }, { C-->b }]

word='ababaaaabb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }]
S[{ S-->SA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }]

word='bbabaabbbb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->AB }, { S-->BC }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->b }, { C-->BC }]

word='bbabaabbbb'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CB }, { A-->SB }]
B[{ B-->AC }, { B-->AS }, { B-->a }]
C[{ C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->CS }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->SB }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]

word='bbabaabbbb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C, S]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->CB }, { A-->SB }]
B[{ B-->AB }, { B-->BS }, { B-->a }, { B-->AA }, { B-->BB }]
C[{ C-->SB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->CB }, { S-->SB }, { S-->SS }, { S-->CC }, { S-->BS }]

word='bbabaabbbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BC }]

word='bbabaabbbb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SA }]
B[{ B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->CS }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->SC }, { C-->CS }, { C-->BS }]

word='babaababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][]          [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][]          []          [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->BB }, { C-->CS }, { C-->BC }, { C-->BS }]

word='babaababbb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SA }, { A-->CB }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->a }, { S-->CS }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SS }]

word='babaababbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->CC }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BS }]

word='babaababbb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      [B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][S]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->CS }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }]

word='babaababbb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S, C]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->AS }, { B-->CA }, { B-->SB }, { B-->SS }]
C[{ C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->CA }, { S-->SS }, { S-->b }]

word='bbabbababa'
setV=setV
[A, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A]         [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->SA }, { C-->SB }, { C-->BB }, { C-->b }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->BC }]

word='bbabbababa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->BC }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->CA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->AB }, { C-->BC }]

word='bbabbababa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B]         [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->a }, { S-->SS }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->a }, { C-->CC }, { C-->CS }, { C-->b }]

word='bbabbababa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->SA }, { B-->SB }, { B-->SC }, { B-->CS }, { B-->AS }, { B-->BA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->AB }]
C[{ C-->SA }, { C-->BA }, { C-->BB }, { C-->BC }]

word='bbabbababa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->BA }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->AA }, { S-->BB }, { S-->BC }, { S-->BS }]

word='ababbaaabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->CS }, { C-->BS }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='ababbaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->AC }, { B-->CB }, { B-->CC }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->BS }]

word='ababbaaabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[]          [C]         [S]         []          []          []          []          []          []          []          
[A, B, C]   []          [C]         [S]         []          []          []          []          []          []          
[S, C]      [A, B, C]   []          [C]         [S]         []          []          []          []          []          
[A, B, S, C][S, C]      [A, B, C]   []          [C]         [S]         []          []          []          []          
[A, B, C, S][A, B, S, C][S, C]      [A, B, C]   []          [C]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S, C]      [A, B, C]   []          [C]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S, C]      [A, B, C]   []          [C]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S, C]      [A, B, C]   []          [C]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->b }]

word='ababbaaabb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->CA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->CA }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->b }, { C-->BS }]

word='ababbaaabb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->BC }, { A-->AS }, { A-->CA }]
B[{ B-->AS }, { B-->SA }, { B-->CB }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->SA }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->AB }, { C-->BC }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->BB }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]

word='aabaaabbab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->CS }, { A-->BS }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
C[{ C-->AS }, { C-->a }, { C-->BB }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AS }, { S-->SA }, { S-->AA }, { S-->SC }, { S-->b }]

word='aabaaabbab'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->BA }, { B-->SB }, { B-->CS }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AB }, { C-->BC }]
S[{ S-->SB }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->BC }, { S-->BS }]

word='aabaaabbab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, S]      [C]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, C]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A]         [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C]      [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->AB }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->AC }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BS }]

word='aabaaabbab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->b }, { A-->BS }, { A-->SA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CS }]
S[{ S-->SA }, { S-->BA }, { S-->AA }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->BB }, { C-->b }]

word='aabaaabbab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->CB }]
B[{ B-->AB }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->SB }, { C-->AA }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbbbababaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->AC }, { B-->SA }, { B-->CA }, { B-->SB }, { B-->a }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->SS }, { S-->SC }, { S-->AB }]
C[{ C-->SA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->BC }]

word='bbbbababaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          []          [A]         []          []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[]          [A]         [A, S]      [A, B, S]   [A, B, S, C][]          []          []          []          []          
[A, S]      [A, B, S]   [A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][]          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->AB }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->b }]

word='bbbbababaa'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->BC }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SB }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->CC }, { C-->b }, { C-->BC }]

word='bbbbababaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->AS }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->CC }, { B-->SC }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }]
C[{ C-->SA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->CC }, { C-->SC }]

word='bbbbababaa'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->BC }, { B-->AC }, { B-->SA }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->SB }, { C-->AB }]

word='bbbbababab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->BS }]
B[{ B-->BS }, { B-->AC }, { B-->SA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BC }]

word='bbbbababab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->BA }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->AC }, { C-->AS }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BC }]

word='bbbbababab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->SA }, { B-->CB }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->AB }, { C-->BS }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]

word='bbbbababab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C, S]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->b }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->BB }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BC }]

word='bbbbababab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->AS }, { A-->CB }]
B[{ B-->BC }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->BC }, { C-->BS }]

word='bbaabaabba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[B, C]      [B, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][]          [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [B, S, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->BA }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->AS }, { S-->BA }, { S-->SB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->AA }, { C-->SC }, { C-->b }, { C-->BC }, { C-->BS }]

word='bbaabaabba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->BC }, { C-->BS }]

word='bbaabaabba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->CA }, { B-->SB }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->SB }, { S-->a }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->BB }, { C-->AB }, { C-->BS }]

word='bbaabaabba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->BA }, { B-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->SA }, { C-->SB }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BS }]

word='bbaabaabba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->BC }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->b }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->BB }, { C-->b }]

word='aabaaaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->BA }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->SS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->BB }, { C-->SC }, { C-->BC }, { C-->BS }]

word='aabaaaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       [A]      [A, S, C][A]      []       []       []       []       []       []       
[]       [A]      [A, S, C][]       [A]      []       []       []       []       []       
[]       [A]      [A, S, C][]       []       [A]      []       []       []       []       
[]       [A]      [A, S, C][]       []       []       [A]      []       []       []       
[]       [A]      [A, S, C][]       []       []       []       [A]      []       []       
[]       []       [A, S]   []       []       []       []       []       [S]      []       
[]       [A]      [A, S, C][]       []       []       []       []       [A, S]   [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->CS }]
C[{ C-->SA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CS }, { C-->b }]
S[{ S-->SA }, { S-->CA }, { S-->AA }, { S-->SS }, { S-->b }, { S-->AB }]

word='aabaaaaabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->a }, { S-->AA }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->CB }, { C-->a }, { C-->BB }]

word='aabaaaaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->SC }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->a }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]

word='aabaaaaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [S]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [S]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [S]         [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->AS }]
B[{ B-->AB }, { B-->AS }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->SA }, { C-->BA }, { C-->SS }]

word='bbaabbaabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->AA }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->CA }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->b }, { C-->BS }]

word='bbaabbaabb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->b }]

word='bbaabbaabb'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->AB }, { C-->BS }]

word='bbaabbaabb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BC }]

word='bbaabbaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->CA }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->CA }, { B-->SB }, { B-->a }, { B-->CS }]
S[{ S-->AS }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->BC }, { C-->BS }]

word='bbaabbbbaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
B[{ B-->SA }, { B-->BA }, { B-->a }, { B-->CC }]
S[{ S-->a }, { S-->b }, { S-->BC }]
C[{ C-->AS }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }]

word='bbaabbbbaa'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, S, C]   []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, S]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S, C]   []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }]
B[{ B-->BC }, { B-->SA }, { B-->CB }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->CS }, { C-->AB }]

word='bbaabbbbaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, B]      [A]         []          []          []          []          []          []          []          
[A, S, C]   [C]         []          [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, S]      [A, S]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [C]         []          [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->AB }, { A-->BS }]
B[{ B-->b }, { B-->AC }, { B-->BA }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->BA }, { S-->a }, { S-->SC }, { S-->AB }, { S-->BS }]
C[{ C-->BA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->AB }]

word='bbaabbbbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          [B]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          [B]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->SS }, { B-->CS }]
S[{ S-->a }, { S-->AA }, { S-->SS }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbaabbbbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AC }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BB }, { B-->CC }]
S[{ S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BS }]

word='babaabaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->BA }, { B-->CC }]
S[{ S-->BA }, { S-->a }, { S-->CC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->BA }, { C-->CC }, { C-->b }, { C-->BC }]

word='babaabaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[B, S]      [S]         []          []          []          []          []          []          []          []          
[B, S, C]   []          [A, B, S, C][]          []          []          []          []          []          []          
[B, S]      []          [B, S]      [S]         []          []          []          []          []          []          
[B, S]      []          [B, S]      []          [S]         []          []          []          []          []          
[B, S, C]   []          [B, S, C]   []          []          [A, B, S, C][]          []          []          []          
[B, S]      []          [B, S]      []          []          [B, S]      [S]         []          []          []          
[B, S]      []          [B, S]      []          []          [B, S]      []          [S]         []          []          
[B, S, C]   []          [B, S, C]   []          []          [B, S, C]   []          []          [A, B, S, C][]          
[B, S]      []          [B, S]      []          []          [B, S]      []          []          [B, S]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->b }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->CB }, { S-->SB }, { S-->a }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->b }]

word='babaabaaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CB }]
B[{ B-->AB }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->SS }, { B-->CS }]
C[{ C-->CA }, { C-->BA }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }]
S[{ S-->CB }, { S-->BB }, { S-->CS }, { S-->AB }]

word='babaabaaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, C]      [A]         []          []          []          []          []          []          []          []          
[A, C]      []          [C]         []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, C]      [A]         []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, S, C][B]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      []          []          [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C]      [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [A, B, S, C][B]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      []          []          [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->CB }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->CA }, { S-->a }, { S-->AB }]
C[{ C-->CB }, { C-->SB }, { C-->CC }, { C-->AB }]

word='babaabaaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[A, B]      [A, B, C]   [B]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      [B]         [S]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, B, C]   [B]         []          []          []          []          
[A, B]      [A, B, C]   [B]         []          []          []          [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B]      [B]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, B, C]   [B]         []          []          []          [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->b }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }]

word='aaababbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->AB }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->BC }]

word='aaababbaba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->BC }, { A-->BA }]
B[{ B-->BC }, { B-->CA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->CS }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }]

word='aaababbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BS }, { A-->SA }]
B[{ B-->SA }, { B-->BA }, { B-->BB }, { B-->CC }]
C[{ C-->BA }, { C-->a }, { C-->AA }, { C-->CC }, { C-->b }]
S[{ S-->AA }, { S-->BB }, { S-->CC }, { S-->BS }]

word='aaababbaba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, C, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->SS }]

word='aaababbaba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AB }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->AA }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BS }]

word='bbabbbaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->SS }, { B-->CC }, { B-->CS }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->BB }, { S-->CC }, { S-->b }, { S-->BS }]

word='bbabbbaaaa'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, S]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->SC }, { A-->AB }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->AA }, { B-->SS }, { B-->CC }]
C[{ C-->CA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->AC }, { S-->AS }, { S-->SB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]

word='bbabbbaaaa'
setV=setV
[B, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BS }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->CA }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->AB }]

word='bbabbbaaaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [A, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [S, C]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [C]         [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][C]         [C]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         [C]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->AC }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SC }]
S[{ S-->CA }, { S-->BA }, { S-->a }, { S-->BB }, { S-->CS }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbabbbaaaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CS }]

word='babbaaaaaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][C]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->AB }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->BS }, { B-->BA }, { B-->AA }]
S[{ S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->a }, { C-->CC }, { C-->b }, { C-->BS }]

word='babbaaaaaa'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->BC }, { A-->CA }, { A-->CB }]
B[{ B-->BC }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->BS }]
S[{ S-->BA }, { S-->BB }, { S-->BC }, { S-->BS }]

word='babbaaaaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [B, C]      []          []          []          []          []          []          []          []          
[B, C]      [A, B, C, S][A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SB }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->CA }, { S-->BA }, { S-->CC }, { S-->b }, { S-->BC }]
C[{ C-->CA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->b }]

word='babbaaaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[B, C]      [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [C]         [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [C]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [C]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [C]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->AS }, { S-->BA }, { S-->SB }, { S-->SS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->BA }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->b }]

word='babbaaaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AC }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->CA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SC }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->CS }, { C-->b }, { C-->BS }]

word='ababbaaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->SA }, { B-->SB }, { B-->SC }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->b }]

word='ababbaaaab'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->CS }]
B[{ B-->AC }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->BS }]
C[{ C-->SA }, { C-->BA }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]

word='ababbaaaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, C]      [C]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          []          [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, C]      [A, C]      [A, C]      [A, C]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->CS }, { A-->BC }, { A-->BS }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->SC }, { S-->AB }, { S-->BS }]
C[{ C-->SA }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='ababbaaaab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->b }, { A-->BC }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->AA }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->AB }, { S-->BS }]
C[{ C-->SA }, { C-->a }, { C-->b }, { C-->BS }]

word='ababbaaaab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BS }, { A-->AC }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->BB }, { B-->SS }, { B-->SC }]
C[{ C-->AC }, { C-->a }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->b }, { S-->BC }, { S-->BS }]

word='baaaaabaaa'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][C]         [C]         []          []          []          []          []          []          []          
[A, B, C, S][C]         [C]         [C]         []          []          []          []          []          []          
[A, B, C, S][C]         [C]         [C]         [C]         []          []          []          []          []          
[A, B, C, S][C]         [C]         [C]         [C]         [C]         []          []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [A, B, S]   []          []          []          
[A, B, S, C][B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [A, B, C, S][C]         []          []          
[A, B, S, C][B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [A, B, C, S][C]         [C]         []          
[A, B, S, C][B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [A, B, C, S][C]         [C]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->AB }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AS }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->CC }, { C-->BS }]

word='baaaaabaaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->b }, { A-->BC }, { A-->CA }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->CC }, { C-->b }, { C-->BC }, { C-->BS }]

word='baaaaabaaa'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->AB }, { B-->BS }, { B-->SA }, { B-->BA }, { B-->a }, { B-->CC }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->CC }, { S-->CS }]
C[{ C-->AC }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->AB }, { C-->BC }]

word='baaaaabaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B, C]      [B]         []          []          []          []          []          []          []          []          
[A, C]      [C]         [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [C]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, C]      [C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [C]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [C]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SB }]
B[{ B-->BC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='baaaaabaaa'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->AA }, { C-->SC }, { C-->AB }, { C-->BC }]
S[{ S-->CA }, { S-->SB }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]

word='bbaabaabab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, S]      [B, S]      [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [B, S]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CS }]
C[{ C-->BA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->AB }, { C-->BS }]

word='bbaabaabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B]      [A]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->CA }, { A-->BA }]
B[{ B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->a }, { S-->SC }, { S-->CS }, { S-->BC }]
C[{ C-->SA }]

word='bbaabaabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[B]         [B]         [S]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [B, S]      [S, C]      [A]         []          []          []          []          []          
[B]         [B]         [B, S]      [B, S]      [B]         [S]         []          []          []          []          
[]          []          []          []          []          []          [S]         []          []          []          
[A, B, S]   [A, B, S]   [A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [S, C]      [A]         []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B]         [B, S]      [B, S]      [B]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S, C][A, B, S, C][A, B, S]   [S, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->BA }, { B-->SB }, { B-->AA }, { B-->BB }]
C[{ C-->AS }, { C-->a }, { C-->CC }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->AA }, { S-->BC }, { S-->BS }]

word='bbaabaabab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A]         [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A]         [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A]         [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->AB }, { A-->AC }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->AB }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->SC }, { S-->BS }]

word='bbaabaabab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->BS }, { A-->CA }, { A-->BA }]
B[{ B-->AB }, { B-->BS }, { B-->AC }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->SC }, { C-->CS }, { C-->BS }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }]

word='abaabbabba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, S]      [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CC }, { A-->BS }, { A-->SA }, { A-->CA }]
B[{ B-->AB }, { B-->CA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->AA }, { C-->SS }, { C-->b }, { C-->BS }]

word='abaabbabba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, C]      [S, C]      []          []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, S, C]   [A, C]      [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->b }, { A-->SA }]
B[{ B-->BC }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->SB }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->BC }, { S-->BS }]

word='abaabbabba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, C, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][S]         [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          [B, C, S]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->b }, { C-->BS }]

word='abaabbabba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->SB }, { B-->a }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]

word='abaabbabba'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->CA }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SC }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->AA }, { S-->CS }, { S-->b }, { S-->BC }]

word='baaababbba'
setV=setV
[B, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->CA }, { S-->BA }, { S-->SB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->SB }, { C-->CC }, { C-->BC }, { C-->BS }]

word='baaababbba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SB }, { A-->SC }, { A-->CS }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->AB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }]

word='baaababbba'
setV=setV
[A, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->CS }, { A-->BC }, { A-->CA }, { A-->SB }]
B[{ B-->AB }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->SA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->b }, { C-->BC }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->AB }]

word='baaababbba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->a }, { B-->BB }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->BS }]

word='baaababbba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->BS }, { A-->AC }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]

word='bababaabab'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->CC }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->AB }, { C-->BS }]
S[{ S-->AC }, { S-->SA }, { S-->b }, { S-->BC }, { S-->BS }]

word='bababaabab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [A, B, S]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->SB }, { C-->SS }, { C-->b }, { C-->BC }, { C-->BS }]

word='bababaabab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->SB }]
B[{ B-->BS }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SC }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->BS }]
S[{ S-->AS }, { S-->BA }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]

word='bababaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->AB }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SA }, { B-->a }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->CS }]

word='bababaabab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->BA }]
B[{ B-->b }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->AA }, { B-->SC }]
C[{ C-->SA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->b }, { S-->BC }, { S-->BS }]

word='bbbbbabbab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->CA }, { S-->a }, { S-->SC }, { S-->BS }]
C[{ C-->SB }, { C-->a }, { C-->BB }, { C-->CS }, { C-->BS }]

word='bbbbbabbab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SS }, { B-->SC }]
C[{ C-->SA }, { C-->CA }, { C-->CB }, { C-->a }, { C-->AB }, { C-->BS }]
S[{ S-->AS }, { S-->CA }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }]

word='bbbbbabbab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->BC }, { S-->BS }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->AB }, { C-->BC }]

word='bbbbbabbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C]         [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][C]         [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SS }]
C[{ C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->b }, { C-->BC }]
S[{ S-->CB }, { S-->AA }, { S-->CS }, { S-->b }]

word='bbbbbabbab'
setV=setV
[B, C, S]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AB }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AS }, { S-->a }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->b }, { C-->BS }]

word='aaaaabbabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->AC }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->SS }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->b }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->BA }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }]

word='aaaaabbabb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->CA }, { S-->BA }, { S-->a }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BS }]

word='aaaaabbabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->SA }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }]

word='aaaaabbabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->b }, { A-->BC }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->CA }, { C-->SB }, { C-->AA }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BS }]

word='aaaaabbabb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->BC }]

word='babbaaabab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->CB }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->SS }, { B-->SC }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]

word='babbaaabab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AC }, { B-->CB }, { B-->SS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->b }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }]

word='babbaaabab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->SA }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->a }, { C-->AA }, { C-->AB }, { C-->BS }]

word='babbaaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A]         [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->SB }, { B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->CS }, { C-->BS }]

word='babbaaabab'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->b }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->BC }, { S-->BS }]
C[{ C-->BA }, { C-->a }, { C-->BB }, { C-->CS }, { C-->b }]

word='babaabbbba'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->a }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='babaabbbba'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, S, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->CB }, { B-->SB }, { B-->a }]
S[{ S-->CB }, { S-->a }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->CC }, { C-->SC }, { C-->CS }]

word='babaabbbba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->b }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->AS }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->b }]

word='babaabbbba'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, S, C]   [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->a }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->BS }]

word='babaabbbba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->SA }, { B-->BA }, { B-->a }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->b }, { S-->AB }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->SS }, { C-->b }]

word='aaababaabb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->AB }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->BA }, { B-->SB }, { B-->a }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->a }, { S-->AA }, { S-->CC }, { S-->BC }, { S-->BS }]
C[{ C-->BA }, { C-->SB }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='aaababaabb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }, { B-->CS }]
C[{ C-->a }, { C-->SS }, { C-->b }]
S[{ S-->SB }, { S-->SC }, { S-->CS }, { S-->AB }]

word='aaababaabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [A, B]      [B, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B]      [B, C]      []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->AB }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->BC }]

word='aaababaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->CS }]
C[{ C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->SB }, { S-->CC }, { S-->CS }]

word='aaababaabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->AS }, { B-->a }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->a }, { C-->BB }, { C-->CS }, { C-->b }]

word='bbabaaaaab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->SA }]
B[{ B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='bbabaaaaab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->CA }, { A-->BA }]
B[{ B-->BC }, { B-->CA }, { B-->BA }, { B-->a }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BC }]

word='bbabaaaaab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BS }, { A-->AS }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SB }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='bbabaaaaab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][]          [B]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][]          []          [B]         []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          [B]         []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          []          [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, C]      [B, C]      [B, C]      [B, C]      [A, B, C]   [A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->CA }, { C-->SB }, { C-->CC }, { C-->b }, { C-->AB }]

word='bbabaaaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [S]         [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [S]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [S]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SC }, { B-->CS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->SC }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->CB }, { S-->SB }, { S-->CC }, { S-->CS }, { S-->BC }, { S-->BS }]

word='babbbbabbb'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[B, C, S]   [A, B]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }]
B[{ B-->b }, { B-->BC }, { B-->AA }, { B-->BB }, { B-->SC }, { B-->CS }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->BA }, { C-->SB }, { C-->CS }]

word='babbbbabbb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][C]         [A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AS }, { A-->SB }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->BB }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->AB }]
C[{ C-->SA }, { C-->CB }, { C-->SC }]

word='babbbbabbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][S]         [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][S]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->CB }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->BA }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->AB }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->SC }, { C-->CS }, { C-->BS }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BC }]

word='babbbbabbb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SS }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->BA }, { C-->a }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->AB }, { C-->BC }]

word='babbbbabbb'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->AC }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->AB }, { S-->BS }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbabbbbbab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, S, C]   [B]         []          []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A, B, S, C][B]         []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A, B, S, C][B, S, C]   [B]         []          []          []          []          []          
[B, C, S]   [B, S, C]   [A, B, S, C][B, S, C]   [B, S, C]   [B]         []          []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][B, S, C]   [B, S, C]   [B, S, C]   [B]         []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [B]         []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [A, B, S, C][]          
[B, S, C]   [B, C, S]   [A, B, S, C][B, C, S]   [B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [A, B, S, C][B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->BC }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->BA }, { B-->a }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->BC }]
S[{ S-->AC }, { S-->CA }, { S-->SC }, { S-->CS }, { S-->b }]

word='bbabbbbbab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AC }, { A-->SA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->a }, { S-->CC }, { S-->b }, { S-->BC }]
C[{ C-->SB }, { C-->a }, { C-->SS }, { C-->SC }, { C-->b }]

word='bbabbbbbab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CC }, { B-->SC }]
S[{ S-->AS }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->CC }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->AA }, { C-->SC }, { C-->BC }, { C-->BS }]

word='bbabbbbbab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, S, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->CC }, { S-->BC }, { S-->BS }]
C[{ C-->a }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BS }]

word='bbabbbbbab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->CA }, { B-->SB }, { B-->BB }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='baabbbbabb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][B]         [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      [B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BS }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->AA }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->SB }, { C-->CC }, { C-->b }]

word='baabbbbabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->BB }, { B-->SC }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->SB }, { C-->AA }, { C-->b }, { C-->BC }, { C-->BS }]

word='baabbbbabb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->b }, { A-->SA }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SC }]
C[{ C-->AC }, { C-->AS }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->b }, { S-->BS }]

word='baabbbbabb'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->a }, { B-->SC }]
C[{ C-->CA }, { C-->a }, { C-->SC }, { C-->b }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->CC }, { S-->b }, { S-->AB }]

word='baabbbbabb'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->BA }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->CS }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CS }, { C-->BS }]
S[{ S-->BA }, { S-->CB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]

word='babaabbbab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->BA }, { B-->SB }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BS }]
C[{ C-->SB }, { C-->b }]

word='babaabbbab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, S]      [A, S]      [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      [A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, S]      [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->BC }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->AA }, { S-->CC }, { S-->AB }, { S-->BS }]

word='babaabbbab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][B, S]      [A, B]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->b }, { A-->BS }]
B[{ B-->AC }, { B-->SA }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->CB }, { S-->a }, { S-->SC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->AC }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->AB }, { C-->BS }]

word='babaabbbab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[C]         [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][C]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->AB }, { A-->CA }]
B[{ B-->SA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->SS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->CA }, { C-->SB }, { C-->BB }, { C-->AB }, { C-->BS }]

word='babaabbbab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, S]      [A]         []          []          []          []          []          []          []          []          
[B, S, C]   [S]         [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          [A]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S, C]   [S]         [S]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->CA }, { S-->SB }, { S-->AB }]

word='bbbaaababa'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SA }, { A-->CA }]
B[{ B-->AB }, { B-->BC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->AA }, { B-->CC }, { B-->CS }]
C[{ C-->CA }, { C-->BA }, { C-->BB }, { C-->CS }, { C-->b }, { C-->BC }]
S[{ S-->AS }, { S-->SA }, { S-->BB }]

word='bbbaaababa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->b }]
S[{ S-->AS }, { S-->CA }, { S-->CC }, { S-->CS }, { S-->AB }]

word='bbbaaababa'
setV=setV
[A, B, C]   []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->b }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->SS }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }]

word='bbbaaababa'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->CC }, { B-->SC }]
C[{ C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->SB }, { S-->AA }, { S-->b }, { S-->AB }, { S-->BC }]

word='bbbaaababa'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }]
B[{ B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->BA }, { S-->BB }, { S-->SC }, { S-->BC }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->CS }]

word='aababbbaba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B]         [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, S, C]   [B, S]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B]         [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B]         [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B]         [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->CB }, { C-->SB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }, { C-->BS }]

word='aababbbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->CC }, { B-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='aababbbaba'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->AB }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->BC }]

word='aababbbaba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, S, C]   [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, S, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CC }]
S[{ S-->CB }, { S-->AA }]
C[{ C-->AS }, { C-->CA }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->BC }]

word='aababbbaba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          []          [A, B]      []          []          []          []          []          []          []          
[]          []          [B]         [B]         []          []          []          []          []          []          
[]          []          []          []          [A, B]      []          []          []          []          []          
[C]         [C]         [A, B, C]   [C]         [B, S, C]   [A, B]      []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, S, C]   [A, B]      []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S]   [B]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, S, C]   []          []          [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S]   []          []          [B]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->BC }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }]
S[{ S-->AC }, { S-->AS }, { S-->AA }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->AA }, { C-->CC }, { C-->b }, { C-->BS }]

word='ababaababa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B]      [A, B]      [B]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B]      [A, B]      [B]         []          []          []          []          []          
[A, B]      [A, B]      []          []          []          [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B]      [A, B]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AS }]
B[{ B-->BS }, { B-->AS }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->BC }]
S[{ S-->AS }, { S-->BS }]

word='ababaababa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [B, C]   []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [B, C]   []       []       []       []       []       
[]       []       []       []       [A, B, C][B, C]   []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [B, C]   []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[]       []       []       []       []       []       []       []       []       [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AB }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->SS }, { S-->CC }, { S-->AB }, { S-->BC }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->b }, { C-->BC }]

word='ababaababa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][C]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B, S, C][C]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, B, S, C][C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->SB }, { C-->a }, { C-->CC }, { C-->SC }, { C-->b }]

word='ababaababa'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->CA }, { B-->CB }, { B-->a }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->BC }]

word='ababaababa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->SA }, { B-->BA }, { B-->SC }, { B-->CS }]
S[{ S-->CB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->b }]

word='aabbbaabba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='aabbbaabba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->SC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->SS }, { C-->b }]

word='aabbbaabba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->BC }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->BA }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->AC }, { S-->CA }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->BB }, { C-->CC }, { C-->BC }]

word='aabbbaabba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B]      [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B]         [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->BC }, { S-->BS }]
C[{ C-->CA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->AB }]

word='aabbbaabba'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AC }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }]
C[{ C-->SA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->b }]
S[{ S-->AS }, { S-->CB }, { S-->SB }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->b }]

word='baabaabaab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->SC }]
B[{ B-->AB }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BC }]

word='baabaabaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[B, C]      [A, B, C]   [S]         []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A]         [C]         []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [S, C]      []          [S]         []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][B, C]      [A, B, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [B, C, S]   [A]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [S, C]      []          [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, C]   [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [B, C, S]   [A]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->SA }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->SC }]
C[{ C-->AC }, { C-->AS }, { C-->a }, { C-->SS }, { C-->SC }, { C-->b }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->SC }, { S-->b }, { S-->AB }]

word='baabaabaab'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][C]         []          []          []          []          []          []          []          []          
[A, B, C, S][]          [C]         []          []          []          []          []          []          []          
[A, B, C, S][B]         [B]         [A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B]      [A, B]      [A, B, C, S][C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [B]         [A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B]      [A, B, C, S][C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          [C]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B]         [B]         [A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->CB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->BA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }]

word='baabaabaab'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->CS }, { A-->CB }, { A-->SB }]
B[{ B-->AC }, { B-->BA }, { B-->CB }, { B-->BB }]
C[{ C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->BS }]
S[{ S-->BA }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }]

word='baabaabaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C, S]      [C]         []          []          []          []          []          []          []          []          
[C, S]      [C]         [C]         []          []          []          []          []          []          []          
[A, C]      [A]         [A]         [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C, S]      [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [C, S]      [C]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A]         [A]         [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C, S]      [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C, S]      [C]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A]         [A]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AB }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->BS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->AA }, { C-->SS }]

word='bbabaabbaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->AS }, { B-->CA }, { B-->a }, { B-->AA }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BS }]

word='bbabaabbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AC }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->CA }, { C-->AA }, { C-->b }]

word='bbabaabbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->BA }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SS }, { C-->SC }, { C-->b }, { C-->BC }]

word='bbabaabbaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->BS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->a }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->SA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CS }, { C-->b }, { C-->AB }]

word='bbabaabbaa'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->SA }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->a }, { B-->SC }]
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->CS }, { C-->b }]

word='abaaabaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->AB }, { S-->BS }]
C[{ C-->CA }, { C-->CB }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->BC }, { C-->BS }]

word='abaaabaabb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, B, S]   [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, C]      [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, B, S]   [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->BS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->a }, { C-->AA }, { C-->b }]

word='abaaabaabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->AS }, { B-->CA }, { B-->a }, { B-->AA }, { B-->CC }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->BA }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->BC }]

word='abaaabaabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, S]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->a }, { B-->SC }]
S[{ S-->SA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }]

word='abaaabaabb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BS }, { A-->AC }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->BA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->CB }, { C-->a }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }, { C-->BS }]

word='bbaabbbabb'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BC }, { A-->BS }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->AA }, { B-->CC }]
S[{ S-->CA }, { S-->a }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CS }, { C-->b }]

word='bbaabbbabb'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->CA }, { B-->BA }, { B-->SB }, { B-->CC }, { B-->SC }]
C[{ C-->a }, { C-->BB }, { C-->SS }, { C-->CC }]
S[{ S-->BA }, { S-->CB }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->b }]

word='bbaabbbabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, C, S]   [S]         []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->BC }, { A-->BS }, { A-->SA }, { A-->SB }]
B[{ B-->AB }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->a }, { C-->SC }, { C-->CS }, { C-->AB }, { C-->BC }]

word='bbaabbbabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S]   [S]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->BC }, { A-->CA }, { A-->CB }]
B[{ B-->BS }, { B-->CA }, { B-->BA }, { B-->CC }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->CC }, { C-->b }, { C-->AB }]

word='bbaabbbabb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][S, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [A, S]      [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [A]         [S]         []          []          []          []          []          []          
[A, B, S, C][A, B]      []          [A]         [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, C]      [A, C]      [A, B, S, C][S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, S]      [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A]         [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, B, S, C][S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->CC }, { B-->CS }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->AC }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BC }, { S-->BS }]

word='bbaaababaa'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][]          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->AB }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->a }, { C-->SS }, { C-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->SC }, { S-->AB }]

word='bbaaababaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          [B]         [B, C]      []          []          []          []          []          []          []          
[]          [B]         [A, B]      [B, C]      []          []          []          []          []          []          
[]          [B]         [A, B, S]   [A, B]      [B, C]      []          []          []          []          []          
[]          [B]         [A, B, C, S][A, B, S]   [A, B]      [B]         []          []          []          []          
[]          [B]         [A, B, C, S][A, B, C, S][A, B, S]   [B]         [B, C]      []          []          []          
[]          [B]         [A, B, C, S][A, B, C, S][A, B, S]   []          [A, B]      [B]         []          []          
[]          [B]         [A, B, C, S][A, B, C, S][A, B, S]   []          [A, B, S]   [B]         [B, C]      []          
[]          [B]         [A, B, C, S][A, B, C, S][A, B, S]   []          [A, B, S]   [B]         [A, B]      [B, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->a }, { S-->CC }, { S-->BC }]
C[{ C-->SB }, { C-->CC }, { C-->CS }, { C-->b }]

word='bbaaababaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          [S]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [B]         [A, C]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][]          [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->AB }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->CA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->a }, { C-->BB }, { C-->b }, { C-->BS }]

word='bbaaababaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BS }, { A-->CB }, { A-->SB }]
B[{ B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->a }, { S-->CC }, { S-->SC }, { S-->BS }]
C[{ C-->SA }, { C-->SB }, { C-->SC }, { C-->CS }, { C-->BS }, { C-->BA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='bbaaababaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S, C]      [C]         []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->BB }, { B-->SS }, { B-->CS }]
C[{ C-->BA }, { C-->AA }, { C-->CS }, { C-->BS }]
S[{ S-->AC }, { S-->SA }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->BS }]

word='baabaababb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A, B, C]   [A]         []          []          []          []          []          []          []          []          
[A, B, C]   [C]         [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [C]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AB }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->BB }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->CC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->AB }, { S-->BC }, { S-->BS }]

word='baabaababb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[B, C, S]   [S]         [A]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   []          [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [S]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   []          [A]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AS }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->AS }, { C-->CA }, { C-->SB }, { C-->a }, { C-->CC }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }, { S-->BC }, { S-->BS }]

word='baabaababb'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->b }, { A-->AB }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SC }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->BB }, { C-->SC }, { C-->b }]
S[{ S-->SA }, { S-->b }]

word='baabaababb'
setV=setV
[A, B, C, S][]          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][]          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][]          []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][]          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }]
B[{ B-->BS }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SS }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->CC }, { C-->CS }, { C-->b }, { C-->BS }]

word='baabaababb'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[B, S, C]   [A]         []          []          []          []          []          []          []          []          
[B, S, C]   []          [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   []          [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->CB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->SC }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bababbaaab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[C]         [B, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][B, C]      [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][C]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][B, C]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][C]         [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, C]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->b }, { S-->AB }, { S-->BC }, { S-->AC }, { S-->SA }, { S-->SB }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->SB }, { C-->a }, { C-->b }, { C-->AB }]

word='bababbaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->CB }, { C-->a }, { C-->SC }, { C-->b }]

word='bababbaaab'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }]
B[{ B-->AC }, { B-->AS }, { B-->CB }, { B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->BA }, { C-->SS }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bababbaaab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->CS }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->SA }, { B-->SB }, { B-->SC }, { B-->CS }, { B-->BS }, { B-->AS }, { B-->CB }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }]

word='bababbaaab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->SB }, { B-->BB }, { B-->SC }, { B-->CS }]
S[{ S-->BA }, { S-->a }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->CB }, { C-->SB }, { C-->a }]

word='bbbaabaaaa'
setV=setV
[A, B, S]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->BC }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->AS }, { B-->CA }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->AB }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->SS }]

word='bbbaabaaaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[A, S]      [B]         [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S]      [A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AB }, { A-->BC }, { A-->BA }, { A-->CB }]
B[{ B-->BC }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->SB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->AB }]

word='bbbaabaaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S, C]      [C]         []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      [C]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }, { A-->SB }]
B[{ B-->AC }, { B-->AS }, { B-->CA }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->a }, { S-->BB }, { S-->SS }, { S-->SC }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }]

word='bbbaabaaaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C]         [C]         []          []          []          []          []          []          []          []          
[C]         [C]         [C]         []          []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [B, S, C]   [A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [A, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->AS }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }, { C-->SA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BS }]

word='bbbaabaaaa'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->BA }, { B-->SS }]
C[{ C-->AC }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->b }, { C-->BC }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->BC }]

word='babaaaabba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[B, C, S]   [C]         []          []          []          []          []          []          []          []          
[A, B, C, S][]          [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A]         [B, C, S]   [C]         []          []          []          []          []          []          
[A, B, C, S][A, C]      [B, C, S]   []          [C]         []          []          []          []          []          
[A, B, C, S][A, C]      [B, C, S]   []          []          [C]         []          []          []          []          
[A, B, C, S][A, C]      [B, C, S]   []          []          []          [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][]          []          []          []          [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, S]      [A, S]      [A, S]      [A, S]      [A, B, C, S][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, B, C, S][B, C, S]   [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->SB }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->AS }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->SS }, { C-->SC }, { C-->b }]

word='babaaaabba'
setV=setV
[B, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AS }, { B-->SB }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->AA }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='babaaaabba'
setV=setV
[A, B, S, C][]          []          []          []          []          []          []          []          []          
[A, B, S, C][A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->CS }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->SA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }, { C-->b }, { C-->AB }]

word='babaaaabba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->BC }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->BA }, { B-->SB }, { B-->a }, { B-->SC }]
C[{ C-->AC }, { C-->a }, { C-->SS }, { C-->SC }, { C-->b }]
S[{ S-->SB }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->BC }, { S-->BS }]

word='babaaaabba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, C]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->SB }, { C-->BB }, { C-->CC }]

word='abaaaaabab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SA }, { C-->a }, { C-->AA }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BS }]

word='abaaaaabab'
setV=setV
[A, S, C]   []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CS }, { A-->b }, { A-->BC }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->CS }]
S[{ S-->SB }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->b }, { C-->BC }]

word='abaaaaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][]          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, C]      [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, C]      [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C][]          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [S]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->AB }, { B-->SB }, { B-->AA }]
S[{ S-->CA }, { S-->a }, { S-->SS }, { S-->CS }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->CA }, { C-->AA }, { C-->SS }, { C-->b }, { C-->BC }, { C-->BS }]

word='abaaaaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[A, S, C]   [S]         [S]         []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [S]         []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [A, S, C]   [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A]         []          [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A]         []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->SS }]
C[{ C-->CB }, { C-->a }, { C-->CS }, { C-->b }, { C-->BS }]
S[{ S-->SA }, { S-->SB }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BS }]

word='abaaaaabab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   []          []          []          []          []          []          []          []          
[A, B, C, S][S]         [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S]         [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][S]         [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}
