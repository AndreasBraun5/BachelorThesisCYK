

Result{
countGeneratedGrammars= 15000
countGeneratedGrammarsPerWord= 150
countDifferentWords= 100
totalTime= 5346ms
totalTime= 0min 5sec
generatorType= DICEROLLONLY
grammarGeneratorSettingsGrammarGeneratorSettingsDiceRoll{
minValueCompoundVariablesAreAddedTo=0
minValueTerminalsAreAddedTo=1
maxValueCompoundVariablesAreAddedTo=2
maxValueTerminalsAreAddedTo=2
favouritism=[1, 1, 1, 1]
grammarProperties=GrammarProperties: {
variables= [A, B, S, C]
variableStart= S
terminals= [a, b, c, d]
GrammarPropertiesGrammarRestrictions{
sizeOfWord=10
maxNumberOfVarsPerCell=3
}
GrammarPropertiesExamConstraints{
minRightCellCombinationsForced=1
maxSumOfProductions=10
maxSumOfVarsInPyramid=100

}
}
SuccessRates{
SUCCESSRATEOVERVIEW:
			-->	SUCCESSRATE=0.0014
			-->	SUCCESSRATEPRODUCIBILITY=0.4513333333333333
			-->	SUCCESSRATEGRAMMARRESTRICTIONS=0.6740666666666667
			-->	SUCCESSRATEEXAMCONSTRAINTS=0.0288

SUCCESSRATE=0.0014
trueCount=21
falseCount=14979
SUCCESSRATEPRODUCIBILITY=0.4513333333333333
trueProducibilityCount=6770
falseProducibilityCount=8230

SuccessRatesGrammarRestrictions{
trueGrammarRestrictionsCount=10111
falseGrammarRestrictionsCount=4889
			-->	SUCCESSRATEGrammarRestrictions=0.6740666666666667
trueSizeOfWordCount=15000
falseSizeOfWordCount=0
			-->	SUCCESSRATESizeOfWord=1.0
trueMaxNumberOfVarsPerCellCount=10111
falseMaxNumberOfVarsPerCellCount=4889
			-->	SUCCESSRATEMaxNumberOfVarsPerCell=0.6740666666666667
}

SuccessRatesExamConstraints{
trueExamConstraints=432
falseExamConstraints=14568
			-->	SUCCESSRATEExamConstraints=0.0288
trueRightCellCombinationsForcedCount=13104
falseRightCellCombinationsForcedCount=1896
			-->	SUCCESSRATERightCellCombinationsForced=0.8736
trueMaxSumOfProductionsCount=897
falseMaxSumOfProductionsCount=14103
			-->	SUCCESSRATEMaxSumOfProductions=0.0598
trueMaxSumOfVarsInPyramidCount=10065
falseMaxSumOfVarsInPyramidCount=4935
			-->	SUCCESSRATEMaxSumOfVarsInPyramid=0.671
}
}
}



RepresentativeResultSamples{

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->d }]
B[{ B-->BC }, { B-->SC }]
C[{ C-->c }, { C-->a }]
S[{ S-->d }, { S-->CB }, { S-->BB }, { S-->b }]

word='ababcbccaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [B]   [C]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    [S]   [S]   [B]   [A, C][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    [S]   [S]   [B]   [A, C][]    []    []    
[]    [S]   [S]   [B, S][B, S][B]   []    [A, C][]    []    
[S]   [B, S][B, S][B, S][B, S][B]   []    []    [C]   []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->c }, { A-->d }]
B[{ B-->a }, { B-->SC }]
S[{ S-->AS }, { S-->d }, { S-->a }, { S-->SS }]

word='bcdacdbbad'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S]   [S]   [S]   [A, S][S]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[S]   [S]   [S]   [A, S][S]   [S]   [S]   [S]   [B, S][]    
[S]   [S]   [S]   [A, S][S]   [S]   [S]   [S]   [A, S][A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->c }]
C[{ C-->d }, { C-->SA }, { C-->CB }]
S[{ S-->AC }, { S-->CA }, { S-->CS }]

word='addaaabacd'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A]   []    [C]   []    []    []    []    []    []    []    
[]    [S]   [S]   [A]   []    []    []    []    []    []    
[A, S][C]   [C]   []    [A]   []    []    []    []    []    
[C]   [S]   [S]   []    []    [A]   []    []    []    []    
[A, S][C]   [C]   []    []    []    [A]   []    []    []    
[C]   [S]   [S]   []    []    []    []    [A]   []    []    
[A, S][C]   [C]   []    []    []    []    []    [A]   []    
[A, S][]    []    []    []    []    []    []    [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->AC }]
B[{ B-->d }]
C[{ C-->SB }, { C-->a }, { C-->SS }, { C-->BC }]
S[{ S-->SC }, { S-->b }]

word='bbabadadab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [C]   []    [S]   []    []    []    []    []    []    
[S]   [C]   []    [S]   [C]   []    []    []    []    []    
[C]   [S]   []    [C]   []    [B]   []    []    []    []    
[S, C][C, S][]    [S]   []    [C]   [C]   []    []    []    
[C, S][S, C][]    [C]   []    []    []    [B]   []    []    
[S, C][C, S][]    [S]   []    []    []    [C]   [C]   []    
[C, S][S, C][]    [C]   []    []    []    []    []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->c }, { B-->CA }]
S[{ S-->AS }, { S-->d }, { S-->a }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->SB }, { C-->b }]

word='cbadcdbcad'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[C, S][C]   [C]   [C]   [B]   []    []    []    []    []    
[S]   []    []    []    []    [S]   []    []    []    []    
[S]   []    []    []    []    [S]   [S, C][]    []    []    
[S, C][S]   [S]   [S]   [S]   [C]   [C]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    [S]   []    
[S]   [S]   [S]   [S]   [S]   []    []    []    [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->d }]
B[{ B-->c }, { B-->BB }]
C[{ C-->b }]
S[{ S-->AA }, { S-->SS }]

word='bbaacbdccc'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[S]   []    [S]   [A]   []    []    []    []    []    []    
[S]   []    [S]   [A]   [B]   []    []    []    []    []    
[]    [S]   []    [S]   []    [A, C][]    []    []    []    
[S]   []    [S]   []    []    [S]   [A]   []    []    []    
[S]   []    [S]   []    []    [S]   [A]   [B]   []    []    
[S]   []    [S]   []    []    [S]   [A]   [B]   [B]   []    
[S]   []    [S]   []    []    [S]   [A]   [B]   [B]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->c }, { A-->SB }]
B[{ B-->b }, { B-->d }, { B-->SA }, { B-->a }]
S[{ S-->c }, { S-->AC }, { S-->AB }]

word='dccbadbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[A]      [B]      [A, S]   []       []       []       []       []       []       []       
[A, S]   [A, B]   [A, S]   [B]      []       []       []       []       []       []       
[A, S]   [A, B, S][A, B, S][A]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [A]      [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [S]      [A]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A]      [S]      [A]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][A]      [B, S]   [A]      [S]      [A]      [B]      []       
[A, B, S][A, B, S][A, B, S][B, S]   [A]      [B, S]   [A]      [S]      [A]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->c }]
B[{ B-->b }, { B-->BC }, { B-->SA }]
C[{ C-->d }, { C-->a }]
S[{ S-->d }, { S-->b }, { S-->AB }]

word='bcbaadbcdc'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [B, S]   []       []       []       []       []       []       []       
[A]      [S]      [B]      [C]      []       []       []       []       []       []       
[A]      [S]      [B]      []       [C]      []       []       []       []       []       
[A, B]   [A, S]   [B]      []       []       [C, S]   []       []       []       []       
[A, B, S][A, B, S][]       []       []       [A]      [B, S]   []       []       []       
[A, B, S][B, S]   []       []       []       []       [B]      [A]      []       []       
[A, B, S][A, B, S][]       []       []       []       [B]      []       [C, S]   []       
[A, B, S][A, B]   []       []       []       [B]      [A]      [S]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->c }, { B-->CC }]
C[{ C-->SA }, { C-->a }, { C-->SC }, { C-->CS }]
S[{ S-->d }, { S-->b }, { S-->BS }]

word='dcacdbcacb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[B]   []    [C]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[B, S][]    [C]   [S]   [S]   []    []    []    []    []    
[B, S][]    [C]   []    []    [S]   []    []    []    []    
[C]   []    [B]   [C]   [C]   [C]   [A, B][]    []    []    
[B]   []    []    [B]   [B]   [B]   []    [C]   []    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[B, S][]    [C]   [B, S][B, S][B, S][]    [C]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->SA }]
B[{ B-->c }, { B-->CB }, { B-->a }]
S[{ S-->AC }, { S-->b }]
C[{ C-->d }, { C-->b }, { C-->AB }]

word='cdccdbdcab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[C]      [B]      [B]      []       []       []       []       []       []       []       
[B]      []       []       [B]      []       []       []       []       []       []       
[A]      []       []       [A]      [C]      []       []       []       []       []       
[S]      []       []       [S]      []       [S, C]   []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[C]      [A]      [A]      [C]      [B]      [B]      [B]      [B]      []       []       
[A, B, S][C]      [C]      [B]      []       []       []       []       [B]      []       
[A, S]   []       []       [A]      []       []       []       []       [A]      [S, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }]
B[{ B-->SC }]
C[{ C-->AC }, { C-->AS }, { C-->a }, { C-->SS }, { C-->b }]
S[{ S-->d }, { S-->BC }]

word='dcdbbdadaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[B]      [C]      [S]      []       []       []       []       []       []       []       
[S]      []       [B]      [C]      []       []       []       []       []       []       
[B]      [C]      [S]      []       [C]      []       []       []       []       []       
[B]      [C]      [C]      []       []       [S]      []       []       []       []       
[S]      []       []       []       []       [B]      [A, C]   []       []       []       
[S, C]   []       []       []       []       [B]      [C]      [S]      []       []       
[B]      [C]      [C]      []       []       [S]      []       [B]      [A, C]   []       
[B, S, C][C]      [C]      []       []       [B, S]   [C]      [B, S]   [C]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }]
B[{ B-->b }, { B-->d }, { B-->SA }]
C[{ C-->a }, { C-->SC }]
S[{ S-->d }, { S-->CA }, { S-->BC }]

word='bdacdaabca'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[S]   [C, S][C]   []    []    []    []    []    []    []    
[B]   [B, S][S]   [A]   []    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[S]   [C, S][C]   []    [C, S][C]   []    []    []    []    
[S, C][C, S][C]   []    [C]   []    [C]   []    []    []    
[B, S][B, S][S]   []    [S]   []    [S]   [A, B][]    []    
[B]   [B]   [B]   []    [B]   []    [B]   []    [A]   []    
[S]   [S]   [S]   []    [S]   []    [S]   []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }]
B[{ B-->b }, { B-->d }, { B-->CA }]
C[{ C-->a }, { C-->b }, { C-->AB }]
S[{ S-->CB }, { S-->SC }]

word='bdacdaabca'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      []       [A, C]   []       []       []       []       []       []       []       
[]       []       [B]      [A]      []       []       []       []       []       []       
[S]      []       []       [C]      [B]      []       []       []       []       []       
[S]      []       [C, S]   [B]      []       [A, C]   []       []       []       []       
[S]      []       [B, S]   [S]      []       [B]      [A, C]   []       []       []       
[S]      []       [S]      [S]      []       []       [C, S]   [B, C]   []       []       
[S]      []       [S]      []       []       [C, S]   [B, C, S][B]      [A]      []       
[S]      []       [S]      [S]      []       [B, C, S][B, S]   []       []       [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }]
B[{ B-->b }, { B-->c }, { B-->AS }, { B-->CS }]
C[{ C-->CB }, { C-->a }, { C-->b }]
S[{ S-->CA }]

word='aadadbcdbd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B]   [S]   [A]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    [C]   [B]   [S]   [A]   []    []    []    []    []    
[]    [C]   []    []    []    [B, C][]    []    []    []    
[]    [C]   []    []    []    [C]   [B]   []    []    []    
[B, C][B, S][]    [C]   [B]   [S]   []    [A]   []    []    
[C]   []    []    [C]   []    []    []    []    [B, C][]    
[B, S][C]   [B]   [B, S][]    [C]   []    [B]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->a }, { B-->AA }]
S[{ S-->c }, { S-->d }, { S-->SB }, { S-->CS }]

word='dbdaadabad'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][B][S][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[S][B][S][] [B][] [] [] [] [] 
[S][B][S][] [B][S][] [] [] [] 
[S][B][S][] [B][S][B][] [] [] 
[S][B][S][] [B][S][] [B][] [] 
[S][B][S][] [B][S][] [] [B][] 
[S][B][S][] [B][S][] [] [B][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->c }, { A-->d }]
B[{ B-->SA }, { B-->SB }]
S[{ S-->c }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->b }]

word='bbcddacbbd'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[B]   [B]   [A, S][]    []    []    []    []    []    []    
[B]   [B]   [A, B][A]   []    []    []    []    []    []    
[B]   [B]   [A, B][A]   [A]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[S]   [S]   [S]   []    []    [B]   [A, S][]    []    []    
[]    []    []    []    []    []    []    [S, C][]    []    
[]    []    []    []    []    []    []    []    [S, C][]    
[B, S][B, S][B, S][]    []    [B, S][B]   [B]   [B]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->d }, { B-->CB }]
C[{ C-->c }, { C-->SC }, { C-->b }]
S[{ S-->BA }, { S-->BB }]

word='bbddababbd'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [B]      []       []       []       []       []       []       
[]       []       []       [S]      [A]      []       []       []       []       []       
[C]      [C]      []       [S, C]   [A]      [B, C]   []       []       []       []       
[]       []       []       []       []       [S]      [A]      []       []       []       
[C]      [C]      []       [C]      []       [S, C]   [A]      [B, C]   []       []       
[B, C, S][B, C, S][S]      [B, S, C][A]      [B, S, C][A]      [B, S]   [B, C]   []       
[B, S]   [B, S]   [S]      [B, S]   [A]      [B, S]   [A]      [B, S]   [B, S]   [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }]
B[{ B-->BB }]
C[{ C-->d }, { C-->SB }, { C-->a }, { C-->b }]
S[{ S-->c }, { S-->SC }, { S-->CS }, { S-->b }]

word='bbddaaddbc'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [C, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, C][]    []    []    []    []    []    []    
[S]   [S]   []    [A, C][]    []    []    []    []    []    
[S]   [S]   []    []    [C]   []    []    []    []    []    
[S]   [S]   []    []    []    [C]   []    []    []    []    
[S]   [S]   []    []    []    []    [A, C][]    []    []    
[S]   [S]   []    []    []    []    []    [A, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->a }]
C[{ C-->c }]
S[{ S-->d }, { S-->AB }, { S-->BS }]

word='abcbabadca'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[S]   [S]   []    [A, B][]    []    []    []    []    []    
[]    []    []    [S]   [B]   []    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[A]   [A]   []    [A, S][S]   [S]   [B]   []    []    []    
[A]   [A]   []    [A, S][A, S][A, S][S]   [A, S][]    []    
[A]   [A]   []    [A]   [A]   [A]   []    [A]   [C]   []    
[A, S][A, S][]    [A, S][A, S][A, S][S]   [S]   []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->BS }, { B-->d }, { B-->SB }]
C[{ C-->CA }, { C-->a }, { C-->AB }]
S[{ S-->c }, { S-->AA }]

word='ccbadbadba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [C]   []    []    []    []    []    []    
[C]   [C]   [C]   []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[C]   [C]   [C]   []    []    [A]   [C]   []    []    []    
[A, S][A, S][A, S][C]   [A]   [C]   []    [B]   []    []    
[B, C][B, C][B, C][]    [C]   []    []    []    [B]   []    
[A, S][A, S][A, S][C]   [A, S][C]   []    []    [A]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BC }]
B[{ B-->d }, { B-->CA }, { B-->SC }]
C[{ C-->c }]
S[{ S-->BA }, { S-->SB }]

word='cadcbbdddd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   [A]   [B]   []    []    []    []    []    []    []    
[A, S][]    [A]   [C]   []    []    []    []    []    []    
[B]   [A]   []    [B]   [A]   []    []    []    []    []    
[S]   []    []    [S]   []    [A]   []    []    []    []    
[S]   []    []    [S]   []    [A]   [B]   []    []    []    
[S]   []    []    [S]   []    [A]   []    [B]   []    []    
[S]   []    []    [S]   []    [A]   []    []    [B]   []    
[S]   []    []    [S]   []    [A]   []    []    []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AC }, { A-->d }]
B[{ B-->AS }, { B-->BA }, { B-->CS }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->SS }, { S-->AB }, { S-->BS }]
C[{ C-->c }, { C-->b }]

word='adcacbccad'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, S]   []       []       []       []       []       []       []       []       
[B, S]   [A, B, S][S, C]   []       []       []       []       []       []       []       
[A, B, S][B, S]   [B, S]   [A, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [A, B, S][S, C]   []       []       []       []       []       
[A, B, S][A, B, S][B]      [A, B]   []       [A, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][]       [A, B]   [S, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B, S][B, S]   [S, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B, S][B, S]   [B, S]   [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }, { A-->d }, { A-->CA }, { A-->CB }]
S[{ S-->c }, { S-->d }, { S-->a }]
C[{ C-->SA }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }]

word='adcacbccad'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, C][A, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A, C][A]   [C]   [A, S][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    [C]   [A, S][]    
[]    []    []    []    []    [C]   [C]   [A, C][A, C][A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->d }]
B[{ B-->c }, { B-->AC }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }]
S[{ S-->b }]
C[{ C-->d }, { C-->SA }, { C-->CA }, { C-->SC }, { C-->AB }, { C-->BS }]

word='adcacbccad'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[]    [C]   [B]   [B]   []    []    []    []    []    []    
[]    [C]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B, C][C]   [C]   [C]   [A, S][]    []    []    []    
[B]   [B, C][B]   [B]   [B]   [B, C][B]   []    []    []    
[B]   [B, C][B]   [B]   [B]   [B, C][B]   [B]   []    []    
[B]   [B, C][B]   [B]   [B]   [B, C][B]   [B]   [B]   []    
[B]   [B, C][B]   [B]   [B]   [B, C][]    []    []    [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }]
S[{ S-->c }, { S-->BB }]
C[{ C-->c }, { C-->d }]

word='adcacbccad'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[B]      [A]      [S, C]   []       []       []       []       []       []       []       
[B, S]   [B]      [A, B]   [A, B]   []       []       []       []       []       []       
[A, B, S][B]      [A, B]   [A, B]   [S, C]   []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [B, S]   [B]      [B]      []       []       []       []       
[A, B, S][A, B]   [A, B]   [A]      []       []       [S, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      [B]      [A]      [S, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A, B]   [A, B]   [A, B]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      [B]      [B]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }, { A-->AC }, { A-->d }, { A-->CA }, { A-->SB }]
B[{ B-->d }, { B-->CB }]
S[{ S-->c }, { S-->b }]
C[{ C-->AS }, { C-->BA }, { C-->CC }, { C-->b }]

word='adcacbccad'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[A]   [C]   [A, S][]    []    []    []    []    []    []    
[]    [A]   []    [A]   []    []    []    []    []    []    
[A]   [C]   [A]   [C]   [A, S][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][S, C][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   [A, S][]    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [C]   [A, S][]    []    
[A]   [A, C][A]   [A]   [A]   [A]   [A]   []    [A]   []    
[]    [A, B][]    []    []    []    []    []    []    [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->CA }, { A-->CB }]
B[{ B-->c }, { B-->d }]
S[{ S-->SA }, { S-->a }]
C[{ C-->c }, { C-->AS }, { C-->SC }, { C-->b }, { C-->AB }]

word='ddcbabdbdc'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [A]      [B, C]   []       []       []       []       []       []       []       
[]       []       [A]      [C]      []       []       []       []       []       []       
[]       [A]      [A, C]   [A]      [A, S]   []       []       []       []       []       
[]       []       []       []       [C]      [C]      []       []       []       []       
[]       [A]      [A, C]   [A]      [A, S]   [A]      [B]      []       []       []       
[]       [A]      [A, C]   [A]      [A, S, C][A]      [A]      [C]      []       []       
[A]      [A, C]   [A, C]   [A, C]   [A, C, S][C]      [C]      [A]      [B]      []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, S, C][A]      [A]      [A, C]   [A]      [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->d }, { B-->CA }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->c }, { C-->AS }, { C-->CB }, { C-->CS }, { C-->BS }]

word='ddcbabdbdc'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[S]         [A, B]      []          []          []          []          []          []          []          []          
[S, C]      [A, S]      [A, C]      []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [C]         [B, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][S, C]      [A, S]      []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B, S, C][A, C, S]   [S, C]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C, S]   [S]         [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][S, C]      [A, S]      [C]         [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, S]      [B, C]      [S]         [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, B, C, S][S, C]      [A, S]      [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->AB }]
B[{ B-->b }, { B-->c }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->d }, { S-->CB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->d }, { C-->BC }]

word='ddcbabdbdc'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [S, C]   []       []       []       []       []       []       []       []       
[A, S]   [S]      [B]      []       []       []       []       []       []       []       
[A, S]   [S]      [B]      [B, S]   []       []       []       []       []       []       
[A, S]   [S]      [B]      [B, S]   [B, S]   []       []       []       []       []       
[A, S]   [S]      [B]      [B, S]   [B, S]   [B, S]   []       []       []       []       
[A, S]   [A, S]   [C]      [A, S, C][A, S, C][A, S, C][S, C]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [B, S]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S, C][S, C]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BS }, { A-->c }, { A-->AS }, { A-->d }]
B[{ B-->AB }, { B-->SB }, { B-->a }]
S[{ S-->c }, { S-->a }, { S-->AA }]
C[{ C-->SA }, { C-->b }]

word='ddcbabdbdc'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      [A, S]      []          []          []          []          []          []          []          
[A, S, C]   [A, S]      [A]         [C]         []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B]      []          [B, S]      []          []          []          []          []          
[A, S, C]   [A, S, C]   [S]         []          [A]         [C]         []          []          []          []          
[A, S, C]   [A, S, C]   [A, C]      []          [S]         []          [A]         []          []          []          
[A, S, C]   [A, S, C]   [S]         []          [A]         []          []          [C]         []          []          
[A, S, C]   [A, S, C]   [A, C]      []          [S]         []          []          []          [A]         []          
[A, C, S]   [A, S, C]   [A, S, C]   []          [A, S, C]   []          []          []          [A, S]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CS }, { A-->c }]
B[{ B-->c }, { B-->CA }, { B-->CB }, { B-->SC }]
S[{ S-->AC }, { S-->d }, { S-->BA }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BS }]

word='ddcbabdbdc'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [S]   [S]   []    []    []    
[]    []    []    []    []    [S]   [S]   [S]   []    []    
[]    []    []    []    []    [S]   [S]   [S]   [S]   []    
[]    []    []    []    []    []    []    []    []    [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }]
B[{ B-->b }, { B-->AB }, { B-->CA }, { B-->CB }]
S[{ S-->d }, { S-->AA }, { S-->b }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->SB }, { C-->BS }]

word='acdbdcbbbc'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[S]         [A]         [S, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [A, B, C]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, C]      [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, C]      [A]         [C]         []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B, C]      [B]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [A, C]      [B, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, C]      [A]         []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BC }, { A-->d }, { A-->SA }, { A-->CB }]
B[{ B-->BS }, { B-->BA }, { B-->a }]
C[{ C-->c }]
S[{ S-->d }, { S-->SB }, { S-->SS }]

word='acdbdcbbbc'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A]   []    [A, S][]    []    []    []    []    []    []    
[A]   []    [A]   [A]   []    []    []    []    []    []    
[A]   []    [A]   [A]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    [A]   [A]   []    []    
[]    []    []    []    []    []    [A]   [A]   [A]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->c }, { A-->AC }, { A-->d }, { A-->CA }]
B[{ B-->SS }]
C[{ C-->SB }, { C-->a }]
S[{ S-->c }, { S-->CB }]

word='acdbdcbbbc'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }, { A-->d }, { A-->CA }]
B[{ B-->c }, { B-->BA }, { B-->SB }]
S[{ S-->d }, { S-->AA }, { S-->BB }, { S-->BS }]
C[{ C-->SA }, { C-->CB }, { C-->BC }]

word='acdbdcbbbc'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, S]      [B, S]      [A, S]      []          []          []          []          []          []          []          
[A, S, C]   [B, C, S]   [S, C]      [A]         []          []          []          []          []          []          
[A, S, C]   [A, B, S, C][A, C]      [S]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [S]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, C, S]   [C]         [S]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [B, S]      [A]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->c }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->d }, { B-->CC }, { B-->SC }]
C[{ C-->d }, { C-->a }, { C-->b }]
S[{ S-->c }]

word='acdbdcbbbc'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A, B][B, C][]    []    []    []    []    []    []    
[A]   [A, B][B]   [B, C][]    []    []    []    []    []    
[A]   [A, B][B]   [B]   [B, C][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][B, C][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][B]   [B, C][]    []    
[A]   [A]   [A]   [A]   [A]   [A, B][B]   [B]   [B, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->d }, { A-->BA }, { A-->CB }]
B[{ B-->d }, { B-->a }, { B-->SS }]
S[{ S-->SB }, { S-->b }, { S-->AB }]
C[{ C-->c }, { C-->CC }]

word='ddaaadaddb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [B]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [B]      []       []       []       []       []       []       
[A, B, S][A, S]   [A, S]   [A]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, S]   [A]      [A, B]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A, S]   [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A, S]   [A]      [A, B]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A, B]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [A]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }]
B[{ B-->b }, { B-->BC }, { B-->c }, { B-->CB }]
S[{ S-->c }, { S-->SA }, { S-->SB }, { S-->a }]
C[{ C-->AC }, { C-->d }, { C-->CA }, { C-->AA }, { C-->b }]

word='ddaaadaddb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[]          []          []          []          [S]         []          []          []          []          []          
[]          []          []          [S]         [A]         [C]         []          []          []          []          
[]          []          []          []          []          []          [S]         []          []          []          
[]          []          [S]         [A, S]      [A, C]      [C]         [A]         [C]         []          []          
[A, C]      [C]         [A, S]      [A, S, C]   [A, S, C]   [A]         [S, C]      [A]         [C]         []          
[A, B, C]   [A, B, C]   [A, S, C]   [A, B, S, C][A, B, S, C][A, B, C]   [A, B, S, C][B, C]      [A, B]      [B, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->CB }]
B[{ B-->AC }, { B-->d }, { B-->a }, { B-->BB }]
C[{ C-->SB }, { C-->b }]
S[{ S-->c }, { S-->SA }, { S-->AA }]

word='ddaaadaddb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[]    []    []    []    []    []    []    []    []    [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->b }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->d }, { C-->AA }, { C-->b }, { C-->BS }]
S[{ S-->AC }]

word='ddaaadaddb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    [B]   [B]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    [B]   [B]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->CA }, { B-->AA }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->a }, { S-->AB }]
C[{ C-->c }, { C-->SB }, { C-->a }, { C-->CS }, { C-->BC }]

word='ddaaadaddb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S, C]      []          []          []          []          []          []          []          
[]          []          [A, C]      [S, C]      []          []          []          []          []          []          
[]          [C]         [A, B, S, C][A, C]      [S, C]      []          []          []          []          []          
[]          [C]         [A, B, C, S][A, S, C]   [C]         [S]         []          []          []          []          
[]          [A, C]      [A, B, C, S][A, B, S, C][A, C]      []          [S, C]      []          []          []          
[]          [A, S, C]   [A, B, C, S][A, B, C, S][A, S, C]   []          [C]         [S]         []          []          
[]          [A, S, C]   [A, B, C, S][A, B, C, S][A, S, C]   []          [C]         []          [S]         []          
[C]         [A, B, C]   [A, B, C, S][A, B, C, S][A, B]      [C]         [B]         []          []          [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->c }, { A-->CA }]
B[{ B-->BC }, { B-->AC }, { B-->BA }, { B-->SS }]
S[{ S-->c }, { S-->SA }, { S-->AB }]
C[{ C-->d }]

word='acbbdacdbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[]       [S]      []       [A]      []       []       []       []       []       []       
[S]      [A, B]   [S]      [B]      [C]      []       []       []       []       []       
[S]      [B, S]   [S]      [B]      [A]      [A]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      []       []       [A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [S]      [S]      [A, B]   [C]      []       []       
[B, S]   [A, B, S][B, S]   [A, B]   [S]      [S]      [B, S]   [A]      [A]      []       
[B, S]   [A, B, S][B, S]   [A, B]   [S]      [S]      [B, S]   []       []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }]
B[{ B-->b }, { B-->c }, { B-->SC }]
S[{ S-->c }, { S-->AC }, { S-->BA }, { S-->CB }, { S-->a }, { S-->CS }]
C[{ C-->a }]

word='acbbdacdbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[]    []    []    [B]   [S]   [S, C][]    []    []    []    
[]    []    []    []    []    [S]   [B, S][]    []    []    
[]    []    []    []    []    [S]   [S]   [A]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }, { A-->d }]
B[{ B-->BS }, { B-->c }, { B-->SA }, { B-->a }, { B-->AA }, { B-->SC }]
S[{ S-->d }, { S-->a }, { S-->BB }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->SS }, { C-->b }]

word='acbbdacdbb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S, C][A, B]   []       []       []       []       []       []       []       []       
[B, S, C][B, C]   [A, C]   []       []       []       []       []       []       []       
[B, C, S][C, S]   [B, C]   [A, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, C]   [B, C]   [A, S]   []       []       []       []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][C]      [B, S]   []       []       []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, C]   [B, S, C][A, B]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B, S, C][B, C]   [A, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][S, C]   [B, C]   [A, C]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C]   [B, C]   [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }, { A-->CB }]
B[{ B-->a }]
S[{ S-->AS }, { S-->AA }, { S-->b }, { S-->AB }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->BA }]

word='acbbdacdbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [C]   [A, C][]    []    []    []    []    
[]    []    [C]   [A, C][A, S][B]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    [S]   [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->CS }]
B[{ B-->c }, { B-->AC }, { B-->a }]
S[{ S-->d }, { S-->CC }, { S-->b }, { S-->BC }]

word='acbbdacdbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[]    []    []    [A]   [S]   []    []    []    []    []    
[]    []    []    []    []    [A, B][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    [A]   [S]   []    
[]    []    []    []    []    []    []    []    [A]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->d }]
B[{ B-->SB }]
C[{ C-->d }, { C-->SA }, { C-->a }, { C-->b }]
S[{ S-->c }, { S-->AS }, { S-->CB }, { S-->CC }, { S-->SC }, { S-->BC }]

word='accdcdcacb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       [S]      [C, S]   [A, C]   []       []       []       []       []       []       
[]       []       []       [S]      [S]      []       []       []       []       []       
[]       [S]      [C, S]   [A, S, C][C, S]   [A, C]   []       []       []       []       
[]       []       []       [S]      []       [S]      [S]      []       []       []       
[]       []       []       [S]      []       [S]      [S]      [C]      []       []       
[]       []       []       []       []       []       []       []       [S]      []       
[]       []       []       [S]      []       [S]      [S]      [S]      [C, S]   [A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->d }]
B[{ B-->c }, { B-->d }, { B-->SA }, { B-->a }, { B-->SS }]
S[{ S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->CB }]

word='accdcdcacb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[C]   [C]   [A, B][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, B][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A, B][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [A, B][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, B][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    [B]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    [C]   [A, B][]    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->CC }]
S[{ S-->SA }, { S-->BA }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->c }, { C-->AC }, { C-->CB }, { C-->SC }, { C-->BC }, { C-->BS }]

word='accdcdcacb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [B, C]   []       []       []       []       []       []       []       []       
[B, C]   [B, S, C][B, C]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][S, C]   [B]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][S, C]   [B, C]   []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      [S, C]   [B]      []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][S, C]   [B, C]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][C, S]   [S]      [A]      []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C]   [C]      [B, C]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][C, S]   [S, C]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->c }, { A-->AS }]
B[{ B-->d }, { B-->CB }]
S[{ S-->a }, { S-->AA }, { S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->a }, { C-->CS }, { C-->b }]

word='accdcdcacb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[C]   [S]   [A]   []    []    []    []    []    []    []    
[B]   []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    [A]   [S, C][]    []    
[]    []    []    []    [A]   [S]   [S]   []    [A]   []    
[]    []    []    []    [A]   [S]   [S]   []    [A]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->AC }, { A-->AS }, { A-->d }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->d }, { B-->SB }, { B-->a }]
C[{ C-->BA }]

word='accdcdcacb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    [A]   [C]   [A]   []    []    []    []    []    
[]    []    []    [A]   []    [A, B][]    []    []    []    
[]    []    [A]   [C]   [A]   [C]   [A]   []    []    []    
[]    []    []    [A]   []    [A]   []    [B]   []    []    
[]    []    [A]   [C]   [A]   [C]   [A]   [C]   [A]   []    
[]    []    []    [A]   []    [A]   []    [A]   []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BS }, { B-->c }, { B-->a }]
S[{ S-->SA }, { S-->BB }, { S-->b }]
C[{ C-->c }, { C-->d }, { C-->CB }]

word='ddccdaccdc'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [B, C][]    []    []    []    []    []    []    
[]    [C]   [S, C][B, C][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   [A, B][]    []    []    []    
[]    []    []    []    [C]   [S]   [B, C][]    []    []    
[]    []    []    []    [C]   [B]   [S, C][B, C][]    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    [C]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->b }, { A-->BC }, { A-->d }]
B[{ B-->BS }, { B-->AC }, { B-->CA }]
C[{ C-->c }, { C-->AS }, { C-->CB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->b }]

word='ddccdaccdc'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[B]      [B]      [C]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [C]      [C]      []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [B]      [A]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [B]      [C]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C]      [C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C]      [C]      [C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [B]      [A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [B]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->c }, { A-->d }, { A-->CB }]
B[{ B-->AA }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->BB }, { S-->BS }]
C[{ C-->AC }, { C-->SA }, { C-->SS }]

word='ddccdaccdc'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, C, S]   [B, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, S, C]   [B, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, C, S]   [B, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, C, S]   [C]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [C]         [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A]         [B, C]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C, S]   [B, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->c }, { A-->d }, { A-->CB }]
B[{ B-->c }, { B-->CS }]
S[{ S-->a }]
C[{ C-->d }, { C-->CA }, { C-->a }, { C-->BS }]

word='ddccdaccdc'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[C]      [A, C]   []       []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, B]   []       []       []       []       []       []       []       
[A, C]   [A, C]   []       [A, B]   []       []       []       []       []       []       
[C]      [C]      []       []       [A, C]   []       []       []       []       []       
[A, B, C][A, B]   []       []       [B]      [S, C]   []       []       []       []       
[A, C]   [C]      []       []       [C]      [A, C]   [A, B]   []       []       []       
[A, C]   [A, C]   []       []       [A, C]   [A, C]   []       [A, B]   []       []       
[C]      [C]      []       []       [C]      [C]      []       []       [A, C]   []       
[A, C]   [A, C]   []       []       [A, C]   [A, C]   []       []       [A, C]   [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->d }, { A-->SB }]
B[{ B-->c }]
S[{ S-->d }, { S-->BB }]

word='ddccdaccdc'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [S]   [B]   []    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    [A]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }]
B[{ B-->b }]
C[{ C-->c }, { C-->a }, { C-->SC }, { C-->AB }]
S[{ S-->d }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->BS }]

word='abbdbdbacd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [S]   []    []    []    []    []    []    
[C]   []    []    []    [B]   []    []    []    []    []    
[A, S][S]   [S]   [S]   [S]   [S]   []    []    []    []    
[C]   []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    [A]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->c }, { A-->AS }, { A-->d }]
B[{ B-->c }, { B-->d }, { B-->AA }, { B-->SC }]
S[{ S-->CB }, { S-->a }, { S-->b }, { S-->BS }]

word='abbdbdbacd'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       [A, B]   []       []       []       []       []       []       
[]       []       []       [A, S]   [S]      []       []       []       []       []       
[]       []       []       [B]      []       [A, B]   []       []       []       []       
[]       []       []       [A, B, S][]       [A, S]   [S]      []       []       []       
[]       []       []       [A, B, S][]       [A]      []       [S]      []       []       
[]       []       []       [B]      []       [B]      []       []       [A, B]   []       
[]       []       []       []       []       []       []       []       [B]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->SC }, { A-->AS }, { A-->d }]
B[{ B-->AB }, { B-->a }]
S[{ S-->c }, { S-->d }, { S-->AA }, { S-->CC }, { S-->b }]
C[{ C-->CA }, { C-->CB }, { C-->BS }]

word='abbdbdbacd'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[]       [A]      [S]      []       []       []       []       []       []       []       
[C]      [A, S]   [A]      [A, S]   []       []       []       []       []       []       
[C]      [A, S]   [A]      [A]      [S]      []       []       []       []       []       
[C]      [A, S]   [A, S]   [A, S]   [A]      [A, S]   []       []       []       []       
[C]      [A, S]   [A, S]   [A, S]   [A]      [A]      [S]      []       []       []       
[A, C]   [B]      [B]      [B]      [B]      [B]      []       [B]      []       []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [A]      [C]      [S]      []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S]   [C]      [A]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->d }]
B[{ B-->c }, { B-->d }, { B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->SC }, { C-->b }, { C-->BC }]
S[{ S-->BB }, { S-->AB }]

word='abbdbdbacd'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, C]      []          []          []          []          []          []          []          []          
[B, C, S]   [B, C]      [A, C]      []          []          []          []          []          []          []          
[B, C, S]   [A, B, S]   [B, S]      [A, B]      []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [B, C]      [C]         [A, C]      []          []          []          []          []          
[B, C, S]   [A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [A, B]      []          []          []          []          
[B, C, S]   [A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [C]         [A, C]      []          []          []          
[B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      []          []          
[B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [B]         []          
[B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [S]         [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->b }, { B-->c }, { B-->d }]
S[{ S-->d }, { S-->BA }, { S-->a }]
C[{ C-->AC }, { C-->SA }, { C-->b }]

word='abbdbdbacd'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SC }, { B-->CS }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->SB }, { C-->a }, { C-->AA }, { C-->BB }, { C-->BC }, { C-->BS }]
S[{ S-->c }, { S-->CC }, { S-->AB }]

word='baaaaacacc'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[C, S]   [S]      [C]      []       []       []       []       []       []       []       
[B, S, C][B]      [S]      [C]      []       []       []       []       []       []       
[B, C, S][C]      [B]      [S]      [C]      []       []       []       []       []       
[B, C, S][C, S]   [C]      [B]      [S]      [C]      []       []       []       []       
[B, S, C][B, C, S][B, S, C][C]      [B]      [B, S]   [C, S]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][S, C]   [B, C]   [B, S]   [C]      []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, C]   [B, S]   [C, S]   []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C, S][B, C]   [B, S]   [C, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CS }, { A-->b }, { A-->c }, { A-->SA }]
B[{ B-->b }, { B-->d }, { B-->a }, { B-->SC }]
S[{ S-->c }, { S-->a }, { S-->BS }]
C[{ C-->d }, { C-->BA }, { C-->AB }]

word='baaaaacacc'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[S, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      [B, S]      []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, S]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, S]      [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, S, C]   [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SC }, { A-->AS }, { A-->SA }]
B[{ B-->AB }, { B-->d }, { B-->CC }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->b }]
S[{ S-->AC }]

word='baaaaacacc'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[]       [B]      [C]      []       []       []       []       []       []       []       
[A]      []       [B]      [C]      []       []       []       []       []       []       
[S]      [A]      []       [B]      [C]      []       []       []       []       []       
[A, B]   [S]      [A]      []       [B]      [C]      []       []       []       []       
[S]      [A, B]   [S]      [A]      []       [B]      [C]      []       []       []       
[A, B]   [S]      [A, B]   [S]      [A]      []       [B]      [C]      []       []       
[A, S]   [A, B]   [S]      [A, B]   [S]      [A]      []       [B]      [C]      []       
[A, B, S][A, S]   [A, B]   [S]      [A, B]   [S]      [A]      []       [B]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->AB }, { A-->BS }, { A-->d }]
S[{ S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->b }]
C[{ C-->c }, { C-->SS }, { C-->b }]

word='baaaaacacc'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [A]      [C]      [S]      []       []       []       []       []       []       
[C, S]   [S]      [A]      [C]      [S]      []       []       []       []       []       
[A, C]   [S, C]   [S]      [A]      [C]      [S]      []       []       []       []       
[C, S]   [A, S]   [A, C]   [C, S]   [S]      [A]      [C]      []       []       []       
[A, C, S][S, C]   [A, S]   [A, C]   [C]      []       []       [S]      []       []       
[A, S, C][A, C, S][A, C, S][S, C]   [A, S]   [C]      [S]      [A]      [C]      []       
[A, S, C][A, S, C][A, S, C][A, S, C][A, C, S][S]      [A]      []       []       [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->c }, { B-->d }, { B-->a }]
C[{ C-->AS }, { C-->BA }, { C-->SB }, { C-->b }]
S[{ S-->c }, { S-->AC }, { S-->SC }, { S-->CS }]

word='baaaaacacc'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[]    [C]   [A]   [B]   []    []    []    []    []    []    
[]    []    [C]   [A]   [B]   []    []    []    []    []    
[S]   [S]   []    [C]   [A]   [B]   []    []    []    []    
[C]   [C]   [S]   [S]   [C]   [A]   [B, S][]    []    []    
[S]   [C, S][C]   [S, C][S]   [C]   [A, C][B]   []    []    
[S, C][C, S][C, S][C, S][C, S][S]   [C, S][A]   [B, S][]    
[S, C][C, S][C, S][C, S][C, S][S, C][S, C][C]   [A, C][B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BC }, { A-->SB }]
B[{ B-->AC }, { B-->d }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->a }, { S-->AA }, { S-->AB }]
C[{ C-->CA }, { C-->SC }, { C-->CS }]

word='dcdbacdcab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [A]   [B, S][]    []    []    []    []    []    []    
[]    [S]   []    [A]   []    []    []    []    []    []    
[]    [S]   []    [S]   [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [A]   [B, S][]    []    []    
[]    []    []    []    []    [S]   []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->c }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->d }, { B-->SA }, { B-->BB }]
S[{ S-->BA }, { S-->a }, { S-->SS }, { S-->SC }, { S-->CS }]
C[{ C-->c }, { C-->d }, { C-->CC }]

word='dcdbacdcab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S, C]   [A, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, C]   [B, C]   []       []       []       []       []       []       []       
[A, B, S][A]      [A, B]   [B]      []       []       []       []       []       []       
[A, B, S][A, S]   [A, S]   [S]      [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A, B, S][A, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, C]   [B, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S, C][S, C]   [A, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      [A]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }]
B[{ B-->c }, { B-->AC }, { B-->d }, { B-->SA }, { B-->BA }]
C[{ C-->a }, { C-->CS }]
S[{ S-->d }, { S-->AA }, { S-->SC }, { S-->b }]

word='dcdbacdcab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B]      [A, B]   []       []       []       []       []       []       []       []       
[]       []       [B, S]   []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       [B, S]   [A, C]   []       []       []       []       []       
[]       []       []       [B]      [S]      [A, B]   []       []       []       []       
[]       []       []       []       []       []       [B, S]   []       []       []       
[]       []       []       []       []       []       [B]      [A, B]   []       []       
[]       []       []       [B, S]   [B, C]   [B, S]   [A, B]   [A, B, S][A, C]   []       
[]       []       []       [B, S]   [B, C]   [B, S]   [A, B]   [A, B]   [C]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SS }]
C[{ C-->c }, { C-->SA }, { C-->CB }, { C-->a }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->CS }]

word='dcdbacdcab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [C, S]   []       []       []       []       []       []       []       []       
[B]      [B, S]   [S]      []       []       []       []       []       []       []       
[B, S]   [C, S]   [C]      [A]      []       []       []       []       []       []       
[B]      [B, C]   [C]      []       [B, C]   []       []       []       []       []       
[B]      [B, S]   [S]      []       [S]      [C, S]   []       []       []       []       
[B]      [B, C, S][B, C, S][]       [B, C, S][B, S]   [S]      []       []       []       
[B]      [B, C, S][B, C, S][]       [B, C, S][B, C]   [B]      [C, S]   []       []       
[B]      [B, C]   [B, C]   []       [B, C]   [B, C]   [B]      [B, C]   [B, C]   []       
[B, S]   [B, C, S][B, C, S][]       [B, C, S][B, C, S][B, S]   [B, S]   [S]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SA }]
B[{ B-->b }, { B-->c }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->d }, { S-->SB }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->c }, { C-->d }, { C-->BC }]

word='dcdbacdcab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[B, S, C][B, S, C][S, C]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [B]      []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][C, S]   [C]      [B, C]   []       []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [B, C]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->c }, { B-->SC }]
C[{ C-->AS }, { C-->d }, { C-->a }, { C-->SS }, { C-->b }]
S[{ S-->d }]

word='dabcbdbbcb'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    [A]   [C, S][]    []    []    []    
[]    []    []    []    [A]   [B]   [B, C][]    []    []    
[]    []    []    []    [A]   []    []    [B, C][]    []    
[]    []    []    []    [A]   []    []    []    [B]   []    
[]    []    []    []    [A]   []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->BS }, { A-->c }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->SA }, { B-->a }]
S[{ S-->c }, { S-->b }]
C[{ C-->CC }]

word='dabcbdbbcb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A]   [A]   [B, S][]    []    []    []    []    []    []    
[A]   [A]   [A, B][A, S][]    []    []    []    []    []    
[]    []    [A]   []    [B, S][]    []    []    []    []    
[]    []    [A]   []    [B]   [A]   []    []    []    []    
[A]   [A]   [A, B][A, B][A]   []    [B, S][]    []    []    
[A]   [A]   [A, B][A]   [B]   [A]   [A]   [B, S][]    []    
[A]   [A]   [A, B][A, B][A, B][A]   [A, B][A, B][A, S][]    
[A]   [A]   [A, B][A, B][A, B][A]   [A, B][A]   []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->c }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->d }, { B-->a }, { B-->CC }]
C[{ C-->SA }, { C-->a }, { C-->BS }]
S[{ S-->d }, { S-->SS }, { S-->CS }]

word='dabcbdbbcb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[A, C][A]   [B]   []    []    []    []    []    []    []    
[A, C][A]   [A]   [A]   []    []    []    []    []    []    
[A]   []    []    []    [B]   []    []    []    []    []    
[B]   []    []    []    [C]   [B, S][]    []    []    []    
[A, C][A]   [A]   [A]   [A]   []    [B]   []    []    []    
[A]   []    []    []    []    []    []    [B]   []    []    
[A, C][A]   [A]   [A]   [A]   [A, C][A]   [A]   [A]   []    
[A, C][A]   [A]   [A]   [A]   [A]   []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->d }]
B[{ B-->AC }, { B-->d }, { B-->SB }, { B-->a }, { B-->SC }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->CB }, { C-->AA }, { C-->SS }, { C-->BS }]

word='dabcbdbbcb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[B, S]   [C]      [S]      []       []       []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [A, C]   []       []       []       []       []       []       
[B, C, S][B, S, C][C]      [S]      [S]      []       []       []       []       []       
[B, C, S][B, S, C][B, C, S][B, S, C][B, S]   [A, B]   []       []       []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, C]   [C]      [S]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, S]   [C]      [S]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, S]   [A, C]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][C]      [S]      [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->c }, { B-->BB }, { B-->CS }]
S[{ S-->AC }, { S-->d }, { S-->a }, { S-->b }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->b }]

word='dabcbdbbcb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    []    []    [B]   [S, C][]    []    []    []    []    
[]    []    []    [B]   [B]   [S, C][]    []    []    []    
[]    []    []    [B]   []    [B]   [S, C][]    []    []    
[]    []    []    [B]   [B]   []    [B]   [S, C][]    []    
[]    []    []    [B]   [B]   []    [B]   []    [B, C][]    
[]    []    []    [B]   [B]   []    [B]   []    [B]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }]
B[{ B-->b }, { B-->BS }, { B-->SB }]
C[{ C-->AC }, { C-->AS }, { C-->a }, { C-->CC }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->CB }, { S-->AA }]

word='dbdacccabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [A, B]   []       []       []       []       []       []       []       []       
[B]      [B, C]   [S]      []       []       []       []       []       []       []       
[S]      [C, S]   []       [A, C]   []       []       []       []       []       []       
[]       [C]      []       [C]      [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [A, C]   []       []       
[]       []       []       []       []       []       []       [S]      [A, B]   []       
[B]      [B, S]   []       [S]      [B]      [B]      [B]      [B, C, S][A, S]   [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->c }, { A-->AC }]
B[{ B-->c }, { B-->d }, { B-->CB }]
S[{ S-->CA }, { S-->a }, { S-->AB }]
C[{ C-->d }, { C-->SS }, { C-->CS }]

word='dbdacccabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[S, C]      [A, S]      [B, C]      []          []          []          []          []          []          []          
[C, S]      [A, C]      [C]         [S]         []          []          []          []          []          []          
[B, S, C]   [A, B, S]   [B, S]      []          [A, B]      []          []          []          []          []          
[B, S, C]   [A, S, C]   [S, C]      [C]         [A, S]      [A, B]      []          []          []          []          
[B, C, S]   [A, B, C, S][B, C, S]   [B, C, S]   [A, S]      [A, S]      [A, B]      []          []          []          
[S, C]      [A, S, C]   [S, C]      [C]         [A, C]      [C]         []          [S]         []          []          
[C, S]      [A, C, S]   [C, S]      [C, S]      [A, S]      [S]         []          []          [A]         []          
[C, S]      [A, C, S]   [C, S]      [C, S]      [A, S]      [S]         []          []          [A]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->BA }]
B[{ B-->BS }, { B-->d }, { B-->SA }, { B-->CA }, { B-->a }]
C[{ C-->d }, { C-->a }, { C-->b }, { C-->AB }]
S[{ S-->c }, { S-->AA }, { S-->CS }]

word='dbdacccabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[B, S][S]   [B, S][B, S][S]   []    []    []    []    []    
[B]   []    [B]   [B]   []    [S]   []    []    []    []    
[B]   []    [B]   [B]   []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [B, C][]    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->AB }, { A-->AC }]
B[{ B-->c }, { B-->d }]
C[{ C-->SS }, { C-->b }]
S[{ S-->d }, { S-->BB }, { S-->BS }]

word='dbdacccabb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [A]   [B]   []    []    []    []    []    
[]    []    []    [A]   [S]   [B]   []    []    []    []    
[]    []    []    [A]   [S]   [S]   [B]   []    []    []    
[]    []    []    [A]   []    []    []    [A]   []    []    
[]    []    []    [A]   []    []    []    [A]   [C]   []    
[]    []    []    [A]   []    []    []    [A]   [A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->c }, { A-->CA }, { A-->BA }]
B[{ B-->SB }]
C[{ C-->d }, { C-->a }, { C-->AA }, { C-->b }]
S[{ S-->AC }]

word='dbdacccabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [A, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [C]      []       []       []       []       []       []       []       
[A]      [A]      []       [C]      []       []       []       []       []       []       
[A, C]   [A, C]   [A]      [A]      [A]      []       []       []       []       []       
[A, S, C][A, S, C][C]      [C]      [C]      [A]      []       []       []       []       
[A, C, S][A, C, S][A, S]   [A, S]   [A, S]   [C]      [A]      []       []       []       
[A, C, S][A, C, S][A, S]   [A, S]   [A, S]   []       [S]      [C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A]      [A, C]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->AB }, { B-->d }, { B-->a }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->SS }, { S-->CS }, { S-->BC }]
C[{ C-->c }, { C-->AS }, { C-->SB }]

word='bddcaadbcc'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[A]      [A]      [B]      []       []       []       []       []       []       []       
[S, C]   [S]      [S]      [C]      []       []       []       []       []       []       
[C, S]   [C, S]   [S, C]   [S]      [B, S]   []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [A, S, C][B, S]   []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [B, S, C][A, C]   [B]      []       []       []       
[C, S]   [C, S]   [S]      [S]      [S]      []       []       [A]      []       []       
[C, S]   [C, S]   [S]      [S]      [S]      [S, C]   []       [S]      [C]      []       
[]       []       []       []       []       []       []       []       []       [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AC }, { A-->d }, { A-->SA }]
B[{ B-->b }, { B-->BC }, { B-->d }, { B-->CB }, { B-->AA }, { B-->CC }]
S[{ S-->c }, { S-->BA }, { S-->a }, { S-->SC }]
C[{ C-->c }, { C-->CA }, { C-->SB }, { C-->SS }]

word='bddcaadbcc'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B, S]      [A, B]      []          []          []          []          []          []          []          []          
[A, S, C]   [B, S]      [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B]      [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, C]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [C]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [B, S]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, B]      [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S, C][S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->c }, { A-->BA }]
B[{ B-->b }]
S[{ S-->d }, { S-->CA }, { S-->a }, { S-->SS }]
C[{ C-->AS }, { C-->SA }, { C-->SB }, { C-->a }, { C-->b }, { C-->BS }]

word='bddcaadbcc'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[C]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [C]      [C]      [A]      []       []       []       []       []       []       
[S]      []       []       [C]      [S, C]   []       []       []       []       []       
[S]      []       []       [C]      [S]      [S, C]   []       []       []       []       
[S]      []       []       [C]      [S]      [S]      [S]      []       []       []       
[C]      []       []       []       [C]      [C]      [C]      [B, C]   []       []       
[S, C]   [S]      [S]      [C, S]   [S, C]   [S, C]   [S, C]   [A, S]   [A]      []       
[S, C]   [S, C]   [S, C]   [C, S]   [S, C]   [S, C]   [S, C]   [A, S, C][A]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AB }, { B-->d }, { B-->CA }, { B-->CB }, { B-->CS }]
S[{ S-->c }, { S-->BA }, { S-->SB }, { S-->a }, { S-->b }]
C[{ C-->d }, { C-->CC }, { C-->b }, { C-->BS }]

word='bddcaadbcc'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S, C][B, C]   []       []       []       []       []       []       []       []       
[B, S, C][B, C]   [B, C]   []       []       []       []       []       []       []       
[B, C, S][B, C]   [B, C]   [S]      []       []       []       []       []       []       
[B, C, S][B, C]   [B, C]   []       [S]      []       []       []       []       []       
[B, C, S][B, C]   [B, C]   []       []       [S]      []       []       []       []       
[B, C, S][B, C]   [B, C]   []       []       [S]      [B, C]   []       []       []       
[B, C, S][B, C]   [B, C]   []       []       [S]      [B, C]   [S, C]   []       []       
[B, C, S][B, C]   [B, C]   []       []       [S]      [B, C]   [B]      [S]      []       
[B, C, S][B, C]   [B, C]   []       []       [S]      [B, C]   [C]      []       [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->d }, { A-->SB }]
B[{ B-->c }, { B-->AS }, { B-->SC }]
S[{ S-->c }, { S-->SA }, { S-->CA }, { S-->a }, { S-->AA }, { S-->CC }]
C[{ C-->AC }, { C-->BA }, { C-->b }, { C-->BS }]

word='bddcaadbcc'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[S]         [S]         [A]         []          []          []          []          []          []          []          
[A, S]      [A]         [B]         [B, S]      []          []          []          []          []          []          
[B, S]      [B, C]      [C]         [C]         [S]         []          []          []          []          []          
[C, S]      [C]         []          []          []          [S]         []          []          []          []          
[C, S]      [C, S]      []          []          []          [S]         [A]         []          []          []          
[A, B, S]   [B, S, C]   [B, C]      [S, C]      [A]         [B]         [C]         [C]         []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [A, S]      [B]         [C]         []          []          [B, S]      []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [A, C]      [B, S]      [S]         [A, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->c }, { A-->SB }]
B[{ B-->d }, { B-->a }]
C[{ C-->BA }, { C-->CC }, { C-->SC }, { C-->b }]
S[{ S-->AC }, { S-->AA }]

word='ababcbccaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       [C]      [C]      [A]      [S]      [C]      []       []       []       []       
[]       []       []       [S]      []       []       [A]      []       []       []       
[C]      [A, C]   [A, C]   [A]      [S]      [A]      [S]      [A]      []       []       
[]       []       []       [S]      [A]      []       [A]      []       [B]      []       
[C]      [A, S, C][C, S]   [A, S]   []       [S]      []       [S]      [A]      [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }]
B[{ B-->b }, { B-->AC }, { B-->SA }]
C[{ C-->AS }, { C-->d }, { C-->CB }, { C-->CS }]
S[{ S-->CC }, { S-->SC }, { S-->BS }]

word='ababcbccaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->b }]
B[{ B-->b }, { B-->d }, { B-->BA }]
C[{ C-->c }, { C-->d }, { C-->CC }, { C-->BC }]
S[{ S-->AC }, { S-->SS }, { S-->BS }]

word='ababcbccaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          [B]         [A]         []          []          []          []          []          []          []          
[]          [A, B]      []          [A, B]      []          []          []          []          []          []          
[S]         [C, S]      [S]         [C, S]      [C]         []          []          []          []          []          
[]          []          []          []          []          [A, B]      []          []          []          []          
[S]         [A, B, C, S][S]         [A, B, C, S][A, C]      [C, S]      [C]         []          []          []          
[S]         [A, B, C, S][S]         [A, B, C, S][A, C, S]   [C, S]      [C]         [C]         []          []          
[]          [A, B]      []          [B]         []          []          []          []          [A]         []          
[]          [A, B]      []          [B]         []          []          []          []          []          [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BC }, { A-->d }, { A-->BA }]
B[{ B-->b }, { B-->AC }, { B-->SB }, { B-->BB }, { B-->SC }]
S[{ S-->c }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->AB }]

word='ababcbccaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C]      [A]      [A]      []       []       []       []       []       []       []       
[A, B, C][A, C]   [C]      [B]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [A]      [S, C]   []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [B, C]   [B]      [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [A, C]   [A]      [S, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B, C][S, C]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }, { A-->BA }]
B[{ B-->d }, { B-->SB }, { B-->SS }, { B-->SC }]
C[{ C-->c }, { C-->b }]
S[{ S-->d }]

word='ababcbccaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->c }, { A-->AC }, { A-->d }, { A-->CA }, { A-->BA }]
B[{ B-->BS }, { B-->AS }, { B-->a }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->AB }]

word='ddaccadacb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B]         [A, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B]      [B]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B]         [B]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->d }, { A-->SA }]
B[{ B-->c }, { B-->a }]
C[{ C-->BA }, { C-->AA }, { C-->b }]
S[{ S-->d }, { S-->CA }, { S-->SB }, { S-->BB }]

word='ddaccadacb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, S]   []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[]       [S]      [S]      [B]      []       []       []       []       []       []       
[A, C, S][A, S, C][A, S]   [S]      [B]      []       []       []       []       []       
[A, S, C][A, S, C][A, C, S][A, S]   [S]      [B]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C]   [A, C]   [A, C]   [A, S]   []       []       []       
[A, C, S][A, C, S][A, C, S][A]      [C]      [A]      [S]      [B]      []       []       
[A, C, S][A, C, S][A, C, S][A]      [C]      [A]      [S]      [S]      [B]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [A, C]   [A]      [C]      [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->c }, { A-->AS }]
B[{ B-->a }, { B-->CS }]
S[{ S-->d }, { S-->a }]
C[{ C-->c }, { C-->SS }]

word='ddaccadacb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[B]   [C]   [B, S][]    []    []    []    []    []    []    
[]    [A]   []    [A, C][]    []    []    []    []    []    
[]    []    []    [A]   [A, C][]    []    []    []    []    
[]    []    []    [A]   [A, B][B, S][]    []    []    []    
[]    []    []    [A]   [A]   [C]   [S]   []    []    []    
[]    []    []    [A]   [A]   [B]   [C]   [B, S][]    []    
[]    []    []    []    []    []    [A]   []    [A, C][]    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->d }, { A-->SB }]
B[{ B-->b }, { B-->a }, { B-->BB }]
C[{ C-->a }, { C-->AA }, { C-->CC }, { C-->BS }]
S[{ S-->c }, { S-->d }, { S-->CB }, { S-->SS }, { S-->SC }]

word='ddaccadacb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[C, S]   [A, S]   []       []       []       []       []       []       []       []       
[A, C, S][A, S]   [B, C]   []       []       []       []       []       []       []       
[S, C]   [S]      [C]      [S]      []       []       []       []       []       []       
[S, C]   [S]      [C]      [S]      [S]      []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [A, S]   [A, S]   [B, C]   []       []       []       []       
[C, S]   [S, C]   [C, S]   [S, C]   [S, C]   [C]      [A, S]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][C, S]   [A, S]   [B, C]   []       []       
[C, S]   [S, C]   [C, S]   [S, C]   [S, C]   [C, S]   [S]      [C]      [S]      []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, S, C][S]      [A]      [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->d }]
B[{ B-->c }, { B-->AC }, { B-->d }, { B-->a }, { B-->SC }]
C[{ C-->AS }, { C-->BA }, { C-->SB }, { C-->b }]

word='ddaccadacb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[B]   [C]   [A, B][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    [C]   [A, B][]    []    []    []    
[]    []    []    []    []    [C]   [A, B][]    []    []    
[]    []    []    []    []    [B]   [C]   [A, B][]    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->a }, { B-->AA }]
S[{ S-->d }, { S-->SA }, { S-->CA }, { S-->a }, { S-->b }]
C[{ C-->c }, { C-->CS }, { C-->b }]

word='aadbbabacb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[]          [B, S]      []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[]          []          []          [S, C]      []          []          []          []          []          []          
[]          []          [S]         [A, C]      [S, C]      []          []          []          []          []          
[]          []          [S]         [A, C]      [C]         [B, S]      []          []          []          []          
[]          []          [S]         [A, S, C]   [A, C]      []          [S, C]      []          []          []          
[]          []          [S]         [A, S, C]   [A, C]      []          [C]         [B, S]      []          []          
[]          []          [S]         [A, B, S, C][A, C, S]   [S]         [A]         []          [C]         []          
[]          []          [S]         [A, B, C, S][A, B, C, S][S]         [A, C, S]   [S]         [A, C]      [S, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->d }]
B[{ B-->b }, { B-->AS }, { B-->BB }, { B-->CC }]
C[{ C-->c }]
S[{ S-->SC }]

word='aadbbabacb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    [B]   [A, B][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->BC }, { B-->BS }, { B-->AC }, { B-->d }, { B-->BA }, { B-->SS }]
S[{ S-->c }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->CB }, { C-->BB }]

word='aadbbabacb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[C]         []          [B]         []          []          []          []          []          []          []          
[C]         []          [B]         [S]         []          []          []          []          []          []          
[B, C]      [A]         [B, C]      [B]         [S]         []          []          []          []          []          
[B, C]      [A]         [B, C]      [B]         [B]         [S]         []          []          []          []          
[B, C]      [A, S]      [B, C]      [B, C]      [B]         [B]         [S]         []          []          []          
[B, C]      [A, B, S]   [B, C]      [A, B, C]   [B, C]      [B]         [B]         [S]         []          []          
[B, C]      [A, B, S]   [B, C]      [A, B, C]   [A, B, C]   [B, C]      [B]         [B]         [S]         []          
[A, B, C]   [A, B, S, C][B, C]      [A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B]         [B]         [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->c }, { B-->d }, { B-->SC }, { B-->CS }]
C[{ C-->BA }, { C-->a }, { C-->BB }, { C-->AB }]
S[{ S-->c }, { S-->SA }, { S-->CA }, { S-->CB }, { S-->b }]

word='aadbbabacb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[B]         [S]         [B]         []          []          []          []          []          []          []          
[B, C, S]   [A, S]      [B, C]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, C, S]   [A, B, C]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][B, C, S]   [A, C]      [B]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      [B]         [C]         []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S]      [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->b }, { B-->AS }, { B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->c }, { S-->CS }, { S-->b }]
C[{ C-->d }, { C-->SA }, { C-->AB }]

word='aadbbabacb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, B]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[B, C, S][B]      [S]      [B, S]   []       []       []       []       []       []       
[B, S, C][B]      []       [B]      [B, S]   []       []       []       []       []       
[A, B, C][B]      []       [B]      [B, C]   [A, B]   []       []       []       []       
[B, S, C][B]      []       [B]      [B, S]   [B, C]   [B, S]   []       []       []       
[A, B, C][B]      []       [B]      [B, C]   [A, B, C][B, C]   [A, B]   []       []       
[B, S, C][B]      []       [B]      [B, S]   [B, C, S][B, S]   [B]      [S]      []       
[B, S, C][B]      []       [B]      [B]      [B, C, S][B]      [B]      []       [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->BS }, { A-->c }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->AS }, { B-->a }]
C[{ C-->SB }, { C-->a }, { C-->CS }]
S[{ S-->d }, { S-->SA }, { S-->BB }]

word='ccabccddab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          []          [B, C]      []          []          []          []          []          []          []          
[]          [B]         [A, S]      [A, B]      []          []          []          []          []          []          
[]          [A, B]      [A, S]      [A]         [A]         []          []          []          []          []          
[]          [A, B]      [S]         []          []          [A]         []          []          []          []          
[B]         [A, B, S]   [C]         []          []          [B]         [S]         []          []          []          
[A]         [A, B]      [S, C]      []          []          [A]         []          [S]         []          []          
[A, B]      [A, B, S]   [A, C, S]   []          []          [A, B]      [A, S]      [A, C]      [B, C]      []          
[A, B, S]   [A, B, C, S][A, B, C, S][B, S]      [B]         [A, B, S]   [S, C]      [A, S]      [A, S]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->c }]
B[{ B-->BS }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->c }, { S-->a }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->d }, { C-->SS }]

word='ccabccddab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B, C]      [S]         []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B, S]      [C]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [B, C]      [A, S]      []          []          []          []          
[A, B, C, S][B, C, S]   [B, S, C]   [S, C]      [C, S]      [S]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, S, C]   [C, S]      [S]         [C]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B, S, C]   [S]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, S, C]   [S, C]      [B, C]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->d }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->SB }, { B-->a }, { B-->AA }]
C[{ C-->b }]
S[{ S-->c }, { S-->AC }, { S-->CC }, { S-->AB }, { S-->BS }]

word='ccabccddab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, S]   []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [B, C]   []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [B, S]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [A, B]   [A, B]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A]      [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BS }, { A-->c }, { A-->AC }, { A-->d }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->SC }]
C[{ C-->a }, { C-->AA }]
S[{ S-->d }, { S-->CS }, { S-->b }]

word='ccabccddab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[A, C]      [A]         [C]         []          []          []          []          []          []          []          
[S]         []          [S]         [B, S]      []          []          []          []          []          []          
[]          []          []          []          [A]         []          []          []          []          []          
[B]         []          [B]         [B]         [C]         [A]         []          []          []          []          
[A, C]      [C]         [A]         [A]         [A, S]      [C]         [A, S]      []          []          []          
[A, B, C, S][A, S, C]   [A, B, C]   [B, C]      [A, C]      [A, S]      [C]         [A, S]      []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [A, B, C]   [A, C]      [A, B]      [C]         []          
[A, B, C, S][A, C, S]   [A, B, S, C][A, B, C, S][A, C, S]   [A, S]      [C, S]      [A]         [S]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->BS }]
B[{ B-->AB }, { B-->c }, { B-->a }, { B-->SC }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->AA }]
C[{ C-->d }, { C-->SA }]

word='ccabccddab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [B, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [S, C]      [A, B]      []          []          []          []          []          []          []          
[B, S, C]   [A, C]      [S]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B]      [B]         [B]         [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, S, C]   [A, S]      [A]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [S, C]      [A, B]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [A, B]      [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      [C]         [A, B]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C, S]   [A]         [S]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BC }]
B[{ B-->d }]
C[{ C-->AS }, { C-->d }, { C-->CA }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->c }, { S-->AB }]

word='bcdacdbbad'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[C]   []    [A]   [C]   []    []    []    []    []    []    
[]    []    [C]   []    [S]   []    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    [C]   []    []    [A, C][A, C][]    []    []    
[]    []    [C]   []    []    [A, C][A, C][A, C][]    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BC }, { A-->d }, { A-->SB }]
B[{ B-->b }, { B-->a }, { B-->CS }]
S[{ S-->c }, { S-->BB }, { S-->b }]

word='bcdacdbbad'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   [A, B][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    [A]   [A, S][B, S][]    []    
[]    []    []    []    []    [A]   [A]   [A, S][A, B][]    
[]    []    []    []    []    [A]   [A]   [A]   [A]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->d }]
B[{ B-->BS }, { B-->d }, { B-->BA }, { B-->a }]
S[{ S-->c }, { S-->SB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->SC }]
C[{ C-->c }, { C-->AC }, { C-->b }]

word='bcdacdbbad'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [S, C]      []          []          []          []          []          []          []          []          
[A, S]      [S]         [A, B]      []          []          []          []          []          []          []          
[A, S]      [S]         [A, B]      [B, S]      []          []          []          []          []          []          
[A, S, C]   [S]         [A, B, C]   [B, S]      [S, C]      []          []          []          []          []          
[A, S]      [A, S]      [A, B, S]   [A, B, S]   [S]         [A, B]      []          []          []          []          
[A, S, C]   [A, S, C]   [A, B, C, S][B, S, C]   [S]         [C]         [C]         []          []          []          
[A, S, C]   [A, S, C]   [A, B, S, C][B, S]      [S]         []          []          [C]         []          []          
[A, S]      [A, S]      [A, B, S]   [A, B, S]   [S]         []          []          [A]         [B, S]      []          
[A, S]      [A, S]      [A, B, S]   [A, B, S]   [A, S]      [A, B, S]   [A]         [A, S]      [A, B, S]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->d }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->d }, { B-->AA }]
C[{ C-->a }, { C-->BB }, { C-->SS }, { C-->b }]
S[{ S-->c }]

word='bcdacdbbad'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [B, S]   []       []       []       []       []       []       []       []       
[A, B]   [A, C]   [A, B]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][B]      [A, C]   []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [A, B]   [B, S]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, B]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [B, C]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      [A, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->c }, { A-->d }, { A-->CA }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->CB }]
S[{ S-->BA }]
C[{ C-->BB }]

word='bcdacdbbad'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[B]      []       [A]      []       []       []       []       []       []       []       
[S]      []       []       [A]      []       []       []       []       []       []       
[B]      []       []       []       [A]      []       []       []       []       []       
[S]      []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[A, C]   []       []       []       []       [B]      [C]      [B]      []       []       
[A, B]   []       []       []       []       [S]      [A]      [S]      [A]      []       
[A, C, S][]       []       []       []       [B]      [C]      [B]      []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->c }, { A-->d }]
B[{ B-->c }, { B-->d }]
S[{ S-->a }, { S-->SS }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->CC }]

word='cdcdccdbba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, C][A, B][]    []    []    []    []    []    []    []    
[A, C][A, C][A, B][]    []    []    []    []    []    []    
[A, C][A, C][A, C][A, B][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, B][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, B][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, B][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->d }]
B[{ B-->BC }, { B-->BA }, { B-->AA }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->c }, { S-->AC }, { S-->d }, { S-->b }]
C[{ C-->c }, { C-->AS }]

word='cdcdccdbba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B]         [A, S]      []          []          []          []          []          []          []          []          
[A, B]      [B, S, C]   [S, C]      []          []          []          []          []          []          []          
[A, B, C]   [A, B]      [B]         [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B]      [B, S, C]   [S, C]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [B]         [S, C]      []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, C]   [A, B, C]   [A, B]      [B]         [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [C]         [S]         []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [B]         []          [S]         []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         []          []          [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->b }, { B-->c }, { B-->a }, { B-->AA }]
C[{ C-->d }, { C-->CB }, { C-->SB }]
S[{ S-->AC }, { S-->CA }, { S-->SC }]

word='cdcdccdbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[]    [A]   []    [C]   []    []    []    []    []    []    
[]    [A]   []    [C]   [B]   []    []    []    []    []    
[]    [A]   []    [C]   []    [B]   []    []    []    []    
[]    [S]   []    [A]   []    []    [C]   []    []    []    
[]    [C, S][]    [A, B][]    []    [C, S][A, B][]    []    
[]    [C, S][]    [A, B][]    []    [C, S][B]   [A, B][]    
[]    [S, C][]    [A]   []    []    [C]   []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AB }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->BB }, { B-->CS }]
S[{ S-->c }, { S-->AC }, { S-->a }]
C[{ C-->d }, { C-->SC }, { C-->BC }]

word='cdcdccdbba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, C]      []          []          []          []          []          []          []          []          
[A, B]      [B]         [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][B, C, S]   [S, C]      [A, C]      []          []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [B]         [A, S]      []          []          []          []          []          
[]          []          []          []          [A]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, S, C]   [S, C]      [A, C]      []          []          []          
[A, B]      [A, B]      [A, B]      [B]         [A]         []          [A]         [A, B]      []          []          
[A, B]      [A, B]      [A, B]      [B]         [A]         []          [A]         [A, B]      [A, B]      []          
[]          []          []          []          []          []          []          []          []          [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BC }, { A-->AS }]
B[{ B-->BS }, { B-->BA }, { B-->AA }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->SS }, { C-->CS }]
S[{ S-->CA }]

word='cdcdccdbba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[S]         [A]         [C]         []          []          []          []          []          []          []          
[B, C]      [S]         [A]         [C]         []          []          []          []          []          []          
[A]         [B, C]      [S]         [A]         [C]         []          []          []          []          []          
[B, C, S]   [A]         [B, C]      [S]         [A]         [C]         []          []          []          []          
[A, B, C]   [B, C, S]   [A]         [B, C]      [S]         [A]         [C]         []          []          []          
[B, C, S]   [A, B, S]   [A, B, C]   [B, S, C]   [A]         [B, C]      [S]         [A]         []          []          
[A, B, C, S][A, B, C]   [B, C, S]   [A, B, S]   [B, C]      [B, S]      []          [B]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A, B, C]   [S]         [A]         []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->d }, { B-->SB }, { B-->a }]
C[{ C-->c }, { C-->d }, { C-->CB }, { C-->SC }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->c }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->CS }]

word='aaccaaacdb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[B, C, S][B, C]   [C, S]   []       []       []       []       []       []       []       
[B, C, S][B, C, S][C, S]   [C, S]   []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C]   [A, B]   []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][S, C]   [S]      [A, B]   []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [S]      [A, B]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [C, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   []       
[B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }, { A-->CA }, { A-->BA }]
B[{ B-->c }, { B-->a }, { B-->AA }, { B-->CS }]
S[{ S-->BB }, { S-->b }, { S-->AB }]
C[{ C-->d }, { C-->SA }, { C-->SB }, { C-->SC }]

word='aaccaaacdb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[A, C]      [S]         [B]         []          []          []          []          []          []          []          
[A, S]      [A, C]      [S]         [B]         []          []          []          []          []          []          
[A, B, S, C][A, S]      [A, C]      [S]         [B]         []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, S]      [A, C]      [S]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [A, C]      [S]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, S]      [A, C]      [S]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, C]      [A, C]      [A]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, B, C]   [S]         [B]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->BS }, { A-->d }]
B[{ B-->c }, { B-->d }, { B-->AA }]
S[{ S-->a }, { S-->b }]
C[{ C-->CB }, { C-->BB }, { C-->AB }]

word='aaccaaacdb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[C]      [C]      [B]      []       []       []       []       []       []       []       
[A, C]   [C]      [C]      [B]      []       []       []       []       []       []       
[B]      []       []       [A]      [A, S]   []       []       []       []       []       
[A, C]   [B, C]   [A, C]   [B, C]   [B]      [A, S]   []       []       []       []       
[B, C]   [A, B, C][A, B]   [A, C]   [A, C]   [B]      [A, S]   []       []       []       
[A, B, C][A, B, C][A, C]   [A, C]   [A, C]   [C]      [C]      [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [C]      [A, B]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   []       []       []       [A]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->d }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->d }, { B-->CA }]
C[{ C-->SA }, { C-->a }]
S[{ S-->c }, { S-->CS }]

word='aaccaaacdb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    [S]   [S]   [S]   [S]   []    []    
[]    []    []    []    [C]   [C]   [C]   [C]   [A, B][]    
[]    []    []    []    [B, C][B, C][B, C][B, C][A, B][A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->c }]
B[{ B-->CB }]
C[{ C-->AC }, { C-->d }, { C-->SA }, { C-->a }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BC }]
S[{ S-->d }, { S-->AA }]

word='aaccaaacdb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    [C]   [S]   [A]   []    []    []    []    []    []    
[]    []    [C]   [C]   [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    [C]   [C, S][]    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->BS }, { B-->d }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->d }, { S-->SA }, { S-->CA }, { S-->a }]
C[{ C-->c }, { C-->BA }, { C-->SB }, { C-->CS }]

word='cdddbbccda'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C]         [B, S]      []          []          []          []          []          []          []          []          
[B, C]      [B, C]      [B, S]      []          []          []          []          []          []          []          
[B, C, S]   [A, B, C]   [B, C]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A]         [C]         [B]         []          []          []          []          []          
[B, C]      [C]         []          []          []          [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [C]         [A]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      [A]         [B]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      [A]         [B]         [C]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][A, B, C]   [A, C]      [A, B]      [B, C]      [B, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }, { A-->d }]
B[{ B-->b }, { B-->BA }]
C[{ C-->c }, { C-->CA }]
S[{ S-->d }, { S-->CC }, { S-->SC }, { S-->BS }]

word='cdddbbccda'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[C]   []    [A, S][]    []    []    []    []    []    []    
[C]   []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[C]   []    []    []    [A]   [B]   []    []    []    []    
[S]   []    []    []    [B]   [A]   [C]   []    []    []    
[C, S][]    []    []    [A, S][S]   [S]   [C]   []    []    
[C, S][]    []    []    [A, S][S]   [S]   [C]   [A, S][]    
[C, S][]    []    []    [A, S][S]   [S]   [C]   []    [A]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->d }]
B[{ B-->AB }, { B-->d }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->BB }]
S[{ S-->c }, { S-->CB }, { S-->a }]
C[{ C-->c }, { C-->SB }, { C-->SS }, { C-->b }]

word='cdddbbccda'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S, C][A, B]   []       []       []       []       []       []       []       []       
[B, S, C][B]      [A, B]   []       []       []       []       []       []       []       
[B, S, C][B]      [B]      [A, B]   []       []       []       []       []       []       
[B, S, C][B]      [B]      [B]      [A, C]   []       []       []       []       []       
[B, S, C][B]      [B]      [B]      [B]      [A, C]   []       []       []       []       
[C]      []       []       []       []       []       [S, C]   []       []       []       
[]       []       []       []       []       []       [C]      [S, C]   []       []       
[B, C, S][B]      [B]      [B]      [B, S]   [B, S]   [B, S, C][B, S, C][A, B]   []       
[C]      []       []       []       [C]      [C]      [C]      [C]      []       [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->AS }, { B-->CB }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->c }, { S-->BA }, { S-->SC }]
C[{ C-->d }, { C-->CA }, { C-->BS }]

word='cdddbbccda'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S]         [A, C]      []          []          []          []          []          []          []          []          
[A, S]      [B, C]      [A, C]      []          []          []          []          []          []          []          
[A, B, S]   [A, B, S, C][B, C]      [A, C]      []          []          []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, C]   [A, B]      [B]         []          []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, C]   [A, B]      [B]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C, S]      [S, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [B, C]      [B]         [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S]      [S]         [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S]      [A, S]      [A, B, C]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->CA }]
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->d }, { B-->BA }, { B-->CB }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->SS }, { C-->CS }]
S[{ S-->AC }]

word='cdddbbccda'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [B, C]      []          []          []          []          []          []          []          []          
[A, B]      [A, B]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B]      [B, C]      []          []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A]         []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [B]         []          [A]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B]      [B]         [S]         [C]         []          []          []          
[A, B, S, C][A, B, S, C][B, C, S]   [S]         []          []          []          [C]         []          []          
[A, B, S, C][A, B, S]   [A, B]      [A, B]      [A, B]      [B]         [B]         [B]         [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][B, C, S]   [S]         []          []          []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }]
B[{ B-->AS }, { B-->d }]
S[{ S-->c }, { S-->CB }, { S-->a }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->SS }, { C-->CS }]

word='addaaabacd'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          []          [B]         []          []          []          []          []          []          []          
[]          [A]         [C]         [A, S]      []          []          []          []          []          []          
[C]         [A, B, C]   [A, C]      [B, C]      [A, S]      []          []          []          []          []          
[C]         [A, B, C]   [A, B, S, C][C]         [B, C]      [A, S]      []          []          []          []          
[C]         [A, C]      [A, C]      [C]         [C]         []          [A]         []          []          []          
[B, S, C]   [A, B, C, S][A, B, C, S][B, C, S]   [S, C]      []          [B]         [A, S]      []          []          
[B, S, C]   [A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         [C]         [B, C]      [S]         []          
[B, S, C]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S]      [S]         []          [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->c }, { A-->CB }, { A-->SB }]
B[{ B-->c }, { B-->d }, { B-->AA }]
S[{ S-->a }]
C[{ C-->SA }, { C-->b }]

word='addaaabacd'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[B]   []    [A]   [S]   []    []    []    []    []    []    
[A]   []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    [A, C][A, B][]    
[]    []    []    []    []    []    []    [A]   []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->d }, { A-->CA }]
B[{ B-->SB }]
C[{ C-->c }, { C-->SA }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BC }]
S[{ S-->c }, { S-->AS }, { S-->BB }]

word='addaaabacd'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    [A]   [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C][A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->c }, { A-->d }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->c }, { B-->SA }, { B-->CA }, { B-->SS }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->CS }]
S[{ S-->AC }]

word='addaaabacd'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[C]         []          [A]         []          []          []          []          []          []          []          
[A, B]      [C]         [S]         [C]         []          []          []          []          []          []          
[B, S]      [A]         []          [A]         [C]         []          []          []          []          []          
[A, B, C]   [B, S]      [B, C]      [B, S]      [A]         [C]         []          []          []          []          
[A, B, C]   [A]         [A]         [A]         [B]         [A]         [B]         []          []          []          
[A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [B, C]      [A, S]      [B]         [C]         []          []          
[A, B, C, S][A, B, C]   [A, B, S]   [A, B, C]   [A, B, S, C][A, B]      [C]         [A, B]      [A, B]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [B, C]      [A, C]      [C]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->c }]
B[{ B-->AB }, { B-->CB }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->b }]
C[{ C-->SB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->BS }]

word='addaaabacd'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[A, C][C]   [S]   []    []    []    []    []    []    []    
[A, C][A, C][C]   [S, C][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][S, C][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][S, C][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][C]   [A, S][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   [S, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   [C]   [A, S][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->b }, { A-->d }]
B[{ B-->c }, { B-->CA }, { B-->a }]
S[{ S-->c }, { S-->AC }, { S-->BA }, { S-->b }]
C[{ C-->d }, { C-->BB }]

word='bbabadadab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A]         [A, S]      []          []          []          []          []          []          []          []          
[]          []          [A, B]      []          []          []          []          []          []          []          
[]          [A]         [S]         [A, S]      []          []          []          []          []          []          
[]          []          []          []          [A, B]      []          []          []          []          []          
[]          [A]         [A, S]      [A]         [S]         [A, C]      []          []          []          []          
[A]         [A, S]      [A, S]      [A, S]      [C]         [B]         [A, B]      []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, B]      [S]         [S]         [A, C]      []          []          
[A]         [A, S]      [A, S]      [A, S]      [A, S, C]   [A, S, C]   [C]         [B]         [A, B]      []          
[A]         [A, S]      [A, S]      [A, S]      [A, B, S, C][A, B]      [A, B]      [S]         [S]         [A, S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->d }, { A-->BA }]
B[{ B-->c }, { B-->AS }, { B-->d }]
S[{ S-->SA }, { S-->CB }, { S-->BB }, { S-->b }, { S-->AB }]
C[{ C-->b }]

word='bbabadadab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[]       [S, C]   []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[]       [S]      [A, B]   [S, C]   []       []       []       []       []       []       
[]       [S]      [A, B]   [S]      [A]      []       []       []       []       []       
[]       [S]      [A, B, S][S]      [S]      [A, B]   []       []       []       []       
[]       [S]      [A, B, S][S]      [S]      [A]      [A]      []       []       []       
[]       [S]      [A, B, S][S]      [B, S]   [B, S]   [S]      [A, B]   []       []       
[]       [S]      [A, B, S][S]      [A, B, S][A, B, S][S]      [A]      [A]      []       
[]       [S]      [A, B, S][S]      [A, B, S][A, B, S][B, S]   [A, B, S][A, B]   [S, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->AC }]
B[{ B-->c }, { B-->AS }, { B-->d }, { B-->a }, { B-->SS }]
S[{ S-->d }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->SC }, { C-->b }]

word='bbabadadab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B, C]      [S, C]      []          []          []          []          []          []          []          []          
[C]         [C]         [A, B]      []          []          []          []          []          []          []          
[A, C]      [B, C]      [A, B, S]   [S, C]      []          []          []          []          []          []          
[A, C, S]   [B, C]      [A, S, C]   [C]         [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, S, C][C]         [A, B]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, S, C]   [C]         [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][C]         [A, B]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, S, C][A, B, S, C][A, S, C]   [C]         [A, B]      []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B, S]   [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AC }]
B[{ B-->b }, { B-->AS }, { B-->SB }, { B-->a }, { B-->CS }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->BA }, { C-->b }, { C-->BC }]
S[{ S-->d }, { S-->AB }]

word='bbabadadab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [B, C]   []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[C]      [C]      [C]      [B, C]   []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C, S]   []       []       []       []       
[]       []       []       []       []       [B]      [B]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [A, C]   [C]      [C, S]   []       []       
[]       []       []       []       []       [S]      []       [B]      [B]      []       
[C]      [C]      [C]      [C]      [C]      [A, B, C][C]      [A, C]   [C]      [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AB }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->AS }, { B-->d }]
C[{ C-->a }, { C-->b }, { C-->BS }]
S[{ S-->c }, { S-->SA }, { S-->CB }, { S-->AA }]

word='bbabadadab'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[S]         [B, C]      []          []          []          []          []          []          []          []          
[S]         []          [A, C]      []          []          []          []          []          []          []          
[A, S]      [C]         [A, S]      [B, C]      []          []          []          []          []          []          
[A, S]      [C]         [S]         []          [A, C]      []          []          []          []          []          
[A, B, S, C][S, C]      [A, B, S]   [C]         [A, S]      [A, B]      []          []          []          []          
[A, B, S, C][S, C]      [A, B, S]   [C, S]      [B, S]      [S]         [A, C]      []          []          []          
[A, B, C, S][A, S, C]   [A, B, S, C][C, S]      [A, B, S]   [B, C, S]   [A, S]      [A, B]      []          []          
[A, B, C, S][A, S, C]   [A, B, C, S][A, C, S]   [A, B, S, C][A, B, C, S][B, S]      [S]         [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, C, S]   [A, B, C, S][A, B, C, S][A, B, S]   [B, C, S]   [A, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->c }, { B-->d }]
C[{ C-->a }, { C-->SS }, { C-->b }]
S[{ S-->SA }, { S-->BA }, { S-->BC }]

word='adaddaadcd'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       [A, S]   [A]      [B]      []       []       []       []       []       []       
[]       [A]      []       []       [B]      []       []       []       []       []       
[]       [C]      []       []       [S]      [C]      []       []       []       []       
[]       [C, S]   []       [S]      [A]      []       [C]      []       []       []       
[]       [A, S, C][]       [A]      [S]      []       [A]      [B]      []       []       
[]       [A, C, S][]       [S]      [A]      []       []       []       [B]      []       
[]       [A, S]   []       [A]      []       []       []       []       []       [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->b }, { A-->c }, { A-->AC }]
B[{ B-->AB }, { B-->d }, { B-->CA }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->BB }]

word='adaddaadcd'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [B, C]   []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [A, C]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B]   [B, C]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [B, C]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B, C]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [A, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }, { A-->CB }]
B[{ B-->BC }, { B-->d }, { B-->SB }, { B-->SS }]
C[{ C-->AS }, { C-->d }, { C-->a }, { C-->CC }, { C-->CS }]
S[{ S-->c }, { S-->AC }, { S-->b }]

word='adaddaadcd'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, C]      [B, C]      []          []          []          []          []          []          []          []          
[A, C, S]   [B, C]      [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][B, C]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][B, C]      [C]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, C]      [B, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C]         [C]         [C]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, C]      [A, C]      [B]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }]
B[{ B-->b }, { B-->AS }, { B-->CB }]
S[{ S-->d }, { S-->SA }, { S-->a }, { S-->CC }]
C[{ C-->d }, { C-->CS }, { C-->BS }]

word='adaddaadcd'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[B, C]   [S, C]   [A, S]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][B]      [S, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, C]   [S, C]   [S, C]   []       []       []       []       []       
[B, S, C][B, S, C][B, C]   [S, C]   [S, C]   [A, S]   []       []       []       []       
[B, S, C][B, S, C][B, C]   [B, S, C][B, C, S][B, S]   [A, S]   []       []       []       
[B, S, C][B, C, S][B, C, S][B, S, C][B, S, C][C]      [B]      [S, C]   []       []       
[B, S, C][B, C, S][B, C, S][B, S, C][B, S, C][C]      [B]      [S]      [A]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][C]      [B]      [B]      [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->b }, { B-->CA }, { B-->CB }, { B-->a }, { B-->AA }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->BB }, { S-->SS }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->BA }, { C-->b }]

word='adaddaadcd'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->AS }, { A-->CA }]
B[{ B-->d }, { B-->CC }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->c }, { S-->AC }, { S-->d }]

word='cbadcdbcad'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[]    [B]   [C]   []    []    []    []    []    []    []    
[B]   [C]   []    [B, S][]    []    []    []    []    []    
[C]   []    [B]   [C]   [S]   []    []    []    []    []    
[]    [B]   [C]   []    []    [B, S][]    []    []    []    
[]    []    [B]   []    []    [B]   [C]   []    []    []    
[B]   [B]   [C]   [B]   [B]   [C]   []    [S]   []    []    
[]    []    [B]   []    []    [B]   []    [B]   [C]   []    
[B]   [B]   [C]   [B]   [B]   [C]   [B]   [C]   []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->d }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->CS }]
S[{ S-->c }, { S-->AC }, { S-->d }, { S-->a }, { S-->AA }, { S-->SS }, { S-->b }]
C[{ C-->AS }, { C-->BB }, { C-->AB }]

word='cbadcdbcad'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S]         [B, S]      []          []          []          []          []          []          []          []          
[B, S]      [A, S]      [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [S]         [B, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      [A, S]      [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [S]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [A, S, C]   [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S, C][A, S]      [S]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [S]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S]         [S]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BC }, { A-->d }, { A-->CA }]
B[{ B-->b }, { B-->c }, { B-->CB }]
C[{ C-->c }, { C-->BB }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->d }, { S-->SA }, { S-->BA }]

word='cbadcdbcad'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      []          []          []          []          []          []          []          []          
[A, S]      [A, S]      [A]         []          []          []          []          []          []          []          
[S]         [S]         [S]         [A, S]      []          []          []          []          []          []          
[]          []          []          [C]         [B, C]      []          []          []          []          []          
[S]         [S]         [S]         [A, S]      [A, S]      [A, S]      []          []          []          []          
[S]         [S]         [S]         [A, S, C]   [A, C]      [C]         [B, C]      []          []          []          
[A, C, S]   [A, C, S]   [C, S]      [A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A]         []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->c }, { A-->d }, { A-->CB }]
B[{ B-->AS }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->SB }]

word='cbadcdbcad'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AC }, { A-->BA }]
B[{ B-->AB }, { B-->d }, { B-->a }, { B-->CS }]
C[{ C-->c }, { C-->a }, { C-->BC }, { C-->BS }]
S[{ S-->d }, { S-->SA }]

word='cbadcdbcad'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          [A, B]      [B, C]      []          []          []          []          []          []          []          
[]          [A, B, C]   [B, C]      [B, S]      []          []          []          []          []          []          
[]          [A, C]      [C]         [C]         [C]         []          []          []          []          []          
[]          [B]         [B]         [B]         [B]         [B, S]      []          []          []          []          
[]          [A, B, C]   [A, B, C]   [A, B, S]   [A, B]      [A, S]      [A]         []          []          []          
[]          [A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, S]      [A]         [C]         []          []          
[]          [A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, S]   [A, B]      []          [B, C]      []          
[]          [A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   []          [B, C]      [B, S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AB }, { B-->AC }, { B-->d }, { B-->SA }, { B-->BB }]
C[{ C-->c }, { C-->AA }, { C-->SC }, { C-->b }, { C-->BC }]
S[{ S-->c }, { S-->CA }]

word='bbaacbdccc'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    [B]   [C]   [A]   []    []    []    []    []    []    
[]    [C]   [B]   [B]   [C, S][]    []    []    []    []    
[]    [C]   [B, C][B, C][C]   [C]   []    []    []    []    
[]    []    [B]   [B]   []    []    [B]   []    []    []    
[]    [C]   [B, C][C]   []    []    [C]   [C, S][]    []    
[]    [C]   [B, C][C]   []    []    [C]   [C]   [C, S][]    
[]    [C]   [B, C][C]   []    []    [C]   [C]   [C]   [C, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->CB }]
B[{ B-->SA }, { B-->a }, { B-->AA }, { B-->SC }]
S[{ S-->c }, { S-->CA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->c }, { C-->d }, { C-->SB }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]

word='bbaacbdccc'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [S, C]      []          []          []          []          []          []          []          []          
[B, S, C]   [A, S, C]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][S, C]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, S, C]   [B, C]      [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S, C]      [B, S]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [S]         [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->d }, { A-->CA }]
B[{ B-->b }, { B-->c }]
C[{ C-->SA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->CB }]

word='bbaacbdccc'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [B, C]   []       []       []       []       []       []       []       []       
[A, C]   [A, C]   [A]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [C]      [A]      []       []       []       []       []       []       
[A, C, S][A, C, S][S]      [C]      [B]      []       []       []       []       []       
[A, C, S][C, S]   [C]      [S]      []       [B, C]   []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [C]      [A, C]   [A]      []       []       []       
[A, C, S][A, C, S][A, C, S][C, S]   [A, S]   [C, S]   [C]      [B]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, C, S][S]      []       [B]      []       
[A, C, S][A, C, S][A, C, S][C, S]   [A, C, S][C, S]   [C]      []       []       [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BC }, { A-->c }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->SB }]
C[{ C-->d }, { C-->a }]
S[{ S-->c }, { S-->b }, { S-->BS }]

word='bbaacbdccc'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[A]   [A]   []    [C]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, S][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A, B][B, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [C]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }, { A-->AC }, { A-->BA }]
B[{ B-->CB }, { B-->SS }, { B-->CC }]
S[{ S-->CA }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->d }, { C-->AA }]

word='bbaacbdccc'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, S]      []          []          []          []          []          []          []          []          
[]          [B]         [S]         []          []          []          []          []          []          []          
[B, S]      []          [B]         [S]         []          []          []          []          []          []          
[A, S]      [C]         [A]         []          [A]         []          []          []          []          []          
[B, C]      [A, S]      [C]         []          [C]         [A, S]      []          []          []          []          
[B, S, C]   [A, B, S]   [B, S, C]   []          [B, C]      [A]         [C]         []          []          []          
[A, B, S, C][A, B, S, C][A, S]      [B]         [A, S]      [B, C]      [S]         [A]         []          []          
[A, B, C, S][A, B, S, C][B, S, C]   [A]         [B, C]      [A, S]      [B]         [C]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, S]   [B, C]      [A, S]      [B, C]      [A, S]      [A, S]      [C]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AB }, { A-->BC }]
B[{ B-->b }, { B-->d }, { B-->CA }, { B-->SS }, { B-->SC }]
C[{ C-->c }, { C-->a }, { C-->BB }]
S[{ S-->d }, { S-->CB }, { S-->SB }]

word='cdbbdacaac'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [B, S]      []          []          []          []          []          []          []          []          
[A, S]      [C, S]      [B]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [C]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, S]      [C]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, C]      [A, B]      [C]         []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, C]   [A, B]      [A]         [A]         [C]         []          []          []          
[A, B, C, S][A, B, S, C][A, C, S]   [A, B, S]   [C, S]      [B]         [A]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [B]         [A]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, S]      [B]         [A]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->d }, { B-->BA }]
C[{ C-->c }, { C-->BB }]
S[{ S-->CC }, { S-->AB }]

word='cdbbdacaac'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[S]         [B, C]      [A, B]      []          []          []          []          []          []          []          
[A, S]      [A, B, C]   [A, B, C, S][A, B]      []          []          []          []          []          []          
[S]         [B, S, C]   [A, C, S]   [C, S]      [B]         []          []          []          []          []          
[A, S]      [A, B, S, C][A, B, C, S][A, C, S]   [B]         [A]         []          []          []          []          
[A, S]      [A, B, S, C][A, B, C, S][A, C, S]   [B]         [A]         [C]         []          []          []          
[A, S]      [A, B, C, S][A, B, C, S][A, C, S]   [B]         [A]         [A]         [A]         []          []          
[A, S]      [A, B, C, S][A, B, C, S][A, C, S]   [B]         [A]         [A]         [A]         [A]         []          
[A, S]      [A, B, C, S][A, B, C, S][A, C, S]   [B]         [A]         [A]         [A]         [A]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->c }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->AS }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->CS }]
S[{ S-->d }, { S-->SB }, { S-->BB }, { S-->b }]

word='cdbbdacaac'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B]         [A, S]      []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      []          []          []          []          []          []          []          
[B, S]      [B, S]      [S]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      [C]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B]      [C]         []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [B, S, C]   [B, S]      []          [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B]         []          [A]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         []          [A]         [A]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C]         [B, S]      [B]         []          [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->c }]
B[{ B-->b }, { B-->a }, { B-->SS }]
C[{ C-->d }, { C-->a }, { C-->AA }]
S[{ S-->c }, { S-->SB }, { S-->AB }]

word='cdbbdacaac'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          []          [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[]          []          []          [A]         [C]         []          []          []          []          []          
[]          []          []          [S]         []          [B, C]      []          []          []          []          
[]          []          []          [B]         []          []          [A, S]      []          []          []          
[]          []          []          [A, B]      []          []          [S]         [B, C]      []          []          
[]          []          [A]         [A, B, C, S][]          [A]         [C, S]      [A]         [B, C]      []          
[]          []          [A, C]      [A, B, S, C][]          [C]         [B]         [C]         []          [A, S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->d }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->c }, { C-->AC }, { C-->CC }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->BS }]

word='cdbbdacaac'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [A, C][]    []    []    []    []    []    []    
[S]   []    [C]   [A, C][]    []    []    []    []    []    
[B]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B]   []    [B]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B]   [B]   [B]   []    [B]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->d }]
B[{ B-->BC }, { B-->c }, { B-->AC }, { B-->SB }, { B-->SS }, { B-->SC }]
S[{ S-->c }, { S-->a }, { S-->AA }]
C[{ C-->d }, { C-->CA }, { C-->b }]

word='babaacbbbd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[]    [B]   [C]   []    []    []    []    []    []    []    
[]    [B]   [C]   [A, S][]    []    []    []    []    []    
[]    [B]   [C]   [B, S][A, S][]    []    []    []    []    
[]    []    []    [B]   [B]   [B, S][]    []    []    []    
[]    []    []    [B]   [B]   [B]   [C]   []    []    []    
[]    []    []    [B]   [B]   [B]   []    [C]   []    []    
[]    []    []    [B]   [B]   [B]   []    []    [C]   []    
[]    []    []    [B]   [B]   [B]   []    []    [C]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->d }]
B[{ B-->b }, { B-->AC }, { B-->SS }]
S[{ S-->c }, { S-->a }, { S-->BS }]
C[{ C-->c }, { C-->d }, { C-->AB }, { C-->BC }]

word='babaacbbbd'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[B]      [B]      [S]      [S]      []       []       []       []       []       []       
[S]      [S]      [B]      [B]      [S]      []       []       []       []       []       
[A, B]   [A, B]   [S, C]   [S, C]   [A, B]   [S, C]   []       []       []       []       
[C]      [C]      [A]      [A]      [C]      []       [B]      []       []       []       
[A]      [A]      [C]      [C]      []       []       []       [B]      []       []       
[C]      [C]      []       []       []       []       []       []       [B]      []       
[A, B, C][A, B, C][A, B]   [A, B]   [A, B, C][A]      [C]      [C]      [C]      [A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }]
B[{ B-->AB }, { B-->AS }, { B-->d }, { B-->BA }, { B-->CC }]
S[{ S-->c }, { S-->d }, { S-->SA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->c }, { C-->CS }, { C-->BC }]

word='babaacbbbd'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][S]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][S]   [S]   []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][S]   [S]   [S]   []    
[S]   [S]   [S]   [S]   [S]   [S, C][S]   [S]   [S]   [B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->c }, { B-->a }]
C[{ C-->AS }, { C-->d }, { C-->b }]
S[{ S-->c }, { S-->CA }, { S-->BA }, { S-->BB }]

word='babaacbbbd'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [S]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B]      [S]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [B, S]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [B, S]      [B, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [B, S]      [B]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BC }, { A-->BS }, { A-->BA }]
B[{ B-->d }, { B-->a }]
C[{ C-->AC }, { C-->d }, { C-->CB }, { C-->AA }, { C-->b }]
S[{ S-->c }, { S-->AS }]

word='babaacbbbd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[]    [A]   [C]   [B]   []    []    []    []    []    []    
[]    [A]   [C]   []    [B]   []    []    []    []    []    
[]    [C, S][]    [A]   [A]   [S]   []    []    []    []    
[]    [C]   []    [A, C][C]   []    [C]   []    []    []    
[]    [C]   []    [C]   []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    [C]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->BS }]
B[{ B-->b }, { B-->CA }]
S[{ S-->AC }, { S-->a }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->SB }, { C-->AA }]

word='bcacadddca'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          [A]         [S]         []          []          []          []          []          []          []          
[A]         [S]         []          [C]         []          []          []          []          []          []          
[C]         [C]         []          [A]         [S]         []          []          []          []          []          
[A]         [A, C]      []          [S]         []          [C]         []          []          []          []          
[A, B, S]   [A, B, S]   []          [C]         []          [A]         [C]         []          []          []          
[A, S, C]   [A, B, S, C][]          [A, C]      [C]         [B, S]      [A]         [C]         []          []          
[A, B, C, S][A, B, S, C][C]         [A, B, S, C][A]         [A, C]      [B, S]      [A]         [C]         []          
[A, B, S, C][A, B, C, S][A, C]      [A, B, S, C][B, C]      [A, B, S, C][A, C]      [B, C]      [A]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->d }, { A-->CB }]
B[{ B-->BS }, { B-->c }, { B-->SB }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->AA }, { C-->SS }, { C-->b }]
S[{ S-->SA }]

word='bcacadddca'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[C]   [C]   [A]   []    []    []    []    []    []    []    
[A, C][A]   []    [B, C][]    []    []    []    []    []    
[C]   [C]   []    [C]   [A]   []    []    []    []    []    
[C]   [C]   []    [C]   [C]   [A, C][]    []    []    []    
[C]   [C]   []    [C]   [C]   [C]   [A, C][]    []    []    
[C]   [C]   []    [C]   [C]   [C]   [C]   [A, C][]    []    
[A, C][A, C][C]   [A, C][A, C][A, C][A, C][A]   [B, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }, { A-->CB }]
B[{ B-->c }, { B-->d }, { B-->SS }]
S[{ S-->d }, { S-->a }]
C[{ C-->CS }, { C-->BC }]

word='bcacadddca'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [B]   [B, S][]    []    []    []    
[]    []    []    []    []    [B]   [B, S][]    []    []    
[]    []    []    []    []    []    [B]   [B, S][]    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BC }, { A-->c }, { A-->d }, { A-->SA }]
B[{ B-->CA }, { B-->AA }]
S[{ S-->d }, { S-->a }]
C[{ C-->c }, { C-->AS }, { C-->SB }, { C-->AB }, { C-->BS }]

word='bcacadddca'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A, C]   []       []       []       []       []       []       []       []       
[C]      [C]      [S]      []       []       []       []       []       []       []       
[A, B, C][A, B]   [A]      [A, C]   []       []       []       []       []       []       
[A, B, C][A, C]   [C]      [C]      [S]      []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [B]      [A]      [A, S]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, S]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, S]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [C]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->AB }, { B-->SA }, { B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->AS }, { S-->d }, { S-->AA }, { S-->b }]
C[{ C-->c }]

word='bcacadddca'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    [B]   [B]   [S]   []    []    []    
[]    []    []    []    []    []    [B]   [S]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->d }, { A-->SA }]
B[{ B-->BS }, { B-->c }, { B-->a }, { B-->SS }, { B-->SC }]
C[{ C-->a }]
S[{ S-->d }, { S-->SB }, { S-->b }]

word='cbcaddacaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[B]      [S]      [B]      []       []       []       []       []       []       []       
[B]      [B, S]   []       [B, C]   []       []       []       []       []       []       
[B]      [A, B, S][]       [B]      [A, S]   []       []       []       []       []       
[B]      [A, B, S][]       [B]      [A, B]   [A, S]   []       []       []       []       
[B]      [B, S]   []       [B]      [B, S]   [B, S]   [B, C]   []       []       []       
[B]      [B, S]   []       [B]      [B, S]   [S]      []       [B]      []       []       
[B]      [B, S]   []       [B]      [B, S]   [B, S]   []       []       [B, C]   []       
[B]      [B, S]   []       [B]      [B, S]   [B, S]   []       []       []       [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->c }, { A-->SA }, { A-->CA }]
B[{ B-->a }, { B-->SS }]
C[{ C-->d }, { C-->BA }, { C-->a }]
S[{ S-->SC }, { S-->b }]

word='cbcaddacaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    [A, C][A]   [A]   [A, C][A]   []    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->c }, { A-->d }, { A-->CB }]
B[{ B-->AB }, { B-->BA }, { B-->CC }, { B-->SC }]
S[{ S-->a }, { S-->SS }, { S-->CS }]
C[{ C-->AC }, { C-->d }, { C-->CA }, { C-->BC }]

word='cbcaddacaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A, S]   []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [A, C]   []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [A, C]   []       []       []       []       
[B, S, C][B, S, C][B, C, S][B, S, C][B, S, C][S, C]   [A, S]   []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      []       [A]      []       []       
[B, S, C][B, S, C][B, C, S][B, S, C][B, S, C][S, C]   []       []       [A, S]   []       
[B, S, C][B, S, C][B, C, S][B, S, C][B, S, C][S, C]   []       []       [S]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->b }, { A-->AB }]
B[{ B-->c }, { B-->CA }]
C[{ C-->a }, { C-->BB }, { C-->BC }]
S[{ S-->d }, { S-->SC }, { S-->BS }]

word='cbcaddacaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[]    []    [C]   [A, C][]    []    []    []    []    []    
[]    []    [A]   [A]   [S]   []    []    []    []    []    
[]    [A]   [B, C][B]   [A]   [S]   []    []    []    []    
[]    [A]   [B, C][B, C][A]   [S]   [A, C][]    []    []    
[]    [A]   [B, C][B, C][A]   []    [A]   [B]   []    []    
[]    [A]   [B, C][B, C][A]   [S]   []    [C]   [A, C][]    
[]    [A]   [B, C][B, C][A]   [S]   [A]   [B, C][B]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->SS }]
S[{ S-->BA }, { S-->SC }, { S-->b }]
C[{ C-->d }, { C-->BB }]

word='cbcaddacaa'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, B]      []          []          []          []          []          []          []          
[B, C]      [B]         [S]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B]      [S]         []          [C]         []          []          []          []          []          
[A, B, S, C][A, B]      [S]         []          []          [C]         []          []          []          []          
[S]         [S]         []          []          []          []          [A]         []          []          []          
[A, B, C, S][A, B, C, S][A]         []          []          []          [B]         [A, B]      []          []          
[A, B, S, C][A, B, S, C][B]         []          []          []          [S]         [S]         [A]         []          
[B, S, C]   [B, S]      [S]         []          []          []          []          []          []          [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }, { A-->CA }, { A-->CB }]
B[{ B-->BC }, { B-->c }, { B-->d }, { B-->SB }]
S[{ S-->d }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->BB }, { C-->CC }, { C-->CS }]

word='acdabcdbdd'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, S]      [B]         []          []          []          []          []          []          []          []          
[A, B, C]   [C]         [B, S]      []          []          []          []          []          []          []          
[A, C]      [A, C]      []          [A, S]      []          []          []          []          []          []          
[A, C]      [C]         []          []          [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C]      [B, S]      [B]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [C]         [B, S]      []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [A, C]      [C]         []          [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [B, C]      [B]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->c }, { B-->a }, { B-->CS }]
S[{ S-->d }, { S-->SB }, { S-->SC }]
C[{ C-->CB }, { C-->SS }]

word='acdabcdbdd'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   []    []    []    []    []    []    
[]    []    [S]   []    [B]   []    []    []    []    []    
[]    []    [S]   []    []    [B]   []    []    []    []    
[]    [A]   [C]   []    []    []    [S]   []    []    []    
[]    [A]   [C]   []    []    []    [S]   [B]   []    []    
[]    []    [B, S][]    []    [A]   [C]   []    [S]   []    
[]    [A]   [S, C][]    []    []    [B, S][A]   [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->c }, { A-->d }, { A-->CA }]
B[{ B-->BC }, { B-->AC }, { B-->SB }]
S[{ S-->c }, { S-->d }, { S-->CB }, { S-->a }, { S-->BS }]
C[{ C-->a }, { C-->b }]

word='acdabcdbdd'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A]      [A, S]   []       []       []       []       []       []       []       []       
[]       []       [A, S]   []       []       []       []       []       []       []       
[B, S]   [B]      [A, B]   [S, C]   []       []       []       []       []       []       
[A, B, S][B]      [B]      [A]      [C]      []       []       []       []       []       
[A, S]   [S]      [S]      [A]      [A]      [A, S]   []       []       []       []       
[]       []       []       []       []       []       [A, S]   []       []       []       
[A, B, S][B, S]   [B, S]   [A]      [S]      [B]      [A, B]   [C]      []       []       
[A, S]   [S]      [S]      [A]      [A]      [S]      [S]      [A]      [A, S]   []       
[]       []       []       []       []       []       []       []       []       [A, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->AB }, { B-->c }, { B-->AC }, { B-->d }, { B-->a }]
C[{ C-->d }, { C-->BA }, { C-->CS }, { C-->BS }]
S[{ S-->SA }, { S-->SB }, { S-->AA }, { S-->SS }]

word='acdabcdbdd'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[]          []          [B, C]      []          []          []          []          []          []          []          
[]          []          [C]         [A, B]      []          []          []          []          []          []          
[B, C]      [C]         [A, C]      [C, S]      [A]         []          []          []          []          []          
[]          []          [B, C]      [B, S]      [B]         [B]         []          []          []          []          
[B, C]      [C]         [A, C]      [S]         []          []          [B, C]      []          []          []          
[B, C]      [C]         [A, C, S]   [S]         []          []          [C]         [A]         []          []          
[A, B, C, S][A, C]      [A, B, C, S][A, B, C, S][B, C]      [C]         [A]         [B]         [B, C]      []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, B, C, S][A, S]      [A]         [B, C]      [S]         [A]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->AS }, { B-->CA }, { B-->CB }, { B-->a }]
C[{ C-->d }, { C-->BB }, { C-->b }]
S[{ S-->c }, { S-->AC }, { S-->BC }, { S-->BS }]

word='acdabcdbdd'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[]          []          [B]         [B]         []          []          []          []          []          []          
[]          []          [S]         [S]         [A, C]      []          []          []          []          []          
[]          []          [A, C]      [C]         [B]         [S]         []          []          []          []          
[]          []          [A, B, S]   [A, S]      [S]         []          [C]         []          []          []          
[]          []          [B, S]      [B, S]      [C]         []          [A, B]      [A, C]      []          []          
[]          []          [B, S]      [B, S]      [A, C, S]   []          [B, S]      [A, S]      [C]         []          
[]          []          [A, B, C, S][B, C, S]   [A, B, C, S][]          [B, S]      [B, S]      [A]         [C]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->d }]
B[{ B-->AB }, { B-->c }, { B-->AS }, { B-->CA }, { B-->a }]
S[{ S-->SA }, { S-->AA }, { S-->CC }, { S-->b }]
C[{ C-->d }, { C-->b }]

word='ddcabbacdd'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, B, S][A, C]   []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [S, C]   []       []       []       []       []       
[]       []       []       []       [S]      [S, C]   []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[]       []       []       []       []       []       []       []       [A, C]   []       
[]       []       []       []       []       []       []       []       [A, B, S][A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->c }, { B-->a }, { B-->CS }]
C[{ C-->c }, { C-->d }, { C-->BB }]
S[{ S-->AC }, { S-->AS }, { S-->BC }]

word='ddcabbacdd'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[S]         [A]         [B, C]      []          []          []          []          []          []          []          
[S]         [A]         [C]         [B]         []          []          []          []          []          []          
[B, S]      [B, S]      [A, S]      [C]         [B]         []          []          []          []          []          
[A, B, C]   [S, C]      [A, B]      [S]         [C]         [B]         []          []          []          []          
[B, S, C]   [A, B, S]   [B, S, C]   [A]         [S]         [C]         [B]         []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][B, C, S]   [A, B]      [A, S]      [C, S]      [B, C]      []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [C, S]      [B, S]      [A]         [A, S]      [C]         []          
[A, B, C, S][A, B, S, C][A, B, C, S][B, C, S]   [A, B, C]   [B, S]      [S]         [S]         [A]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BC }, { A-->d }]
B[{ B-->b }, { B-->c }, { B-->CA }, { B-->SB }, { B-->CC }]
C[{ C-->BA }, { C-->a }, { C-->BB }, { C-->SC }, { C-->AB }]
S[{ S-->AC }, { S-->SS }, { S-->b }]

word='ddcabbacdd'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[S, C]      [C]         [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, C]      [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [C]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [C]         [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [C]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [A]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->d }]
S[{ S-->b }]
C[{ C-->c }, { C-->SA }, { C-->SC }, { C-->BC }]

word='ddcabbacdd'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    [C]   [A, S][]    []    []    []    
[]    []    []    []    [C]   [C]   [A]   []    []    []    
[]    []    []    []    [A, C][A]   []    [C]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->BS }, { A-->c }]
B[{ B-->b }, { B-->CS }]
S[{ S-->CA }, { S-->a }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->BA }, { C-->AA }, { C-->BC }]

word='ddcabbacdd'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[B]         [S]         [A, C]      []          []          []          []          []          []          []          
[A]         []          [B]         [S]         []          []          []          []          []          []          
[C, S]      [A]         [C]         [C]         [A, B]      []          []          []          []          []          
[A, C, S]   [B, C]      [B, S, C]   [A, S]      [C]         [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [B, C]      [A]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, C]      [C, S]      [C]         [A, C]      [A, C]      []          []          
[A, B, C, S][A, C, S]   [A, C]      [C]         [A]         []          []          []          [C]         []          
[A, C, S]   [A]         []          []          []          []          []          []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }]
B[{ B-->AC }, { B-->SA }, { B-->CB }, { B-->SC }, { B-->CS }]
S[{ S-->c }, { S-->AA }]
C[{ C-->c }, { C-->d }, { C-->CA }]

word='abbdcbdccb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [A]         []          []          []          []          []          []          []          []          
[B]         [S]         [A]         []          []          []          []          []          []          []          
[]          [B]         [B]         [C]         []          []          []          []          []          []          
[A]         []          []          [B]         [S, C]      []          []          []          []          []          
[A, B, S]   [A, S]      [A]         [B]         [B, C]      [A]         []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [B]         [B]         [C]         []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C]   [A, B]      []          [B]         [S, C]      []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C]   [A, B, C]   [A]         [B]         [B]         [S, C]      []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, S]      [A, B]      [B]         [B, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->BC }, { A-->CB }]
B[{ B-->AB }, { B-->c }]
C[{ C-->AS }, { C-->a }]
S[{ S-->AC }, { S-->d }, { S-->SA }, { S-->CA }, { S-->SC }, { S-->b }]

word='abbdcbdccb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[S]         [A]         [S]         []          []          []          []          []          []          []          
[A, C, S]   [C, S]      [A]         [S]         []          []          []          []          []          []          
[A, B, S]   [A]         [B]         []          [B]         []          []          []          []          []          
[A, C, S]   [C]         []          []          []          [S]         []          []          []          []          
[A, S, C]   []          []          []          []          [A]         [S]         []          []          []          
[A, B, S, C][B, C, S]   [A]         [S]         [A]         [B]         []          [B]         []          []          
[A, B, S, C][A]         [B]         []          [B]         [A]         [S]         [A]         [B]         []          
[A, C, S]   [C, S]      [A]         [S]         [A]         [A, S, C]   [A, S]      [C]         []          [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->d }]
S[{ S-->c }, { S-->AC }, { S-->a }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->CA }, { C-->a }, { C-->BC }]

word='abbdcbdccb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }]
B[{ B-->AB }, { B-->SA }, { B-->a }, { B-->BB }, { B-->SC }]
C[{ C-->CC }, { C-->b }]
S[{ S-->d }, { S-->BA }, { S-->BS }]

word='abbdcbdccb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [B]   [A]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    [B]   [A]   []    []    
[]    []    []    []    []    []    [S]   []    [A]   []    
[]    []    []    []    []    []    [B]   []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BS }, { A-->CA }]
B[{ B-->AC }, { B-->d }, { B-->a }, { B-->CS }]
C[{ C-->c }, { C-->d }, { C-->SS }, { C-->b }]
S[{ S-->c }, { S-->AS }]

word='abbdcbdccb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[]          []          []          [B, C]      []          []          []          []          []          []          
[]          [A]         [A]         [A, B]      [C, S]      []          []          []          []          []          
[]          [B]         [B]         [B]         []          [C]         []          []          []          []          
[]          []          []          []          []          []          [B, C]      []          []          []          
[]          [A]         [A]         [A]         [A]         [A]         [A, B]      [C, S]      []          []          
[A]         [A, B, S]   [A, B, S]   [A, B, S]   [A, B, C, S][A, B, S]   [A, B, S]   [B, C]      [C, S]      []          
[B]         [A, B]      [A, B]      [A, B]      [B]         [B]         [B]         []          []          [C]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->d }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->a }, { B-->BB }, { B-->CS }]
S[{ S-->c }, { S-->CA }, { S-->SS }, { S-->BC }]
C[{ C-->d }, { C-->SA }, { C-->BA }]

word='cabdaddbaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, B]   []       []       []       []       []       []       []       []       
[B, S, C][B, C]   [A, B]   []       []       []       []       []       []       []       
[B, S, C][S, C]   [S, C]   [A, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S]   [A, B]   []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [A, C]   []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [S]      [A, C]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C]   [B, S]   [A, B]   []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C]   [B, C]   [A, B]   []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][B, C]   [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->BS }, { B-->d }, { B-->CA }, { B-->CB }, { B-->BB }]
S[{ S-->c }, { S-->CC }, { S-->b }]
C[{ C-->BA }, { C-->CS }]

word='cabdaddbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [A]      [B, S]   []       []       []       []       []       []       []       
[]       []       [B]      [B]      []       []       []       []       []       []       
[]       []       [C]      [C]      [A]      []       []       []       []       []       
[]       []       [B]      [B]      []       [B]      []       []       []       []       
[]       []       [B]      [B]      []       [B]      [B]      []       []       []       
[]       []       [B]      [B]      []       [B]      [B]      [B, S]   []       []       
[]       [A]      [B, S, C][S, C]   []       [C]      [C]      [C]      [A]      []       
[]       []       [B, C]   [B]      []       [B]      [B]      [B]      []       [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AC }, { A-->d }]
B[{ B-->c }, { B-->CB }, { B-->AA }, { B-->BB }]
C[{ C-->a }, { C-->SS }, { C-->BC }]
S[{ S-->AS }, { S-->d }, { S-->b }]

word='cabdaddbaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C]         [A, C]      []          []          []          []          []          []          []          []          
[A, B]      [B, S]      [A, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][B, C, S]   [A, S]      []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C, S]   [A, S]      []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, B, C]   [A, B]      [A, C]      []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->c }, { A-->CB }]
B[{ B-->b }, { B-->SB }, { B-->AA }]
C[{ C-->d }, { C-->SA }, { C-->a }, { C-->AB }, { C-->BC }]
S[{ S-->d }, { S-->SC }, { S-->CS }]

word='cabdaddbaa'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[B]         [A]         [A, B]      []          []          []          []          []          []          []          
[C]         []          [C]         [C, S]      []          []          []          []          []          []          
[]          []          []          [S]         [C]         []          []          []          []          []          
[B, S, C]   [A, B, S]   [B, S]      [A, S]      [S]         [C, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [A, S]      [C, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S, C]   [A, S, C]   [S, C]      [C]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [A, S]      [S]         []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }]
B[{ B-->BS }, { B-->d }, { B-->CB }, { B-->SB }, { B-->CS }]
C[{ C-->AC }, { C-->d }, { C-->a }, { C-->BC }]
S[{ S-->AS }, { S-->CA }, { S-->AA }, { S-->b }]

word='cabdaddbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[B, S][B, S][A, S][]    []    []    []    []    []    []    
[B, C][B, C][B, C][B, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BS }, { A-->c }, { A-->d }]
B[{ B-->a }, { B-->AA }, { B-->CC }]
C[{ C-->c }, { C-->CB }, { C-->a }, { C-->BB }, { C-->b }]
S[{ S-->d }, { S-->BA }, { S-->SB }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BC }]

word='bbccdcdbcd'
setV=setV
[C, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [C, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [B]         [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [B]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B]      [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, S]      [C, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][B]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->SB }]
B[{ B-->AB }, { B-->BC }, { B-->c }, { B-->SA }, { B-->CB }]
C[{ C-->d }, { C-->a }, { C-->BS }]
S[{ S-->c }, { S-->AS }, { S-->SC }, { S-->b }]

word='bbccdcdbcd'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[B]         [A]         [B, S]      []          []          []          []          []          []          []          
[A, C]      [B, S]      [A, C]      [B, S]      []          []          []          []          []          []          
[A, C]      [B, S]      [A, C]      [B, S]      [C]         []          []          []          []          []          
[A, B, S]   [A, B, C]   [A, B, S]   [A, B, C]   [A, B]      [B, S]      []          []          []          []          
[A, B, S]   [A, B, C]   [A, B, S]   [A, B, C]   [A, B]      [B, S]      [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      [A]         [B, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S]      [A]         [B, S]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->CC }, { A-->BC }, { A-->CA }]
B[{ B-->d }, { B-->SB }]
C[{ C-->c }, { C-->SA }, { C-->a }, { C-->b }]
S[{ S-->c }, { S-->d }, { S-->SC }, { S-->AB }]

word='bbccdcdbcd'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[A]         [A]         [C, S]      []          []          []          []          []          []          []          
[A]         [A]         [A, S]      [C, S]      []          []          []          []          []          []          
[S]         [S]         [B, S]      [B]         [B, S]      []          []          []          []          []          
[A, S]      [A, S]      [A, C, S]   [A, C]      [A, S]      [C, S]      []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, S]   [B]         [B, S]      []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C]      [A, S]      [C]         []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, S]      [C, S]      [A]         [C, S]      []          
[A, B, S]   [A, B, S]   [A, B, C, S][A, B, C, S][A, B, S]   [B, S]      [B, S]      [S]         [B]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BS }, { A-->c }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->d }, { B-->CA }, { B-->CB }]
S[{ S-->BA }, { S-->AA }, { S-->SS }, { S-->BC }]

word='bbccdcdbcd'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[A]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [S]   [A]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[S]   [A]   [S]   [A]   [S]   [A]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, B][]    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A]   [S]   [A]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->BA }, { B-->a }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->SC }]
C[{ C-->d }, { C-->SA }, { C-->CB }, { C-->SS }]

word='bbccdcdbcd'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    [C]   [B]   []    []    []    []    
[]    []    []    []    [C]   []    [B, C][]    []    []    
[]    []    []    []    [C]   []    [C]   [B]   []    []    
[]    []    []    []    [C]   []    [C]   []    [B]   []    
[]    []    []    []    [C]   []    [C]   []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->AC }, { A-->AS }, { A-->d }, { A-->SB }]
B[{ B-->b }, { B-->c }, { B-->a }, { B-->BB }, { B-->SC }]
C[{ C-->CB }, { C-->AA }, { C-->SS }]
S[{ S-->CA }, { S-->CS }, { S-->BC }]

word='caadadcddd'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[B]         [B]         [B]         []          []          []          []          []          []          []          
[]          []          []          [A]         []          []          []          []          []          []          
[]          []          []          []          [B]         []          []          []          []          []          
[]          []          []          []          []          [A]         []          []          []          []          
[]          []          []          [A]         [S]         [C]         [A, B]      []          []          []          
[A, S]      [S]         [S]         [C]         []          [A, S]      [C]         [A]         []          []          
[C]         []          []          [A, S]      [B, S]      [A, C]      [A, S]      [C]         [A]         []          
[A, B, S]   [B, S]      [B, S]      [A, C]      [B, S, C]   [A, B, C, S][A, C]      [A, S]      [C]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->c }, { A-->d }]
B[{ B-->AB }, { B-->a }, { B-->SS }]
C[{ C-->c }, { C-->BA }, { C-->BC }, { C-->BS }]
S[{ S-->AC }, { S-->d }, { S-->SA }]

word='caadadcddd'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[]          []          [B]         []          []          []          []          []          []          []          
[S, C]      [C]         [C]         [A, S]      []          []          []          []          []          []          
[]          []          []          [B]         [B]         []          []          []          []          []          
[S, C]      [C]         [C]         [S, C]      [C]         [A, S]      []          []          []          []          
[S, C]      [C]         [C]         [S, C]      [C]         [A, S]      [A, C]      []          []          []          
[B, S, C]   [C]         [C]         [B, S, C]   [C]         [A, B, S]   [A]         [A, S]      []          []          
[B, S, C]   [C]         [C]         [B, S, C]   [C]         [A, B, S, C][A, B]      [A, B, S]   [A, S]      []          
[B, S, C]   [C]         [C]         [B, S, C]   [C]         [A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->d }]
B[{ B-->c }, { B-->SA }, { B-->CB }, { B-->AA }]
S[{ S-->c }, { S-->d }, { S-->CA }, { S-->CC }]

word='caadadcddd'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [B]   [A]   []    []    []    []    []    []    []    
[]    []    [B]   [A, S][]    []    []    []    []    []    
[]    []    []    [B]   [A]   []    []    []    []    []    
[]    []    []    []    [B]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    [B]   [A, S][]    []    
[]    []    []    []    []    []    []    [B]   [A, S][]    
[]    []    []    []    []    []    []    []    [B]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->c }]
B[{ B-->b }, { B-->d }, { B-->CA }, { B-->AA }]
C[{ C-->a }, { C-->SC }, { C-->BS }]
S[{ S-->SA }, { S-->BB }, { S-->CS }, { S-->BC }]

word='caadadcddd'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A, C][]    []    []    []    []    []    []    []    
[S]   [B]   [A, C][]    []    []    []    []    []    []    
[]    [S]   []    [B]   []    []    []    []    []    []    
[A, C][C, S][S]   [S]   [A, C][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    [S]   [B]   []    
[]    []    []    []    []    []    []    [C]   [S]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->AC }, { A-->d }, { A-->CB }]
B[{ B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->c }, { S-->CS }]
C[{ C-->c }, { C-->CA }, { C-->SB }, { C-->AB }]

word='caadadcddd'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[A, C]      [B]         [A]         []          []          []          []          []          []          []          
[A, B, C]   [C]         [B]         [A]         []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [C]         [B]         [A]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [C]         [B]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B]      [A]         [S, C]      []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B, C]      [A, B]      [C]         [A]         []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [B]         [A]         []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         [B]         [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->BC }, { B-->CB }]
S[{ S-->c }, { S-->CA }, { S-->a }, { S-->SC }, { S-->CS }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->SB }]

word='dccbadbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [S, C]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][S, C]   [A]      []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   []       [S]      []       []       []       []       []       
[A, S, C][A, S, C][A, S]   []       [S]      [C]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][]       [A, C]   [S]      [A]      []       []       []       
[A, S, C][A, S, C][A, S, C][]       [S]      [C]      []       [A]      []       []       
[A, S, C][A, S, C][A, S, C][]       [A, C]   [S]      []       []       [A]      []       
[A, S, C][A, S, C][A, S, C][]       [C, S]   [A]      []       []       []       [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CB }]
B[{ B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->c }, { S-->BA }, { S-->a }, { S-->CC }]
C[{ C-->d }, { C-->b }]

word='dccbadbbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A]      [B]      [S]      []       []       []       []       []       []       []       
[A]      [A, S]   [A]      [A, C]   []       []       []       []       []       []       
[A]      [A, B, S][A]      [A]      [B, S]   []       []       []       []       []       
[A]      [A, S]   [A]      [A]      [A]      [C]      []       []       []       []       
[A]      [A, B, S][A]      [A]      [A, B]   [S]      [A, C]   []       []       []       
[A]      [A, B, S][A]      [A]      [A, S]   [A]      [A, S]   [A, C]   []       []       
[A]      [A, B, S][A]      [A]      [A, B, S][A, B]   [A]      [A, S]   [A, C]   []       
[A]      [A, B, S][A]      [A]      [A, B, S][A, B]   [A]      [A, B]   [A]      [B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->d }]
B[{ B-->SS }]
S[{ S-->c }, { S-->SA }, { S-->a }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->CA }, { C-->b }]

word='dccbadbbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[]    [B]   [S, C][]    []    []    []    []    []    []    
[]    [B]   [S, C][A, C][]    []    []    []    []    []    
[]    []    [B]   [C]   [S]   []    []    []    []    []    
[]    []    [B]   [C]   [S]   [A, C][]    []    []    []    
[]    []    [B]   [C]   [S]   [C]   [A, C][]    []    []    
[]    []    [B]   [C]   [S]   [C]   [C]   [A, C][]    []    
[]    []    [B]   [C]   [S]   [C]   [C]   [C]   [A, C][]    
[C]   [A]   []    []    [B]   []    []    []    [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->d }]
B[{ B-->AC }, { B-->a }, { B-->SC }]
S[{ S-->AS }, { S-->d }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->CA }, { C-->CB }, { C-->CC }]

word='dccbadbbba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B]   [A, C][]    []    []    []    []    []    []    []    
[B, S][B, C][A, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    [S]   [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->SA }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->CS }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->CC }]
C[{ C-->d }]

word='dccbadbbba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A, B][B]   [B]   [A]   []    []    []    []    []    []    
[A, B][A, B][A]   []    [B]   []    []    []    []    []    
[B, S][S]   [S]   []    []    [S, C][]    []    []    []    
[A, B][A, B][B]   []    [A]   [B]   [A]   []    []    []    
[A, B][A, B][B]   []    [A]   [B]   []    [A]   []    []    
[A, B][A, B][B]   []    [A]   [B]   []    []    [A]   []    
[A, B][A, B][A]   []    [B]   [A]   []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->d }, { A-->CB }]
B[{ B-->AB }, { B-->c }, { B-->AS }, { B-->d }, { B-->SA }, { B-->SC }]
C[{ C-->BB }, { C-->SS }, { C-->b }, { C-->BC }]
S[{ S-->CC }]

word='dabccdbcbc'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A]         [A]         [A, C]      []          []          []          []          []          []          []          
[A, B, C]   [A, B]      [A, B]      [B]         []          []          []          []          []          []          
[A, B, C]   [B, C]      [B, S, C]   [C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, S, C][A, C]      [C]         [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [C, S]      [A, C]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, B, C]   [A, B]      [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [C]         [A, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, B]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->d }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->CA }]
S[{ S-->CB }, { S-->a }, { S-->BB }, { S-->AB }]
C[{ C-->c }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }]

word='dabccdbcbc'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [S, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B]      []          []          []          []          []          []          []          
[C]         [C]         []          [C]         []          []          []          []          []          []          
[C]         [C]         []          [C]         [C]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      [B, S]      [B]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [B, S]      [A, S]      [A, B]      []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         []          [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, S]      [A, B]      []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         []          [C]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->d }]
B[{ B-->BS }, { B-->c }, { B-->AC }, { B-->a }, { B-->AA }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->BC }]
S[{ S-->AS }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->AB }]

word='dabccdbcbc'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[C, S]   [B]      []       []       []       []       []       []       []       []       
[C]      []       [A]      []       []       []       []       []       []       []       
[C, S]   [B]      [B, S]   [B, C]   []       []       []       []       []       []       
[B, C, S][B, C]   [B, C, S][C]      [B, C]   []       []       []       []       []       
[B, S, C][B, C]   [B, C, S][C]      [C]      [A, C]   []       []       []       []       
[B, S, C][B, C]   [B, C, S][C]      [C]      [B, C]   [A]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][C, S]   [B, S]   [B, C]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [C]      [A]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, S]   [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->d }]
B[{ B-->b }, { B-->BS }, { B-->c }, { B-->BA }, { B-->CB }]
C[{ C-->c }, { C-->AC }, { C-->d }, { C-->a }]
S[{ S-->AS }, { S-->SA }, { S-->AA }, { S-->BC }]

word='dabccdbcbc'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[C]         [C]         []          []          []          []          []          []          []          []          
[B]         [B]         [A, B]      []          []          []          []          []          []          []          
[S]         [S]         [C, S]      [B, C]      []          []          []          []          []          []          
[A, B, S]   [A, B]      [A, B, S]   [B, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][B, C, S]   [A, B, S, C][A, B, S]   [B, S]      [A, C]      []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [A, B]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, B, S]   [A, C, S]   [C, S]      [B, C]      []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B]         [A, B]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      [C, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }]
B[{ B-->AB }, { B-->BC }, { B-->AC }, { B-->a }, { B-->CC }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->a }, { S-->SS }, { S-->b }]

word='dabccdbcbc'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }]
B[{ B-->AB }, { B-->BC }, { B-->c }, { B-->SA }, { B-->CA }, { B-->CB }]
C[{ C-->d }, { C-->a }, { C-->SS }, { C-->b }]

word='bdacaabbac'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B]   [B]   [A, C][]    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    [C]   []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    [C]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, C][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->AC }, { B-->BB }, { B-->SC }]
C[{ C-->c }, { C-->a }, { C-->CS }, { C-->b }, { C-->BS }]
S[{ S-->AS }, { S-->d }, { S-->BA }, { S-->CB }, { S-->b }]

word='bdacaabbac'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[S]      [B]      [C]      []       []       []       []       []       []       []       
[B, C]   [S]      []       [A, C]   []       []       []       []       []       []       
[S, C]   [B]      [S]      [B]      [C]      []       []       []       []       []       
[B, S]   []       [B]      []       []       [C]      []       []       []       []       
[B, C, S][B]      [B, C]   []       []       [C]      [C, S]   []       []       []       
[B, C, S][B, C]   [B, S, C][B, C]   [C]      [S, C]   [B, C]   [C, S]   []       []       
[B, C, S][B, C]   [B, C, S][B, C, S][C, S]   [B, C, S][S]      [B]      [C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C]   [S]      []       [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BS }]
B[{ B-->SA }, { B-->a }, { B-->CC }]
C[{ C-->c }, { C-->d }, { C-->SS }, { C-->SC }, { C-->b }]
S[{ S-->d }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->CS }]

word='bdacaabbac'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, S]      [C, S]      []          []          []          []          []          []          []          []          
[B, S]      [B, S]      [A, B]      []          []          []          []          []          []          []          
[B, C]      [C]         []          [C]         []          []          []          []          []          []          
[S]         []          []          []          [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A]         [S]         [A, S]      [A, B]      []          []          []          []          
[B, C, S]   [B, C, S]   [A]         [B, C]      [C]         []          [C]         []          []          []          
[A, B, C, S][A, B, C, S][A]         [B, S]      [A, B, S]   [A]         [B]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, S]      [B, S, C]   [A, B, S, C][A, S]      [S]         []          [A, B]      []          
[B, C, S]   [B, C, S]   [A, C]      [B, C]      [B, C]      [C]         [C]         []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }, { A-->AS }]
B[{ B-->b }, { B-->d }]
C[{ C-->d }, { C-->CA }, { C-->a }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->AC }, { S-->SA }, { S-->CB }, { S-->AA }, { S-->AB }]

word='bdacaabbac'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, C, S][B, C]   []       []       []       []       []       []       []       []       
[A, C, S][A, C]   [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][C, S]   [A]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][S]      [A, C]   []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [C, S]   [A, C]   []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [A, C, S][C, S]   [B, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [A, C, S][A, C, S][A, C, S][B, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [A, C, S][A, C, S][A, C, S][A, C]   [A, C]   []       
[A, S, C][A, C, S][A, C, S][A, S]   [A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->c }]
B[{ B-->b }, { B-->BS }, { B-->a }]
S[{ S-->AS }, { S-->d }, { S-->SA }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->c }, { C-->AC }]

word='bdacaabbac'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[S]      []       [B]      []       []       []       []       []       []       []       
[A, B, S][S]      [A]      [A, C]   []       []       []       []       []       []       
[S]      []       []       []       [B]      []       []       []       []       []       
[B, S]   [S]      [B, S]   [S]      [S]      [B]      []       []       []       []       
[B, S]   [S]      [B, S]   [S]      [B, S]   [B, S]   [B, S]   []       []       []       
[B, S]   [S]      [B, S]   [S]      [B, S]   [B, S]   [B, S]   [B, S]   []       []       
[B, S]   [S]      [B, S]   [S]      [B, S]   [B, S]   [B, S]   [S]      [B]      []       
[A, B, S][A, S]   [A, B, S][A, S]   [A, B, S][A, B, S][A, B, S][A, S]   [A]      [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }]
B[{ B-->BS }, { B-->AC }]
S[{ S-->c }, { S-->BA }, { S-->a }]
C[{ C-->d }, { C-->SC }]

word='bcbaadbcdc'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    [B]   [B, C][B, C][C]   []    []    []    []    
[]    []    [S]   [S]   [S]   []    [A]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[B]   [C]   [B, C][B, C][C]   []    [B]   [C]   [C]   []    
[B]   []    [B]   [B]   []    []    [B]   []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->c }, { B-->d }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->a }, { S-->BB }, { S-->BS }]
C[{ C-->CS }, { C-->b }, { C-->AB }]

word='bcbaadbcdc'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, S]      [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, C]      [B, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, C]      [B, S]      [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C]      [B, S]      [B, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [A, S]      [A, S]      [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C]      [B, S]      [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B, S]      [B, S]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->SB }, { B-->CS }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->a }, { S-->SS }]
C[{ C-->c }, { C-->AC }, { C-->b }]

word='bcbaadbcdc'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[B]      [S]      [B]      [S]      []       []       []       []       []       []       
[B]      [S]      [B]      [S]      [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A]      [A]      [A]      []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      []       []       []       
[]       []       []       []       []       []       []       [C]      []       []       
[B, S]   [B, S]   [B, S]   [B]      [B]      [B]      [B]      [S]      [A]      []       
[]       []       []       []       []       []       []       []       [C]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->c }, { B-->AC }, { B-->d }, { B-->BA }, { B-->SS }, { B-->CC }]
C[{ C-->c }, { C-->a }]
S[{ S-->d }, { S-->BS }]

word='bcbaadbcdc'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, B]   [B, C]   []       []       []       []       []       []       []       []       
[A, B]   [A, B]   [A]      []       []       []       []       []       []       []       
[A, B]   [B]      [B]      [C]      []       []       []       []       []       []       
[A, B]   [A, B]   [A]      [B]      [C]      []       []       []       []       []       
[A, B, S][A, B, S][A]      [S]      []       [B, S]   []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A]      [A, B]   [A]      []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [S]      [B, S]   []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->d }, { B-->SA }]
S[{ S-->d }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->c }, { C-->SB }, { C-->AA }, { C-->SC }, { C-->BS }]

word='bcbaadbcdc'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       [B]      [A]      []       []       []       []       []       []       
[S]      [S]      [C]      [C]      [A]      []       []       []       []       []       
[C, S]   [C, S]   [B, C]   [A, C]   [A, S]   [B, S]   []       []       []       []       
[C, S]   [C, S]   [B, C, S][A, C, S][A]      [C]      [S]      []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [A, C]   [C, S]   [C]      [C]      []       []       
[C, S]   [C, S]   [B, C, S][A, C, S][A, S]   [C]      []       []       [B, S]   []       
[C, S]   [C, S]   [B, C, S][A, C, S][A, S, C][C, S]   [S]      [S]      [C]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->c }, { B-->d }]
C[{ C-->c }, { C-->AS }, { C-->a }, { C-->SS }]
S[{ S-->BA }, { S-->AA }]

word='bbcacbcdcd'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[C]   [S]   [A]   [C]   []    []    []    []    []    []    
[A, C][C]   [S]   [A]   [B, C][]    []    []    []    []    
[S]   [C]   [C]   [S]   [S]   [A]   []    []    []    []    
[C, S][A, S][A]   []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }, { A-->AS }, { A-->d }]
B[{ B-->AC }, { B-->BB }]
S[{ S-->a }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->a }]

word='bbcacbcdcd'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A, B][S, C][]    []    []    []    []    []    
[]    [B]   [C]   []    [A]   []    []    []    []    []    
[B]   [C]   []    []    []    [A]   []    []    []    []    
[C]   []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }, { A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->a }, { B-->BB }]
S[{ S-->c }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->BA }]

word='bbcacbcdcd'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A, B]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->c }, { A-->d }]
B[{ B-->d }, { B-->SB }, { B-->BB }]
S[{ S-->AC }, { S-->SS }, { S-->b }]
C[{ C-->SA }, { C-->BA }, { C-->CB }, { C-->CS }, { C-->BC }]

word='bbcacbcdcd'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       []       []       []       [S]      [C]      [A]      []       []       []       
[C]      [C]      []       [S]      [B, S, C][C]      []       [A, B]   []       []       
[C, S]   [C, S]   [S]      [S, C]   [C]      [S]      [S]      [C]      [A]      []       
[B, C, S][B, C, S][B, S, C][B, S, C][S, C]   [B, S, C][B, S, C][C]      []       [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BC }, { A-->d }]
B[{ B-->b }, { B-->AA }, { B-->SS }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->BS }]
C[{ C-->CA }, { C-->SB }]

word='bbcacbcdcd'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[B]         [B]         [B]         [S]         []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [C, S]      [B]         [S]         []          []          []          []          []          
[A, C]      [A, C]      [A, C]      []          [C]         [B]         []          []          []          []          
[B]         [B]         [B]         [C, S]      [B]         [S]         [S]         []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [B, C]      [C, S]      [B]         [B]         [A, S]      []          []          
[A, B, C]   [A, B, C]   [B, C]      [A, C, S]   [B]         [A, S, C]   [C, S]      [B]         [S]         []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C]   [A, C, S]   [A, B, C]   [B, C]      [A, C, S]   [B]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }, { A-->CA }]
B[{ B-->b }, { B-->d }]
C[{ C-->BA }, { C-->a }]
S[{ S-->c }, { S-->AB }]

word='bdcdacabda'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       [C]      [A, S]   []       []       []       []       []       []       []       
[]       []       [S]      [B]      []       []       []       []       []       []       
[]       []       []       [C]      [A, C]   []       []       []       []       []       
[C]      [A]      []       [A, C]   [A]      [A, S]   []       []       []       []       
[A, C]   [A]      []       [A]      []       []       [A, C]   []       []       []       
[A, S, C][A, S]   []       [A, S]   []       []       [A, S]   [A, B]   []       []       
[S]      [S]      []       [S]      []       []       [S]      [S]      [B]      []       
[]       []       []       []       []       []       []       []       [C]      [A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BS }, { A-->c }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->d }, { B-->a }, { B-->CS }]
S[{ S-->AC }, { S-->BA }, { S-->AA }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->AS }, { C-->CB }]

word='bdcdacabda'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, S]      [S]         [A]         []          []          []          []          []          []          []          
[A, S]      [A]         []          [B]         []          []          []          []          []          []          
[A, C, S]   [S]         [C]         [S]         [A, B]      []          []          []          []          []          
[A, S, C]   [A, C]      [S]         [A]         [S]         [A]         []          []          []          []          
[A, B, C, S][S, C]      [A, B, C]   [S]         [A, C]      [S]         [A, B]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, B, S, C][A, S]      [A, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, S, C]   [S, C]      [A]         [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, S, C]   [A, B, C, S][A, S, C]   [A, B, S, C][A, S]      [S]         [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->AS }, { A-->d }, { A-->SA }]
B[{ B-->AB }, { B-->CA }, { B-->SB }, { B-->a }]
C[{ C-->BA }, { C-->a }, { C-->SS }, { C-->b }]
S[{ S-->d }, { S-->CB }, { S-->CC }, { S-->CS }, { S-->BC }]

word='bdcdacabda'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B, S]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [A]         [A]         []          []          []          []          []          []          []          
[A, B, C, S][A]         [A]         [A, S]      []          []          []          []          []          []          
[B, S]      [B]         [B]         [B]         [B, C]      []          []          []          []          []          
[A, B, S, C][B, C]      [B, C]      [B, C]      [B, C]      [A]         []          []          []          []          
[A, B, C, S][A, S, C]   [A, S]      [A, C, S]   [S]         [B]         [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [S]         [C]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, S, C]   [B, S]      [A, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, S]   [B, S]      [B, S]      [B]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }, { A-->SA }]
B[{ B-->b }, { B-->AS }, { B-->CC }, { B-->CS }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->AA }, { C-->BB }, { C-->b }, { C-->BC }]
S[{ S-->d }, { S-->CA }]

word='bdcdacabda'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [C, S]      []          []          []          []          []          []          []          []          
[B, C]      [B]         [C]         []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [B]         [C, S]      []          []          []          []          []          []          
[B, C]      [B, C]      [C]         [B]         [C]         []          []          []          []          []          
[B, C]      [B, C]      [B, C]      [C]         [B]         [C]         []          []          []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [C]         [B]         [C]         []          []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [C]         [B]         [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, B, S, C][A, B, C]   [C, S]      []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B]         [C]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->d }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->c }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]
S[{ S-->c }, { S-->a }, { S-->b }]
C[{ C-->AS }, { C-->d }, { C-->a }, { C-->BS }]

word='bdcdacabda'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A]      [A, C]   []       []       []       []       []       []       []       []       
[A, B, C][B, C]   [B, S]   []       []       []       []       []       []       []       
[A, B]   [A, B]   [A]      [A, C]   []       []       []       []       []       []       
[A, B, C][B, C]   [A, B, C][B, C]   [S, C]   []       []       []       []       []       
[A, B, C][B, C]   [A, B, C][B, C]   [B]      [B, S]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][S, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, S]   []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      [A]      [A, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [S, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }, { A-->SB }]
B[{ B-->d }, { B-->BB }]
S[{ S-->c }, { S-->AC }, { S-->CA }, { S-->CB }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->SA }, { C-->SC }, { C-->b }, { C-->AB }]

word='dbaccddadd'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [S, C]   []       []       []       []       []       []       []       []       
[]       [S, C]   [A]      []       []       []       []       []       []       []       
[]       [S, C]   [C]      [A, S]   []       []       []       []       []       []       
[]       [C, S]   [S]      [C]      [A, S]   []       []       []       []       []       
[]       [A, S, C][A, S, C][S, C]   [A, C]   [B]      []       []       []       []       
[]       [A, S, C][A, S, C][A, S, C][A, C, S][B]      [B]      []       []       []       
[]       [S, C]   [S, C]   [S, C]   [S, C]   []       []       [A]      []       []       
[]       [A, S, C][A, S, C][A, S, C][A, S, C][]       []       [C]      [B]      []       
[]       [A, C, S][A, S, C][A, S, C][A, S, C][]       []       [C, S]   [B]      [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }]
B[{ B-->c }, { B-->a }, { B-->SS }, { B-->CC }]
S[{ S-->d }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->c }, { C-->d }, { C-->CB }, { C-->AB }]

word='dbaccddadd'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[S]      []       [B]      []       []       []       []       []       []       []       
[B, S, C][B]      [S]      [B, C]   []       []       []       []       []       []       
[B, S, C][B, S]   [S]      [B, S, C][B, C]   []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B, S, C][B, S]   [S, C]   []       []       []       []       
[B, C, S][B, S]   [B, S]   [B, S, C][B, S, C][B, S]   [S, C]   []       []       []       
[B, C, S][B, S]   [B, S]   [B, S, C][S, C]   [B, S]   [C]      [B]      []       []       
[B, C, S][B, S]   [B, S]   [B, S, C][B, S, C][B, S, C][B, S]   []       [S, C]   []       
[B, C, S][B, S]   [B, S]   [B, C, S][B, S, C][B, S, C][B, S, C][S]      [B, S]   [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }]
B[{ B-->c }, { B-->d }, { B-->CA }]
S[{ S-->a }]
C[{ C-->c }, { C-->AC }, { C-->d }]

word='dbaccddadd'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    [C]   [C]   [B, C][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    [B]   [A, S][]    []    
[]    []    []    []    []    []    []    [C]   [B, C][]    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->c }, { A-->d }]
B[{ B-->CA }, { B-->SB }]
C[{ C-->a }, { C-->CS }, { C-->b }]
S[{ S-->d }, { S-->BB }, { S-->b }, { S-->AB }, { S-->BS }]

word='dbaccddadd'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A]         [C, S]      []          []          []          []          []          []          []          []          
[B, S]      [B]         [A, C]      []          []          []          []          []          []          []          
[B, S]      [B]         [B]         [A]         []          []          []          []          []          []          
[]          []          []          []          [A]         []          []          []          []          []          
[]          []          []          []          []          [A, S]      []          []          []          []          
[]          []          []          []          []          [A]         [A, S]      []          []          []          
[]          []          []          []          []          []          []          [A, C]      []          []          
[A, S]      [A, S, C]   [S]         []          [S]         [A, B, S]   [B, S]      [B, C]      [A, S]      []          
[A, B, S]   [A, B, S, C][A, S]      []          [A, S]      [A, B, S]   [A, B, S]   [B, C, S]   [A]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->d }]
B[{ B-->SS }, { B-->SC }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->CC }, { S-->b }]
C[{ C-->SA }, { C-->CB }, { C-->BC }]

word='dbaccddadd'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, S]      []          []          []          []          []          []          []          []          
[B, S]      [C]         [A]         []          []          []          []          []          []          []          
[B]         []          []          [S]         []          []          []          []          []          []          
[A, B]      [C]         []          [B]         [S]         []          []          []          []          []          
[A, B, C, S][C]         []          [B, S]      [B, C]      [A, S]      []          []          []          []          
[A, B, S, C][S, C]      []          [A, B, C, S][B, S]      [B, C]      [A, S]      []          []          []          
[A, B, C, S][S, C]      []          [A, B, C, S][B, S, C]   [B, S]      [C]         [A]         []          []          
[A, B, S, C][B, S, C]   []          [A, B, C, S][B, S, C]   [B, S, C]   []          []          [A, S]      []          
[A, B, C, S][B, S, C]   []          [A, B, C, S][A, B, C, S][A, B, C, S][S, C]      []          [B, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->c }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->a }]
S[{ S-->a }, { S-->BB }, { S-->b }]
C[{ C-->BC }]

word='dcacdbcacb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[]    [S]   [B, S][]    []    []    []    []    []    []    
[]    []    [S]   [A, B][]    []    []    []    []    []    
[]    []    []    [S]   [B]   []    []    []    []    []    
[]    []    []    []    [S]   [B, S][]    []    []    []    
[]    []    []    []    []    [S]   [A, B][]    []    []    
[]    []    []    []    []    []    [S]   [B, S][]    []    
[]    []    []    []    []    []    []    [S]   [A, B][]    
[]    []    []    []    []    []    []    []    [S]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->c }, { A-->d }]
B[{ B-->c }, { B-->CA }, { B-->BB }]
C[{ C-->d }, { C-->BA }, { C-->a }, { C-->CC }, { C-->b }]
S[{ S-->SA }, { S-->SB }, { S-->SS }, { S-->b }]

word='dcacdbcacb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [A, B]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[A, B]   [A, B]   [B]      [A, B]   []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [A, C]   []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C, S]   []       []       []       []       
[A, B, C][A, B, C][B, C]   [A, B, C][A, B]   [B, S]   [A, B]   []       []       []       
[C]      [C]      [C]      [C]      []       []       []       [C]      []       []       
[A, B, C][A, B, C][B, C]   [A, B, C][A, B]   [B, S]   [A, B]   [B]      [A, B]   []       
[C]      [C]      [C]      [C]      []       [S]      []       []       []       [C, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->c }, { A-->AC }]
B[{ B-->c }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->a }]
C[{ C-->d }, { C-->CB }, { C-->SB }, { C-->SS }, { C-->BS }]

word='dcacdbcacb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S, C]      [A, B]      []          []          []          []          []          []          []          []          
[B, C]      [C]         [S]         []          []          []          []          []          []          []          
[B, S, C]   [A, S, C]   [S, C]      [A, B]      []          []          []          []          []          []          
[B, S, C]   [A, B, S, C][B, S]      [A]         [C]         []          []          []          []          []          
[B, S, C]   [A, B, S, C][B, S, C]   [A, C]      [S]         [A]         []          []          []          []          
[B, C, S]   [A, B, S, C][B, S, C]   [A, C, S]   [S, C]      [A]         [A, B]      []          []          []          
[B, C, S]   [A, B, C, S][B, S, C]   [A, B, C]   [B, S, C]   [A]         [C]         [S]         []          []          
[B, C, S]   [A, B, C, S][B, C, S]   [A, B, C, S][B, S, C]   [A]         [A, C, S]   [S, C]      [A, B]      []          
[B, C, S]   [A, B, C, S][B, C, S]   [A, B, C, S][B, S, C]   [A]         [A, B, C, S][S, C]      [A, S]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AC }, { A-->AS }, { A-->d }, { A-->CB }, { A-->SB }]
B[{ B-->AB }, { B-->d }, { B-->BA }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->c }, { S-->b }]
C[{ C-->c }, { C-->CA }, { C-->SS }, { C-->BC }]

word='dcacdbcacb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, C]   [S, C]   []       []       []       []       []       []       []       []       
[A, B]   [A]      [B]      []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [S, C]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [A, B]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [A]      [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [S, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A]      [A]      [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [S, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [C]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->d }, { A-->SA }]
B[{ B-->AB }, { B-->BC }, { B-->d }, { B-->SB }, { B-->a }, { B-->SS }]
S[{ S-->c }, { S-->AS }, { S-->BA }, { S-->CS }, { S-->b }]
C[{ C-->CA }, { C-->CC }]

word='dcacdbcacb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [S]      []       []       []       []       []       []       []       []       
[A, B, S][A, B]   [A, B]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [S]      []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, B]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B]      [S]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B]      [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }, { B-->AS }]
C[{ C-->c }, { C-->d }, { C-->CB }, { C-->SB }, { C-->CC }, { C-->b }]
S[{ S-->c }, { S-->CA }, { S-->SS }]

word='cdccdbdcab'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C, S][]    []    []    []    []    []    []    
[C]   [C]   [C, S][C, S][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->AA }, { B-->CC }]
S[{ S-->c }]
C[{ C-->AS }, { C-->d }, { C-->SC }]

word='cdccdbdcab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [C]      []       []       []       []       []       []       []       []       
[A, B, C][A]      [B, S]   []       []       []       []       []       []       []       
[A, B, C][B, C]   []       [B, S]   []       []       []       []       []       []       
[A, B]   [A, B]   [A, C]   [A, C]   [C]      []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A]      [A, B]   []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   []       [A]      [C]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B, C]   [A]      [B, S]   []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      [B]      []       [A]      []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      []       [B]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->c }, { A-->d }, { A-->CB }, { A-->SB }]
B[{ B-->AC }, { B-->CA }, { B-->a }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->AA }, { C-->b }]
S[{ S-->SA }, { S-->SC }, { S-->CS }]

word='cdccdbdcab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, C]   []       []       []       []       []       []       []       []       
[A, B]   [B, C]   [A, C]   []       []       []       []       []       []       []       
[A, B, C][A, B]   [B, C]   [A, C]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B]   [B, C]   [A, C]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      [B]      [C]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      [B]      [A, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [B, C]   [A, C]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B, C][A, B]   [B, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->d }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->c }, { B-->a }, { B-->CS }]
S[{ S-->c }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }]
C[{ C-->d }]

word='cdccdbdcab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, B, S][A, C]   []       []       []       []       []       []       []       []       
[S]      [B, S]   [B, S]   []       []       []       []       []       []       []       
[S]      [B, S]   [S]      [B, S]   []       []       []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, B, S][A, C]   []       []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, S]   [A, S]   [A, B]   []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, S]   [A, B, S][B, S]   [A, C]   []       []       []       
[S]      [B, S]   [S]      [S]      [B, S]   [S]      [B, S]   [B, S]   []       []       
[S]      [B, S]   [S]      [S]      [B, S]   [S]      [B, S]   [S]      [B, S]   []       
[A, S]   [A, B, S][A, S]   [A, S]   [A, B, S][A, S]   [A, B, S][A, S]   [A, S]   [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }]
B[{ B-->BC }, { B-->SB }]
C[{ C-->AC }, { C-->d }, { C-->a }, { C-->AA }, { C-->b }]
S[{ S-->c }, { S-->d }, { S-->CB }, { S-->BB }]

word='cdccdbdcab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [C, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C, S][]    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->d }, { A-->SA }, { A-->CA }]
B[{ B-->BC }, { B-->BS }, { B-->CC }]
C[{ C-->c }, { C-->a }, { C-->SC }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->CS }, { S-->b }]

word='bbdabdacab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [A, S]   []       []       []       []       []       []       []       
[C]      [C]      [C]      [C]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A, S]   []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [C]      [C]      [C]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [C, S]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [B, C]   [B, C]   [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [B, S]   [S]      [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->SA }, { B-->CA }]
S[{ S-->AC }, { S-->SB }, { S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->c }, { C-->BA }]

word='bbdabdacab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[B, S]   [B]      [C]      [A]      []       []       []       []       []       []       
[B, S]   [B, S]   [C]      [A]      [B, S]   []       []       []       []       []       
[B, S]   [B, S]   [C]      [A]      [S]      [B]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][A, S]   [B]      [C]      [A]      []       []       []       
[B, S, C][B, S, C][B, S, C][A, S]   [B, S]   [S, C]   [A, S]   [B, C]   []       []       
[B, S, C][B, S, C][B, S, C][A, B, S][B, S, C][B, S, C][A, B, S][B, C]   [A]      []       
[B, C, S][B, S, C][B, S, C][A, B, S][B, S, C][B, S, C][A, B, S][B, C, S][A]      [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->c }, { A-->d }]
B[{ B-->BS }, { B-->c }, { B-->d }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->b }]
C[{ C-->SA }, { C-->b }, { C-->AB }]

word='bbdabdacab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [S, C]   []       []       []       []       []       []       []       []       
[A, B, C][C]      [A, B]   []       []       []       []       []       []       []       
[B, C]   []       [B]      [A]      []       []       []       []       []       []       
[B, C]   []       [B]      []       [S, C]   []       []       []       []       []       
[B]      []       []       []       [C]      [A, B]   []       []       []       []       
[]       []       []       []       []       [B]      [A]      []       []       []       
[B, C]   [A, B]   [C]      [B, C]   [A, B]   [C]      [B, C]   [A, B]   []       []       
[B]      [B]      []       [C]      [B]      []       [C]      [B]      [A]      []       
[B, C]   [A, B]   [C]      [B, C]   [A, B]   [C]      [B, C]   [B]      []       [S, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->CB }]
B[{ B-->BC }, { B-->a }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->CA }, { C-->a }, { C-->SS }, { C-->CC }]
S[{ S-->d }, { S-->SC }]

word='bbdabdacab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [C, S]   []       []       []       []       []       []       []       
[]       []       [A, C, S][B, C]   []       []       []       []       []       []       
[]       []       [C, S]   [C]      [A]      []       []       []       []       []       
[]       []       [C, S]   [C]      []       [C, S]   []       []       []       []       
[]       []       [A, C, S][A, C]   []       [A, C, S][B, C]   []       []       []       
[]       []       [A, C, S][A, C]   []       [A, C, S][B, C]   [C]      []       []       
[]       []       [A, C, S][A, C]   []       [A, C, S][A, B, C][A, C]   [B, C]   []       
[]       []       [A, C, S][A, C]   []       [A, C, S][B, C]   [C]      [C]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }, { A-->d }]
B[{ B-->c }, { B-->AS }]
S[{ S-->SB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->BC }]
C[{ C-->a }]

word='bbdabdacab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[B]      [S]      [A]      []       []       []       []       []       []       []       
[B, S]   [A, S]   [B]      [S, C]   []       []       []       []       []       []       
[B]      [S]      []       []       [A]      []       []       []       []       []       
[A]      [B]      []       []       [S]      [A]      []       []       []       []       
[A, B]   [B, S]   []       []       [A, S]   [B]      [S, C]   []       []       []       
[A, B, S][A, B, S][]       []       [A, S]   [A, B]   [S]      [B]      []       []       
[A, B, S][A, B, S][A, B]   [S]      [A, B, S][B, S]   [S]      [S]      [S, C]   []       
[A, B, S][B, S]   [S]      []       [S]      []       []       []       []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->CB }]
B[{ B-->c }, { B-->d }, { B-->SS }, { B-->SC }]
S[{ S-->c }, { S-->AC }, { S-->a }]
C[{ C-->d }, { C-->BA }, { C-->CS }, { C-->b }]

word='dcdbbdadaa'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, C, S]   [A, B]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A]         [C]         []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [S]         []          [C]         []          []          []          []          []          
[A, B, C, S][A, B, S]   [B]         []          [A]         [B, C]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C]   []          [A]         [A, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [C]         [A, C, S]   [A, C, S]   [B, S]      [B, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, C]      [A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, C]      [A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, B]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }, { A-->SA }]
B[{ B-->AB }]
S[{ S-->c }, { S-->AS }, { S-->CB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->d }, { C-->BA }]

word='dcdbbdadaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    [A, S][A, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    [S]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->c }, { A-->d }]
B[{ B-->SB }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->SS }]
C[{ C-->c }, { C-->d }, { C-->CB }, { C-->b }]

word='dcdbbdadaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[S]   [A, S][A, C][]    []    []    []    []    []    []    
[S]   [S]   [A, S][C]   []    []    []    []    []    []    
[S]   []    [S]   [A]   [C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][A, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    [S]   []    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    [S]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->c }]
B[{ B-->a }]
C[{ C-->c }, { C-->AC }, { C-->a }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BS }]
S[{ S-->AS }, { S-->d }, { S-->AB }]

word='dcdbbdadaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [A, C]   []       []       []       []       []       []       []       []       
[A, C, S][C, S]   [S]      []       []       []       []       []       []       []       
[A, C]   [A]      [A]      [C]      []       []       []       []       []       []       
[A, C]   [C]      [C]      []       [C]      []       []       []       []       []       
[A, C, S][C]      [C]      []       [C]      [S]      []       []       []       []       
[A, C, S][]       []       []       []       [A]      [B, C]   []       []       []       
[A, C, S][C]      [C]      []       [C]      [A, S]   [C]      [S]      []       []       
[A, C, S][C]      [C]      []       [C]      [A, C, S][]       [A]      [B, C]   []       
[A, C, S][C]      [C]      []       [C]      [A, C, S][C]      [C, S]   []       [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->d }, { A-->CA }]
B[{ B-->c }, { B-->BB }, { B-->CC }]
S[{ S-->c }, { S-->AC }, { S-->a }, { S-->b }]
C[{ C-->d }, { C-->SC }, { C-->CS }, { C-->BC }]

word='dcdbbdadaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[C]         [B, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [C]         [A, C]      []          []          []          []          []          []          []          
[A, B, S]   [C]         [C]         [S]         []          []          []          []          []          []          
[A, B, S]   [A, C]      [A, C]      [A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [C]         [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, C]      [A, C]      [A, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, C]      [A, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, C]      [A]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }]
B[{ B-->BS }, { B-->c }, { B-->AS }, { B-->a }, { B-->CS }]
S[{ S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->d }, { C-->SB }, { C-->AA }, { C-->SC }]

word='ccbbbabcab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, B]      []          []          []          []          []          []          []          []          
[B, S]      [B]         [S]         []          []          []          []          []          []          []          
[B, S]      [B]         []          [S]         []          []          []          []          []          []          
[B, S]      [B]         []          []          [S]         []          []          []          []          []          
[A, C]      [A, C]      [C]         [C]         [C]         [A, B]      []          []          []          []          
[A, B, C, S][A, B, S, C][B, C]      [B, C]      [B, C]      [B]         [S]         []          []          []          
[A, B, C, S][A, C, S]   [C]         [C]         [C]         [A, C]      [C]         [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C, S][C]         [S, C]      [A, B]      []          
[A, B, C, S][A, B, C, S][B, C]      [B, C]      [B, C]      [A, B, S, C][B, C]      [B, S]      [B]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->BC }, { B-->c }, { B-->BA }, { B-->SC }, { B-->CS }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->b }]
S[{ S-->d }, { S-->AA }, { S-->b }]

word='ccbbbabcab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [B]      [C, S]   []       []       []       []       []       []       []       
[]       [B]      [A, B]   [C, S]   []       []       []       []       []       []       
[]       [B]      [B, C]   [A, B]   [C, S]   []       []       []       []       []       
[]       [B]      [A, B, C][B, C, S][B]      [A, C]   []       []       []       []       
[]       [B]      [B, C]   [A, B, C][B, C]   [B, C]   [C, S]   []       []       []       
[]       [B]      [B, C]   [B, C]   [B, C]   [C]      [C]      [B]      []       []       
[]       [B]      [B, C]   [B, C]   [B, C]   [C]      [C]      [B]      [A, C]   []       
[]       [B]      [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [B, C]   [C, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CA }]
B[{ B-->c }]
C[{ C-->c }, { C-->CC }, { C-->SC }]
S[{ S-->d }, { S-->BB }, { S-->AB }]

word='ccbbbabcab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C, S][B, C][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    [A, S][B, C][]    []    
[]    []    []    []    []    []    [A]   [A]   [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BC }, { A-->d }, { A-->CA }]
B[{ B-->BS }, { B-->c }, { B-->d }]
S[{ S-->CB }, { S-->a }, { S-->AA }, { S-->CC }]
C[{ C-->AC }, { C-->b }]

word='ccbbbabcab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[S, C]      [A]         [A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   [A, C]      []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, S]      [A, S]      [A, S]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, C]      []          []          []          
[A, B, S]   [A, B, S]   [S]         [S]         [S]         [S]         [S]         [B]         []          []          
[A, B, S]   [A, B, S]   [S]         [S]         [S]         [S]         [S]         [B]         [A, S]      []          
[A, B, C, S][A, B, C, S][A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [A, B]      [A, S, C]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }, { A-->d }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->d }, { B-->SB }, { B-->BB }]
C[{ C-->a }]
S[{ S-->SA }, { S-->SC }, { S-->b }]

word='ccbbbabcab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[B]   [B]   [B, S][]    []    []    []    []    []    []    
[B]   [B]   [B]   [B, S][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B, S][]    []    []    []    []    
[]    []    []    []    [S]   [A, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B, S][A, B][B, S][]    []    []    
[B]   [B]   [B]   [B]   [B, S][A, B][B, S][A, B][]    []    
[]    []    []    []    [S]   []    [S]   []    [A, C][]    
[B]   [B]   [B]   [B]   [B, S][A, B][B, S][B]   [A, B][B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BA }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->c }]
S[{ S-->d }, { S-->SB }, { S-->a }, { S-->AA }]
C[{ C-->CC }, { C-->SC }, { C-->b }]

word='cabdbcbdda'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[B]         [C]         [C]         []          []          []          []          []          []          []          
[A]         [A]         [A]         [S]         []          []          []          []          []          []          
[B]         [C]         [C]         [C]         [C]         []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A]         [A]         [B]         []          []          []          []          
[A, B, S, C][A, S, C]   [A, S, C]   [A]         [A]         [B]         [C]         []          []          []          
[A, S]      [A, S]      [A, S]      [S]         [S]         [A]         [A]         [S]         []          []          
[]          []          []          []          []          []          []          []          [S]         []          
[]          []          []          []          []          []          []          []          []          [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->BC }]
B[{ B-->b }, { B-->d }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }, { B-->SC }]
C[{ C-->c }]
S[{ S-->SA }]

word='cabdbcbdda'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[A]   [A]   [B]   []    []    []    []    []    []    []    
[]    []    [A]   [B]   []    []    []    []    []    []    
[]    []    []    [A]   [B]   []    []    []    []    []    
[]    []    []    []    [A]   [C]   []    []    []    []    
[]    []    []    []    [A]   [B]   [B]   []    []    []    
[]    []    []    []    []    [A]   [A]   [B]   []    []    
[]    []    []    []    []    []    []    [A]   [B]   []    
[]    []    []    []    []    []    []    []    [A]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BA }]
B[{ B-->c }]
C[{ C-->AS }, { C-->SA }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BC }]
S[{ S-->d }, { S-->CA }, { S-->SB }, { S-->SC }]

word='cabdbcbdda'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[C]   [C]   [A, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [S]   []    []    []    []    []    []    
[C, S][C, S][C, S][C, S][A, C][]    []    []    []    []    
[C, S][C, S][C, S][S]   []    [B]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][A, C][A, C][]    []    []    
[C, S][C, S][C, S][S, C][C]   [C]   [C]   [S]   []    []    
[C, S][C, S][C, S][C, S][S, C][C]   [C]   [C]   [S]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][S]   [C]   [A]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->c }, { A-->AC }]
B[{ B-->b }, { B-->d }, { B-->CA }, { B-->BA }, { B-->AA }, { B-->SC }, { B-->CS }]
S[{ S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->SA }]

word='cabdbcbdda'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[B, S]      [A]         [B, S]      []          []          []          []          []          []          []          
[B]         [A]         []          [B]         []          []          []          []          []          []          
[B, S]      [A]         [S]         [S]         [B, S]      []          []          []          []          []          
[A, B, C]   [A, B]      [B, C]      [C]         [B, C]      [A]         []          []          []          []          
[A, B, S, C][A, B, S]   [B, S, C]   [B, S, C]   [B, C, S]   [A]         [B, S]      []          []          []          
[A, B, C]   [A, B]      [B, C]      [C]         [B, C]      [A]         []          [B]         []          []          
[A, B, C]   [A, B]      [B, C]      [C]         [B, C]      [A]         []          []          [B]         []          
[A, B, C]   [A, B]      [B, C]      [B, C]      [B, C]      [A, B]      []          []          [B]         [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->BC }, { A-->c }]
B[{ B-->BS }, { B-->c }, { B-->CC }]
C[{ C-->d }, { C-->a }, { C-->BB }, { C-->SS }, { C-->b }]
S[{ S-->SB }]

word='cabdbcbdda'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [A, C][]    []    []    []    []    []    []    []    
[C]   [B]   [C]   []    []    []    []    []    []    []    
[B]   [A]   [B]   [C]   []    []    []    []    []    []    
[A]   [C]   [A]   [B]   [C]   []    []    []    []    []    
[B]   [A]   [B]   [C]   []    [A, B][]    []    []    []    
[A]   [C]   [A]   [B]   []    [A]   [C]   []    []    []    
[C]   [B]   [C]   [A]   [B]   [C]   [B]   [C]   []    []    
[B]   [A]   [B]   [C]   [A]   [B]   [A]   [B]   [C]   []    
[A]   [C]   [A]   [B]   [C]   [A]   [C]   [A]   [B]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }]
B[{ B-->BC }, { B-->AC }, { B-->SB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SC }]
S[{ S-->c }, { S-->d }, { S-->CA }, { S-->CB }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->d }, { C-->SS }]

word='bbdbcbbcdc'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, S]   []       []       []       []       []       []       []       []       
[B, S]   [B, C]   [S, C]   []       []       []       []       []       []       []       
[B, C, S][B, S, C][S, C]   [A, S]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, C]   [A, S]   []       []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S]   [B, C]   [A, S]   []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [B, C]   [A, S]   []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S]   [B, C]   [A, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [B, C]   [S, C]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C, S][S, C]   [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CB }]
B[{ B-->b }, { B-->c }, { B-->BA }]
S[{ S-->d }, { S-->a }, { S-->BB }, { S-->AB }]
C[{ C-->c }, { C-->a }, { C-->BC }]

word='bbdbcbbcdc'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[S]         [B]         [A]         [S, C]      [B, C]      []          []          []          []          []          
[]          [S]         [S]         [A, B]      [A, S]      [B]         []          []          []          []          
[]          []          []          [S]         [S]         [S]         [B]         []          []          []          
[A, B, S, C][A, B, C]   [A]         [A, B, S, C][A, B, C]   [A, C]      [S, C]      [B, C]      []          []          
[]          []          []          []          []          []          []          []          [S]         []          
[B, S]      [B]         []          [B, S]      [B]         []          [S]         [B]         [A]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BS }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->a }]
C[{ C-->SB }, { C-->b }]
S[{ S-->c }, { S-->BC }]

word='bbdbcbbcdc'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [B, C]      []          []          []          []          []          []          []          []          
[B]         []          [A]         []          []          []          []          []          []          []          
[A, S]      []          []          [B, C]      []          []          []          []          []          []          
[B]         []          []          [A]         [A, S]      []          []          []          []          []          
[A, S, C]   [A]         [B]         [S]         [C]         [B, C]      []          []          []          []          
[A, B, S, C][A]         [A, S]      [A, B, C]   [B]         [A, S]      [B, C]      []          []          []          
[A, B, C]   [A, B]      [B]         [A, B, S]   [A, C]      [B]         [A]         [A, S]      []          []          
[A, B, S, C][S]         [C]         [A, B]      [A]         [C]         [A]         [B]         [A]         []          
[A, B, C, S][A, B]      [A, B]      [A, B, S, C][B, C, S]   [A, B]      [B, S]      [A, C]      [B]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->c }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->d }, { B-->BA }, { B-->a }, { B-->AA }]
C[{ C-->BB }, { C-->SC }, { C-->b }, { C-->AB }]
S[{ S-->c }, { S-->SA }, { S-->CS }]

word='bbdbcbbcdc'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [A, C]      [B]         []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B, C]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, S]      []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [C]         [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [C]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->b }, { A-->c }, { A-->SA }]
B[{ B-->c }, { B-->AS }, { B-->d }, { B-->CA }, { B-->SS }, { B-->CC }]
S[{ S-->a }]

word='bbdbcbbcdc'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A, B][]    []    
[]    []    []    []    []    []    []    [A]   [B]   []    
[]    []    []    []    []    []    []    []    [A]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->c }]
B[{ B-->b }, { B-->c }, { B-->AS }, { B-->d }, { B-->SA }, { B-->CS }]
C[{ C-->a }]
S[{ S-->AC }, { S-->AA }, { S-->b }, { S-->BC }]

word='dccbbcbdab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [S]   [A, B][]    []    []    []    []    []    []    
[]    [A]   [B]   [B, S][]    []    []    []    []    []    
[]    [B]   [S]   [A]   [B, S][]    []    []    []    []    
[]    [A]   [B]   [S]   [B]   [A, B][]    []    []    []    
[]    [B]   [S]   [A]   []    [B]   [B, S][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    [S]   [A]   [B]   [A]   [S]   [A]   [S]   [A, C][]    
[]    [A]   [B]   [S]   [B]   [A]   [B]   [A]   [B]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }, { A-->d }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->AS }, { B-->d }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->SC }]

word='dccbbcbdab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, B][A, B][]    []    []    []    []    []    []    []    
[A, B][A, B][A, B][]    []    []    []    []    []    []    
[A, B][A, B][A, B][A, B][]    []    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][]    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][]    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][]    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][]    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->AS }, { A-->BA }]
B[{ B-->AC }, { B-->d }, { B-->a }]
C[{ C-->a }, { C-->CC }]
S[{ S-->c }, { S-->d }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->b }]

word='dccbbcbdab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[A]      []       [S]      []       []       []       []       []       []       []       
[A, S]   []       []       [A, S]   []       []       []       []       []       []       
[A, S]   []       []       [A, S]   [A, S]   []       []       []       []       []       
[A, S]   []       []       [A, S]   [A]      [S]      []       []       []       []       
[A, S]   []       []       [A, S]   [A, S]   []       [A, S]   []       []       []       
[A, S]   []       []       [A, S]   [A, S]   []       [A]      [B, S]   []       []       
[A, B, S][]       []       [A, B, S][A, B, S][]       [A, B]   [S]      [B, C]   []       
[A, S]   []       []       [A, S]   [A, S]   []       [A, S]   [A]      [A]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->d }, { B-->SA }, { B-->a }, { B-->AA }, { B-->SS }]
C[{ C-->a }, { C-->BS }]
S[{ S-->AC }, { S-->d }, { S-->b }]

word='dccbbcbdab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          []          [B]         []          []          []          []          []          []          []          
[B]         [A]         [C]         [B, S]      []          []          []          []          []          []          
[C]         [B]         [A]         [B, C]      [B, S]      []          []          []          []          []          
[]          []          [B]         []          []          [B]         []          []          []          []          
[A, B]      [A, B, C]   [S, C]      [A, B]      [A]         [C]         [B, S]      []          []          []          
[A, B, C]   [B, C]      [A, B]      [B, C]      [B]         [A]         [B, C]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, B, C]   [A, B, C]   [B, S]      [A, B]      [A]         [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, B, C]   [A, B, S, C][A, B, C]   [A, B]      [C]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->SC }, { S-->BC }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->b }, { C-->AB }]

word='dccbbcbdab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[S]         [B]         [C]         []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [B]         [B, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [B, S]      [C]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, S, C][B, S]      [B]         [B, C]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [A, S]      [B, S]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S, C]   [B, S]      [A]         [B, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, S, C]   [B, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->d }]
B[{ B-->b }, { B-->SA }, { B-->SC }, { B-->CS }]
S[{ S-->c }, { S-->CB }, { S-->a }]
C[{ C-->BA }, { C-->BB }, { C-->b }]

word='ccccdaaadc'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[]          []          []          [B]         [A]         []          []          []          []          []          
[]          []          [B]         [C]         []          [A, S]      []          []          []          []          
[]          [B]         [B, C]      [B, C]      []          [B]         [A, S]      []          []          []          
[B]         [B, C]      [B, C]      [B, S, C]   []          [C]         [B]         [A, S]      []          []          
[B, C]      [B, C]      [B, S, C]   [A, B, C, S][]          [B, C]      [C]         [B]         [A]         []          
[B]         [B]         [B, C]      [B, C, S]   []          [B]         [B]         []          []          [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->SC }, { A-->AC }]
B[{ B-->CA }]
S[{ S-->c }, { S-->d }, { S-->SA }, { S-->a }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->AA }]

word='ccccdaaadc'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[S, C]      [A]         [S]         []          []          []          []          []          []          []          
[A, C]      [C, S]      [A]         [S]         []          []          []          []          []          []          
[A, B, S, C][A, C]      [S, C]      [A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][S, C]      [A]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AC }, { A-->BA }]
B[{ B-->BS }, { B-->d }, { B-->CA }, { B-->a }]
C[{ C-->c }, { C-->SA }, { C-->CB }, { C-->b }]
S[{ S-->AS }, { S-->SB }, { S-->AA }, { S-->CC }]

word='ccccdaaadc'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[]          [S]         [C]         []          []          []          []          []          []          []          
[]          []          [S]         [C]         []          []          []          []          []          []          
[]          []          [S]         [C]         [B]         []          []          []          []          []          
[]          [S]         [C, S]      [B, C]      [A]         [A, B]      []          []          []          []          
[S]         [C, S]      [B, C, S]   [A, B, C]   [A, B, S]   [A, S]      [A, B]      []          []          []          
[C, S]      [B, C, S]   [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, B]      []          []          
[C, S]      [B, C, S]   [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         [B]         []          
[C, S]      [B, C, S]   [A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CC }]
B[{ B-->c }, { B-->SC }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->CB }, { S-->b }]
C[{ C-->d }, { C-->b }]

word='ccccdaaadc'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [A]      [B, S]   []       []       []       []       []       []       []       
[A]      [S]      [A]      [B, S]   []       []       []       []       []       []       
[A, S]   [A, B, S][A, S]   [A, B]   [S, C]   []       []       []       []       []       
[A]      [S]      [A]      [S]      []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[]       []       []       []       []       []       []       []       [S, C]   []       
[]       []       []       []       []       []       []       []       [A, S]   [B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->c }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->CC }]
S[{ S-->d }, { S-->SB }, { S-->a }, { S-->AA }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->a }]

word='ccccdaaadc'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [B]         [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [B]         [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S]      [B]         [S, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S]      [B]         [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, C]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }, { A-->AS }, { A-->d }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->AC }, { B-->a }, { B-->CS }]
S[{ S-->c }, { S-->BS }]
C[{ C-->CC }, { C-->AB }]

word='bdacdaabca'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[B]      [C]      [A, B]   []       []       []       []       []       []       []       
[S, C]   [A, B]   [A, S]   [A, S]   []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[B, C]   [A, B, C][B, C]   [B, C]   [C]      [A, B]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C]      [A, B]   []       []       []       
[A]      [A]      [A]      [A]      []       [A]      []       [A]      []       []       
[A]      [A]      [A]      [A]      []       [A]      []       [A]      [A, S]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [A, C]   [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->BC }, { B-->d }, { B-->a }]
S[{ S-->a }, { S-->b }, { S-->BS }]
C[{ C-->SC }, { C-->b }]

word='bdacdaabca'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [S]      [B, S]   []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       [S]      [B, S]   []       []       []       []       
[]       []       []       []       [S]      [S]      [B, S]   []       []       []       
[]       []       []       []       [B, S, C][B, S, C][B, S, C][S, C]   []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[]       []       []       []       []       []       []       []       []       [B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->c }, { B-->a }]
S[{ S-->c }, { S-->AB }]
C[{ C-->d }, { C-->SC }]

word='bdacdaabca'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [B]   []    []    []    []    []    []    []    
[S]   [S]   []    [B, S][]    []    []    []    []    []    
[C]   [C]   []    [C]   [C]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B, S][]    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->d }, { B-->CB }, { B-->BB }]
C[{ C-->c }, { C-->AC }, { C-->AA }, { C-->SS }]
S[{ S-->SC }, { S-->CS }]

word='bdacdaabca'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [C]   [C]   []    []    []    []    []    []    
[]    [B]   [B]   [B]   [B]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[]    []    []    []    []    [A, C][C]   [A]   []    []    
[]    []    []    []    []    [C]   [C]   [C]   [C]   []    
[]    []    []    []    []    [A, C][A, C][A, C][A]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->c }, { A-->BA }]
B[{ B-->AB }, { B-->d }]
C[{ C-->d }, { C-->a }, { C-->CS }, { C-->b }, { C-->BS }]
S[{ S-->AS }, { S-->AA }]

word='bdacdaabca'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [B]   [B, C][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AS }]
B[{ B-->BS }, { B-->d }, { B-->CA }, { B-->CS }]
S[{ S-->c }, { S-->b }, { S-->AB }]
C[{ C-->c }, { C-->SS }]

word='bcbacaabdb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S, C]      []          []          []          []          []          []          []          []          
[B]         [B, C]      [S]         []          []          []          []          []          []          []          
[]          [B]         []          [A]         []          []          []          []          []          []          
[]          [B]         []          [A]         [S, C]      []          []          []          []          []          
[B]         [B]         [C]         [A, S]      [B]         [A]         []          []          []          []          
[B]         [B]         [B, C]      [A, S]      [B]         [A]         [A]         []          []          []          
[B]         [B]         [B, C]      [A, S, C]   [B]         [A]         [A]         [S]         []          []          
[B]         [B]         [B, C]      [A, S, C]   [B, C]      [A, S]      [S]         []          [B]         []          
[B]         [B]         [B, C]      [A, B, S, C][B, C]      [A, S, C]   [S, C]      []          [B]         [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BA }]
B[{ B-->AC }, { B-->CA }, { B-->SB }]
S[{ S-->d }, { S-->CB }, { S-->a }, { S-->CS }]
C[{ C-->c }, { C-->AS }, { C-->SA }, { C-->a }, { C-->SC }, { C-->b }]

word='bcbacaabdb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[A, S]      [B]         [A, C]      []          []          []          []          []          []          []          
[B, C, S]   [S]         [B, S, C]   [S, C]      []          []          []          []          []          []          
[B, C, S]   [C, S]      [B, C]      [C]         [C]         []          []          []          []          []          
[B, C, S]   [S, C]      [S, C]      [S]         [S]         [S, C]      []          []          []          []          
[B, C, S]   [C, S]      [B, S, C]   [S, C]      [S, C]      [S, C]      [S, C]      []          []          []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, S, C]   [B, S, C]   [B, S, C]   [B, C]      [A, C]      []          []          
[B, C, S]   [C, S]      [B, S, C]   [S, C]      [S, C]      [S, C]      [S, C]      [S, C]      [S]         []          
[A, B, S, C][B, C, S]   [A, B, C, S][B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [B, C]      [C]         [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->c }, { A-->AS }, { A-->d }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->c }, { S-->BA }, { S-->a }, { S-->BB }]
C[{ C-->CA }, { C-->SB }]

word='bcbacaabdb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, S]      []          []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [A]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [B]         [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->SB }, { B-->AA }]
S[{ S-->SA }, { S-->a }, { S-->AB }, { S-->BC }]
C[{ C-->d }, { C-->BS }]

word='bcbacaabdb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B, S]   []       [A, B]   []       []       []       []       []       []       []       
[C]      [S]      [C]      [S]      []       []       []       []       []       []       
[B, S]   [B, C]   [S]      [B]      [B]      []       []       []       []       []       
[S, C]   [C]      [S]      [C]      [C]      [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[B]      []       [B]      []       []       [B]      [B, S]   [A, B]   []       []       
[B, S, C][C]      [B, S]   [C]      [C]      [B, S]   [B, S]   [S]      [B, C]   []       
[B, S, C][C]      [B, S]   [C]      [C]      [B, S]   [B, S]   [B, S]   []       [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->c }, { A-->SB }]
B[{ B-->b }, { B-->d }, { B-->SS }]
C[{ C-->a }, { C-->BB }, { C-->b }]
S[{ S-->c }, { S-->AC }, { S-->SA }, { S-->BA }, { S-->CS }, { S-->BC }, { S-->BS }]

word='bcbacaabdb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[S]         [A, S]      []          []          []          []          []          []          []          []          
[A, S]      [A, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [S]         [A, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B, S]      [S]         [A, S]      []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   [A, S]      [A, S]      [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [S]         [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [S]         [B, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A, S]      [C]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [S]         [C, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }]
B[{ B-->AS }, { B-->SB }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->a }]
S[{ S-->c }, { S-->d }, { S-->b }, { S-->BC }]

word='daabacbbda'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[B, S][B, S][B, C][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, C][B, C][]    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[B]   [B]   [B]   []    []    [B]   [A, S][]    []    []    
[B]   [B]   [B]   []    []    [B]   [B]   [A, S][]    []    
[B]   [B]   [B]   []    []    [B]   [B]   [B]   [S]   []    
[B, S][B, S][B, S][]    []    [B, S][B, S][B, S][B]   [B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }]
B[{ B-->b }]
S[{ S-->c }, { S-->BA }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->SS }, { C-->AB }]

word='daabacbbda'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[S, C][S, C][S, C][B, S][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][]    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][C]   [B, S][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][C, S][S]   [A, C][]    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][C]   [S]   [S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->c }, { B-->AC }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CS }]
C[{ C-->d }, { C-->SC }, { C-->b }]
S[{ S-->d }, { S-->SA }, { S-->SB }]

word='daabacbbda'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, B]   []       []       []       []       []       []       []       []       
[B, S]   [B]      [A, B]   []       []       []       []       []       []       []       
[B, C, S][B]      [B]      [A, C]   []       []       []       []       []       []       
[B, S]   [B]      [B]      [B]      [A, B]   []       []       []       []       []       
[B, S]   [B]      [B]      [B]      [B]      [B]      []       []       []       []       
[C, S]   []       []       []       []       []       [A, C]   []       []       []       
[B, C, S][B]      [B]      [B]      [B]      [B]      [B]      [A, C]   []       []       
[B, C, S][B]      [B]      [B]      [B]      [B]      [B]      [B]      [C, S]   []       
[B, S]   [B]      [B]      [B]      [B]      [B]      [B]      [B]      [B, S]   [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->c }, { A-->d }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->CB }, { B-->SC }]
C[{ C-->c }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CS }]
S[{ S-->AS }, { S-->b }, { S-->AB }]

word='daabacbbda'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          []          [C]         []          []          []          []          []          []          []          
[S]         [B]         [B, C]      [B, S]      []          []          []          []          []          []          
[B, S]      [B]         [B]         [B]         [C]         []          []          []          []          []          
[A, B, C]   [A]         [A]         [A]         [A]         [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, C]      [B, S]      []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [A, C]      [A, C]      [A]         [A]         []          
[B]         []          []          []          []          []          []          []          []          [C]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }, { A-->AS }]
B[{ B-->BA }, { B-->a }, { B-->SC }]
S[{ S-->BB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->d }]

word='daabacbbda'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[S]      [B, S]   [A, B]   []       []       []       []       []       []       []       
[]       [B]      [A]      [S]      []       []       []       []       []       []       
[S]      [A, B, S][S]      []       [A, B]   []       []       []       []       []       
[S]      [A, B, S][S]      []       [B]      [A]      []       []       []       []       
[S]      [A, B, S][S]      []       [B]      [A]      [S]      []       []       []       
[S]      [A, B, S][S]      []       [B]      [A]      []       [S]      []       []       
[B, S]   [A, B, S][A, B]   []       [A, S]   [S]      []       [B]      [C]      []       
[B, S]   [A, B, S][A, B, S][]       [A, B, S][A, S]   []       [B, S]   []       [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AS }, { B-->a }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->CA }]

word='aadadbcdbd'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   []    []    []    []    []    []    
[]    []    [S]   []    [S]   []    []    []    []    []    
[]    []    [S]   []    [S]   [B, S][]    []    []    []    
[]    []    [S]   []    [S]   [S]   [S]   []    []    []    
[]    []    [S]   []    [S]   [S]   [S]   [S]   []    []    
[]    []    [S]   []    [S]   [S]   [S]   [S]   [B, S][]    
[]    []    [S]   []    [S]   [S]   [S]   [S]   [S]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->c }, { A-->AS }, { A-->d }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->CA }, { B-->a }, { B-->CS }]
S[{ S-->SB }, { S-->b }]
C[{ C-->d }, { C-->BA }, { C-->SS }]

word='aadadbcdbd'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, C]      [A, B]      []          []          []          []          []          []          []          []          
[A, B]      [B, C]      [A, C]      []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B]         [A, B]      []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B, C]      [B, C]      [A, C]      []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [B, S]      []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B, C]      [B, C]      [A]         []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, S, C][B]         [A, C]      []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, S, C][A, B]      [A, B]      [B, S]      []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, S, C][A, B, C]   [B, C]      [B, C]      [A, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->c }, { A-->AS }]
B[{ B-->b }, { B-->AC }, { B-->d }, { B-->AA }, { B-->CC }]
S[{ S-->c }, { S-->d }, { S-->CB }, { S-->BS }]
C[{ C-->SB }, { C-->AB }]

word='aadadbcdbd'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[B, S]      [A, C]      [B, S]      []          []          []          []          []          []          []          
[C]         [B]         []          [A]         []          []          []          []          []          []          
[A, S, C]   [B, S]      [A]         [A, C]      [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [B, S, C]   [C]         [B]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, S]      [S]         [S]         [A, S]      []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, B, C]   [C]         [A, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [A, B, S, C][C]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [S]         [S]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->c }, { A-->d }, { A-->SB }]
B[{ B-->BS }, { B-->a }]
C[{ C-->AS }, { C-->a }, { C-->BB }]
S[{ S-->CA }]

word='aadadbcdbd'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [B, C]   []       []       []       []       []       []       []       []       
[B, S]   [S]      [A]      []       []       []       []       []       []       []       
[A, C, S][A]      []       [B, C]   []       []       []       []       []       []       
[B, S]   [A]      [C]      [S]      [A]      []       []       []       []       []       
[C]      [B]      [S]      []       []       [A]      []       []       []       []       
[S]      []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[]       []       []       []       []       []       []       []       []       [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }, { A-->c }, { A-->SA }]
B[{ B-->d }, { B-->a }, { B-->CC }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->BA }, { C-->AA }, { C-->BS }]

word='aadadbcdbd'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, C]      [B, S]      []          []          []          []          []          []          []          
[A, C]      [A, C]      [A]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, C]      [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C, S]   [C, S]      [A, C]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S, C]   [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S, C]   [A, S]      [B, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [A, C, S]   [A, S]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->d }]
S[{ S-->c }, { S-->AC }, { S-->a }, { S-->AA }, { S-->BC }]
C[{ C-->c }, { C-->CB }, { C-->b }]

word='bdcaaddcbd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[]    [S]   [S, C][]    []    []    []    []    []    []    
[]    [A]   [A]   [S]   []    []    []    []    []    []    
[]    []    []    [A]   [S]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [S]   [S, C][]    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    [C]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->c }, { A-->d }]
B[{ B-->c }, { B-->d }]
S[{ S-->CA }, { S-->a }, { S-->b }]
C[{ C-->BB }]

word='bdcaaddcbd'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[A]   [A, C][A, B][]    []    []    []    []    []    []    
[A]   [A, S][A]   [A, S][]    []    []    []    []    []    
[A]   [A, S][A]   [A]   [A, S][]    []    []    []    []    
[A]   [A, S][A]   [A]   [A]   [A, B][]    []    []    []    
[A]   [A, S][A]   [A]   [A]   [A, C][A, B][]    []    []    
[A]   [A, S][A]   [A]   [A]   [A, S][A, C][A, B][]    []    
[A]   [A, S][A]   [A]   [A]   [A, S][A, S][A]   [A, S][]    
[A]   [A, S][A]   [A]   [A]   [A, S][A, S][A]   [A]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->d }, { A-->CA }]
B[{ B-->b }, { B-->AC }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->SS }, { S-->CS }]
C[{ C-->BA }, { C-->b }]

word='bdcaaddcbd'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, S, C][A, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [B, S]   []       []       []       []       []       []       
[S]      [S]      [S]      [B, S]   [B, S]   []       []       []       []       []       
[S]      [S]      [S]      [S, C]   [S, C]   [A, S]   []       []       []       []       
[S]      [S]      [S]      [A, S, C][A, S, C][A, S]   [A, S]   []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[]       []       []       []       []       []       []       []       [B, C]   []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [A, S, C][A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->AC }, { A-->SB }]
S[{ S-->a }, { S-->SS }, { S-->CC }, { S-->AB }]
C[{ C-->d }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->a }, { C-->CS }, { C-->b }]

word='bdcaaddcbd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S, C][C]   [A]   []    []    []    []    []    []    []    
[S, C][S, C][A]   [S, C][]    []    []    []    []    []    
[S, C][S, C][A]   [S, C][S, C][]    []    []    []    []    
[S, C][S, C][A]   [S, C][S]   [C]   []    []    []    []    
[S, C][S, C][A]   [S, C][S, C][S]   [C]   []    []    []    
[S, C][S, C][A]   [S, C][S, C][S, C][C]   [A]   []    []    
[C, S][S, C][A]   [S, C][S, C][S, C][C, S][A]   [C]   []    
[C, S][C, S][A]   [S, C][S, C][S, C][C, S][A]   [S]   [C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BA }]
B[{ B-->b }, { B-->SB }, { B-->a }, { B-->CS }]
C[{ C-->d }, { C-->a }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->b }]

word='bdcaaddcbd'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [C, S]   []       []       []       []       []       []       []       []       
[A, B, S][A, B]   [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B, C]   []       []       []       []       []       []       
[]       []       []       []       [B, C]   []       []       []       []       []       
[]       []       []       []       [B]      [C, S]   []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A, B]   [C, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B]   [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A, B]   [B, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [S]      [A]      [C, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
B[{ B-->c }, { B-->d }, { B-->CC }]
C[{ C-->c }, { C-->a }, { C-->SC }]
S[{ S-->SB }, { S-->b }, { S-->BC }, { S-->BS }]

word='ddbcccaaad'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[S]         [S]         [A, S]      []          []          []          []          []          []          []          
[C, S]      [C, S]      [A, C, S]   [B, C]      []          []          []          []          []          []          
[B, S, C]   [B, S, C]   [A, B, S, C][B, S]      [B, C]      []          []          []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][S, C]      [B, S]      [B, C]      []          []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][B, S, C]   [S, C]      [B, S]      [C]         []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][B, S, C]   [B, S, C]   [C, S]      [B]         [C]         []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][B, S, C]   [B, S, C]   [B, S, C]   [S]         [B]         [C]         []          
[S]         [S]         [A, S]      [S]         [S]         [S]         [S]         []          []          [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->AS }, { A-->d }]
B[{ B-->AB }, { B-->BS }, { B-->c }, { B-->BB }]
S[{ S-->c }, { S-->b }, { S-->BC }]
C[{ C-->SB }, { C-->CC }, { C-->SC }, { C-->b }]

word='ddbcccaaad'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [A]      [S, C]   []       []       []       []       []       []       []       
[B]      [A, B]   [C]      [B, S]   []       []       []       []       []       []       
[B]      [A, B]   [C]      [B, C]   [B, S]   []       []       []       []       []       
[A, B, S][A, B, S][C]      [B, S, C][B, C]   [B, S]   []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[]       []       []       []       []       []       []       []       []       [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }]
B[{ B-->d }, { B-->SB }]
C[{ C-->c }, { C-->AC }, { C-->a }, { C-->BB }, { C-->b }]
S[{ S-->CC }]

word='ddbcccaaad'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [A, C][]    []    []    []    []    []    []    
[S]   []    [C, S][A, C][]    []    []    []    []    []    
[S]   []    [C, S][C, S][A, C][]    []    []    []    []    
[S]   []    [C, S][C, S][C, S][A, C][]    []    []    []    
[S]   []    [C, S][C, S][C, S][C, S][C]   []    []    []    
[]    []    [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[]    []    []    []    []    []    []    [S]   [C]   []    
[B]   [C]   [B]   [B]   [B]   [B]   []    [B]   []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->d }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->c }, { B-->d }, { B-->BA }, { B-->AA }, { B-->SC }]
S[{ S-->a }, { S-->SS }]
C[{ C-->CB }, { C-->BB }]

word='ddbcccaaad'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, B]   []       []       []       []       []       []       []       []       
[A, C]   [C]      [B]      []       []       []       []       []       []       []       
[A, B, C][A, C]   [C]      [B]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [C]      [B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      [S]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      [S]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [C]      [B]      [S]      [S]      [S]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [B, C]   [A]      [A]      [A]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AB }, { A-->BC }]
B[{ B-->b }, { B-->BS }, { B-->c }, { B-->SA }, { B-->BA }, { B-->CC }]
S[{ S-->c }, { S-->AC }, { S-->AS }, { S-->d }, { S-->CB }, { S-->a }]
C[{ C-->AA }, { C-->b }]

word='ddbcccaaad'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [B, C]      []          []          []          []          []          []          []          
[]          [B]         [A, B, S]   [B, S]      []          []          []          []          []          []          
[]          [B]         [A, B, S]   [B]         [B, S]      []          []          []          []          []          
[]          [B]         [A, B, S]   [B]         [B]         [B, S]      []          []          []          []          
[]          [B]         [A, B, S, C][B]         [B]         [B]         [A, S]      []          []          []          
[B]         [A, B]      [A, B, C, S][A, B]      [A, B]      [A, B]      [B, S, C]   [A, S]      []          []          
[B]         [A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [B, S, C]   [A, S]      []          
[B]         [A, B, S]   [A, B, S, C][A, B, S]   [A, B, S]   [A, B, S]   [A, B, S, C][A, B, S]   [S]         [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->d }, { A-->BA }]
B[{ B-->c }, { B-->a }]
S[{ S-->CB }, { S-->a }, { S-->b }]
C[{ C-->CA }, { C-->b }, { C-->BC }]

word='bddbcacadc'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C]   []    [A]   []    []    []    []    []    []    []    
[]    []    []    [S, C][]    []    []    []    []    []    
[]    []    []    [S]   [B]   []    []    []    []    []    
[]    []    []    [C]   [A]   [B, S][]    []    []    []    
[]    []    []    [C, S][A]   [A]   [B]   []    []    []    
[]    []    []    [C, S][A]   [A]   [A]   [B, S][]    []    
[]    []    []    [C]   [A]   [A]   [A]   [A]   [A]   []    
[]    []    []    [S]   []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }]
B[{ B-->b }, { B-->AB }, { B-->SB }]
S[{ S-->c }, { S-->a }, { S-->SC }]
C[{ C-->AS }, { C-->BB }, { C-->b }]

word='bddbcacadc'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[C]   [B]   [B]   [B, C][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    [S]   [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->d }, { A-->SB }]
B[{ B-->c }, { B-->SA }]
S[{ S-->a }, { S-->CS }, { S-->BC }]
C[{ C-->BB }, { C-->CC }, { C-->b }]

word='bddbcacadc'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    [A]   [B]   []    []    []    
[]    []    []    []    []    [A]   []    [A, S][]    []    
[]    []    []    []    []    []    [C]   [B]   [A]   []    
[]    []    []    []    []    [A]   [S]   [C]   []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->c }, { A-->AS }, { A-->SA }, { A-->CB }]
S[{ S-->c }, { S-->d }, { S-->SB }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->AA }]

word='bddbcacadc'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A]   [A]   [S]   []    []    []    []    []    []    []    
[A, C][A]   [A]   [S]   []    []    []    []    []    []    
[A, C][A, C][A, C][A]   [A, S][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, S][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][A]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][A]   [S]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][A, C][A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->AS }, { A-->d }]
B[{ B-->c }, { B-->SC }]
S[{ S-->BA }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->SA }, { C-->CA }, { C-->b }]

word='bddbcacadc'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C]   []    [A]   []    []    []    []    []    []    []    
[S, C][]    [A]   [S, C][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    [C]   [A]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->d }]
B[{ B-->c }, { B-->d }, { B-->SA }, { B-->a }]
C[{ C-->a }, { C-->AA }, { C-->b }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->SS }, { S-->BS }]

word='dbbbacdccb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, S][C]   []    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    [A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BS }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->c }, { B-->SS }]
S[{ S-->c }, { S-->AC }, { S-->d }, { S-->SA }, { S-->SC }]

word='dbbbacdccb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[S]      [A]      [A, B]   []       []       []       []       []       []       []       
[S]      [A]      [A]      [A, B]   []       []       []       []       []       []       
[S]      []       []       []       [A]      []       []       []       []       []       
[B, S]   []       []       []       [A]      [B, S]   []       []       []       []       
[A, B, S][]       []       []       [A]      [A, B]   [S]      []       []       []       
[A, B, S][]       []       []       [A]      [A]      [B]      [B, S]   []       []       
[A, B, S][]       []       []       [A]      [A, B, S][A, S]   [A, B]   [B, S]   []       
[A, B, S][]       []       []       [A]      [A, B, S][A, S]   [A, B]   [S]      [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BC }, { A-->c }, { A-->d }, { A-->CA }]
B[{ B-->b }, { B-->AS }, { B-->SS }]
S[{ S-->d }, { S-->SA }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->c }, { C-->AC }, { C-->CB }, { C-->SB }, { C-->CC }, { C-->AB }]

word='dbbbacdccb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [B, S]      []          []          []          []          []          []          []          []          
[S, C]      [B, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [B, C]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B, S]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, S, C]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S, C]   [A, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S, C]   [A, C]      [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S, C]   [B, C]      [B, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->d }, { A-->CB }]
B[{ B-->b }, { B-->c }, { B-->AC }, { B-->d }, { B-->SS }]
C[{ C-->CA }, { C-->BB }, { C-->CS }, { C-->b }]
S[{ S-->c }, { S-->AS }, { S-->SB }, { S-->AA }]

word='dbbbacdccb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [C]         [A]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [S]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, S]      [C, S]      [A, B]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, B, C, S][C, S]      [B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AC }, { A-->d }]
B[{ B-->CA }, { B-->BB }]
S[{ S-->c }, { S-->SA }, { S-->SB }, { S-->AB }]
C[{ C-->c }, { C-->SS }, { C-->SC }]

word='dbbbacdccb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A]         [A]         [A]         []          []          []          []          []          []          []          
[A]         [A]         [A]         [A]         []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         [S, C]      []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [B, S]      [A]         []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [B, S, C]   [A]         [S, C]      []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [B, S, C]   [A]         [C]         [S, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, S]      [B, S, C]   [B, S]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->c }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->SS }]
S[{ S-->AS }, { S-->d }, { S-->a }, { S-->SC }]
C[{ C-->SA }, { C-->CS }]

word='dbbcbcaada'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [B]   [A]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    [B]   [B, S][]    []    
[]    []    []    []    []    []    [B]   [B]   [S]   []    
[]    []    []    []    []    []    [B]   [B]   [B]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->a }]
S[{ S-->d }, { S-->BA }, { S-->a }, { S-->CS }, { S-->AB }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->SS }, { C-->b }]

word='dbbcbcaada'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[C]      [B, C]   []       []       []       []       []       []       []       []       
[C]      [B, C]   [B, C]   []       []       []       []       []       []       []       
[C]      [B, C]   [B]      [C]      []       []       []       []       []       []       
[C]      [B, C]   [B]      [C]      [B, C]   []       []       []       []       []       
[C]      [B, C]   [B]      [C]      [B]      [C]      []       []       []       []       
[S, C]   [B, C, S][B, S]   [S, C]   [B, S]   [S, C]   [B, S]   []       []       []       
[S, C]   [B, C, S][B, S, C][S, C]   [B, S, C][C, S]   [B, C]   [B, S]   []       []       
[C, S]   [B, C, S][B, S, C][S, C]   [B, S, C][S, C]   [B, C, S][B, C]   [S, C]   []       
[C, S]   [B, C, S][B, C, S][S, C]   [B, S, C][S, C]   [B, C, S][B, C, S][S, C]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->b }, { A-->d }, { A-->CB }]
B[{ B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->CS }]
S[{ S-->c }, { S-->SB }, { S-->a }]
C[{ C-->c }, { C-->SC }, { C-->b }, { C-->AB }]

word='dbbcbcaada'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [A, C]      []          []          []          []          []          []          []          []          
[A, C]      [A, B]      [A, C]      []          []          []          []          []          []          []          
[A, B, C]   [A, C]      [B]         [S, C]      []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [B, C]      [A, C]      []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, S]   [B]         [S, C]      []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, S, C][A, B, C]   [A, B, S]   [B, S]      []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, S, C][A, B, C]   [A, B, S, C][A, S]      [B, S]      []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, S, C][A, B, S]   [B]         [A]         []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C, S][A, B, C]   [A, B, C, S][A, C, S]   [C]         [C]         [B, S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->c }, { A-->d }, { A-->SA }]
B[{ B-->b }, { B-->AC }, { B-->d }, { B-->BA }, { B-->BB }, { B-->SS }]
S[{ S-->a }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->CS }, { C-->b }]

word='dbbcbcaada'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B, S]      [B, C]      []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [B]         [A]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, S]   [B]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, C]      [S, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [S, C]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [A, C]      [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BC }]
B[{ B-->BA }]
C[{ C-->SB }, { C-->SS }, { C-->b }]
S[{ S-->c }, { S-->AC }, { S-->d }, { S-->CA }, { S-->AA }]

word='dbbcbcaada'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [A, C]   []       []       []       []       []       []       []       []       
[C, S]   [S]      [A, C]   []       []       []       []       []       []       []       
[A, C]   [C]      []       [S]      []       []       []       []       []       []       
[S, C]   [S]      [S]      [A]      [A, C]   []       []       []       []       []       
[A, C, S][C, S]   [C]      []       []       [S]      []       []       []       []       
[S, C]   [S]      [S]      []       []       []       [A]      []       []       []       
[A, C, S][A, C, S][A, S]   [C, S]   [S]      [C]      [S]      [A]      []       []       
[A, C, S][A, C, S][S, C]   [A, C, S][S, C]   [A]      [C]      []       [S]      []       
[A, C, S][A, C, S][A, S, C][C, S]   [S]      [C, S]   [S]      []       []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CB }]
B[{ B-->AB }, { B-->BC }, { B-->c }, { B-->d }, { B-->CS }]
C[{ C-->c }, { C-->SA }, { C-->a }, { C-->b }]
S[{ S-->AC }, { S-->BA }, { S-->CC }, { S-->b }]

word='dbdaadabad'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B]         [C, S]      []          []          []          []          []          []          []          []          
[S]         [A]         [B]         []          []          []          []          []          []          []          
[A, C, S]   [A, B, S]   [B, S]      [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][S]         [A, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A, B]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [B, S]      [C, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [A, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->c }, { B-->SA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->b }]
C[{ C-->d }, { C-->BB }, { C-->CS }, { C-->BS }]

word='dbdaadabad'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[]    [B]   [C]   []    []    []    []    []    []    []    
[]    [C]   []    [B]   []    []    []    []    []    []    
[]    []    []    [C]   [B]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [C]   [B, S][]    []    
[]    []    []    []    []    []    [B]   [A, C][B]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->c }, { A-->SB }]
B[{ B-->AC }, { B-->a }, { B-->AA }]
S[{ S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->c }, { C-->d }, { C-->CB }, { C-->BB }, { C-->CC }, { C-->b }]

word='dbdaadabad'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S, C]      [S, C]      []          []          []          []          []          []          []          []          
[A, C]      [A, C]      [C]         []          []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [C]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C]         [C]         [B]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [C]         [C]         []          [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][C]         [C]         []          [C]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][S, C]      [S, C]      []          [S, C]      []          [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, C]      [A, C]      []          [A, C]      []          [A, C]      [B]         []          
[A, B, C, S][A, B, C, S][B, C]      [B, C]      [C]         [B, C]      [C]         [B, C]      []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->CA }, { B-->BA }, { B-->BB }, { B-->SS }]
C[{ C-->c }, { C-->d }, { C-->CS }, { C-->b }]
S[{ S-->AS }, { S-->CB }, { S-->AA }]

word='dbdaadabad'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A, B]      [A, C]      []          []          []          []          []          []          []          []          
[B]         [A]         [C]         []          []          []          []          []          []          []          
[B, C]      [S]         [B]         [A]         []          []          []          []          []          []          
[B, C]      [A, S]      [B, C]      [S]         [A]         []          []          []          []          []          
[A, B, C, S][B, S]      [A]         []          []          [C]         []          []          []          []          
[A, B, S, C][B, C, S]   [B, S]      []          []          [B]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   []          []          [B, C]      [S]         [A, C]      []          []          
[A, B, C, S][B, C, S]   [A, B, S]   []          []          [B, C]      [S]         [B, S]      [A]         []          
[A, B, C, S][A, B, S]   [B, C]      [S]         [S]         [A]         []          []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->CA }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->a }]
S[{ S-->CB }, { S-->a }, { S-->b }]
C[{ C-->c }, { C-->d }, { C-->SC }, { C-->CS }, { C-->BC }]

word='dbdaadabad'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, C]      [C]         [C]         []          []          []          []          []          []          []          
[A, B, S, C][S, C]      [S, C]      [B, S]      []          []          []          []          []          []          
[A, B, S, C][S, C]      [S, C]      []          [B, S]      []          []          []          []          []          
[A, B, C]   [A, C]      [A, C]      [C]         [C]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C, S]      [S, C]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C, S]      [S, C]      []          [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C, S]      [S, C]      []          []          [B, S]      []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, C]      [A, C]      [A, C]      [C]         [C]         [C]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->d }]
B[{ B-->b }, { B-->c }, { B-->a }]
C[{ C-->c }, { C-->AC }, { C-->AS }, { C-->CB }, { C-->a }, { C-->BB }]
S[{ S-->d }, { S-->BA }, { S-->SB }]

word='caadddadab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [B, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, C]   [B, C]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, S]   [A, S]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [A, S]   []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [A, S]   []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [C, S]   [B, C]   []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [A, C]   [A, S]   [A, S]   []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [A, C]   [A, C]   [A, C, S][C, S]   [B, C]   []       
[A, C, S][A, C, S][A, C, S][A, C]   [A, C]   [A, C]   [A, S, C][A, C, S][C, S]   [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->BC }, { A-->c }]
B[{ B-->BS }, { B-->SS }]
S[{ S-->d }, { S-->SA }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->CA }, { C-->BA }]

word='caadddadab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [A, S]      []          []          []          []          []          []          []          []          
[A]         [A, B, S]   [A, S]      []          []          []          []          []          []          []          
[A]         [A, B]      [B]         [S]         []          []          []          []          []          []          
[A]         [A, B, S]   [A, B]      [B]         [S]         []          []          []          []          []          
[A]         [A, B, S]   [A, B, S]   [B]         [B]         [S]         []          []          []          []          
[A]         [A, B, C, S][A, B, S, C][B, S, C]   [B, C]      [B, S]      [A, S]      []          []          []          
[A]         [A, B, S]   [A, B, S]   [B, S]      [B, S]      [B]         [B]         [S]         []          []          
[A]         [A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, B, C]   [B, S]      [A, S]      []          
[A]         [A, B, C, S][A, B, C, S][B, S, C]   [B, S, C]   [B, S]      [A, B, S]   [B]         [B]         [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->b }]
B[{ B-->d }]
S[{ S-->c }, { S-->SB }, { S-->a }, { S-->b }]
C[{ C-->BA }]

word='caadddadab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   []    []    []    []    []    []    
[]    []    [S]   [A]   [B]   []    []    []    []    []    
[]    []    [S]   [C]   [A]   [B]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    [S]   [B]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->CA }]
B[{ B-->d }, { B-->CB }, { B-->BB }, { B-->CS }]
C[{ C-->c }, { C-->d }, { C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AB }, { C-->BC }]
S[{ S-->SC }, { S-->b }]

word='caadddadab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [A, C]   []       []       []       []       []       []       []       []       
[A]      [A]      [A, C]   []       []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->d }]
B[{ B-->SA }, { B-->CB }]
S[{ S-->c }, { S-->AA }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->d }, { C-->SB }, { C-->SS }]

word='caadddadab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[C]         [S]         [A]         []          []          []          []          []          []          []          
[A, B, C]   [B]         [S]         [A, C]      []          []          []          []          []          []          
[A, B, S, C][B, C, S]   [B, S]      [A, S]      [A, C]      []          []          []          []          []          
[A, B, S, C][A, B, C, S][B, C, S]   [B, S]      [A, S]      [A, C]      []          []          []          []          
[A, B, C, S][B, C, S]   [B, C]      [B, C]      [B, S]      [S]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, B, C, S][B, C, S]   [B]         [S]         [A, C]      []          []          
[A, B, C, S][A, B, C, S][B, S, C]   [A, B, S, C][A, B, C]   [B, C]      [B]         [S]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, C]      [C]         [B, C]      [S]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->d }, { A-->SA }]
B[{ B-->c }, { B-->AC }, { B-->BA }, { B-->a }]
S[{ S-->CS }, { S-->b }]
C[{ C-->d }, { C-->CA }]

word='cbacbaaaac'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->BS }, { A-->SB }]
B[{ B-->d }, { B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->d }, { S-->SA }, { S-->a }, { S-->AA }]
C[{ C-->c }, { C-->CS }, { C-->AB }]

word='cbacbaaaac'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[A]         [C]         [B, S]      []          []          []          []          []          []          []          
[]          [A]         []          [C]         []          []          []          []          []          []          
[C]         [S]         []          []          [A]         []          []          []          []          []          
[A, S, C]   [A, C]      [B, S]      [A]         [C]         [B, S]      []          []          []          []          
[A, S, C]   [A, S, C]   [A, B, S]   [A, C]      [S, C]      [A, B]      [B, S]      []          []          []          
[A, S, C]   [A, C, S]   [A, B, S, C][A, C, S]   [A, S, C]   [A, B, S, C][A, B]      [B, S]      []          []          
[A, C, S]   [A, C, S]   [A, B, C, S][A, C, S]   [A, S, C]   [A, B, S, C][A, B, S, C][A, B]      [B, S]      []          
[A, S, C]   [A, C, S]   [A, B, S]   [A, C, S]   [A, S, C]   [A, B, S]   [A]         []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->a }, { B-->SC }]
C[{ C-->d }, { C-->CB }, { C-->b }]
S[{ S-->c }, { S-->SS }, { S-->CS }]

word='cbacbaaaac'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [B, C]   []       []       []       []       []       []       []       []       
[B]      [C]      [B]      []       []       []       []       []       []       []       
[B, S]   [S, C]   [B]      [S]      []       []       []       []       []       []       
[B]      [B, C]   [B]      [B]      [B, C]   []       []       []       []       []       
[B]      [B, C]   [B]      [B]      [C]      [B]      []       []       []       []       
[B]      [B, C]   [B]      [B]      [C]      []       [B]      []       []       []       
[B]      [B, C]   [B]      [B]      [C]      []       []       [B]      []       []       
[B]      [B, C]   [B]      [B]      [C]      []       []       []       [B]      []       
[B, S]   [B, C, S][B]      [B, S]   [C, S]   []       []       []       [B]      [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->c }]
B[{ B-->b }, { B-->AS }, { B-->BA }, { B-->SB }, { B-->BB }, { B-->CC }]
C[{ C-->a }]
S[{ S-->d }, { S-->SC }, { S-->BS }]

word='cbacbaaaac'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][B][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [A][B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [A][B][B][C][] [] [] 
[] [] [] [] [] [] [B][C][] [] 
[] [] [] [A][B][B][] [B][C][] 
[] [] [] [A][B][B][] [B][] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }, { A-->BA }, { A-->SB }]
B[{ B-->AS }, { B-->CA }, { B-->BB }]
S[{ S-->c }, { S-->AC }, { S-->a }]
C[{ C-->d }, { C-->CB }, { C-->CS }, { C-->b }, { C-->BS }]

word='cbacbaaaac'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][S][] [] [] [] [] [] [] 
[] [C][] [S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][S][] [] [] [] 
[] [] [] [] [C][] [S][] [] [] 
[] [] [] [] [C][] [] [S][] [] 
[] [] [] [] [C][] [] [] [S][] 
[] [] [] [] [C][] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->CA }, { B-->a }, { B-->CC }]
C[{ C-->d }, { C-->BA }, { C-->b }]
S[{ S-->c }, { S-->d }, { S-->BB }, { S-->AB }]

word='aacabccdda'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    [A]   [C, S][]    []    
[]    []    []    []    []    []    []    [A, B][C, S][]    
[]    []    []    []    []    []    []    [S]   []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->c }, { A-->SB }]
B[{ B-->AA }]
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->d }, { C-->a }, { C-->BB }, { C-->CS }]

word='aacabccdda'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[B]         []          [A]         []          []          []          []          []          []          []          
[A]         []          []          [S, C]      []          []          []          []          []          []          
[A, B]      []          []          [C]         [A, S]      []          []          []          []          []          
[A, B]      [A]         [B]         [A]         [B]         [A]         []          []          []          []          
[A, B, C]   [B]         [A]         [B]         [A]         [B]         [A]         []          []          []          
[A, B, S]   [A]         [B]         [A]         [B]         [A]         []          [C]         []          []          
[A, B, C]   []          [A]         []          [A]         []          []          [S]         [C]         []          
[A, B, C, S][A, S]      [A, B, C]   [A, S]      [A, B, C]   [A]         [B]         [A, S, C]   [S, C]      [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BS }, { A-->c }]
B[{ B-->c }, { B-->d }, { B-->a }, { B-->SS }]
S[{ S-->CS }, { S-->b }]
C[{ C-->SB }, { C-->SC }, { C-->BC }]

word='aacabccdda'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    [A]   [B]   []    []    []    []    []    []    
[]    []    []    [A]   [A, S][]    []    []    []    []    
[C]   [C]   [C]   [A, C][A, C][A, B][]    []    []    []    
[]    []    []    [A]   [A]   [A]   [A, B][]    []    []    
[]    []    []    [A]   [A]   [A]   [A]   [B]   []    []    
[]    []    []    [A]   [A]   [A]   [A]   []    [B]   []    
[]    []    []    [A]   [A]   [A]   [A]   []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }, { A-->SB }]
B[{ B-->a }, { B-->BB }]
S[{ S-->AS }, { S-->AA }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->d }, { C-->CC }]

word='aacabccdda'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B, S][A, B][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [A, B][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    [C]   [C]   []    
[]    []    []    []    []    []    []    []    []    [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->c }, { B-->SS }, { B-->CC }]
S[{ S-->BA }, { S-->SC }, { S-->CS }, { S-->AB }]

word='aacabccdda'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A, B][]    []    []    []    []    []    []    
[]    []    [S]   [A]   []    []    []    []    []    []    
[S]   [B]   []    [S]   [A, B][]    []    []    []    []    
[]    [S]   [B]   []    [S]   [A, B][]    []    []    []    
[B]   []    [S]   [B]   []    [S]   [A, B][]    []    []    
[S]   [B]   []    [S]   [B]   []    [S]   [A]   []    []    
[]    [S]   [B]   []    [S]   []    []    []    [A]   []    
[]    []    [S]   []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->d }]
B[{ B-->c }, { B-->BB }, { B-->SS }]
S[{ S-->a }, { S-->CC }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->SA }, { C-->b }]

word='cbbcdbabdd'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[S]         [A, C]      []          []          []          []          []          []          []          []          
[C]         [S]         [A, C]      []          []          []          []          []          []          []          
[B, S, C]   [C]         [A, S]      [B, C]      []          []          []          []          []          []          
[B, S, C]   [B, S]      [C]         [S]         [A, C]      []          []          []          []          []          
[B, S, C]   [A, C, S]   [B, S, C]   [C]         [S]         [A, C]      []          []          []          []          
[B, S, C]   [A, B, S, C][A, B, C, S][B, S]      [B, S, C]   [C]         [A, S]      []          []          []          
[B, S, C]   [A, B, S, C][A, B, S, C][B, S, C]   [C, S]      [S]         [C]         [A, C]      []          []          
[B, C, S]   [A, B, C, S][A, B, C, S][B, S, C]   [B, S, C]   [A, S, C]   [B, C, S]   [S]         [A, C]      []          
[B, C, S]   [A, B, C, S][A, B, C, S][B, S, C]   [A, B, S, C][B, S, C]   [S, C]      [C]         [S]         [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->d }, { B-->BA }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->SB }, { C-->a }, { C-->AA }]
S[{ S-->CS }, { S-->b }]

word='cbbcdbabdd'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [B, S]      []          []          []          []          []          []          []          []          
[A, C]      [B, C]      [B, S]      []          []          []          []          []          []          []          
[A, C]      [A, B, C]   [A, B]      [A, C]      []          []          []          []          []          []          
[A, C]      [A, B, C]   [A, B]      [A]         [B, C]      []          []          []          []          []          
[A, C, S]   [A, B, C, S][A, B, C]   [A, C, S]   [A, B, S]   [B, S]      []          []          []          []          
[A, C]      [A, B, C]   [A, B, C]   [A, C]      [A, B, C]   [A, B]      [A, C]      []          []          []          
[A, C, S]   [A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][B]         [A, S]      [B, S]      []          []          
[A, C]      [A, B, C]   [A, B, C]   [A, C]      [A, B, C]   [A, B, C]   [A, C]      [A, C]      [B, C]      []          
[A, C]      [A, B, C]   [A, B, C]   [A, C]      [A, B, C]   [A, B, C]   [A, C]      [A, B]      [A]         [B, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }]
B[{ B-->BS }, { B-->SA }]
S[{ S-->AC }, { S-->SB }, { S-->a }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->AB }, { C-->BC }]

word='cbbcdbabdd'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       [C]      [S]      [C]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       [C]      [S]      []       []       []       
[]       []       []       []       []       [C]      [B]      [A]      []       []       
[]       [C]      [B]      []       [A]      [A, S]   [C]      [S]      [C]      []       
[A]      [A, S, C][B, C]   [A]      [A, S]   [S]      []       []       []       [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }, { A-->CB }]
B[{ B-->AB }, { B-->SS }]
C[{ C-->c }, { C-->d }, { C-->SB }, { C-->a }, { C-->CC }]
S[{ S-->d }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->BS }]

word='cbbcdbabdd'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[S]         [S]         [A]         []          []          []          []          []          []          []          
[]          []          []          [C]         []          []          []          []          []          []          
[A, B]      [B]         []          [C, S]      [C, S]      []          []          []          []          []          
[A, S]      [A]         [S]         [A]         [A]         [A]         []          []          []          []          
[]          []          []          []          []          []          [C]         []          []          []          
[]          []          []          []          []          []          []          [A]         []          []          
[]          []          []          []          []          []          []          []          [C, S]      []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [B, S]      [S]         [A]         [B]         [B, C, S]   [C, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BC }, { B-->AS }, { B-->d }, { B-->CA }, { B-->a }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->AA }, { S-->BS }]
C[{ C-->c }]

word='cbbcdbabdd'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[A]      []       [B]      [S, C]   []       []       []       []       []       []       
[B, S]   [B, S]   [A, S]   []       [B, S]   []       []       []       []       []       
[S]      [B]      [S]      []       []       [A]      []       []       []       []       
[A, B, S][A, S]   []       [B]      [A]      [B]      [B, S]   []       []       []       
[B, S]   [B, S]   [S]      []       [S]      []       []       [A]      []       []       
[A, B, S][A, B, S][B, S]   [A]      [S]      [A, S]   [A]      [B]      [B, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->c }, { A-->AC }, { A-->CA }]
B[{ B-->SC }]
S[{ S-->d }, { S-->a }, { S-->b }]
C[{ C-->AS }, { C-->SS }, { C-->BC }]

word='cbcdbabcac'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A]      []       [A]      []       []       []       []       []       []       []       
[A, C]   [B]      [C]      [S]      []       []       []       []       []       []       
[A, C]   []       [A]      [C]      [S]      []       []       []       []       []       
[A, C]   [B, C]   [A, C]   [A, B]   [C]      [S]      []       []       []       []       
[A, C]   [A, B]   [A, C]   [A, C]   [A, B]   [C]      [S]      []       []       []       
[A]      []       [A]      [A]      []       [A]      []       [A]      []       []       
[A, C]   [A, B, C][A, C]   [A, B, C][A, B, C][A, C]   [B]      [C]      [S]      []       
[A]      [A]      [A]      [A]      [A]      [A]      []       [A]      []       [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->CA }]
B[{ B-->b }, { B-->SB }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->CS }]
S[{ S-->c }, { S-->d }, { S-->SA }, { S-->BB }, { S-->CC }]

word='cbcdbabcac'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[S][S][B][B][B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [C][B][] [] [] 
[] [] [] [] [] [C][] [S][] [] 
[] [] [] [] [] [S][] [] [C][] 
[] [] [] [] [] [S][] [] [C][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AS }, { A-->d }, { A-->CA }]
B[{ B-->AB }]
C[{ C-->c }, { C-->SA }, { C-->b }]
S[{ S-->AC }, { S-->BB }]

word='cbcdbabcac'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [A, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [C]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A]      [A]      []       []       []       []       []       []       
[A, S]   [A, S]   [S]      [S]      [A, C]   []       []       []       []       []       
[A, C, S][A, C, S][C]      [C]      [A]      [A]      []       []       []       []       
[A, C, S][A, C, S][A]      [A]      [A, S]   [S]      [A, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A]      [S]      [C]      []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][S, C]   [A, C]   [A]      [A]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A]      [A, S]   [S]      [S]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BS }, { A-->d }]
B[{ B-->b }, { B-->BC }, { B-->d }, { B-->SS }]
C[{ C-->c }, { C-->AS }, { C-->CA }, { C-->a }, { C-->BB }, { C-->b }]
S[{ S-->CC }]

word='cbcdbabcac'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [B, C]      []          []          []          []          []          []          []          []          
[]          [B, S]      [C]         []          []          []          []          []          []          []          
[S]         [B, C, S]   [C]         [A, B]      []          []          []          []          []          []          
[B, C, S]   [A, B, C, S][C, S]      [A, B, C]   [B, C]      []          []          []          []          []          
[B, C, S]   [A, B, C, S][C, S]      [A, B, C, S][B, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][A, S]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][A, C]      [B, S]      [C]         []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [C, S]      [A, C]      []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [S]         [S]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AB }, { A-->BS }]
B[{ B-->BC }, { B-->c }, { B-->AS }, { B-->d }, { B-->CA }, { B-->BB }]
S[{ S-->AC }, { S-->SA }, { S-->CB }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->SB }]

word='cbcdbabcac'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[A, B]      [C]         [B]         []          []          []          []          []          []          []          
[A, B]      [S, C]      [B]         [B]         []          []          []          []          []          []          
[A, B]      [B, S]      [A]         [A]         [S]         []          []          []          []          []          
[A, B]      [A, S, C]   [B]         [B]         []          [S]         []          []          []          []          
[A, B]      [B, S]      [A]         [A]         []          []          [S]         []          []          []          
[A, B, S]   [A, B, S, C][A, B]      [A, B]      []          [S]         [C]         [B]         []          []          
[A, B]      [A, B, S, C][A, B]      [A, B]      []          []          [S]         [A]         [S]         []          
[A, B, S]   [A, B, C, S][A, B, S]   [A, B, S]   []          [S]         [A, S, C]   [A, B]      [C]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->CC }, { A-->b }, { A-->CA }, { A-->CB }]
B[{ B-->c }, { B-->AC }, { B-->d }, { B-->SA }, { B-->BA }]
S[{ S-->c }, { S-->AS }, { S-->SB }, { S-->a }]
C[{ C-->a }, { C-->SS }, { C-->b }]

word='bbcddacbbd'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B]      [A, C]      []          []          []          []          []          []          []          []          
[A, S]      [A, S]      [B, S]      []          []          []          []          []          []          []          
[A, B, S]   [A, S]      [A, S]      [B]         []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [B, S]      [A]         [B]         []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [B, S]      []          [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B]         [A, S, C]   [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [A, B, S]   [B]         [A, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, S, C][A, B, S]   [A, B]      [A, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [A, B, S, C][A, B, S]   [A]         [A]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->d }]
B[{ B-->b }, { B-->BC }, { B-->a }]
C[{ C-->AC }, { C-->d }, { C-->b }, { C-->AB }]
S[{ S-->c }, { S-->CS }]

word='bbcddacbbd'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [B, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[]       []       []       [A, C]   []       []       []       []       []       []       
[]       []       []       [C]      [A, C]   []       []       []       []       []       
[]       []       []       [C]      [C]      [B]      []       []       []       []       
[A]      [A]      [A]      [S]      [S]      []       [S]      []       []       []       
[A, B, C][B, C]   [C]      []       []       []       []       [B, C]   []       []       
[A, B, C][A, B, C][C]      []       []       []       []       [A, B]   [B, C]   []       
[A, B, C][A, B, C][C]      []       []       []       []       [A, B, C][B]      [A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BA }]
B[{ B-->BC }, { B-->BS }, { B-->c }, { B-->AS }, { B-->d }, { B-->a }]
C[{ C-->c }, { C-->AA }, { C-->SS }, { C-->SC }, { C-->b }]
S[{ S-->SA }]

word='bbcddacbbd'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, C]   []       []       []       []       []       []       []       []       
[A, C]   [A]      [B, C]   []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       [B]      [B, C]   []       []       []       
[A, C]   [C]      [A]      [A]      [A]      [A, B]   [A, B]   [A, C]   []       []       
[A, C]   [A, C]   [A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, C]   []       
[]       []       []       []       []       []       []       []       []       [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->d }, { B-->a }]
C[{ C-->CC }, { C-->CS }, { C-->b }]
S[{ S-->c }, { S-->d }, { S-->SA }, { S-->CB }, { S-->AB }]

word='bbcddacbbd'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, C, S][B, C]   []       []       []       []       []       []       []       []       
[B, C, S][B, C]   [A, S]   []       []       []       []       []       []       []       
[B, C, S][B, C, S][S]      [B, S]   []       []       []       []       []       []       
[B, S, C][B, S, C][S]      [B]      [B, S]   []       []       []       []       []       
[B, S, C][S]      []       []       []       [B]      []       []       []       []       
[B, S, C][S]      []       []       []       [B]      [A, S]   []       []       []       
[B, S, C][S]      []       []       []       [B]      [S]      [B, C]   []       []       
[B, S, C][S]      []       []       []       [B]      [S]      [B, C, S][B, C]   []       
[B, C, S][S]      []       []       []       [B]      [S]      [B, C, S][B, C, S][B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->CA }, { B-->a }]
S[{ S-->d }, { S-->SA }, { S-->BB }, { S-->SC }]
C[{ C-->CB }]

word='bbcddacbbd'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A]   [S]   [B]   []    []    []    []    []    []    []    
[A, S][A]   [A, S][B, S][]    []    []    []    []    []    
[A, S][A, S][A]   [A, S][B, S][]    []    []    []    []    
[A, S][A, S][A]   [A]   [S]   [B]   []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [S]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, S][B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->c }, { B-->d }, { B-->SB }]
S[{ S-->c }, { S-->d }, { S-->BS }]
C[{ C-->AS }, { C-->AA }]

word='acaddbdabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[A]   []    [C]   [B, S][]    []    []    []    []    []    
[A, C][]    [C]   [B, S][B, S][]    []    []    []    []    
[C]   []    []    []    []    [A]   []    []    []    []    
[A]   []    [A]   []    []    [C]   [B, S][]    []    []    
[A, C][]    [C]   []    []    []    []    [A]   []    []    
[C]   []    []    []    []    [A]   []    [C]   [A]   []    
[A]   []    [A]   []    []    [C]   []    []    [C]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }, { A-->AC }, { A-->d }, { A-->SB }]
B[{ B-->c }, { B-->CA }, { B-->BA }, { B-->a }]
S[{ S-->a }, { S-->AA }]
C[{ C-->c }, { C-->CC }, { C-->b }]

word='acaddbdabb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[B]      [A]      [B, S]   []       []       []       []       []       []       []       
[B]      [A, S]   [B]      [A]      []       []       []       []       []       []       
[B]      [A, S]   [B]      [S]      [A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [S]      [A]      [C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [S]      [B]      [A]      []       []       []       
[A, B, S][A, B, S][A, B]   [S]      [A, S]   [A]      []       [B, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A, B]   [S]      [A]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A, B]   [S]      [A]      [C]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }, { A-->CA }]
B[{ B-->b }, { B-->AC }, { B-->SS }]
S[{ S-->c }, { S-->d }, { S-->CC }, { S-->AB }]
C[{ C-->c }]

word='acaddbdabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[]       [A]      [A]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[S]      [B, S]   [S]      [B]      [S]      []       []       []       []       []       
[]       [A]      []       [A]      []       [B]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[]       [S]      []       [S]      []       [A]      [B]      [S]      [B]      []       
[A, B, S][B]      [B]      []       [B]      [S]      [A]      []       [A]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BS }]
B[{ B-->AC }, { B-->CB }, { B-->SC }]
S[{ S-->d }, { S-->a }, { S-->AA }, { S-->CS }]
C[{ C-->c }, { C-->d }, { C-->BB }, { C-->b }, { C-->AB }]

word='acaddbdabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[A]         [S]         [A, S]      []          []          []          []          []          []          []          
[B, C]      [B]         [B]         [S, C]      []          []          []          []          []          []          
[A, S, C]   [A, S]      [A, S, C]   [A, B, S]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [B]         [A, B]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A, S]      [S, C]      []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [S]         [S]         [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [B, C]      [B]         [B]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A, S]      [S]         [S]         [A]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BS }, { A-->d }, { A-->SA }]
B[{ B-->b }, { B-->d }, { B-->CA }]
S[{ S-->a }, { S-->b }]
C[{ C-->c }, { C-->AC }, { C-->CB }, { C-->SB }, { C-->CC }, { C-->SC }, { C-->BC }]

word='acaddbdabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[B, C]   [B, C]   [A, C]   [A, B]   []       []       []       []       []       []       
[B, C]   [B, C]   [A, B, C][A]      [A, B]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      [A]      [B, S]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, C]   [A, C]   [A, C]   [A, B]   []       []       []       
[A, B, C][A, B, C][A, B]   [A]      [A]      [A]      [A]      [S]      []       []       
[A, B, C][A, B, C][A, C]   [C]      [C]      [C]      [C]      [C]      [B, S]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, C]   [A, C]   [B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }, { A-->CB }]
B[{ B-->SB }, { B-->CC }]
C[{ C-->d }, { C-->a }, { C-->CS }]
S[{ S-->c }, { S-->d }, { S-->SS }, { S-->b }]

word='aadcdbcdba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B]         [A, C]      []          []          []          []          []          []          []          []          
[A, B]      [B, C]      [C, S]      []          []          []          []          []          []          []          
[A, B]      [B, C]      [C, S]      [A, S]      []          []          []          []          []          []          
[A, B]      [A, B, C]   [B, C, S]   [S]         [C, S]      []          []          []          []          []          
[A, B]      [A, B, C]   [B, C, S]   [S]         [C, S]      [A, S]      []          []          []          []          
[A, B]      [A, B, C]   [B, C, S]   [S]         [C, S]      [S]         [A, S]      []          []          []          
[A, B]      [A, B, C]   [A, B, C, S][B, S]      [B, C, S]   [S]         [S]         [C, S]      []          []          
[A, B]      [A, B, C]   [A, B, C, S][B, S]      [B, C, S]   [S]         [S]         [C, S]      [A, S]      []          
[A]         [A, B]      [A, B]      [B]         [A, B]      [B]         [B]         [B]         []          [A, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->c }, { B-->CB }, { B-->BB }, { B-->SS }, { B-->CC }]
C[{ C-->AS }, { C-->a }, { C-->AA }, { C-->b }, { C-->BC }]
S[{ S-->BA }]

word='aadcdbcdba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[B, C][B]   [C]   [S]   [A]   []    []    []    []    []    
[B, C][B, C][B, C][S]   [A]   [B, C][]    []    []    []    
[B]   [B]   [B]   []    []    [B]   [B]   []    []    []    
[A, S][A, S][A, S][B, C][C]   [A, S][S]   [A]   []    []    
[A, S][A, S][A, S][B, C][B, C][A, S][S]   [A]   [B, C][]    
[A, S][A, S][A, S][B, C][B, C][A, S][S]   [A]   [B, C][C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AS }, { A-->d }, { A-->BA }]
B[{ B-->b }, { B-->c }, { B-->BB }, { B-->CC }]
S[{ S-->c }, { S-->SB }, { S-->a }]

word='aadcdbcdba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [B, S][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][B, S][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->d }]
B[{ B-->b }, { B-->c }, { B-->BB }]
S[{ S-->c }, { S-->a }, { S-->AA }]
C[{ C-->BA }, { C-->AB }, { C-->BC }]

word='aadcdbcdba'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[A, S]   [A]      [C]      [B, S]   []       []       []       []       []       []       
[S]      [A, S]   []       [C]      [A]      []       []       []       []       []       
[A, S]   [A, C, S][A, S]   [A, C]   [C]      [B]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, C]   [C]      [B]      [B, S]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, C, S][A]      [C]      [C]      [A]      []       []       
[A, S, C][A, S, C][A, S, C][A, C, S][A, C]   [C]      [A, C]   [C]      [B]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, C]   [A, S]   []       [C]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
B[{ B-->b }, { B-->c }, { B-->CC }]
C[{ C-->d }, { C-->CA }, { C-->a }, { C-->BB }, { C-->BS }]
S[{ S-->d }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->b }]

word='aadcdbcdba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [C, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, C]      [S]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [B, S]      [C]         [C, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [B]         [C]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, B]      [C]         [C, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [A, S]      [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [S]         [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AC }]
S[{ S-->c }, { S-->CA }, { S-->a }, { S-->BB }]
C[{ C-->AS }, { C-->d }, { C-->BA }, { C-->AB }]

word='accddacaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[C]      [A]      [S]      []       []       []       []       []       []       []       
[A]      [B]      []       [C]      []       []       []       []       []       []       
[B]      []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[C]      []       []       []       [S]      [A]      [S]      []       []       []       
[]       [C]      [A]      [S]      [A]      [C]      [A]      [S]      []       []       
[B, S]   []       [C]      [A]      [C]      []       [C]      [A]      [S]      []       
[A, S]   [B, C, S][A]      [S, C]   [A]      [B, S]   [A]      [C]      [A]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->SA }]
B[{ B-->d }]
S[{ S-->c }, { S-->AC }, { S-->a }]
C[{ C-->c }, { C-->CA }, { C-->b }, { C-->BC }]

word='accddacaab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[A]      [A]      [S, C]   []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       []       [A, S]   []       []       []       []       
[]       []       []       []       []       [S]      [S, C]   []       []       []       
[]       []       []       []       []       [A, S]   [A, C]   [A, S]   []       []       
[]       []       []       []       []       [A, S]   [A, C]   [A]      [A, S]   []       
[]       []       []       []       []       [A, S]   [A, C, S][A, S]   [A, S]   [A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }, { A-->BA }]
B[{ B-->SB }, { B-->CC }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->AB }, { S-->BC }]
C[{ C-->AC }, { C-->CA }, { C-->BB }, { C-->CS }, { C-->BS }]

word='accddacaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    
[]    []    []    []    []    []    []    [A, S][]    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->d }, { B-->SS }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->b }, { C-->BC }]
S[{ S-->SA }, { S-->CS }, { S-->BS }]

word='accddacaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[C]      [A]      [C]      []       []       []       []       []       []       []       
[A]      [A, B]   [A]      [B, C]   []       []       []       []       []       []       
[A, B]   [A, B, C][A, B]   [A, C]   [B, C]   []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      [C]      []       []       []       
[]       []       []       []       []       []       [A]      [A]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[]       []       []       []       []       []       []       []       [B]      [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->AB }, { B-->SS }]
S[{ S-->a }, { S-->b }]
C[{ C-->c }, { C-->d }, { C-->BB }, { C-->CS }, { C-->b }]

word='accddacaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    [C]   [A, S][]    []    
[]    []    []    []    []    []    [A, C][B]   [A, S][]    
[]    []    []    []    []    []    [A, C][B]   [B]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->c }, { B-->SA }, { B-->BB }]
S[{ S-->AC }, { S-->d }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->c }, { C-->BC }]

word='aacacbbbbb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, B]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][S]         [B, C]      []          []          []          []          []          []          []          
[A, B]      [B]         [A]         [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, S]      [S]         [B, C]      []          []          []          []          []          
[A, B]      [A, B]      [A, B]      [B]         [A, B]      [B, S]      []          []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B, S]      []          []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B, S]      []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B, S]      []          
[A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [A, B]      [B, S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->a }, { B-->SS }]
C[{ C-->AC }, { C-->AA }, { C-->CC }, { C-->CS }, { C-->b }]
S[{ S-->d }, { S-->CA }]

word='aacacbbbbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, C][A, B][]    []    []    []    []    []    []    []    
[C, S][C]   [A]   []    []    []    []    []    []    []    
[S, C][S, C][A, C][A, B][]    []    []    []    []    []    
[C, S][C, S][C, S][C]   [A]   []    []    []    []    []    
[C, S][C, S][C, S][C]   [A, C][B, C][]    []    []    []    
[C, S][C, S][C, S][C]   [A, C][C]   [B, C][]    []    []    
[C, S][C, S][C, S][C]   [A, C][C]   [C]   [B, C][]    []    
[C, S][C, S][C, S][C]   [A, C][C]   [C]   [C]   [B, C][]    
[C, S][C, S][C, S][C]   [A, C][C]   [C]   [C]   [C]   [B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->b }]
S[{ S-->d }, { S-->BA }, { S-->SS }, { S-->AB }]

word='aacacbbbbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->c }, { A-->AC }]
B[{ B-->c }, { B-->AS }, { B-->SA }, { B-->a }, { B-->SS }]
S[{ S-->CB }, { S-->a }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->d }, { C-->CA }, { C-->BA }, { C-->SB }]

word='aacacbbbbb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, S]      [B]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [C]         [B]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      [C]         [B]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [A, S]      [C]         [B]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->BS }, { B-->CB }]
S[{ S-->AC }, { S-->a }]
C[{ C-->c }, { C-->d }, { C-->CS }, { C-->AB }]

word='aacacbbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    [C]   [S]   []    []    []    []    []    []    
[]    []    [A]   []    [C]   []    []    []    []    []    
[]    []    [B, C][]    [B]   [B]   []    []    []    []    
[]    []    [B]   []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->c }, { A-->AC }]
B[{ B-->b }, { B-->AS }, { B-->d }, { B-->SA }, { B-->CB }, { B-->SS }]
S[{ S-->b }]
C[{ C-->CS }]

word='bbddababbd'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, B][B, S][]    []    []    []    []    []    []    []    
[A, B][A]   [B]   []    []    []    []    []    []    []    
[A]   [B]   [A]   [B]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[B]   [A]   []    [A]   [B]   [B, S][]    []    []    []    
[]    []    []    []    []    [B]   [A]   []    []    []    
[A]   []    []    []    [A]   [A]   [B]   [B, S][]    []    
[B]   [A]   []    [A]   [B]   [A, B][A]   [A, B][B, S][]    
[A]   []    []    []    [A]   [A]   []    [A, B][A]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }, { A-->AB }, { A-->BS }, { A-->d }, { A-->CA }]
B[{ B-->d }, { B-->CB }]
S[{ S-->SA }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->c }, { C-->b }, { C-->BC }]

word='bbddababbd'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [A, B]   []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [A]      [A, S]   []       []       []       []       []       
[]       []       []       []       []       [S, C]   []       []       []       []       
[A, S]   [A, S]   [A]      [A]      [A, S]   [A, S]   [A, S]   []       []       []       
[]       []       []       []       []       []       []       [S, C]   []       []       
[]       []       []       []       []       []       []       [S]      [S, C]   []       
[A, S]   [A, S]   [A]      [A]      [A, S]   [A, S]   [A, S]   [A, B, S][A, B, S][A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->BC }, { B-->AC }, { B-->d }, { B-->CB }, { B-->SS }]
C[{ C-->a }, { C-->SC }]
S[{ S-->c }, { S-->d }, { S-->CA }, { S-->SB }, { S-->CC }, { S-->b }]

word='bbddababbd'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   []       []       []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C]   [A, C]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [A, S]   []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C]   [A, C]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [A, S]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      [A, S]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->d }, { A-->BA }]
B[{ B-->c }]
S[{ S-->c }, { S-->d }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->CC }]
C[{ C-->AC }, { C-->BC }]

word='bbddababbd'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A, S][]    []    []    []    []    []    []    
[]    []    [S]   [A, S][]    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[]    []    []    []    [S]   [A]   []    []    []    []    
[]    []    []    []    []    [S]   [A]   []    []    []    
[]    []    []    []    []    []    [S]   [A]   []    []    
[]    []    []    []    []    []    []    [S]   [A]   []    
[]    []    []    []    []    []    []    []    [S]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->c }]
B[{ B-->b }, { B-->BC }, { B-->c }, { B-->AA }]
S[{ S-->d }, { S-->SB }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->a }]

word='bbddababbd'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, S][B, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    [S]   [B, S][]    []    []    []    
[]    []    []    []    [S]   [B]   [S, C][]    []    []    
[]    []    []    []    [C, S][A]   [S]   [B, S][]    []    
[]    []    []    []    [S, C][B]   [S, C][A, S][B, S][]    
[]    []    []    []    [S]   []    [S]   []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->d }]
B[{ B-->AB }, { B-->SA }, { B-->SB }, { B-->a }, { B-->SC }]
C[{ C-->AS }, { C-->a }, { C-->BB }, { C-->CC }, { C-->BS }]
S[{ S-->c }, { S-->CS }, { S-->b }]

word='dcbbdddcaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[S]      []       [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       [C]      [S]      []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B]      [B]      [B, C]   [B]      [B, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->c }, { B-->d }, { B-->CA }, { B-->CB }, { B-->a }]
S[{ S-->a }, { S-->CC }]
C[{ C-->c }, { C-->SA }, { C-->AA }, { C-->BB }, { C-->b }]

word='dcbbdddcaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [C]      []       []       []       []       []       []       []       
[]       []       [S]      [C]      []       []       []       []       []       []       
[B, C]   [B, C]   [B]      [B]      [B]      []       []       []       []       []       
[B, C, S][B, C, S][S, C]   [S, C]   [C]      [B]      []       []       []       []       
[B, S, C][B, S, C][B]      [B]      [B]      [C]      [B]      []       []       []       
[B, C, S][B, C, S][S, C]   [S, C]   [C, S]   [B, S]   [C]      [B, C]   []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, C, S][B, C]   [B, C]   [B, S]   []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, C, S][B, C, S][B, S, C][C]      [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->BS }, { A-->c }, { A-->AS }, { A-->d }]
B[{ B-->SA }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->CC }]
S[{ S-->d }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]

word='dcbbdddcaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[A, B]   [A]      [A, S]   []       []       []       []       []       []       []       
[A, B]   [A, S]   [A, B]   [A, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [B]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   []       []       [A, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   []       []       [C]      [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AB }, { A-->CA }, { A-->BA }]
B[{ B-->c }, { B-->d }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->b }, { S-->BC }, { S-->BS }]

word='dcbbdddcaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   [B]   []    []    []    []    
[S]   [S]   [S]   [S]   [A]   [A]   [B]   []    []    []    
[S]   [S]   [S]   [S]   [A]   [A]   [A]   [B]   []    []    
[S]   [S]   [S]   [S]   [A, S][A, S][A, S][A, S][B, S][]    
[S]   [S]   [S]   [S]   [A, S][A, S][A, S][A, S][A, S][B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BA }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->AA }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->SA }, { S-->SB }, { S-->b }, { S-->BS }]

word='dcbbdddcaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->AC }]
B[{ B-->BC }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->SS }]
C[{ C-->BB }, { C-->CC }, { C-->CS }, { C-->b }]

word='accdaccccb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[]    []    []    []    []    []    []    []    [A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->d }, { A-->SA }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->c }]
S[{ S-->d }, { S-->SC }]
C[{ C-->AC }, { C-->AA }, { C-->CS }, { C-->BC }]

word='accdaccccb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[C]      [A]      [B]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [A]      [A, S]   []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, S, C][C]      [A]      [B]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, S, C][C]      [A]      [A]      [B]      []       []       
[A, C]   [A, C]   [A, C]   [A, S, C][A, C]   [A, C]   [A]      [A]      [B]      []       
[A, C]   [A, C]   [A, C]   [A, S, C][A, C]   [A, C]   [A, C]   [A]      [A]      [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->d }, { B-->SA }, { B-->a }]
S[{ S-->c }, { S-->BB }, { S-->SS }, { S-->CC }]
C[{ C-->SC }]

word='accdaccccb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [S][S][S][B][] [] [] [] [] 
[] [S][S][S][] [S][] [] [] [] 
[] [S][S][S][] [S][S][] [] [] 
[] [S][S][S][] [S][S][S][] [] 
[] [S][S][S][] [S][S][S][S][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->CA }]
B[{ B-->c }, { B-->AC }, { B-->d }, { B-->SA }, { B-->BA }, { B-->a }, { B-->CC }, { B-->SC }]
C[{ C-->d }, { C-->CB }, { C-->a }, { C-->SS }, { C-->BC }]

word='accdaccccb'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[C]      []       [B]      []       []       []       []       []       []       []       
[B, C]   [C]      [C]      [B, C]   []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [C]      [B]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [C]      []       [B]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [C]      []       []       [B]      []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [C]      []       []       []       [B]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   []       []       []       [B]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }]
B[{ B-->BC }, { B-->c }]
S[{ S-->a }, { S-->b }, { S-->BS }]
C[{ C-->d }, { C-->BB }]

word='accdaccccb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A]   [C]   [B]   []    []    []    []    []    []    []    
[A]   [C]   [B]   [C]   []    []    []    []    []    []    
[]    [S]   [S]   []    [A, S][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    [A]   [A]   []    [A]   [C]   [B]   []    []    []    
[]    []    []    []    []    [B]   [C]   [B]   []    []    
[]    [A]   [A]   []    [A]   [C]   [B]   [C]   [B]   []    
[]    []    []    []    []    [S]   [S]   [S]   [S]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->AC }, { B-->BB }, { B-->CS }]
S[{ S-->c }, { S-->d }, { S-->CA }, { S-->a }, { S-->SS }]
C[{ C-->SB }, { C-->a }, { C-->b }, { C-->BC }]

word='baacaabaad'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[B, C]   [B, S]   [S, C]   []       []       []       []       []       []       []       
[B]      [B, S, C][B, S]   [S]      []       []       []       []       []       []       
[B, C]   [B, S, C][B, S, C][S]      [S, C]   []       []       []       []       []       
[B, C]   [B, S, C][B, S, C][S, C]   [B, S]   [S, C]   []       []       []       []       
[C]      [C]      [C]      []       [C]      []       [C]      []       []       []       
[B, C]   [B, C]   [B, C]   [C]      [B, C]   [C]      [B]      [S, C]   []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, S]   [S, C]   []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [B, S, C][B, S]   [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->BC }]
B[{ B-->b }, { B-->BB }, { B-->CS }]
C[{ C-->d }, { C-->b }]
S[{ S-->c }, { S-->CA }]

word='baacaabaad'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    [S]   [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->c }, { A-->d }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->AC }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->BS }]
C[{ C-->c }, { C-->d }, { C-->b }]

word='baacaabaad'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [S]      []       []       []       []       []       []       []       
[A, B, S][A, B, S][A]      [A, C]   []       []       []       []       []       []       
[A, S]   [A, S]   []       []       [S]      []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      [A]      [S]      []       []       []       []       
[A, B, S][A, B, S][A, B]   [A]      [B]      []       [B, C]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      [S]      [S]      []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      [A, S]   [A]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->BC }, { A-->c }, { A-->CB }]
B[{ B-->d }, { B-->CA }, { B-->SB }, { B-->a }]
S[{ S-->c }, { S-->BA }, { S-->a }, { S-->AA }, { S-->SS }, { S-->b }]
C[{ C-->d }]

word='baacaabaad'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [B, S]   []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   []       []       []       []       []       []       []       
[S]      [S]      [S]      [A, S]   []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [A, S]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }]
B[{ B-->BS }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->SS }, { C-->BC }]
S[{ S-->AS }, { S-->CB }, { S-->SC }, { S-->b }]

word='baacaabaad'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   []    [A, C][]    []    []    []    []    []    []    
[S]   []    []    [C]   []    []    []    []    []    []    
[S]   []    []    []    [A, C][]    []    []    []    []    
[S]   []    []    []    []    [A, C][]    []    []    []    
[C]   []    []    [A]   [A, S][A, S][A, S][]    []    []    
[C]   []    []    [A]   [A, S][A, S][S]   [A, C][]    []    
[C]   []    []    [A]   [A, S][A, S][S]   []    [A, C][]    
[C]   []    []    [A]   [A, S][A, S][S]   []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->c }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->SC }]
C[{ C-->d }, { C-->SA }, { C-->SB }, { C-->a }, { C-->b }, { C-->BS }]

word='ddbcbbbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[S]      [A]      [C]      []       []       []       []       []       []       []       
[C]      []       []       [A]      []       []       []       []       []       []       
[A]      []       [A]      [S]      [C]      []       []       []       []       []       
[A, S]   [A]      [A, S]   [S]      [A]      [C]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [C, S]   [S]      [A]      [C]      []       []       []       
[A, S, C][A, S]   [A, C, S][A, C, S][A, S]   [S]      [A]      [C]      []       []       
[A, S, C][A, S, C][A, C, S][A, S, C][A, C, S][A, S]   [S]      [A]      [S, C]   []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][A, C, S][A, S]   [A, S]   [A, S]   [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }, { A-->d }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->AC }]
C[{ C-->c }, { C-->d }, { C-->a }, { C-->SS }, { C-->BS }]
S[{ S-->AS }, { S-->AA }]

word='ddbcbbbbaa'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [A, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [A, B]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A, B, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B]      [B]         [B]         [C]         []          
[A, B, S, C][A, B, S]   [A, B, S]   [A, B]      [B]         [B]         []          []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->d }]
S[{ S-->c }, { S-->AC }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->CB }, { C-->a }, { C-->AA }, { C-->SS }, { C-->b }]

word='ddbcbbbbaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [A]      [S, C]   []       []       []       []       []       []       []       
[]       [A]      [C]      [S]      []       []       []       []       []       []       
[]       [A, S]   [S, C]   [S, C]   [S, C]   []       []       []       []       []       
[A]      [A, S, C][S, C]   [S, C]   [S, C]   [S, C]   []       []       []       []       
[A, S]   [A, S, C][S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       []       []       
[A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       []       
[A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       
[A, S, C][A, C, S][S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AC }]
B[{ B-->b }, { B-->AS }, { B-->d }, { B-->a }, { B-->CS }]
S[{ S-->c }, { S-->AA }, { S-->BB }, { S-->BS }]
C[{ C-->c }, { C-->BC }]

word='ddbcbbbbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   [S]   [A, B][]    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   [S]   [A, S][A, B]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->AS }, { A-->d }, { A-->CB }]
B[{ B-->BC }, { B-->CA }, { B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->a }]
S[{ S-->c }, { S-->d }]

word='ddbcbbbbaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [A, S]   []       []       []       []       []       []       []       []       
[B, C]   [B]      [A]      []       []       []       []       []       []       []       
[A, B, C][A, B]   [A]      [S]      []       []       []       []       []       []       
[B, C]   [B, C]   [B]      []       [A]      []       []       []       []       []       
[A, B, C][B, C]   [C]      []       [B]      [A]      []       []       []       []       
[A, B, C][A, B, C][B]      []       [C]      [B]      [A]      []       []       []       
[A, B, C][A, B, C][A, B, C][]       [B]      [C]      [B]      [A]      []       []       
[A, B, C][A, B, C][A, B, C][]       [B]      [A]      [B]      []       [B, C]   []       
[A, B, C][A, B, C][A, B, C][]       [A, B, C][A, B]   [B, C]   [B]      [A, B]   [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->BA }, { B-->AA }]
C[{ C-->AC }, { C-->CB }, { C-->SC }]
S[{ S-->CA }]

word='babbbdbaca'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[A]   []    [B]   []    []    []    []    []    []    []    
[A, B][B]   [A]   [B]   []    []    []    []    []    []    
[A, B][A]   [B]   [A]   [B]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][B]   [A]   []    []    []    []    
[A, B][A, B][A, B][A, B][A]   []    [B]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][]    [B]   [A]   []    []    
[A, B][A, B][A, B][A, B][A, B][B]   [A, B][B]   [A]   []    
[A, B][A, B][A, B][A, B][A, B][B]   [A, B][B]   [B]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->c }]
B[{ B-->BC }, { B-->a }, { B-->SC }]
S[{ S-->d }, { S-->BA }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->c }, { C-->CC }]

word='babbbdbaca'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [S]   [A, S][]    []    []    []    []    []    []    
[]    [S]   [A]   [A, S][]    []    []    []    []    []    
[]    [S]   [A]   [A]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    [B, S][A, C][]    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->AA }]
C[{ C-->d }, { C-->CA }, { C-->BA }, { C-->a }, { C-->b }]
S[{ S-->c }, { S-->SS }]

word='babbbdbaca'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[B]   [B]   [B, C][]    []    []    []    []    []    []    
[B]   [B]   [B]   [B, C][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B, C][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   [S]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->d }, { A-->BA }]
B[{ B-->b }, { B-->c }]
S[{ S-->CB }, { S-->SB }, { S-->a }, { S-->BB }, { S-->BC }, { S-->BS }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->CC }]

word='babbbdbaca'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S, C]   [S, C]   []       []       []       []       []       []       []       []       
[S, C]   [S, C]   [A, B]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [A, B]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S]   [A, B]   []       []       []       []       []       
[A, C, S][A, C]   [A, C]   [A]      [A]      [A]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A]      [A]      [A]      [A, B]   []       []       []       
[A, C, S][A, C]   [A, S, C][S, C]   [S, C]   [C]      [S, C]   [S, C]   []       []       
[A, C, S][A, C, S][A, S, C][S, C]   [S, C]   [C, S]   [S, C]   [S]      [B]      []       
[A, C, S][A, C]   [A, C, S][A, S, C][A, S, C][A, C]   [A, C]   [A]      [S]      [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->AC }, { B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->c }, { S-->a }, { S-->b }, { S-->BS }]
C[{ C-->c }, { C-->d }, { C-->AA }, { C-->BC }]

word='babbbdbaca'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[]          []          [B, S]      []          []          []          []          []          []          []          
[]          []          [B, S]      [B, S]      []          []          []          []          []          []          
[]          []          [B, S]      [B, S]      [B, S]      []          []          []          []          []          
[B]         [B]         [B, C]      [B, C]      [B, C]      [C]         []          []          []          []          
[B, S]      [B, S]      [A, B, S]   [A, B, S]   [A, B, S]   [A]         [B, S]      []          []          []          
[S]         [S]         [A, S]      [A, S]      [A, S]      [A]         [S]         [S]         []          []          
[B]         [B]         [B]         [B]         [B]         [B]         [B]         [B]         [S, C]      []          
[B, S]      [B, S]      [A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [S]         [S]         [A]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BC }, { B-->c }, { B-->AA }]
S[{ S-->d }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->SB }, { C-->AB }]

word='abaaaaacbc'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[C]         [A]         [S]         []          []          []          []          []          []          []          
[B, S]      [C]         [A]         [S]         []          []          []          []          []          []          
[A, C]      [B, S]      [C]         [A]         [S]         []          []          []          []          []          
[S, C]      [A, C]      [B, S]      [C]         [A]         [S]         []          []          []          []          
[A, B, S]   [C, S]      [A, C]      [B, S]      [C]         [A]         [S]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][S, C]      []          [C]         [C]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, S]      [S]         []          [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [A, C, S]   [C, S]      [B]         [C]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->AS }, { B-->CA }, { B-->CS }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->CC }]
C[{ C-->c }, { C-->BA }, { C-->CB }, { C-->SC }, { C-->b }]

word='abaaaaacbc'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[B]      [B]      [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[B, S]   [B, S]   [C]      [C]      [C]      [C]      [C]      [S, C]   []       []       
[B, C, S][B, C, S][C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [S, C]   [C]      []       
[B, S, C][B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AB }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->BA }, { B-->BB }]
S[{ S-->AC }, { S-->d }, { S-->SB }, { S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->c }, { C-->a }, { C-->b }]

word='abaaaaacbc'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][B, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][B, S][A, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->BC }, { A-->d }]
B[{ B-->AB }, { B-->c }, { B-->CA }, { B-->BA }, { B-->a }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->SB }, { C-->b }, { C-->BS }]
S[{ S-->AC }]

word='abaaaaacbc'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[B]         []          [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[]          []          []          []          [B]         []          []          []          []          []          
[]          []          []          []          []          [B]         []          []          []          []          
[]          []          []          []          []          []          [B]         []          []          []          
[]          []          []          []          []          [B]         [A]         [B, C]      []          []          
[]          []          []          [B]         [A, B]      [A, C]      [B, S]      [A]         [C]         []          
[A, B]      [B]         [A, B]      [A, B, C]   [A, B, C, S][A, B, S]   [A, C]      [B, S]      []          [B, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->c }, { B-->CB }]
S[{ S-->c }, { S-->d }, { S-->SA }, { S-->CA }, { S-->a }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->BA }, { C-->SB }, { C-->AA }, { C-->BC }]

word='abaaaaacbc'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    [C]   [B, S][]    []    
[]    []    []    []    []    []    [S]   [S]   [S]   []    
[]    []    []    []    []    []    [C]   [C]   [C]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->d }]
B[{ B-->d }, { B-->BA }, { B-->SB }]
S[{ S-->c }, { S-->AC }, { S-->a }, { S-->CC }]
C[{ C-->SA }, { C-->AA }, { C-->b }]

word='addbccbccd'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, C]      [A, B]      []          []          []          []          []          []          []          []          
[B]         [B, C]      [A, B]      []          []          []          []          []          []          []          
[B, C, S]   [A, B, S]   [B, S, C]   [A, C]      []          []          []          []          []          []          
[B, C, S]   [A, B, S]   [B, C]      [A]         [S]         []          []          []          []          []          
[B, C, S]   [A, B, S]   [B, C]      [A]         []          [S]         []          []          []          []          
[B, S, C]   [A, B, S, C][A, B, S]   [S, C]      []          [C]         [A, C]      []          []          []          
[B, S, C]   [A, B, S, C][A, B, S]   [S, C]      []          [C]         [A]         [S]         []          []          
[B, S, C]   [A, B, S, C][A, B, S]   [S, C]      []          [C]         [A]         []          [S]         []          
[B, S, C]   [A, B, C, S][A, B, S, C][A, B, S, C][]          [S]         [S, C]      [B]         [B, C]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->d }]
B[{ B-->b }, { B-->c }, { B-->a }, { B-->SS }]
C[{ C-->d }, { C-->AA }, { C-->CC }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->BB }, { S-->SC }]

word='addbccbccd'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   [C]   [A, C][]    []    []    []    []    []    []    
[S]   []    []    [B]   []    []    []    []    []    []    
[B, S][A, C][A]   [S]   [B]   []    []    []    []    []    
[B, S][A, C][A]   [S]   [S]   [B]   []    []    []    []    
[B, S][A, C][A]   [B, S][S]   [S]   [B]   []    []    []    
[B, S][A, C][A]   [B, S][B, S][S]   [S]   [B]   []    []    
[B, S][A, C][A]   [B, S][B, S][B, S][S]   [S]   [B]   []    
[B, S][A, C][A, C][B, S][B, S][B, S][B, S][S]   [S]   [A, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->SB }]
B[{ B-->b }, { B-->c }, { B-->AC }, { B-->BA }, { B-->CB }]
S[{ S-->d }, { S-->SA }, { S-->a }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->a }]

word='addbccbccd'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[S]      [A]      [S]      []       []       []       []       []       []       []       
[A]      [S]      [A]      [B, S]   []       []       []       []       []       []       
[A, B, S][A, S]   [A, B, S][A, S]   [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [B, C]   []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, B, S][A, B]   [B]      [B, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [B, C]   []       
[A, B, S][A, S]   [A, B, S][A, B, S][A, B]   [A, B]   [B, S]   [A]      []       [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->d }, { B-->SA }, { B-->CA }, { B-->a }]
C[{ C-->c }, { C-->d }, { C-->BA }, { C-->a }, { C-->b }]
S[{ S-->AA }, { S-->BB }, { S-->AB }]

word='addbccbccd'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[]    [S]   [B, C][]    []    []    []    []    []    []    
[S]   [B, S][B, C][A, C][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    [B]   [A, C][]    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->d }]
B[{ B-->c }, { B-->AA }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->CS }, { C-->b }]
S[{ S-->CB }, { S-->SS }, { S-->b }]

word='addbccbccd'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[S]         [B]         [A]         []          []          []          []          []          []          []          
[A, S]      []          [C]         [C, S]      []          []          []          []          []          []          
[S, C]      [C]         [C, S]      [S]         [B]         []          []          []          []          []          
[A, C, S]   [C, S]      [B, C, S]   [A, C]      [C]         [B]         []          []          []          []          
[A, C, S]   [A, B, C, S][A, B, C, S][A, C]      [C]         []          [C, S]      []          []          []          
[A, C, S]   [C, S]      [B, C, S]   [A, C, S]   [C, S]      []          [S]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         [A, C]      [C]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [C]         [A, B]      []          [C]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->BS }, { B-->c }, { B-->d }, { B-->CA }, { B-->a }, { B-->SS }]
C[{ C-->d }, { C-->CB }, { C-->CC }, { C-->b }, { C-->BC }]
S[{ S-->BB }]

word='ddccadddcb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[C, S]      [B, C]      []          []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [A, B]      []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [S]         [A, B]      []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [A, B]      [S]         [A, B]      []          []          []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][A, B, C]   [A, C, S]   [B, C]      []          []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C]   [C, S]      [B, C]      []          []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [C, S]      [B, C]      []          []          
[B, C, S]   [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [A, B]      []          
[B, C, S]   [B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C, S]   [A, C, S]   [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->c }]
B[{ B-->AA }]
C[{ C-->AS }, { C-->d }, { C-->CB }, { C-->SS }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->SA }, { S-->BC }]

word='ddccadddcb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[C][C][B][A][] [] [] [] [] [] 
[] [] [] [B][A][] [] [] [] [] 
[C][C][C][S][] [C][] [] [] [] 
[C][C][C][S][] [C][C][] [] [] 
[C][C][C][S][] [C][C][C][] [] 
[C][C][C][S][] [] [] [] [A][] 
[C][C][C][] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->c }, { A-->CA }]
B[{ B-->b }]
S[{ S-->d }, { S-->a }]
C[{ C-->d }, { C-->AA }]

word='ddccadddcb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[A, C][A]   [A]   []    []    []    []    []    []    []    
[A, C][A, C][C]   [A]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[A, C][A, C][A]   [C]   [A]   [S, C][]    []    []    []    
[]    []    []    []    []    [A]   [S, C][]    []    []    
[A, C][A, C][C]   [A]   [C]   [A]   [A]   [S, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   [A]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->BS }, { B-->AA }, { B-->CS }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->AS }, { C-->d }, { C-->SA }, { C-->BA }, { C-->BB }, { C-->b }]

word='ddccadddcb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, S]   [S, C]   []       []       []       []       []       []       []       []       
[B, S, C][B, C]   [A, S]   []       []       []       []       []       []       []       
[B, C, S][B, C, S][B, C]   [A, S]   []       []       []       []       []       []       
[B, S, C][B]      [B, S]   [C]      [S]      []       []       []       []       []       
[B, S, C][B, C]   [B, S]   [B, C]   [S]      [S, C]   []       []       []       []       
[B, S, C][B, C, S][B, S, C][B, C]   [S]      [B, S]   [S, C]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, C]   [S]      [B, S]   [B, S]   [S, C]   []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [B, S, C][B, S, C][B, C]   [A, S]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [B, C, S][B, S]   [B, S]   [S, C]   [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->a }]
C[{ C-->c }, { C-->AS }, { C-->BA }, { C-->a }, { C-->b }]
S[{ S-->BS }]

word='ddccadddcb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
B[{ B-->b }, { B-->AS }, { B-->CB }]
C[{ C-->AC }, { C-->d }, { C-->SB }, { C-->a }, { C-->SS }]
S[{ S-->c }, { S-->BC }]

word='bbdcccbdcc'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          [S]         [C]         []          []          []          []          []          []          []          
[S]         [C]         [A]         [S]         []          []          []          []          []          []          
[C]         [A]         [A, B]      [C]         [S]         []          []          []          []          []          
[A]         [A, B, S]   [B, C]      [A]         [C]         [S]         []          []          []          []          
[A, C, S]   [B, C, S]   [A, B, C, S][A, C]      [B]         [C]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [A, C]      [S]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B]      [C]         [A]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A]         [A, B]      [C]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->c }, { B-->d }, { B-->a }, { B-->AA }]
C[{ C-->AS }, { C-->BB }, { C-->CC }, { C-->SC }, { C-->BC }]
S[{ S-->AC }, { S-->CA }]

word='bbdcccbdcc'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[C]         [B]         []          []          []          []          []          []          []          []          
[A, C, S]   [C]         [A, B]      []          []          []          []          []          []          []          
[A, B, C]   [A, C]      [B, C]      [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C, S]   [C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [C]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [C]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C]         [A, B]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [B, C]      [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C, S]   [C]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }, { A-->BA }]
B[{ B-->b }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->a }, { S-->BB }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->CC }]

word='bbdcccbdcc'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    [C]   [C]   []    []    []    []    []    
[]    []    []    [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    [A]   [A]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    [C]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }]
B[{ B-->c }, { B-->d }, { B-->CA }, { B-->CS }]
S[{ S-->SB }, { S-->a }, { S-->AA }]
C[{ C-->CB }]

word='bbdcccbdcc'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][] [B][] [] [] [] [] [] [] 
[S][] [] [B][] [] [] [] [] [] 
[S][] [] [] [B][] [] [] [] [] 
[S][] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->BS }, { A-->c }]
B[{ B-->c }, { B-->CB }]
S[{ S-->d }, { S-->BA }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->d }, { C-->SA }, { C-->CA }, { C-->a }, { C-->BB }, { C-->CC }, { C-->BC }]

word='bbdcccbdcc'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[C]         [A]         [S, C]      []          []          []          []          []          []          []          
[B, C]      [A]         [B, C]      [A, B]      []          []          []          []          []          []          
[A, B, S, C][A, C]      [A, B, S, C][A, S, C]   [A, B]      []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, S, C][A, B, S, C][A, S, C]   [A, B]      []          []          []          []          
[A, S, C]   [A, C, S]   [A, S, C]   [A, S, C]   [A, S]      [A]         [S]         []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, S, C]   [A, S, C]   [A, S, C]   [A]         [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A]         [B, C]      [A, B]      []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, C]      [A, B, S, C][A, S, C]   [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->d }]
B[{ B-->c }, { B-->AA }, { B-->CS }]
S[{ S-->AS }, { S-->d }, { S-->a }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->SS }]

word='bcdcbdccdd'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[C]         [S, C]      [A, S]      []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[B, C]      [A, B, C, S][S, C]      [S]         [S]         []          []          []          []          []          
[B, C, S]   [A, B, C, S][B, C]      [A, C]      [C]         [A, S]      []          []          []          []          
[]          []          []          []          []          []          [B]         []          []          []          
[]          []          []          []          []          []          []          [B]         []          []          
[A, B, C, S][A, B, C, S][B, S, C]   [A, B, C, S][B, C]      [B, S, C]   [A, S]      [S, C]      [A, S]      []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C, S]   [B, S, C]   [A, B, S, C][A, B, S, C][B, S, C]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->d }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->CA }, { B-->SB }]
C[{ C-->c }, { C-->AC }, { C-->a }, { C-->AA }]
S[{ S-->b }, { S-->BC }]

word='bcdcbdccdd'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A, B]   [B]      [A]      []       []       []       []       []       []       []       
[C, S]   [S]      [C]      [C]      []       []       []       []       []       []       
[A, B]   [B]      []       []       [B, S]   []       []       []       []       []       
[A, B, C][B]      []       []       [B]      [A]      []       []       []       []       
[C, S]   [S]      []       []       [S]      [C]      [C]      []       []       []       
[]       []       []       []       []       []       []       [C]      []       []       
[A, B]   [B]      []       []       [B]      []       []       [B]      [A]      []       
[C]      []       []       []       []       []       []       []       [C]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->c }, { A-->AS }, { A-->CB }]
B[{ B-->d }]
S[{ S-->c }, { S-->a }, { S-->b }]
C[{ C-->d }, { C-->BA }, { C-->AA }]

word='bcdcbdccdd'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [C]   [A, S][]    []    []    []    []    []    
[]    []    [C]   [A]   [S]   []    []    []    []    []    
[]    [C]   [A]   []    []    [B, C][]    []    []    []    
[]    [C]   [A, C][]    []    [C]   [A, S][]    []    []    
[]    [A, C][A, C][C]   []    [A, C][A, C][A, S][]    []    
[]    [A, C][A, C][A, C][]    [A, C][A]   []    [B, C][]    
[]    [A, C][A, C][A, C][]    [A, C][C]   [C]   [A]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->d }]
B[{ B-->c }, { B-->d }, { B-->a }, { B-->AA }]
S[{ S-->CB }, { S-->CC }, { S-->b }]
C[{ C-->b }, { C-->AB }, { C-->BC }]

word='bcdcbdccdd'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[S]   [B, C][A, B][]    []    []    []    []    []    []    
[S]   [S, C][B, C][A, B][]    []    []    []    []    []    
[S]   [S, C][C, S][C]   [S, C][]    []    []    []    []    
[]    [S]   [S]   [S]   [S]   [A, B][]    []    []    []    
[]    [S]   [S]   [S]   [S]   [B, C][A, B][]    []    []    
[]    [S]   [S]   [S]   [S]   [C, S][B, C][A, B][]    []    
[]    [S]   [S]   [S]   [S]   [C, S][C, S][B, C][A, B][]    
[]    [S]   [S]   [S]   [S]   [C, S][C, S][C, S][B, C][A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->d }, { A-->BA }]
B[{ B-->c }, { B-->SA }, { B-->CB }, { B-->a }]
S[{ S-->AC }, { S-->SB }, { S-->b }]
C[{ C-->d }, { C-->CS }]

word='bcdcbdccdd'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B]      [A]      [A, C]   []       []       []       []       []       []       []       
[S]      []       [B]      [B]      []       []       []       []       []       []       
[A]      []       []       []       [S]      []       []       []       []       []       
[S]      []       []       []       [B]      [A, C]   []       []       []       []       
[A, S]   []       []       []       [S]      [B]      [B]      []       []       []       
[A, S]   []       []       []       [S]      []       []       [B]      []       []       
[A, B, S][A]      [A]      [A]      [A, B]   [A]      [A]      [A]      [A, C]   []       
[A, B, S][A, S]   [A, C, S][A, S]   [A, S]   [C, S]   [S]      [S]      [S]      [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->b }, { A-->c }, { A-->AS }, { A-->BA }]
B[{ B-->c }, { B-->d }, { B-->CA }]
C[{ C-->a }, { C-->SC }]
S[{ S-->SA }, { S-->SS }, { S-->AB }, { S-->BS }]

word='cdbccbdbbd'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A, S][A]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][A, S][A, B][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, B][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A]   []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->AC }]
B[{ B-->CA }, { B-->BA }, { B-->CB }, { B-->a }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->a }, { S-->CS }]
C[{ C-->c }, { C-->SA }, { C-->BC }]

word='cdbccbdbbd'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[C]      [C]      [A]      []       []       []       []       []       []       []       
[S, C]   [S, C]   [A, S]   [S, C]   []       []       []       []       []       []       
[S, C]   [S, C]   [A, S]   [S]      [S, C]   []       []       []       []       []       
[B, C]   [B, C]   [A, C]   [B, C]   [B, C]   [A]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       []       
[B, C]   [B, C]   [A, C]   [B, C]   [B, C]   [A, C]   [C]      [A]      []       []       
[B, C]   [B, C]   [A, B, C][B, C]   [B, C]   [A, B]   [B]      []       [A]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->BC }, { B-->SC }]
S[{ S-->c }, { S-->d }, { S-->SB }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->AS }, { C-->d }, { C-->SA }, { C-->a }, { C-->b }]

word='cdbccbdbbd'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [S, C][]    []    []    []    []    []    []    []    
[B, S][B]   [S, C][]    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    [S]   [B]   [S, C][]    []    []    []    
[S]   [S]   [S]   [B, S][B, S][B]   [S, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [S, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }]
B[{ B-->SA }, { B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->c }, { S-->d }, { S-->CS }, { S-->b }]
C[{ C-->d }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->AB }]

word='cdbccbdbbd'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S, C]      []          []          []          []          []          []          []          []          
[B, C]      [B, S]      [S]         []          []          []          []          []          []          []          
[S, C]      [B, C]      [B]         [S]         []          []          []          []          []          []          
[A, B, C, S][C, S]      [C]         [B]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][C, S]      [C]         [B]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [B]         [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [B, C]      [B, S]      [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [B, C]      [B]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B]         [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->CC }]
S[{ S-->CA }, { S-->a }, { S-->BB }, { S-->SS }, { S-->b }]
C[{ C-->c }, { C-->a }]

word='cdbccbdbbd'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [A]      []       []       []       []       []       []       []       []       
[B, S]   []       [B, S]   []       []       []       []       []       []       []       
[A, B, S][A]      [A, B]   [A, C]   []       []       []       []       []       []       
[A, B, S][A, B]   [A, B, S][A, B, S][A, C]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   []       [B, S]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   []       [B]      [A]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   []       [B, S]   []       [B, S]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   []       [B, S]   []       [B, S]   [B, S]   []       
[B, S]   [B, S]   [B, S]   [B, S]   []       [B, S]   []       [B, S]   [B]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }]
B[{ B-->d }, { B-->CB }, { B-->a }]
S[{ S-->BA }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->BB }]

word='caccbddadd'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A, S]   []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[C]      [S, C]   [C]      [C]      [C]      [C]      [B]      []       []       []       
[B, C]   [B, C]   [B]      [B]      [B]      [B, S]   [S, C]   [A, B]   []       []       
[B, C]   [B, C, S][C]      [C]      [C]      [C]      [B, S]   [C]      [B]      []       
[B, S, C][B, S, C][B, S]   [B, S]   [B, S]   [B, S]   [S, C]   [B, S, C][C]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->BS }, { A-->c }, { A-->BA }, { A-->CB }, { A-->SB }]
C[{ C-->AS }, { C-->d }, { C-->BB }, { C-->b }]
S[{ S-->c }]

word='caccbddadd'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A, C][A, C][A, S][]    []    []    []    []    []    []    
[A, C][A, C][A, C][A, S][]    []    []    []    []    []    
[A]   [A]   [A]   []    [C]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [C]   []    []    []    []    
[A]   [A]   [A]   []    []    [A]   [C]   []    []    []    
[A]   [A]   [A]   []    []    [A]   []    [A]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A]   [A]   [A]   []    []    [A]   []    [A]   [A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->SA }]
B[{ B-->b }, { B-->c }, { B-->d }, { B-->BA }]
S[{ S-->AS }, { S-->d }, { S-->a }]
C[{ C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->b }, { C-->BC }]

word='caccbddadd'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S, C]   [S, C]   []       []       []       []       []       []       []       []       
[A, B, C][A, C]   [A, B]   []       []       []       []       []       []       []       
[B, C]   [C]      [B, C]   [A, B]   []       []       []       []       []       []       
[C]      []       [C]      [C]      [B, C]   []       []       []       []       []       
[C]      []       [C]      [C]      [C]      [B, S]   []       []       []       []       
[C]      []       [C]      [C]      [C]      [C]      [B, S]   []       []       []       
[C]      []       [C]      [C]      [C]      [C]      [C]      [S, C]   []       []       
[C]      []       [C]      [C]      [C]      [C]      [C]      [C]      [B, S]   []       
[]       []       []       []       []       []       []       []       [C]      [B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->d }]
B[{ B-->c }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->AB }]
C[{ C-->c }, { C-->CA }, { C-->a }, { C-->b }]

word='caccbddadd'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A]      [S, C]   []       []       []       []       []       []       []       []       
[S]      []       [B, C]   []       []       []       []       []       []       []       
[A]      [C]      [A, S]   [B, C]   []       []       []       []       []       []       
[A]      [C]      [A, S, C][A, S, C][A, C]   []       []       []       []       []       
[A]      [C]      [A, S, C][A, C]   [C]      [A]      []       []       []       []       
[A]      [C]      [A, S, C][A, C]   [C]      []       [A]      []       []       []       
[]       []       []       []       []       []       []       [S, C]   []       []       
[]       []       []       []       []       []       []       [C]      [A]      []       
[]       []       []       []       []       []       []       [C]      []       [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
B[{ B-->AB }, { B-->c }, { B-->a }, { B-->BB }]
C[{ C-->AC }, { C-->CB }, { C-->CC }, { C-->SC }, { C-->b }]
S[{ S-->c }, { S-->d }, { S-->BA }, { S-->CS }]

word='caccbddadd'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, B]   []       []       []       []       []       []       []       []       
[B, S]   [A, B]   [B, S]   []       []       []       []       []       []       []       
[B, S]   [A, B]   [B]      [B, S]   []       []       []       []       []       []       
[C, S]   [A, C, S][C, S]   [C, S]   [A, C]   []       []       []       []       []       
[S]      [A, S]   [S]      [S]      [A, S]   [S]      []       []       []       []       
[S]      [A, S]   [S]      [S]      [A]      []       [S]      []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       [A, B]   []       []       
[]       []       []       []       []       []       []       [A]      [S]      []       
[]       []       []       []       []       []       []       [A]      []       [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->BS }, { A-->c }, { A-->AC }]
B[{ B-->BC }, { B-->d }, { B-->SA }, { B-->BA }, { B-->CC }]
C[{ C-->AS }, { C-->CB }, { C-->b }, { C-->AB }]
S[{ S-->CA }]

word='bbddaaddbc'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [A, C]      []          []          []          []          []          []          []          []          
[A, B, C]   [C]         [B]         []          []          []          []          []          []          []          
[A, B, C]   [C]         []          [B]         []          []          []          []          []          []          
[A, B, C, S][C, S]      []          [B]         [A]         []          []          []          []          []          
[A, B, C, S][B, C, S]   []          [B]         []          [A]         []          []          []          []          
[A, B, C, S][B, C, S]   []          [B]         [A]         [C]         [B]         []          []          []          
[A, B, C, S][B, C, S]   []          [B]         [A, C]      [C]         []          [B]         []          []          
[A, B, C, S][A, B, C, S][B]         [A, B]      [A, B, C, S][B, C, S]   []          [B]         [A, C]      []          
[A, B, C, S][A, B, C, S][B]         [A, B]      [A, B, C, S][A, B, C, S][B]         [A, B]      [S]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
B[{ B-->c }, { B-->d }, { B-->SA }, { B-->CA }, { B-->CB }]
C[{ C-->c }, { C-->b }]
S[{ S-->d }, { S-->AA }, { S-->SS }, { S-->CC }]

word='bbddaaddbc'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[B, S][A, C][]    []    []    []    []    []    []    []    
[B, S][A, B][B, S][]    []    []    []    []    []    []    
[B, S][A]   [S]   [B, S][]    []    []    []    []    []    
[A, B][B, S][B]   [B]   [A]   []    []    []    []    []    
[B, S][A, B][S]   [S]   [S]   [A]   []    []    []    []    
[B, S][A, B][S]   [S]   [S]   [A]   [B, S][]    []    []    
[B, S][A, B][S]   [S]   [S]   [A]   [S]   [B, S][]    []    
[A, B][B, S][B]   [B]   [A, B][S]   [B]   [B]   [A, C][]    
[B, S][A, B][S]   [S]   [S]   [A]   [S]   [S]   [B, S][B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->CS }, { A-->d }]
B[{ B-->b }, { B-->BC }, { B-->CA }]
C[{ C-->c }, { C-->BA }, { C-->a }]
S[{ S-->c }, { S-->AS }, { S-->CB }, { S-->SB }]

word='bbddaaddbc'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[B]         [C]         [A]         []          []          []          []          []          []          []          
[B, C]      [B, C]      [A]         [A]         []          []          []          []          []          []          
[B]         [B]         []          []          [C]         []          []          []          []          []          
[B]         [B]         []          []          []          [C]         []          []          []          []          
[A, B, C]   [A, C]      [S]         [S]         [S]         [B]         [A]         []          []          []          
[A, B, C]   [A, B, C]   [S]         [S]         [S]         [B, C]      [A]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, S]      [A, S]      [A, S]      [S]         []          []          [B]         []          
[A, B, C, S][A, B, C, S][A, S]      [A, S]      [A, B, S]   [A, S]      []          []          [B]         [C, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->d }, { A-->BA }]
B[{ B-->CA }, { B-->a }]
C[{ C-->SC }, { C-->b }]
S[{ S-->c }, { S-->d }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BC }]

word='bbddaaddbc'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [B, S][A, S][]    []    []    []    []    []    []    
[B]   [A]   []    [A, S][]    []    []    []    []    []    
[A, S][S]   []    [S]   [A, B][]    []    []    []    []    
[A, S][]    []    []    [A, S][A, B][]    []    []    []    
[A]   []    []    []    [A]   [A]   [A, S][]    []    []    
[]    []    []    []    []    []    []    [A, S][]    []    
[C, S][C, S][C]   [C]   [C]   [S]   [C]   [C]   [C]   []    
[S]   [S]   [S]   [S]   [S]   []    [S]   [S]   [S]   [S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AB }, { A-->BS }, { A-->d }, { A-->SA }, { A-->CB }]
B[{ B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->CS }]
S[{ S-->d }, { S-->AA }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->b }]

word='bbddaaddbc'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [S, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, B]   [A, S]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [A, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A]      []       [B]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      [A, B]   [A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B, S][A, S]   [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A]      [S, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }]
B[{ B-->SS }, { B-->CS }]
C[{ C-->c }, { C-->AS }, { C-->SA }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->d }, { S-->CB }, { S-->SC }]

word='ddbdcabcbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[A, B]      [S]         [C]         []          []          []          []          []          []          []          
[C]         [B]         [B]         [S]         []          []          []          []          []          []          
[C, S]      [A, B, C]   [A, B]      [S]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B]      [C, S]      []          [A, C]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B]      [S]         []          []          [C]         []          []          []          
[A, B, C, S][A, B, S, C][A, B]      [S]         []          []          []          [C]         []          []          
[A, B, C, S][A, B, S, C][A, B]      [S]         []          []          []          []          [C]         []          
[A, B, C, S][A, B, S, C][A, B]      [S]         []          []          []          []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BS }]
B[{ B-->AB }, { B-->a }]
S[{ S-->AC }, { S-->d }, { S-->BA }, { S-->CB }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->c }, { C-->BC }]

word='ddbdcabcbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [S]   [C]   []    []    []    []    []    
[]    []    []    []    [S]   [B]   []    []    []    []    
[]    []    []    []    []    [A]   [S]   []    []    []    
[]    []    []    []    []    [A, S][S]   [C]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->b }, { B-->BC }, { B-->AS }]
C[{ C-->c }, { C-->a }, { C-->BB }]
S[{ S-->c }, { S-->d }, { S-->SB }, { S-->b }]

word='ddbdcabcbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       [S]      [B, S]   []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       []       [C, S]   []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A, C]   []       []       []       []       
[B, S]   [B, S]   [B, C, S][B, S]   [B, S]   [B]      [B, S]   []       []       []       
[B, S]   [B, S]   [B, C, S][B, S]   [B, S]   [B]      [B]      [C, S]   []       []       
[C, S]   [C, S]   [B, C, S][C, S]   [C, S]   [C]      [C]      [S]      [B, S]   []       
[B, S]   [B, S]   [B, C, S][B, S]   [B, S]   [B]      [B]      [S]      [C, S]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->AB }, { A-->c }, { A-->AC }, { A-->CA }, { A-->CB }]
B[{ B-->AA }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->SB }, { S-->BC }]

word='ddbdcabcbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    [S]   [S]   [B]   [A]   []    []    []    []    
[]    []    []    []    [A, S][B]   [A]   []    []    []    
[]    []    [S]   [S]   [B, S][A, S][B, S][A, S][]    []    
[]    []    []    []    [A, S][B]   [A]   [B]   [A]   []    
[]    []    [S]   [S]   [B, S][A, S][B, S][A, S][B]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->BA }]
B[{ B-->c }, { B-->d }, { B-->CC }, { B-->CS }]
S[{ S-->AS }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->b }]

word='ddbdcabcbb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B]         []          []          []          []          []          []          []          []          
[]          []          [S, C]      []          []          []          []          []          []          []          
[]          []          [C]         [B]         []          []          []          []          []          []          
[]          []          [C]         [A]         [A, B]      []          []          []          []          []          
[]          []          [B]         [S]         [S]         [S, C]      []          []          []          []          
[]          []          [B, C]      [S]         [S]         [B, S]      [S, C]      []          []          []          
[A]         [A]         [A, B, S, C][A, S, C]   [A, S, C]   [A, B, S, C][C]         [A, B]      []          []          
[S]         [S]         [B, S, C]   [B, S, C]   [B, S, C]   [B, C, S]   [B]         [S]         [S, C]      []          
[S]         [S]         [B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, C]      [S]         [B, S]      [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->AB }]
B[{ B-->BC }, { B-->a }]
C[{ C-->c }, { C-->AC }, { C-->d }, { C-->SA }, { C-->BA }, { C-->SS }, { C-->SC }, { C-->b }, { C-->BS }]
S[{ S-->c }, { S-->d }, { S-->CA }, { S-->CS }]

word='acdccdcccb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, C]      [C, S]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [C, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, C, S]   [C, S]      []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [C, S]      []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C, S]      []          []          []          []          
[A, B, C, S][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C, S]      []          []          []          
[A, B, S, C][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C, S]      []          []          
[A, B, S, C][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C, S]      []          
[A, B, S, C][A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C]      [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->c }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AS }, { B-->d }, { B-->a }, { B-->BB }]
S[{ S-->c }, { S-->AC }, { S-->b }]
C[{ C-->d }, { C-->SS }]

word='acdccdcccb'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, B]      [A, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A]         [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [B]         [B, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B]      [A, B, C]   [A, B, S]   [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B, C]   [A]         [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [B]         [B, C]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [B, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, S]   [A, B, C]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->b }]
B[{ B-->AB }, { B-->BA }, { B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->BS }]
C[{ C-->d }, { C-->CB }]

word='acdccdcccb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[]    []    [S]   []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S, C][]    []    []    []    
[]    []    []    []    []    [A]   [S]   []    []    []    
[]    []    []    []    []    [S]   []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }]
B[{ B-->b }, { B-->c }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->c }, { S-->d }, { S-->SC }]
C[{ C-->AC }, { C-->d }, { C-->CC }, { C-->CS }]

word='acdccdcccb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B, S][]    []    []    []    []    []    []    []    
[]    [S]   [S, C][]    []    []    []    []    []    []    
[B]   [B, S][B, C][B, S][]    []    []    []    []    []    
[B]   [B, S][B, C][B]   [B, S][]    []    []    []    []    
[]    [S]   [C]   []    [S]   [S, C][]    []    []    []    
[B]   [B, S][B, C][B]   [B, S][B, C][B, S][]    []    []    
[B]   [B, S][B, C][B]   [B, S][B, C][B]   [B, S][]    []    
[B]   [B, S][B, C][B]   [B, S][B, C][B]   [B]   [B, S][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->c }, { A-->AS }]
B[{ B-->BS }, { B-->c }]
S[{ S-->d }, { S-->CA }, { S-->SB }, { S-->a }, { S-->SC }, { S-->AB }]
C[{ C-->d }, { C-->BA }, { C-->CC }, { C-->b }, { C-->BC }]

word='acdccdcccb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[S]         [A, B]      []          []          []          []          []          []          []          []          
[S]         [A, B, C]   [S, C]      []          []          []          []          []          []          []          
[S]         [A, B, S, C][S]         [A, B]      []          []          []          []          []          []          
[S]         [A, B, S, C][S, C]      [A, S, C]   [A, B]      []          []          []          []          []          
[S]         [A, B, C, S][S, C]      [A, S, C]   [A, B, C]   [S, C]      []          []          []          []          
[S]         [A, B, C, S][S, C]      [A, B, S, C][A, B, S, C][S]         [A, B]      []          []          []          
[S]         [A, B, C, S][S, C]      [A, B, C, S][A, B, C, S][S, C]      [A, S, C]   [A, B]      []          []          
[S]         [A, B, S, C][S, C]      [A, B, C, S][A, B, C, S][S, C]      [A, B, C, S][A, S, C]   [A, B]      []          
[S]         [A, B, S, C][C, S]      [A, B, C, S][A, B, C, S][S, C]      [A, B, C, S][C, S]      [C]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->CB }]
B[{ B-->c }, { B-->d }, { B-->a }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->AA }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->AS }, { C-->d }, { C-->AB }, { C-->BS }]

word='cdddcbadbc'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [B, C]   []       []       []       []       []       []       []       []       
[A, S, C][A, S]   [B, C]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [B, C]   []       []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][A, S]   [B, C]   []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][S, C]   [A, C]   [S]      []       []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][S]      [A, B]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C, S][S]      [A, S, C][B, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, C, S][S]      [A, S, C][A, C]   [S]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][S]      [A, S, C][A, S, C][]       [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->AS }]
B[{ B-->b }, { B-->d }]
C[{ C-->c }, { C-->SA }, { C-->CA }, { C-->SB }]
S[{ S-->d }, { S-->SC }, { S-->BC }, { S-->BS }]

word='cdddcbadbc'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[A, C]   [A, C, S][B, S]   []       []       []       []       []       []       []       
[A, C]   [A, C, S][A, C, S][B, S]   []       []       []       []       []       []       
[A, C]   [A, S, C][A, S]   [S]      [C]      []       []       []       []       []       
[A, C]   [A, S, C][S, C]   [C]      []       [B]      []       []       []       []       
[A, C]   [A, S, C][S, C]   [C]      []       []       [A]      []       []       []       
[A, C]   [A, C, S][A, C, S][A, C]   []       []       [A]      [B, S]   []       []       
[A, C]   [A, S, C][S, C]   []       []       []       []       [C]      [B]      []       
[A, C]   [A, C, S][A, C, S][A, C]   []       []       [A]      [A, S]   [S]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AB }, { A-->BC }]
C[{ C-->d }, { C-->CA }, { C-->CB }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->c }, { S-->AC }, { S-->CC }, { S-->CS }]

word='cdddcbadbc'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [S]   [C]   []    []    []    []    []    []    []    
[]    [S]   [S]   [C]   []    []    []    []    []    []    
[]    [S]   [S]   [S]   [S]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    [C, S][A, C][]    []    []    
[]    []    []    []    []    [S]   [S]   [C]   []    []    
[]    []    []    []    []    [S]   [S]   [S]   [C]   []    
[]    []    []    []    []    [S]   [S]   [S]   [S]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->b }, { A-->AS }]
B[{ B-->SA }, { B-->SC }]
S[{ S-->d }, { S-->BA }, { S-->CB }, { S-->a }, { S-->AB }, { S-->BC }]
C[{ C-->c }, { C-->AC }]

word='cdddcbadbc'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          [A]         [S]         []          []          []          []          []          []          []          
[S]         [A, B]      [A]         [S]         []          []          []          []          []          []          
[B, S]      [B, S, C]   [C]         [B]         [C]         []          []          []          []          []          
[B, S]      [A, B, S]   [A]         [S]         []          [A]         []          []          []          []          
[A, B, S]   [A, B, S]   [A, B]      [A, S]      []          [A]         [S]         []          []          []          
[A, B, S]   [A, B, S]   [A, B]      [A, B, S]   []          [A]         [A]         [S]         []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   []          [A, S]      [A]         [B]         [A]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S]         [A, B, C, S][A, C]      [B, S]      [C]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }, { A-->d }]
B[{ B-->BC }, { B-->d }, { B-->SA }]
S[{ S-->a }, { S-->SC }, { S-->AB }]
C[{ C-->c }, { C-->SB }, { C-->CC }, { C-->BS }]

word='cdddcbadbc'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [A, B]      []          []          []          []          []          []          []          []          
[]          [S]         [A, B]      []          []          []          []          []          []          []          
[C]         [B, C]      [S]         [A, B]      []          []          []          []          []          []          
[C]         [B, C]      [S]         [A, B]      [C]         []          []          []          []          []          
[]          [S]         [B]         []          []          [A]         []          []          []          []          
[]          [A, B]      [C]         []          []          []          [A, S]      []          []          []          
[C]         [A, B, S, C][A, B, C]   [C]         []          [A, S]      [B, S, C]   [A, B]      []          []          
[C]         [A, B, S, C][A, B, C]   [S, C]      []          [B, S]      [B]         []          [A]         []          
[C]         [A, B, S, C][A, B, C]   [S, C]      []          [B, S]      [B]         []          [A]         [C]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }]
B[{ B-->d }, { B-->CA }, { B-->AA }, { B-->SC }]
C[{ C-->CB }, { C-->CC }, { C-->b }]
S[{ S-->AC }, { S-->SA }, { S-->BB }, { S-->BS }]

word='acadbaaddb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [B]   [A]   []    []    []    []    []    []    []    
[]    [S]   []    [B]   []    []    []    []    []    []    
[]    [B, S][]    []    [A, C][]    []    []    []    []    
[]    [S]   []    [S]   [B]   [A]   []    []    []    []    
[]    [B, S][]    [S]   [C]   [B]   [A]   []    []    []    
[]    [B, S][]    []    [C]   [S]   []    [B]   []    []    
[]    [B, S][]    []    [C]   [S]   []    [S]   [B]   []    
[]    [B, S][]    [S]   [B, C][B, S][]    [B, S][]    [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->c }]
B[{ B-->b }, { B-->d }, { B-->CB }, { B-->SB }]
S[{ S-->c }, { S-->BA }, { S-->a }]
C[{ C-->a }, { C-->SC }]

word='acadbaaddb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [S, C][]    []    []    []    
[]    []    []    []    []    [C]   [S, C][]    []    []    
[]    []    []    []    []    [B]   [B]   [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->d }]
B[{ B-->AB }, { B-->AC }, { B-->CA }, { B-->SC }]
S[{ S-->a }, { S-->BB }, { S-->SS }, { S-->BC }]
C[{ C-->a }, { C-->b }, { C-->BS }]

word='acadbaaddb'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[S, C]   [B]      [S, C]   []       []       []       []       []       []       []       
[B, S]   [B]      [B]      [A]      []       []       []       []       []       []       
[B, S, C][S]      [S]      [B]      [C]      []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [S, C]   []       [S, C]   []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][]       [B, S]   [S, C]   []       []       []       
[B, S, C][B, S]   [B, S]   [B]      []       []       [B]      [A]      []       []       
[B]      []       []       []       []       []       []       []       [A]      []       
[B, C, S][B, S, C][B, S, C][C, S]   []       [S]      [S]      [B]      [B]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }, { A-->d }]
B[{ B-->BC }, { B-->SA }, { B-->CB }, { B-->SS }]
S[{ S-->c }, { S-->SB }, { S-->a }, { S-->BB }]
C[{ C-->AC }, { C-->AS }, { C-->b }, { C-->AB }]

word='acadbaaddb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [A, S]   []       []       []       []       []       []       []       []       
[S]      [B, C]   [S]      []       []       []       []       []       []       []       
[B, S]   [S, C]   [B]      [A]      []       []       []       []       []       []       
[B, S]   [B, S, C][B]      [C]      [C]      []       []       []       []       []       
[B, S]   [B]      []       []       []       [S]      []       []       []       []       
[B, S]   [B, S, C][S]      [B, C]   [B]      [B]      [S]      []       []       []       
[B, S]   [B, S, C][B]      []       []       [S]      [B]      [A]      []       []       
[B, S]   [B, S, C][S]      [B, C]   [B]      [B]      []       []       [A]      []       
[B, S]   [B, S, C][B, S]   [B, C]   [B]      [B, S]   [B]      [C]      [C]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->BC }, { B-->d }, { B-->BA }, { B-->a }]
S[{ S-->c }, { S-->SB }, { S-->a }, { S-->AB }]
C[{ C-->d }, { C-->AA }]

word='acadbaaddb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   [B, S][]    []    []    []    []    []    []    
[]    [S]   [B, S][B, C][]    []    []    []    []    []    
[]    [S]   [B, S][B]   [A, B][]    []    []    []    []    
[]    [S]   [S]   []    [S]   [B, S][]    []    []    []    
[]    [S]   [S]   []    [S]   [S]   [B, S][]    []    []    
[]    [S]   [S]   []    [S]   [S]   [B, S][B, C][]    []    
[]    [S]   [S]   []    [S]   [S]   [B, S][B]   [B, C][]    
[]    [S]   [S]   []    [S]   [S]   [B, S][B]   [B]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->d }, { A-->BA }]
B[{ B-->c }, { B-->d }, { B-->CA }, { B-->SS }]
C[{ C-->CB }, { C-->CC }, { C-->b }]
S[{ S-->AS }, { S-->AB }]

word='bbaacadcba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[C]         [C]         []          []          []          []          []          []          []          []          
[B, C]      [B]         [A]         []          []          []          []          []          []          []          
[A, B, C]   [A, B]      [A]         [A]         []          []          []          []          []          []          
[C, S]      [S]         [S]         [S]         [B]         []          []          []          []          []          
[A, B, C]   [A, B]      [A]         [A]         [A]         [A]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A, S]      [A, S]      [A, B]      []          []          []          
[B, C, S]   [B, S, C]   [B, S]      [B, S]      [S]         [S]         [S]         [B]         []          []          
[C]         [C]         []          []          []          []          []          []          [C]         []          
[B, C]      [B, C]      []          []          []          []          []          []          [B]         [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }, { A-->AS }]
B[{ B-->c }, { B-->SB }, { B-->SS }]
S[{ S-->d }, { S-->b }, { S-->BS }]
C[{ C-->BB }, { C-->CS }, { C-->BC }]

word='bbaacadcba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, B][A, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    [A]   [S]   []    []    []    
[]    []    []    []    []    []    [B]   [B]   []    []    
[]    []    []    []    []    [A]   [B, S][S]   [A, S][]    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->AS }, { A-->d }]
B[{ B-->d }, { B-->BB }, { B-->SC }, { B-->CS }]
C[{ C-->c }, { C-->SA }, { C-->BA }, { C-->a }]
S[{ S-->AC }, { S-->CB }, { S-->BC }, { S-->BS }]

word='bbaacadcba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, S]      [S]         [C]         []          []          []          []          []          []          []          
[B, S]      [B]         []          [C]         []          []          []          []          []          []          
[A, B, S]   [S]         []          []          [C]         []          []          []          []          []          
[B, S]      [B]         []          []          []          [C]         []          []          []          []          
[A, B, S, C][B, C]      [B]         [S]         [B]         [S]         [A, B]      []          []          []          
[A, B, S]   [A, S]      [S]         [B]         [S]         [B]         [S]         [C]         []          []          
[A, B, C, S][A, B, S, C][C]         [C]         [C]         [C]         [C]         []          [A]         []          
[A, B, S]   [A, B, S]   [B]         [S]         [B]         [S]         [B]         [B]         [S]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }, { A-->c }]
B[{ B-->BS }, { B-->c }, { B-->CA }, { B-->BA }, { B-->SS }, { B-->CS }]
S[{ S-->d }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->d }, { C-->CB }, { C-->BB }, { C-->SC }]

word='bbaacadcba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B]         [A, S]      []          []          []          []          []          []          []          []          
[B]         [B]         [A, S]      []          []          []          []          []          []          []          
[B, C]      [B]         [B]         [A, S]      []          []          []          []          []          []          
[A, B, C]   [B, C]      [B, C]      []          [A, B]      []          []          []          []          []          
[A, B, C]   [B, C]      [B, C]      []          [B]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C]         [A, B, C]   [B, C]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B, C]   [B, C]      [B, C]      [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A, B, C]   [B, C]      [B, C]      [B]         [A, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][B, S, C]   [B, C]      [B]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->d }, { A-->CA }]
B[{ B-->b }, { B-->c }, { B-->BA }, { B-->AA }]
C[{ C-->c }, { C-->d }, { C-->CB }, { C-->a }]
S[{ S-->SA }, { S-->SB }, { S-->BB }, { S-->BC }]

word='bbaacadcba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [C]      [B, C]   []       []       []       []       []       
[]       []       []       []       [S]      [C]      []       []       []       []       
[S]      [B, S]   [A]      [A, C]   [A, B, S][A]      [A, C]   []       []       []       
[S]      [B, S]   [A]      [A, C]   [A, B, S][A]      [A, C]   [B, C]   []       []       
[S]      [B, S]   [A]      [A, C]   [A, B, S][A]      [A, C]   [C, S]   [B]      []       
[]       [S]      []       []       [S]      []       []       []       [S]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->c }, { A-->SB }]
B[{ B-->BS }, { B-->SA }, { B-->a }]
S[{ S-->d }, { S-->AA }, { S-->CS }]
C[{ C-->AC }, { C-->SC }]

word='abdbccccdb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [B]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[B]   [S]   [A, B][B]   [S]   [A]   []    []    []    []    
[]    [B]   [S]   []    [B]   [S]   [A]   []    []    []    
[B]   [S]   [A, B][A, B][]    [B]   [S]   [A]   []    []    
[B]   [S]   [A, B][A, B][]    [B]   []    []    [S]   []    
[]    [A, B][S]   [S]   [B]   [S]   [A]   []    [B]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->c }, { A-->AS }]
B[{ B-->BS }, { B-->AC }, { B-->CA }, { B-->BB }, { B-->CC }, { B-->CS }]
C[{ C-->d }, { C-->SA }, { C-->a }, { C-->AB }]
S[{ S-->c }, { S-->CB }]

word='abdbccccdb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[C, S]      [B]         [C]         []          []          []          []          []          []          []          
[B, C]      [C]         [B]         [A]         []          []          []          []          []          []          
[B, C, S]   [B, C]      [B]         [A]         [A, S]      []          []          []          []          []          
[B, C, S]   [A, B, C]   [B, S]      [A, B]      [A, C]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][B, S, C]   [A, B, C]   [A, B, C]   [A, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, S, C][B, S, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, C]      [A, S]      []          []          
[A, B, C, S][A, B, C, S][B, S]      [A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [B]         [C]         []          
[A, B, C, S][A, B, C, S][B, S, C]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [C]         [B]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->c }, { B-->a }, { B-->SC }]
S[{ S-->AS }, { S-->d }, { S-->SA }, { S-->CB }, { S-->a }, { S-->b }]
C[{ C-->d }, { C-->SB }, { C-->BB }, { C-->CS }]

word='abdbccccdb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[C]      [B]      [S, C]   []       []       []       []       []       []       []       
[B, S, C][B, C]   [S, C]   [B, S]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][C]      [B]      []       []       []       []       []       
[B, S, C][B, C, S][B, S, C][B, S]   [C]      [B]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][C]      [S]      [C]      [B]      []       []       []       
[B, S, C][B, C, S][B, S, C][B, C, S][C]      [S]      [C]      [B]      []       []       
[B, S, C][B, C, S][B, S, C][B, S, C][C]      [B]      [C]      []       [S, C]   []       
[B, C, S][B, C, S][B, C, S][B, S, C][C, S]   [B, C]   [C, S]   []       [S, C]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->b }]
S[{ S-->c }, { S-->AC }, { S-->BS }]

word='abdbccccdb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B, C]      []          []          []          []          []          []          []          []          
[S]         []          [C]         []          []          []          []          []          []          []          
[A]         [A, B]      [B]         [B, C]      []          []          []          []          []          []          
[B, S]      [S]         [S]         [S]         [C, S]      []          []          []          []          []          
[A, B, S]   [A, B, C]   [A, B, C]   [A, B]      [B]         [C, S]      []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, C, S][A, B, S]   [B, S]      [B]         [C, S]      []          []          []          
[A, B, S]   [A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [B, S]      [B]         [C, S]      []          []          
[B, S]      [S]         [S]         [S]         [S]         []          []          []          [C]         []          
[A, S]      [A, B, S, C][A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [B]         [B]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->AS }, { B-->d }, { B-->a }, { B-->CC }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->SS }]
C[{ C-->c }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->CS }, { C-->AB }]

word='abdbccccdb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[A, C]      [B, C]      [B, S]      []          []          []          []          []          []          []          
[B, C]      [C]         [C]         [A]         []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [B]         [S, C]      []          []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [B, C]      [B, S, C]   [S, C]      []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B, S, C]   [B, S, C]   [S, C]      []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, S, C][B, S, C]   [B, S, C]   [S, C]      []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [B, S]      []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [B, C]      [B]         [C]         [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->d }]
B[{ B-->b }, { B-->AB }, { B-->CB }, { B-->a }, { B-->AA }]
S[{ S-->c }, { S-->SB }, { S-->SC }]
C[{ C-->d }, { C-->SA }, { C-->SS }]

word='abcbabadca'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   []    []    []    []    []    []    
[]    []    [S]   []    [B]   []    []    []    []    []    
[]    []    [S]   []    []    [B]   []    []    []    []    
[]    []    [S]   []    []    []    [B]   []    []    []    
[]    []    [S, C][]    []    []    []    [A, C][]    []    
[]    []    [C]   []    []    []    []    []    [S]   []    
[]    []    [B, C][]    []    []    []    []    [S]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->d }]
B[{ B-->c }, { B-->CA }, { B-->a }, { B-->SS }, { B-->CC }]
S[{ S-->d }, { S-->a }, { S-->AA }, { S-->b }]
C[{ C-->BA }, { C-->b }]

word='abcbabadca'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [S, C][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [S, C][]    []    []    []    []    []    
[]    []    []    [B]   [B, S][]    []    []    []    []    
[]    []    []    []    [B]   [S, C][]    []    []    []    
[]    []    []    []    []    [B]   [B, S][]    []    []    
[]    []    []    []    []    [B, C][B, C][A, S][]    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AS }, { A-->BA }]
B[{ B-->c }, { B-->d }, { B-->CA }, { B-->a }]
S[{ S-->c }, { S-->AC }, { S-->a }, { S-->BC }]
C[{ C-->CB }, { C-->AA }, { C-->AB }]

word='abcbabadca'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [A]         []          []          []          []          []          []          []          []          
[A, S, C]   [A, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][B, C]      [A]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, S, C]   [A, C]      [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][S, C]      [C]         [A]         [B]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, C]      [A]         [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      [A]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->c }, { A-->AS }, { A-->d }]
B[{ B-->AB }, { B-->a }]
S[{ S-->d }, { S-->CA }, { S-->SC }]
C[{ C-->AC }, { C-->CB }, { C-->AA }, { C-->CS }]

word='abcbabadca'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[C, S]      [C]         [A]         []          []          []          []          []          []          []          
[A, S, C]   [S, C]      [C]         [A]         []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][B, C, S]   [B, C]      [A, B]      []          []          []          []          []          
[A, S, C]   [A, C, S]   [A, C, S]   [C, S]      [C]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [A, B]      []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C]      [A, S]      []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [C, S]      [C]         [A]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [B, C]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->c }, { A-->AS }]
B[{ B-->d }, { B-->CA }, { B-->a }]
C[{ C-->d }, { C-->a }, { C-->AB }, { C-->BC }]
S[{ S-->c }, { S-->BB }, { S-->CC }, { S-->b }]

word='abcbabadca'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [A, S]      []          []          []          []          []          []          []          
[]          []          [A]         [S]         []          []          []          []          []          []          
[B]         [A]         [C]         [A]         [B, C]      []          []          []          []          []          
[B]         [A]         []          [A]         []          [S]         []          []          []          []          
[B, C, S]   [A, C]      [A, B, C]   [C]         [B]         [A]         [B, C]      []          []          []          
[A, B, C, S][A, C, S]   [A, B, C, S][A, S]      [B, C, S]   [A, C]      [C, S]      [B, C]      []          []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, C]      [B, C, S]   [A, B, C]   [B, S]      [B]         [A, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->d }, { A-->CB }]
B[{ B-->c }, { B-->d }, { B-->BA }, { B-->AA }]
C[{ C-->c }, { C-->BB }, { C-->SS }, { C-->b }]
S[{ S-->AC }, { S-->CA }, { S-->BS }]

word='adcdcdbdca'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[A, B]      [A, B]      []          []          []          []          []          []          []          []          
[A, B, S, C][A, C, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, S]      [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, S]      [A, B]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [A, C, S]   [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->SB }, { B-->AA }, { B-->SC }]
S[{ S-->c }, { S-->AS }, { S-->d }, { S-->a }]
C[{ C-->d }, { C-->b }, { C-->BC }]

word='adcdcdbdca'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, B]      [S, C]      []          []          []          []          []          []          []          []          
[A, S]      [A]         [S]         []          []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B]      [S, C]      []          []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, S]      [A]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [A, B]      [S, C]      []          []          []          []          
[A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][A, C]      [S, C]      []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [S]         [A]         [S]         []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B]      [A, S]      [A]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->d }, { B-->CA }, { B-->CC }]
C[{ C-->c }, { C-->BA }, { C-->a }, { C-->SC }, { C-->AB }]
S[{ S-->c }, { S-->d }, { S-->CB }]

word='adcdcdbdca'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, C, S]   [B, S]      []          []          []          []          []          []          []          []          
[A, B, C]   [C]         [C, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, S]      [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [C]         [C, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C]         []          [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      []          []          [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   []          []          [C]         [C, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][C]         [C]         [A, B, C]   [A, B, C]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->AB }]
B[{ B-->c }, { B-->AC }, { B-->d }, { B-->a }]
S[{ S-->c }, { S-->d }, { S-->BB }, { S-->b }]
C[{ C-->CA }, { C-->CS }, { C-->b }]

word='adcdcdbdca'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, S][B, S][]    []    []    []    []    []    []    []    
[A]   [S]   [B, S][]    []    []    []    []    []    []    
[A]   []    [S]   [B, S][]    []    []    []    []    []    
[A]   []    []    [S]   [B, S][]    []    []    []    []    
[A]   []    []    []    [S]   [B, S][]    []    []    []    
[B]   []    []    []    []    []    [S, C][]    []    []    
[B, S][]    []    []    []    []    [C]   [B, S][]    []    
[B, S][]    []    []    []    []    [C]   [S]   [B, S][]    
[B, S][]    []    []    []    []    [C]   []    [S]   [A, B]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->c }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->d }, { B-->CC }, { B-->SC }]
C[{ C-->AB }]

word='adcdcdbdca'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A, B]   []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[B]      [A]      [C]      [A, B]   []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[A]      [A, C]   [B]      [A]      [C]      [A, B]   []       []       []       []       
[A, C]   [C]      [A]      [C]      [A]      [C]      [B]      []       []       []       
[A, B, C][A, C]   [B, C]   [A]      [C]      []       []       [A, B]   []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[]       []       []       []       []       []       []       []       []       [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->c }, { A-->AC }, { A-->d }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->CA }, { B-->a }, { B-->AA }, { B-->SS }]
C[{ C-->AS }, { C-->d }, { C-->a }, { C-->BC }]
S[{ S-->CS }]

word='dbccbdcbcb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [A, B]   []       []       []       []       []       []       []       []       
[A, B]   [B]      [A]      []       []       []       []       []       []       []       
[A, B]   [B]      [B]      [A]      []       []       []       []       []       []       
[A, B]   [B]      [B]      [B]      [A, B]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   []       []       []       []       
[A, B]   [B]      [B]      [B]      [B]      [B]      [A]      []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      [A, B]   []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      [B]      [A]      []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      [B]      [B]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->d }, { A-->CB }, { A-->SB }]
B[{ B-->c }, { B-->AA }]
S[{ S-->AS }, { S-->SA }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->c }, { C-->d }, { C-->CA }, { C-->CC }]

word='dbccbdcbcb'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[A, B, C]   [A]         [B, C]      []          []          []          []          []          []          []          
[A, S, C]   [S]         [A, C]      [B, C]      []          []          []          []          []          []          
[S]         [S]         [S]         [S]         [S]         []          []          []          []          []          
[S]         [S]         [S]         [S]         [S]         [A, C]      []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, S, C][A, S, C]   [A, S]      [A, S, C]   [B, C]      []          []          []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, S, C][A, B, S]   [A, B, C, S][A, C]      [A]         [B, C]      []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CA }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->d }, { B-->a }, { B-->CC }]
S[{ S-->c }, { S-->SB }, { S-->BB }, { S-->CS }]
C[{ C-->AS }]

word='dbccbdcbcb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    []    []    []    []    []    []    
[S]   [B]   []    [S]   []    []    []    []    []    []    
[B, S][B, S][]    [S]   [B]   []    []    []    []    []    
[B, S][B, S][]    [S]   [S]   [B]   []    []    []    []    
[B, S][B, S][]    [S]   [S]   [B]   [S]   []    []    []    
[B, S][B, S][]    [S]   [B, S][B, S][S]   [B]   []    []    
[B, S][B, S][]    [S]   [B, S][B, S][S]   [B]   [S]   []    
[B, S][B, S][]    [S]   [B, S][B, S][S]   [B, S][S]   [B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->c }]
B[{ B-->a }, { B-->SC }]
S[{ S-->d }, { S-->a }, { S-->SS }, { S-->CC }, { S-->b }]
C[{ C-->c }]

word='dbccbdcbcb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B]   [B]   [A, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, C][]    []    []    []    []    []    
[S]   [S]   [S]   []    [S]   []    []    []    []    []    
[S]   [S]   [S]   []    [S]   [S]   []    []    []    []    
[B]   [B]   [B]   []    [B]   [B]   [A, C][]    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    [B]   [A, C][]    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }]
B[{ B-->BC }, { B-->BS }, { B-->c }, { B-->a }]
S[{ S-->c }, { S-->AC }, { S-->d }, { S-->a }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->b }]
C[{ C-->d }, { C-->BA }, { C-->CS }]

word='dbccbdcbcb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, S]      []          []          []          []          []          []          []          []          
[A, S, C]   [S]         [B, S]      []          []          []          []          []          []          []          
[A, S, C]   [S]         [B, S]      [B, S]      []          []          []          []          []          []          
[A, S, C]   [S]         [B, S, C]   [B, S, C]   [A, S]      []          []          []          []          []          
[A, S, C]   [S]         [B, S, C]   [B, S, C]   [S]         [S, C]      []          []          []          []          
[A, C, S]   [S]         [A, B, S, C][A, B, S, C][S]         [A, S, C]   [B, S]      []          []          []          
[A, C, S]   [S]         [A, B, C, S][A, B, S, C][S]         [A, S, C]   [B, S, C]   [A, S]      []          []          
[A, C, S]   [S]         [A, B, C, S][A, B, C, S][S]         [A, S, C]   [A, B, S, C][S]         [B, S]      []          
[A, C, S]   [S]         [A, B, C, S][A, B, C, S][S]         [A, S, C]   [A, B, S, C][S]         [B, S, C]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }, { A-->AS }, { A-->SB }]
B[{ B-->AB }, { B-->SA }, { B-->CC }]
S[{ S-->c }, { S-->AC }, { S-->d }, { S-->SS }]
C[{ C-->c }, { C-->d }, { C-->BB }, { C-->SC }, { C-->BC }]

word='cdaddddabb'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[A, B]      [B]         [A]         []          []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, S]      [S, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B]      [B]         [A]         []          []          
[A, B, C]   [A, B]      [B]         []          []          []          []          []          [A]         []          
[]          []          []          []          []          []          []          []          []          [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->d }, { B-->CS }]
S[{ S-->BA }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->AC }, { C-->BB }, { C-->SS }]

word='cdaddddabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, B]      [S]         [A]         []          []          []          []          []          []          []          
[C]         []          []          [B]         []          []          []          []          []          []          
[A, B, S, C][S]         [C]         [C]         [B]         []          []          []          []          []          
[A, B, S, C][C, S]      [A]         [A, S]      [C]         [B]         []          []          []          []          
[A, B, S, C][A, C, S]   [A, S]      [S]         [A, S]      [C]         [B]         []          []          []          
[A, B, C, S][A, B, S, C][A, C]      [A, S, C]   [A, B]      []          [S]         [A]         []          []          
[A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][A, B, S, C][S]         [S, C]      [A]         [B, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [A, B, S, C][A, C]      [C]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->AB }]
B[{ B-->c }, { B-->AC }, { B-->d }, { B-->SS }, { B-->CC }]
S[{ S-->d }, { S-->SA }, { S-->CA }, { S-->a }]
C[{ C-->BA }, { C-->a }, { C-->CS }]

word='cdaddddabb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[]          [B, S]      []          []          []          []          []          []          []          []          
[C]         [A, B]      [S, C]      []          []          []          []          []          []          []          
[C]         [A]         [B, C]      [B, S]      []          []          []          []          []          []          
[C]         [A]         [C]         [B]         [B, S]      []          []          []          []          []          
[C]         [A]         [C]         []          [B]         [B, S]      []          []          []          []          
[C]         [A]         [C]         []          []          [B]         [B, S]      []          []          []          
[B, S, C]   [A, B, C, S][A, B, S, C][A, S, C]   [A, B, C]   [S, C]      [A, B]      [S, C]      []          []          
[B, S, C]   [A, B, C, S][A, B, S, C][A, B, C, S][B, S, C]   [A, S]      [B, C]      [S]         [A]         []          
[B, C, S]   [A, B, C, S][A, B, C, S][A, B, C, S][B, S, C]   [A, B, S]   [B, S, C]   [S]         []          [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->BS }, { A-->SA }]
B[{ B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->CS }]
C[{ C-->c }, { C-->BA }, { C-->CB }, { C-->SC }, { C-->AB }]
S[{ S-->AS }, { S-->d }, { S-->CA }]

word='cdaddddabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[C]         [B]         [B]         []          []          []          []          []          []          []          
[B, S, C]   [A]         [A]         [S]         []          []          []          []          []          []          
[A, B]      [S]         [S]         []          [S]         []          []          []          []          []          
[A, S]      []          []          []          []          [S]         []          []          []          []          
[S]         []          []          []          []          []          [S]         []          []          []          
[A, B, C]   [B, C]      [B, C]      [B]         [B]         [B]         [B]         [B]         []          []          
[A, B, C, S][A, C, S]   [A, C, S]   [C]         [C]         [C]         [C]         [C]         [A]         []          
[A, B, C, S][A, B, S, C][A, B, S, C][S]         [S]         [S]         [S]         [S]         [B]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->c }, { A-->SA }, { A-->SB }]
B[{ B-->AB }, { B-->d }, { B-->CB }, { B-->AA }]
C[{ C-->BA }, { C-->b }]
S[{ S-->AC }, { S-->CS }, { S-->BS }]

word='cdaddddabb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[S, C]      [C]         [A]         []          []          []          []          []          []          []          
[A, B]      [B]         [B]         [B]         []          []          []          []          []          []          
[B]         []          []          []          [B]         []          []          []          []          []          
[]          []          []          []          []          [B]         []          []          []          []          
[]          []          []          []          []          []          [B]         []          []          []          
[A, B, S, C][A, C]      [A, B]      [A]         [C]         [A]         [C]         [A]         []          []          
[A, S, C]   [S, C]      [A, S]      [S]         [S]         [S]         [S]         [S]         [C]         []          
[S]         [S]         [S]         []          []          []          []          []          []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->c }, { A-->SA }, { A-->BA }]
B[{ B-->BC }, { B-->SC }]
S[{ S-->d }, { S-->CA }, { S-->a }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->d }, { C-->CB }, { C-->SB }]

word='badbadcccd'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[C]   [B]   [S, C][]    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[B, C][B, C][B]   [C]   [B]   [S, C][]    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A, S][A]   []    []    []    
[A, S][A]   [A, S][A]   [A]   [A]   []    [A]   []    []    
[A]   [A]   [A]   []    []    []    []    []    [A]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   [C]   [C]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BS }]
B[{ B-->AB }, { B-->c }, { B-->d }]
S[{ S-->BB }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->c }, { C-->CB }]

word='badbadcccd'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[]          [B]         [B]         []          []          []          []          []          []          []          
[]          [A]         [A]         [S]         []          []          []          []          []          []          
[]          [A]         [A]         []          [A]         []          []          []          []          []          
[]          [B]         [B]         []          [B]         [B]         []          []          []          []          
[]          [S]         [S]         []          [S]         [S]         [B, C]      []          []          []          
[]          [A, S]      [A, S]      []          [A, S]      [A, S]      [S, C]      [B, C]      []          []          
[]          [A, B, S]   [A, B, S]   []          [A, B, S]   [A, B, S]   [A, S, C]   [S, C]      [B, C]      []          
[]          [A, B, S]   [A, B, S]   []          [A, B, S]   [A, B, S]   [A, B, S, C][A, S, C]   [S, C]      [B]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->c }]
B[{ B-->BC }, { B-->AC }]
S[{ S-->c }, { S-->CS }, { S-->b }]
C[{ C-->d }, { C-->CA }, { C-->AA }]

word='badbadcccd'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [B]      [C]      []       []       []       []       []       []       []       
[]       []       [S]      [S]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       [B]      [C]      []       []       []       []       
[]       []       []       []       [B]      [S, C]   [A, S]   []       []       []       
[]       []       []       []       [B]      [S, C]   [C]      [A, S]   []       []       
[]       []       []       []       [B]      [S, C]   [B, S, C][C]      [A, S]   []       
[]       []       []       []       [B]      [C]      [B, C]   [A]      [B]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AB }, { A-->CB }]
B[{ B-->c }, { B-->SS }]
S[{ S-->d }, { S-->a }, { S-->AA }, { S-->SC }, { S-->CS }]
C[{ C-->d }, { C-->SA }, { C-->SB }, { C-->b }]

word='badbadcccd'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[S]         [A, S]      []          []          []          []          []          []          []          []          
[A, B, S]   [B, S]      [S, C]      []          []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [S, C]      [A, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, C]      [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, S, C]   [A, C]      [A]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, C, S]   [A]         [A]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S]      []          []          []          [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }, { A-->c }]
B[{ B-->b }, { B-->c }, { B-->SA }, { B-->a }, { B-->CS }]
C[{ C-->BA }, { C-->a }, { C-->SC }]
S[{ S-->AS }, { S-->d }, { S-->BC }]

word='badbadcccd'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [B, C]      []          []          []          []          []          []          []          []          
[A, C]      [A, B]      [S]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A]         [S]         [B, C]      []          []          []          []          []          
[A, B, S, C][A, B, C, S][B, C, S]   [A, C]      [A, B]      [S]         []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, C]   [S]         [C]         [B]         [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C]   [S]         [C]         [C]         [A, B]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [S]         [C]         [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->d }, { A-->SB }]
B[{ B-->b }, { B-->AA }, { B-->BB }]
S[{ S-->c }, { S-->AC }, { S-->d }, { S-->BA }, { S-->a }]
C[{ C-->CS }, { C-->b }]

word='ccbadbadba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [A]   [B, C][]    []    []    []    []    []    []    
[]    []    [C]   [S]   []    []    []    []    []    []    
[]    []    [C]   []    [A, S][]    []    []    []    []    
[]    []    [C]   []    [A, S][B, C][]    []    []    []    
[]    []    [C]   []    [S]   [C]   [S]   []    []    []    
[]    []    [C]   []    [S]   [C]   []    [A, S][]    []    
[]    []    [C]   []    [A, S][C]   []    [A, S][B, C][]    
[]    []    [C]   []    [S]   [C]   []    [S]   [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->c }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->a }, { B-->BB }]
C[{ C-->d }, { C-->BA }, { C-->a }]
S[{ S-->c }, { S-->d }, { S-->SC }, { S-->BC }]

word='ccbadbadba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[]          [A, S]      []          []          []          []          []          []          []          []          
[B]         [B]         [B]         []          []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, C]      []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, S]      [C, S]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, C]      [A]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B]      [B, S]      [B, C]      []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, S]      [A, C, S]   [A, S]      [C, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [A]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B]      [B, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BS }, { A-->d }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->c }, { B-->CA }]
S[{ S-->a }]
C[{ C-->c }, { C-->d }, { C-->b }]

word='ccbadbadba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[A, B][A]   [B, C][]    []    []    []    []    []    []    
[A, B][A, B][A]   [S]   []    []    []    []    []    []    
[A, B][A]   []    []    [A, C][]    []    []    []    []    
[A, B][A]   []    []    [A]   [B, C][]    []    []    []    
[A, B][A, B][A]   []    [B]   [A]   [S]   []    []    []    
[A, B][A]   []    []    [A]   []    []    [A, C][]    []    
[A, B][A]   []    []    [A]   []    []    [A]   [B, C][]    
[A, B][A, B][A]   []    [B]   [A]   []    [B]   [A]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->CS }, { A-->b }, { A-->d }]
B[{ B-->BS }, { B-->BA }, { B-->CB }, { B-->SB }]
S[{ S-->CC }, { S-->b }]
C[{ C-->c }]

word='ccbadbadba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [A, S][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BS }, { A-->AC }, { A-->d }]
B[{ B-->b }, { B-->SC }]
C[{ C-->c }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->c }, { S-->d }, { S-->SA }, { S-->CB }, { S-->BB }]

word='ccbadbadba'
setV=setV
[C, S]      []          []          []          []          []          []          []          []          []          
[A, B, C]   [C, S]      []          []          []          []          []          []          []          []          
[A, C, S]   [A, B, S]   [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S]   [A]         [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A]         [C]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, C]      [A, S]      [A, B]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, C, S]   [A, B, C, S][A, S]      [A]         [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B, C, S][A, S]      [A]         [C]         [A, S]      []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      [A, S]      [A, B]      [B, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C, S]   [A, B, C, S][A, S]      [A]         [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->d }, { B-->SB }, { B-->a }]
S[{ S-->c }, { S-->AC }, { S-->SC }, { S-->b }]
C[{ C-->d }, { C-->AA }, { C-->SS }]

word='bbaadcaacb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[B, C]      [B, S]      []          []          []          []          []          []          []          []          
[B]         [B]         [A, B]      []          []          []          []          []          []          []          
[C]         [S]         [C]         [A, B]      []          []          []          []          []          []          
[B, C]      [B, S]      [A]         [S]         [B, C]      []          []          []          []          []          
[S]         [C]         [A, S]      [C]         []          [S]         []          []          []          []          
[B, C]      [B, S]      [B, C]      [B]         []          [B]         [A, B]      []          []          []          
[B, S]      [B, C]      [A, S]      [C]         []          [S]         [C]         [A, B]      []          []          
[S, C]      [S, C]      [A, S, C]   [S, C]      []          [S, C]      [C]         [A]         [S]         []          
[B, S, C]   [B, S, C]   [A, B, S, C][B, S, C]   []          [B, S, C]   [A, C]      [A, S]      [B, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->SA }]
B[{ B-->AB }, { B-->AS }, { B-->d }, { B-->CA }, { B-->a }, { B-->CC }, { B-->SC }]
S[{ S-->a }]
C[{ C-->c }, { C-->d }, { C-->SB }, { C-->b }, { C-->BS }]

word='bbaadcaacb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[C]   []    [B, S][]    []    []    []    []    []    []    
[]    [B]   [C]   [B, S][]    []    []    []    []    []    
[B]   [B]   [B, C][B, C][B, C][]    []    []    []    []    
[B]   [B]   [B, C][B, C][B]   [C]   []    []    []    []    
[B, C][B, C][B, C][B, C][C]   []    [B, S][]    []    []    
[B, C][B, C][B, C][B, C][]    [B]   [C]   [B, S][]    []    
[B]   [B]   [B, C][B]   []    [B]   [B, C][B]   [C]   []    
[B]   [B]   [B, C][B, C][B]   []    [B]   [C]   [B]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->c }, { B-->CB }]
C[{ C-->AS }, { C-->d }, { C-->SB }, { C-->a }]
S[{ S-->BS }]

word='bbaadcaacb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [B][B][B][B][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [A][A][A][A][B][B][B][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->c }, { A-->AS }, { A-->SB }]
B[{ B-->d }, { B-->a }, { B-->CS }]
S[{ S-->SA }, { S-->BA }, { S-->b }]
C[{ C-->c }, { C-->CB }, { C-->BB }]

word='bbaadcaacb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, S]      [A, S]      []          []          []          []          []          []          []          []          
[A, S]      [A]         [B]         []          []          []          []          []          []          []          
[A, S]      [A]         [C]         [B]         []          []          []          []          []          []          
[A, S]      [A]         [C]         [C]         [B]         []          []          []          []          []          
[A, S]      [A]         [B]         []          [S]         [A, C]      []          []          []          []          
[A, S]      [A]         [C]         [S]         [A]         [C]         [B]         []          []          []          
[A, S]      [A]         [S, C]      [A, S]      [A]         [C]         [C]         [B]         []          []          
[A, S]      [A, S]      [A, B, S, C][A, S, C]   [A, C]      [B]         []          [S]         [A, C]      []          
[A, S]      [A, S]      [A, B, S, C][A, B, S, C][A, B, C]   [B, C, S]   [C]         [S, C]      [A, B]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->c }, { A-->d }]
B[{ B-->b }, { B-->BC }, { B-->SA }]
S[{ S-->c }, { S-->d }, { S-->CA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->CS }, { S-->b }]
C[{ C-->CB }]

word='bbaadcaacb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    [S]   [B]   [A, S][]    []    []    []    []    
[S]   [S]   [B]   [S]   [B, S][A, S][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    [S]   [B]   [A, S][]    
[]    []    []    []    []    []    [S]   []    [S]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->CA }, { A-->SB }]
B[{ B-->BA }]
S[{ S-->c }, { S-->d }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->c }, { C-->AS }, { C-->CB }, { C-->BB }, { C-->SC }]

word='cadcbbdddd'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A, C][C]   [C]   [S, C][]    []    []    []    []    []    
[C]   []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->d }, { A-->BA }]
B[{ B-->b }, { B-->AC }, { B-->a }, { B-->CC }]
C[{ C-->c }, { C-->a }, { C-->BC }]
S[{ S-->d }, { S-->SB }, { S-->BB }]

word='cadcbbdddd'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[A]   [A]   [A, S][]    []    []    []    []    []    []    
[B, S][B, S][B]   [C]   []    []    []    []    []    []    
[A, S][A, S][A, S][]    [A, B][]    []    []    []    []    
[A, S][A, S][A, S][]    [A, S][A, B][]    []    []    []    
[A]   [A]   [A]   []    [A]   [A]   [A, S][]    []    []    
[]    []    []    []    []    []    []    [A, S][]    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    []    [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->c }, { A-->d }, { A-->BA }]
B[{ B-->CB }, { B-->SB }, { B-->a }, { B-->BB }]
S[{ S-->AS }, { S-->a }, { S-->b }]
C[{ C-->c }, { C-->AC }, { C-->d }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BS }]

word='cadcbbdddd'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      []          []          []          []          []          []          []          []          
[A, C]      [A, C]      [A, C]      []          []          []          []          []          []          []          
[C]         [C]         [C]         [A, C]      []          []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, S, C]   [S, C]      []          []          []          []          []          
[A, S, C]   [A, S, C]   [A, S, C]   [A, C, S]   [A, C]      [S, C]      []          []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [A, C]      []          []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [A, C]      []          []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [A, C]      []          
[C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [C]         [A, C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->c }, { B-->AC }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->d }, { S-->AA }, { S-->SS }]
C[{ C-->d }, { C-->BC }]

word='cadcbbdddd'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[A, B, C]   [A, C]      [S, C]      []          []          []          []          []          []          []          
[A, S]      [A]         [A, B]      [B]         []          []          []          []          []          []          
[A, B, S]   [A, S]      [A]         [A]         [B]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, S]      [A]         [A]         [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, C]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [B, S]      [S, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, S, C][B, S]      [S, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SC }, { A-->c }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->CA }]
S[{ S-->d }, { S-->a }, { S-->SS }]
C[{ C-->c }, { C-->d }, { C-->a }]

word='cadcbbdddd'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A]      [S, C]   []       []       []       []       []       []       []       []       
[A, B]   [A, S]   [S, C]   []       []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, C]   []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       [B]      [S, C]   []       []       []       
[]       []       []       []       []       [B]      [A, S]   [S, C]   []       []       
[]       []       []       []       []       [B]      [A, B, S][A, S]   [S, C]   []       
[]       []       []       []       []       [B]      [A, B, S][A, B, S][A, S]   [S, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}
