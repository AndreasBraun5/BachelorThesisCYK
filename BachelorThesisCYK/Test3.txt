

Result{
countGeneratedGrammars= 15000
countGeneratedGrammarsPerWord= 150
countDifferentWords= 100
totalTime= 5560ms
totalTime= 0min 5sec
generatorType= DICEROLLBIAS
grammarGeneratorSettingsGrammarGeneratorSettingsDiceRoll{
minValueCompoundVariablesAreAddedTo=0
minValueTerminalsAreAddedTo=1
maxValueCompoundVariablesAreAddedTo=2
maxValueTerminalsAreAddedTo=2
favouritism=[4, 2, 1, 1]
grammarProperties=GrammarProperties: {
variables= [A, B, S, C]
variableStart= S
terminals= [a, b]
GrammarPropertiesGrammarRestrictions{
sizeOfWord=10
maxNumberOfVarsPerCell=3
}
GrammarPropertiesExamConstraints{
minRightCellCombinationsForced=1
maxSumOfProductions=10
maxSumOfVarsInPyramid=100

}
}
SuccessRates{
SUCCESSRATEOVERVIEW:
			-->	SUCCESSRATE=0.043133333333333336
			-->	SUCCESSRATEPRODUCIBILITY=0.32126666666666664
			-->	SUCCESSRATEGRAMMARRESTRICTIONS=0.8748666666666667
			-->	SUCCESSRATEEXAMCONSTRAINTS=0.2144

SUCCESSRATE=0.043133333333333336
trueCount=647
falseCount=14353
SUCCESSRATEPRODUCIBILITY=0.32126666666666664
trueProducibilityCount=4819
falseProducibilityCount=10181

SuccessRatesGrammarRestrictions{
trueGrammarRestrictionsCount=13123
falseGrammarRestrictionsCount=1877
			-->	SUCCESSRATEGrammarRestrictions=0.8748666666666667
trueSizeOfWordCount=15000
falseSizeOfWordCount=0
			-->	SUCCESSRATESizeOfWord=1.0
trueMaxNumberOfVarsPerCellCount=13123
falseMaxNumberOfVarsPerCellCount=1877
			-->	SUCCESSRATEMaxNumberOfVarsPerCell=0.8748666666666667
}

SuccessRatesExamConstraints{
trueExamConstraints=3216
falseExamConstraints=11784
			-->	SUCCESSRATEExamConstraints=0.2144
trueRightCellCombinationsForcedCount=9420
falseRightCellCombinationsForcedCount=5580
			-->	SUCCESSRATERightCellCombinationsForced=0.628
trueMaxSumOfProductionsCount=6842
falseMaxSumOfProductionsCount=8158
			-->	SUCCESSRATEMaxSumOfProductions=0.45613333333333334
trueMaxSumOfVarsInPyramidCount=11839
falseMaxSumOfVarsInPyramidCount=3161
			-->	SUCCESSRATEMaxSumOfVarsInPyramid=0.7892666666666667
}
}
}



RepresentativeResultSamples{

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->CB }]
B[{ B-->a }]
S[{ S-->AS }, { S-->a }, { S-->SC }]
C[{ C-->AC }, { C-->SB }, { C-->CS }]

word='aaaabbbaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [B, S]   []       []       []       []       []       []       []       []       
[A, S, C][A, C]   [B, S]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, C]   [B, S]   []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[A, S, C][A, S, C][S, C]   [A]      [S]      [S]      [S]      [B, S]   []       []       
[A, S, C][A, S, C][A, C]   [S]      [C]      [C]      [C]      [A, C]   [B, S]   []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][A, C]   [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }]
B[{ B-->a }, { B-->SC }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->b }]
C[{ C-->AA }]

word='aaaabbbaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [B, S]   []       []       []       []       []       []       []       
[S]      [S]      [S]      [B, S]   []       []       []       []       []       []       
[]       []       []       [S]      [A, S]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, C]   [A, S]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, B, C][A, C]   [A, S]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, B, C][A, C]   [A, S]   [B, S]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, B, C][A, C]   [A, S]   [S]      [B, S]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, B, C][A, C]   [A, S]   [S]      [S]      [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AS }, { A-->BA }]
B[{ B-->b }]
C[{ C-->SB }, { C-->BB }, { C-->b }]
S[{ S-->AA }]

word='aaaabbbaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [A]   [S]   [A]   []    []    []    []    []    []    
[C]   []    [C]   []    [B, C][]    []    []    []    []    
[A]   [S]   [A]   [S]   [A, C][B, C][]    []    []    []    
[A]   [S, C][A]   [S, C][A]   [A, C][B, C][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }]
S[{ S-->SA }, { S-->a }, { S-->CC }, { S-->AB }]
C[{ C-->AS }, { C-->BB }, { C-->CS }]

word='aaaabbbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[S, C]   [A]      [S]      []       []       []       []       []       []       []       
[A, C]   [C, S]   [A]      [S]      []       []       []       []       []       []       
[S, C]   [A]      [S]      []       [B]      []       []       []       []       []       
[A, S]   [S]      []       []       [C]      [B]      []       []       []       []       
[S]      []       []       []       []       [C]      [B]      []       []       []       
[A, S]   []       []       []       []       [C]      []       [S]      []       []       
[A, S, C][]       []       []       []       [C]      []       [A]      [S]      []       
[A, S, C][C, S]   [A]      []       []       [S, C]   []       [S, C]   [A]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->b }]
C[{ C-->a }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CC }]

word='abbaaaaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[S]      [C]      [A, B]   []       []       []       []       []       []       []       
[]       [S]      [S]      [C]      []       []       []       []       []       []       
[A]      [S]      [S]      [S]      [C]      []       []       []       []       []       
[S]      [A]      [A]      []       [S]      [C]      []       []       []       []       
[S]      [A, S]   [A, S]   [A]      []       [S]      [C]      []       []       []       
[A]      [S]      [S]      [S]      [A]      []       [S]      [C]      []       []       
[A, S]   [A, S]   [A, S]   [S]      [S]      [A]      []       [S]      [C]      []       
[A, S, C][A, S, C][A, S, C][S]      [S]      [A, C]   []       [S]      []       [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }]
B[{ B-->a }]
S[{ S-->BA }, { S-->BB }, { S-->BS }]
C[{ C-->AC }, { C-->SS }, { C-->AB }]

word='abbaaaaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       [C]      [C]      [B]      []       []       []       []       []       []       
[]       []       []       [S]      [B]      []       []       []       []       []       
[S]      [A]      [A]      [S]      [S]      [B]      []       []       []       []       
[S]      [A, C]   [A, C]   [S, C]   [S]      [S]      [B]      []       []       []       
[C, S]   [A, C]   [A, C]   [S, C]   [S, C]   [S]      [S]      [B]      []       []       
[C, S]   [A, C]   [A, C]   [A, S, C][S, C]   [S, C]   [S]      [S]      [B]      []       
[A, C, S][A, C]   [A, C]   [A, S, C][A, S, C][S, C]   [S, C]   [S]      [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->BS }]
C[{ C-->SA }, { C-->BA }, { C-->AA }, { C-->SC }, { C-->b }]

word='abbaaaaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A, C][A]   [C]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[A, S][S]   [A]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->BC }, { B-->a }]
C[{ C-->b }]
S[{ S-->AS }, { S-->BA }, { S-->AA }, { S-->BB }, { S-->SC }]

word='abbaaaaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B, S]   [A, C]   []       []       []       []       []       []       []       []       
[A, B, S][S]      [A, C]   []       []       []       []       []       []       []       
[S]      []       []       [B]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [B]      []       []       []       []       []       
[]       []       []       []       [S]      [B]      []       []       []       []       
[]       []       []       []       []       [S]      [B]      []       []       []       
[]       []       []       []       []       []       [S]      [B]      []       []       
[]       []       []       []       []       []       []       [S]      [B]      []       
[A, S]   [A, S]   [A, S]   [A]      [S]      [A]      [S]      [A, S]   [B, S]   [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SA }, { B-->a }]
S[{ S-->a }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->BS }]

word='abbaaaaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][A, B][]    []    []    []    []    []    []    []    
[B, S][S]   [A, B][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CS }, { A-->CA }]
B[{ B-->BC }, { B-->a }]
C[{ C-->b }]
S[{ S-->AC }, { S-->CB }, { S-->SB }]

word='bbabbaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A]   [S]   [B]   []    []    []    []    []    []    []    
[A, S][S]   [B]   [C]   []    []    []    []    []    []    
[A, S][S]   [B]   []    [C]   []    []    []    []    []    
[A, S][A, S][]    [A]   [S]   [B]   []    []    []    []    
[A, S][A, S][]    [A]   [S]   []    [B]   []    []    []    
[A, S][A, S][]    [A, S][S]   []    [B]   [C]   []    []    
[A, S][A, S][]    [A, S][S]   []    [B]   []    [C]   []    
[A, S][A, S][]    [A, S][S]   []    [B]   []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->SS }, { S-->b }]
C[{ C-->CS }, { C-->AB }, { C-->BS }]

word='bbabbaabbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->AB }]
B[{ B-->b }, { B-->a }, { B-->CC }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->AA }]

word='bbabbaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A]   [A]   [B, S][]    []    []    []    []    []    []    
[A, S][A]   [A]   [B]   []    []    []    []    []    []    
[A, S][A, S][A]   [A]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [B, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A]   [B, S][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
C[{ C-->SA }, { C-->a }]
S[{ S-->AS }, { S-->AA }, { S-->CC }, { S-->b }, { S-->BS }]

word='aaaaabbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A]   [S]   [C]   []    []    []    []    []    []    []    
[]    [A]   [S]   [C]   []    []    []    []    []    []    
[S, C][]    [A]   [S]   [C]   []    []    []    []    []    
[]    []    [S]   []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[A, S][C, S][C]   [A]   [S]   [C]   [A]   [C]   [A]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->CA }, { B-->CB }, { B-->AA }, { B-->SS }]
C[{ C-->a }]
S[{ S-->AC }]

word='aaaaabbbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   [B]   []    []    []    
[A, B][A, B][A, B][A, B][A]   []    [A]   [B]   []    []    
[A, B][A, B][A, B][A, B][B]   [B]   []    [A]   [B]   []    
[S]   [S]   [S]   [S]   []    []    []    [S]   []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CA }]
C[{ C-->AC }, { C-->CB }, { C-->AA }, { C-->SC }, { C-->b }]
S[{ S-->SS }, { S-->CC }]

word='aaaaabbbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[B, C]   [C]      [A]      []       []       []       []       []       []       []       
[B, C, S][B, C]   [C]      [A]      []       []       []       []       []       []       
[B, S, C][B, S, C][B, C]   [C]      [A]      []       []       []       []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [C]      [C]      []       []       []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [S]      [S]      [C]      []       []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [C]      [C]      [S]      [C]      []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [S]      [S]      [C]      [S]      [C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][C]      [C]      [B, S]   [C]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BC }]

word='abaabaaaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [B, S][]    []    []    []    []    []    []    
[S]   []    [S]   [B, S][]    []    []    []    []    []    
[S]   []    [S]   [S]   [B]   []    []    []    []    []    
[S]   []    [S]   [S]   []    [B, S][]    []    []    []    
[S]   []    [S]   [S]   []    [S]   [B, S][]    []    []    
[S]   []    [S]   [S]   []    [S]   [S]   [B, S][]    []    
[S]   []    [S]   [S]   []    [S]   [S]   [S]   [B]   []    
[S]   []    [S]   [S]   []    [S]   [S]   [S]   []    [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->b }, { B-->a }]
C[{ C-->BA }, { C-->AA }, { C-->AB }, { C-->BC }]
S[{ S-->CA }, { S-->SS }]

word='abaabaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A, C][A, B][]    []    []    []    []    []    []    []    
[C]   [A, C][B]   []    []    []    []    []    []    []    
[C, S][C]   [A]   [B]   []    []    []    []    []    []    
[S, C][C, S][C]   [A, C][A, B][]    []    []    []    []    
[S, C][S, C][C]   [C]   [A, C][B]   []    []    []    []    
[S, C][S, C][C, S][C, S][C]   [A]   [B]   []    []    []    
[S, C][S, C][C, S][C, S][C, S][C]   [A]   [B]   []    []    
[S, C][S, C][C, S][C, S][C, S][C, S][C]   [A, C][A, B][]    
[S, C][S, C][C, S][C, S][C, S][C, S][C]   [C]   [A, C][B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BA }]
B[{ B-->BS }, { B-->CA }, { B-->a }, { B-->CS }]
S[{ S-->SB }, { S-->AB }]
C[{ C-->BC }]

word='abaabaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[B, S]   [S]      [B]      []       []       []       []       []       []       []       
[A, B, S][S]      [A]      [B]      []       []       []       []       []       []       
[A]      []       [A]      [A]      [A]      []       []       []       []       []       
[A, B, S][S]      [A, B, S][B, S]   [S]      [B]      []       []       []       []       
[A, B, S][S]      [A, B, S][A, B, S][S]      [A]      [B]      []       []       []       
[A, B, S][S]      [A, B, S][A, B, S][S]      [A, S]   [A]      [B]      []       []       
[A]      []       [A]      [A]      []       [A]      [A]      [A]      [A]      []       
[A, B, S][S]      [A, B, S][A, B, S][S]      [A, B, S][A, B, S][B, S]   [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->b }, { B-->AC }]
S[{ S-->a }, { S-->AA }, { S-->SC }]
C[{ C-->CA }, { C-->a }, { C-->BB }, { C-->b }]

word='abaabaaaba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   []    [S, C][]    []    []    []    []    []    []    
[S]   []    [S]   [S, C][]    []    []    []    []    []    
[S]   []    [S]   [S]   [B, C][]    []    []    []    []    
[S]   []    [S]   [S]   []    [S, C][]    []    []    []    
[S]   []    [S]   [S]   []    [S]   [S, C][]    []    []    
[S]   []    [S]   [S]   []    [S]   [S]   [S, C][]    []    
[S]   []    [S]   [S]   []    [S]   [S]   [S]   [B, C][]    
[S]   []    [S]   [S]   []    [S]   [S]   [S]   []    [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AS }]
S[{ S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->CS }]

word='bbbbbbbabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A, B]   [S]      [A]      []       []       []       []       []       []       []       
[S]      [A, B]   [S]      [A]      []       []       []       []       []       []       
[A, B, S][S]      [A, B]   [S]      [A]      []       []       []       []       []       
[A, B, S][A, B, S][S]      [A, B]   [S]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][S]      [A, B]   [S]      [A]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [B]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B]   [S]      [A]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [A, B]   [S]      [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
C[{ C-->AC }, { C-->CB }, { C-->a }]
S[{ S-->BA }, { S-->AA }, { S-->SC }, { S-->b }]

word='bbbbbbbabb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    [S]   [A, S][]    []    []    []    []    []    []    
[]    []    [S]   [A, S][]    []    []    []    []    []    
[]    []    []    [S]   [A, S][]    []    []    []    []    
[]    []    []    []    [S]   [A, S][]    []    []    []    
[]    []    []    []    []    [S]   [A, S][]    []    []    
[C, S][S, C][C, S][C, S][C, S][C, S][C, S][C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->SC }, { C-->b }]
S[{ S-->AS }, { S-->AB }, { S-->BC }]

word='bbbbbbbabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[C]   [S]   [B, C][]    []    []    []    []    []    []    
[S]   [C]   [S]   [B, C][]    []    []    []    []    []    
[C]   [S]   [C]   [S]   [B, C][]    []    []    []    []    
[S]   [C]   [S]   [C]   [S]   [B, C][]    []    []    []    
[C]   [S]   [C]   [S]   [C]   [S]   [B, C][]    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][C, S][A, C][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C, S][B, C][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->b }, { B-->a }]
C[{ C-->b }]
S[{ S-->AS }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BC }]

word='bbbbbbbabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[A, S][S]   [B, C][]    []    []    []    []    []    []    
[A, S][A, S][S]   [B, C][]    []    []    []    []    []    
[A, S][A, S][A, S][S]   [B, C][]    []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [B, C][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [B, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    [B]   []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [S]   [B, C][]    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [A]   [S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SS }]
S[{ S-->AS }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->AA }, { C-->SC }, { C-->b }, { C-->BS }]

word='bbbbbbbabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B, C][S, C][]    []    []    []    []    []    []    []    
[C]   [B, C][S, C][]    []    []    []    []    []    []    
[C, S][C]   [B, C][S, C][]    []    []    []    []    []    
[B, C][S, C][C]   [B, C][S, C][]    []    []    []    []    
[C]   [B, C][C, S][C]   [B, C][S, C][]    []    []    []    
[C, S][C]   [B, C][C, S][C]   [B, C][S, C][]    []    []    
[B, C][S, C][C]   [B, C][C, S][C]   [B]   [S]   []    []    
[C]   [B, C][C, S][C]   [B, C][C, S][C]   [B, C][S, C][]    
[C, S][C]   [B, C][C, S][C]   [B, C][C, S][C]   [B, C][S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }]
C[{ C-->SB }, { C-->b }]
S[{ S-->BA }, { S-->AA }, { S-->BB }, { S-->SC }]

word='baabbbaabb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A]   [S]   [A]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [A, C][]    []    []    []    []    []    
[A, S][S]   [S]   [S]   [A, C][]    []    []    []    []    
[A, S][S]   [S]   [A, S][S]   [A, C][]    []    []    []    
[S]   []    []    [S]   [A]   [S]   [A]   []    []    []    
[S]   []    [S]   [A]   [S]   [A]   [S]   [A]   []    []    
[S]   []    [S]   [A, S][A, S][A, S][S]   [S]   [A, C][]    
[S]   []    [S]   [A, S][A, S][A, S][S]   [S]   [S]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
B[{ B-->CA }, { B-->CB }]
C[{ C-->a }, { C-->SS }, { C-->AB }]
S[{ S-->BA }, { S-->a }, { S-->SC }]

word='baabbbaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [C, S]   []       []       []       []       []       []       []       []       
[]       [C, S]   [C, S]   []       []       []       []       []       []       []       
[C]      [B]      [B]      [A]      []       []       []       []       []       []       
[B, C]   [B, S, C][B, S]   [A]      [A]      []       []       []       []       []       
[B, S, C][B, S, C][B, S]   [A]      [A]      [A]      []       []       []       []       
[C, S]   [C, S]   [C, S]   []       []       []       [C, S]   []       []       []       
[C, S]   [C, S]   [C, S]   []       []       []       [C, S]   [C, S]   []       []       
[B, C]   [B, S, C][B, S]   [C]      [C]      [C]      [B]      [B]      [A]      []       
[B, C, S][B, C, S][B, S, C][B, C]   [B, C]   [B, C]   [B, C, S][B, S]   [A]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
S[{ S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }]
C[{ C-->a }, { C-->b }]

word='baabbbaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[S]   [A, S][S, C][]    []    []    []    []    []    []    
[A, S][A, S][A]   [C]   []    []    []    []    []    []    
[A, S][A]   []    []    [C]   []    []    []    []    []    
[A]   []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [S, C][]    []    []    
[S]   []    []    []    []    [S]   [A, S][S, C][]    []    
[A, S][S]   []    []    [S]   [A, S][A, S][A]   [C]   []    
[A, S][A, S][S]   [S]   [A, S][A, S][A]   []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AC }, { B-->AS }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->b }]
S[{ S-->CA }, { S-->CB }, { S-->AB }]

word='baabbbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[B, S, C][B, S]   [A, C]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B]      [C]      []       []       []       []       []       []       
[B, S]   [B]      []       []       [C]      []       []       []       []       []       
[B]      []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       [S]      [A, C]   []       []       []       
[B]      []       []       []       [S]      [B, S, C][B, S]   [A, C]   []       []       
[]       [S]      [B]      [S]      [B, S]   [B, S]   [B, S]   [B]      [C]      []       
[S]      [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      []       []       [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SB }]
B[{ B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->SS }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->b }]

word='baabbbaabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[]    [A]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [B]   []    []    []    
[]    []    []    []    []    []    [A]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->b }, { A-->SA }]
B[{ B-->AS }, { B-->a }]
S[{ S-->CA }, { S-->BA }, { S-->b }]

word='abababaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[A]      [B]      [S]      [A, S]   []       []       []       []       []       []       
[S]      [A]      []       []       [B]      []       []       []       []       []       
[A, B, S][A, B]   [A]      [B]      [S]      [A, S]   []       []       []       []       
[A, S]   [A, B]   [S]      [A]      []       []       [B]      []       []       []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A]      [A]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B]      [B]      [S]      [A, S]   []       
[A, B, S][A, B, S][A, S]   [A, B, S][A, S]   [A]      [A]      []       []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->SA }]
S[{ S-->AC }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->BA }, { C-->CC }, { C-->SC }]

word='abababaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }]
B[{ B-->SA }, { B-->a }]
C[{ C-->CB }, { C-->CS }, { C-->BC }]
S[{ S-->CC }, { S-->AB }]

word='abababaaba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A, B]   []       []       []       []       []       []       []       
[S]      [B]      []       [A]      []       []       []       []       []       []       
[B]      [A]      []       [S]      [A, B]   []       []       []       []       []       
[]       []       [S]      [B]      []       [A]      []       []       []       []       
[S]      [B, S]   [B]      [A]      []       [S]      [A, B]   []       []       []       
[A, B, S][A, B, S][A]      [S]      [S]      [B]      [S]      [A, B]   []       []       
[B, S]   [A, B]   [S]      [A, B, S][B]      [S]      [B]      []       [A]      []       
[A, B, S][A, B, S][B, S]   [A, B, S][A, S]   [B]      [A]      []       [S]      [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->a }, { B-->SC }, { B-->CS }]
C[{ C-->AA }]
S[{ S-->SS }, { S-->AB }, { S-->BS }]

word='abababaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[S][S][B][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[S][S][S][S][B][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[S][S][S][S][S][S][B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [A][] 
[S][S][S][S][S][S][S][S][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->a }, { S-->SS }, { S-->CS }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->AA }, { C-->BC }]

word='abababaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[C]   []    [C]   [A]   []    []    []    []    []    []    
[S]   [C]   [S]   [C]   [S]   []    []    []    []    []    
[C]   []    [C]   []    [C]   [A]   []    []    []    []    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   []    []    []    
[S]   [S, C][S]   [C, S][S]   [C, S][S]   [S]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   []    
[S]   [S, C][S]   [C, S][S]   [C, S][S]   [S]   [C]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->BC }, { A-->BS }, { A-->SB }]
B[{ B-->a }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->AA }]

word='bbbbaaabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A]   []    [B, S][]    []    []    []    []    
[A, S][A, S][S]   [S]   [A]   [B, S][]    []    []    []    
[A, S][A, S][A, S][A]   [S]   [A]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   []    [B, S][]    
[S]   [S]   [S]   [S]   [A, S][A, S][S]   []    [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->BA }]
C[{ C-->SB }, { C-->AA }, { C-->SC }]
S[{ S-->AS }, { S-->CC }]

word='bbbbaaabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[S]   []    [C]   [A]   []    []    []    []    []    []    
[S]   [S]   []    [C]   [A]   []    []    []    []    []    
[C, S][S]   [S]   []    [C]   [A]   []    []    []    []    
[C, S][C, S][S]   [S]   []    [C]   [A]   []    []    []    
[C, S][C, S][S, C][S]   [S]   []    [C]   [A]   []    []    
[C, S][S, C][S, C][S, C][S]   [S]   []    [C]   [A]   []    
[C, S][S, C][S, C][S, C][S, C][S]   [S]   []    [C]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }, { A-->BA }]
B[{ B-->CS }]
C[{ C-->a }]
S[{ S-->SS }, { S-->SC }, { S-->b }, { S-->BS }]

word='bbbbaaabab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, S]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      [A, C]   []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      []       [A, C]   []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      []       []       [A, C]   []       []       []       
[A, S]   [A, S]   [A, S]   [S]      []       []       [A, B]   [A, S]   []       []       
[A, S]   [A, S]   [A, S]   [S]      []       []       [A, B]   [S]      [A, C]   []       
[A, S]   [A, S]   [A, S]   [S]      []       [A, B]   [A, B, S][S]      [A, B]   [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SC }]
C[{ C-->a }, { C-->b }]
S[{ S-->BA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->BC }]

word='bbbbaaabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[B][S][C][] [] [] [] [] [] [] 
[S][B][S][C][] [] [] [] [] [] 
[B][S][B][S][C][] [] [] [] [] 
[S][B][S][B][S][C][] [] [] [] 
[B][S][B][S][B][S][C][] [] [] 
[S][B][S][B][S][B][S][C][] [] 
[B][S][B][S][B][S][B][S][C][] 
[S][B][S][B][S][B][S][B][S][C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }]
S[{ S-->CB }, { S-->SB }, { S-->CC }, { S-->SC }, { S-->BS }]
C[{ C-->AA }, { C-->BB }]

word='bbbbaaabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   [C]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [C]   [B]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[S, C][S, C][S, C][C]   [C]   [A]   []    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[]    []    []    []    []    [S]   []    [B]   []    []    
[S]   [S]   [S]   [S]   [S]   []    [C]   [A]   [A]   []    
[S]   [S]   [S]   [S]   [S]   []    [S]   []    []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->a }]
S[{ S-->CA }, { S-->b }]
C[{ C-->BA }, { C-->BB }, { C-->SS }, { C-->BS }]

word='bbabbbbaab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[C]      [A, S]   []       []       []       []       []       []       []       []       
[S]      [A]      [A, B]   []       []       []       []       []       []       []       
[C]      []       [C]      [A, S]   []       []       []       []       []       []       
[S]      [C]      [S]      [C]      [A, S]   []       []       []       []       []       
[C]      [S]      [C]      [S]      [C]      [A, S]   []       []       []       []       
[S]      [C]      [S]      [C]      [S]      [C]      [A, S]   []       []       []       
[A, C, S][S, C]   [A, C, S][C, S]   [A, C, S][S]      [A]      [A, B]   []       []       
[A, C, S][A, S, C][A, C, S][A, C, S][A, S]   [A]      []       [C]      [A, B]   []       
[C, S]   [S, C]   [C, S]   [S, C]   [C]      []       [C]      [S]      [C]      [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BC }, { B-->AS }, { B-->SB }, { B-->SS }]
S[{ S-->AA }, { S-->AB }, { S-->BS }]

word='bbabbbbaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[B]   [S]   [A]   []    []    []    []    []    []    []    
[B, S][B]   [S]   [A]   []    []    []    []    []    []    
[B, S][B, S][B]   [S]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [A]   []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [S]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   [A]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->b }]
B[{ B-->b }]
C[{ C-->CA }, { C-->a }, { C-->BS }]
S[{ S-->CB }, { S-->a }, { S-->SS }]

word='bbabbbbaab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A]      [A, B]   []       []       []       []       []       []       []       []       
[]       [C]      [C, S]   []       []       []       []       []       []       []       
[C]      [C, S]   [C, S]   [A, B]   []       []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [A]      [A, B]   []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [A]      [A]      [A, B]   []       []       []       []       
[C, S]   [C, S]   [C, S]   [A]      [A]      [A]      [A, B]   []       []       []       
[A, S, C][A, S, C][A, S]   []       []       []       [C]      [C, S]   []       []       
[A, C, S][A, C, S][A, C, S][A]      [A]      [A]      [A, C]   [A, S]   [C, S]   []       
[A, C, S][A, C, S][A, C, S][A]      [A]      [A, C]   [A, C, S][A, S]   [C, S]   [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->b }, { B-->SS }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->BB }]

word='bbabbbbaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[B, S][B]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [S]   []    []    [S]   [B]   []    []    []    []    
[B]   [S]   [B]   [B]   []    [S]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][B]   [S]   [S]   [A]   []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   []    [A]   []    
[B, S][B, S][S]   [S]   [S]   []    []    []    []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AB }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->b }]
C[{ C-->b }, { C-->BC }]

word='bbabbbbaab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][A]   [S, C][]    []    []    []    []    []    
[A, S][A, S][S]   [A]   [S, C][]    []    []    []    []    
[A, S][A, S][A]   [S]   [A]   [S, C][]    []    []    []    
[A, S][A, S][S]   [A]   [S]   [A]   [S, C][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->a }]
C[{ C-->AC }, { C-->BA }, { C-->BB }, { C-->AB }, { C-->BC }]
S[{ S-->CC }]

word='abaabaaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[C]   [C]   [A, B][]    []    []    []    []    []    []    
[C, S][C]   [C]   [A, B][]    []    []    []    []    []    
[S, C][S, C][C]   [C]   [B]   []    []    []    []    []    
[S, C][S, C][C, S][C]   [C]   [A, B][]    []    []    []    
[S, C][S, C][C, S][C, S][C]   [C]   [A, B][]    []    []    
[S, C][S, C][C, S][C, S][C, S][C]   [C]   [A, B][]    []    
[S, C][S, C][C, S][C, S][C, S][C, S][C]   [C]   [A, B][]    
[S, C][S, C][C, S][C, S][C, S][C, S][C, S][C]   [C]   [A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->CA }]
B[{ B-->a }]
C[{ C-->a }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->SS }, { S-->CC }]

word='abaabaaaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    [S]   [B, C][]    []    []    []    []    []    []    
[S]   []    [S]   [B, C][]    []    []    []    []    []    
[]    [S]   []    [S]   [C]   []    []    []    []    []    
[S]   []    [S]   []    [S]   [B, C][]    []    []    []    
[]    [S]   []    [S]   []    [S]   [B, C][]    []    []    
[S]   []    [S]   []    [S]   []    [S]   [B, C][]    []    
[]    [S]   []    [S]   []    [S]   []    [S]   [B, C][]    
[S]   []    [S]   []    [S]   []    [S]   []    [S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->BS }, { A-->AC }, { A-->CB }]
S[{ S-->a }, { S-->AA }]
C[{ C-->BA }, { C-->SB }, { C-->b }]

word='abaabaaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [A]   [S]   []    []    []    []    []    []    []    
[]    []    [A]   [S]   []    []    []    []    []    []    
[]    []    [A]   []    [C]   []    []    []    []    []    
[]    [A]   [S]   []    [A]   [S]   []    []    []    []    
[]    [A]   [A, S][]    []    [A]   [S]   []    []    []    
[A]   [S]   [A]   [A]   [S]   []    [A]   [S]   []    []    
[A]   [A, S][S]   []    [A]   [S]   []    [A]   [S]   []    
[S]   [A]   [A, S][S]   []    [A]   [S]   []    [A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SB }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }]
C[{ C-->b }, { C-->AB }]

word='abaabaaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [A]   [A]   [S]   []    []    []    []    []    []    
[A]   [S]   [S]   []    [C]   []    []    []    []    []    
[A, S][A, S][A, S][A]   [S]   [S]   []    []    []    []    
[A, S][A, S][A, S][S]   [A]   [A]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][S]   [S]   [A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BS }, { B-->CB }, { B-->a }]
C[{ C-->SA }, { C-->a }]
S[{ S-->AS }, { S-->BA }, { S-->BB }, { S-->AB }]

word='abaabaaaaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[B]      [S]      [B, C]   []       []       []       []       []       []       []       
[B, S]   [S]      [B, S]   [B, C]   []       []       []       []       []       []       
[B, C, S][C, S]   [B, C, S][S]      [A]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [S]      [B, C]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [B, S]   [B, C]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [B, S]   [B, S]   [B, C]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [B, S]   [B, S]   [B, S]   [B, C]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [B, S]   [B, S]   [B, S]   [B, S]   [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->BA }]
S[{ S-->AS }, { S-->SS }, { S-->SC }, { S-->b }]
C[{ C-->SA }, { C-->AA }, { C-->BB }]

word='babbbaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [A]   []    []    []    []    
[S, C][S, C][S, C][S, C][S]   [C]   [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[S, C][S, C][S, C][S, C][S, C][C]   [C]   [C]   [A]   []    
[S, C][S, C][S, C][S, C][S, C][S]   [S]   [S]   [C]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->b }]
B[{ B-->AA }]
S[{ S-->CB }, { S-->AB }]
C[{ C-->SA }, { C-->SB }, { C-->CC }]

word='babbbaabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[S]      [B]      [A]      []       []       []       []       []       []       []       
[C]      [S]      [B]      [A]      []       []       []       []       []       []       
[C]      [C]      [S]      [B]      [A]      []       []       []       []       []       
[S]      [C]      [C]      [S]      [B]      [A]      []       []       []       []       
[A, S, C][S]      [C]      [C]      [S]      [B]      [A]      []       []       []       
[A, B, C][A, S, C][S]      [C]      [C]      [S]      [B]      [A]      []       []       
[B, C, S][A, B, C][A, S, C][S]      [C]      [C]      [S]      [B]      [A]      []       
[A, C, S][B, C, S][A, B, C][A, S, C][S]      [C]      [C]      [S]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->BA }]
C[{ C-->AS }]

word='babbbaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [B]   [B]   []    []    []    []    []    []    
[]    []    [B]   [B]   [B]   []    []    []    []    []    
[B]   [C]   [S]   [S]   [S]   [A]   []    []    []    []    
[S]   []    [B]   [B]   [B]   []    [A]   []    []    []    
[]    []    [B]   [B]   [B]   []    []    [B]   []    []    
[B]   [C]   [B, S][B, S][B, S][]    [C]   [S]   [A]   []    
[B, S][C]   [B, S][B, S][B, S][]    []    [B]   []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }, { A-->CB }]
B[{ B-->b }]
C[{ C-->a }, { C-->SS }, { C-->SC }, { C-->BC }]
S[{ S-->AC }, { S-->b }]

word='babbbaabaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [C]      []       []       []       []       []       []       []       []       
[A]      [A]      [B, S]   []       []       []       []       []       []       []       
[]       []       [C]      [B, S]   []       []       []       []       []       []       
[A, S, C][A, S]   [A, C]   [C]      [B, S]   []       []       []       []       []       
[S, C]   [S, C]   [C, S]   [C]      [C]      [C]      []       []       []       []       
[C]      [C]      [C]      []       []       []       [C]      []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [B, S]   []       []       
[S, C]   [S, C]   [C, S]   [C, S]   [C, S]   [S]      [S]      [C]      [C]      []       
[S, C]   [S, C]   [C, S]   [C]      [C]      [C]      [C]      []       []       [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SB }]
C[{ C-->CB }, { C-->b }]
S[{ S-->SA }, { S-->BA }, { S-->CS }, { S-->AB }]

word='babbbaabaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[B, S]   [S]      [B, C]   []       []       []       []       []       []       []       
[B, C]   [B]      [C]      [B, C]   []       []       []       []       []       []       
[C]      []       [C]      [C]      [B, C]   []       []       []       []       []       
[S]      []       [S]      [S]      [S]      [A]      []       []       []       []       
[S]      []       [S]      [S]      [S]      []       [A]      []       []       []       
[B, C, S][B, S]   [B, C]   [B, C]   [B]      []       [S]      [B, C]   []       []       
[S]      [S]      [S]      [S]      [S]      []       [S]      [S]      [A]      []       
[S]      [S]      [S]      [S]      [S]      []       [S]      [S]      []       [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->SA }]
S[{ S-->BA }, { S-->SB }, { S-->b }]
C[{ C-->CC }]

word='bbababbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [B]   [A]   []    []    []    []    []    []    []    
[S]   [B]   [A]   [S]   []    []    []    []    []    []    
[B, S][S]   []    [B]   [A]   []    []    []    []    []    
[B, S][S]   []    [B]   [A]   [S]   []    []    []    []    
[B, S][S]   []    [B]   [A]   []    [S]   []    []    []    
[B, S][S]   []    [B]   [A]   []    []    [S]   []    []    
[B, S][S]   []    [B]   [A]   []    []    []    [S]   []    
[B, S][S]   []    [B]   [A]   []    []    []    []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->a }, { S-->BB }]

word='bbababbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[]       [B]      [A, S]   []       []       []       []       []       []       []       
[S]      [B]      [A, B]   [A]      []       []       []       []       []       []       
[A, S]   [S]      [B]      [B]      [A, S]   []       []       []       []       []       
[A, B, S][A, S]   [B, S]   [B]      [A, B]   [A]      []       []       []       []       
[A, B]   [A, B, S][A, S]   [S]      [B]      [B]      [A]      []       []       []       
[B, S]   [A, B]   [A, B, S][A, S]   [S]      []       [B]      [A]      []       []       
[A, S]   [B, S]   [A, B]   [A, B]   [A, S]   [S]      []       [B]      [A]      []       
[A, B, S][A, S]   [B, S]   [B]      [A, B]   [A]      [S]      []       [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->a }, { B-->CC }]
S[{ S-->BB }, { S-->SS }, { S-->CS }]

word='bbababbbbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[]    [S]   [A, B][]    []    []    []    []    []    []    
[S]   []    [S]   [B]   []    []    []    []    []    []    
[]    [S]   [A]   [S]   [A, B][]    []    []    []    []    
[S]   []    [S]   []    [S]   [B]   []    []    []    []    
[]    [S]   [A]   [S]   [A]   [S]   [B]   []    []    []    
[S]   []    [S]   []    [S]   []    [S]   [B]   []    []    
[]    [S]   [A]   [S]   [A]   [S]   []    [S]   [B]   []    
[S]   []    [S]   []    [S]   []    [S]   []    [S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }, { B-->SA }]
S[{ S-->CB }, { S-->SS }, { S-->SC }, { S-->b }]
C[{ C-->SB }, { C-->CC }]

word='bbababbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[B, C][B]   [A]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[S]   []    []    [B]   [A]   []    []    []    []    []    
[S]   []    []    []    []    [S]   []    []    []    []    
[S]   []    []    []    []    [S]   [S]   []    []    []    
[S]   []    []    []    []    [S]   [S]   [S]   []    []    
[S]   []    []    []    []    [S]   [S]   [S]   [S]   []    
[S]   []    []    []    []    [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->BB }]
S[{ S-->AC }, { S-->SS }, { S-->SC }, { S-->b }, { S-->BC }]

word='bbababbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [B, C][]    []    []    []    []    []    []    
[S]   [S]   []    [S]   []    []    []    []    []    []    
[S]   [S]   []    [S]   [B, C][]    []    []    []    []    
[S]   [S]   []    [S]   []    [S]   []    []    []    []    
[S]   [S]   []    [S]   []    [S]   [S]   []    []    []    
[S]   [S]   []    [S]   []    [S]   [S]   [S]   []    []    
[S]   [S]   []    [S]   []    [S]   [S]   [S]   [S]   []    
[S]   [S]   []    [S]   []    [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }]
B[{ B-->b }, { B-->a }]
C[{ C-->SA }, { C-->BA }, { C-->BC }]
S[{ S-->AA }, { S-->BB }, { S-->SC }]

word='abbaaabbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C, S]   [A, B]   []       []       []       []       []       []       []       []       
[C]      [C, S]   [A, B]   []       []       []       []       []       []       []       
[A]      []       [S]      [B]      []       []       []       []       []       []       
[A, C]   [A]      []       [S]      [B]      []       []       []       []       []       
[]       []       []       []       [S]      [B]      []       []       []       []       
[A, C, S][A, S, C][C, S]   [C, S]   [C]      [C, S]   [A, B]   []       []       []       
[A, C, S][A, S, C][C, S]   [C, S]   [C, S]   [C]      [C, S]   [A, B]   []       []       
[A, S, C][A, C, S][A, C, S][A, C]   [A, C]   [A]      []       [S]      [B]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      [C, S]   [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->b }]
C[{ C-->b }]
S[{ S-->AC }, { S-->SA }]

word='abbaaabbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][B, C][]    []    []    []    []    []    []    []    
[A, S][]    [B, C][]    []    []    []    []    []    []    
[S]   [A]   [A]   [A]   []    []    []    []    []    []    
[S]   []    []    []    [A]   []    []    []    []    []    
[S]   []    []    []    []    [A]   []    []    []    []    
[A, S][]    []    []    [A]   [A, S][B, C][]    []    []    
[A, S][A]   [A]   [A]   [A, S][A, S][]    [B, C][]    []    
[S]   [A]   [A]   [A]   [A, S][S]   [A]   [A]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AB }, { A-->SA }]
B[{ B-->AC }, { B-->AS }, { B-->a }]
C[{ C-->CA }, { C-->CC }, { C-->b }]
S[{ S-->BB }]

word='abbaaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [C]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    [A, C][A]   [S]   [B]   []    []    []    []    []    
[]    [A, C][A]   []    [S]   [B]   []    []    []    []    
[S]   [B, C][B]   []    []    []    [C]   []    []    []    
[S]   [B, C][B]   []    []    []    [C]   [C]   []    []    
[]    [A, S][S]   []    []    []    []    []    [B]   []    
[S]   [B]   []    []    []    []    []    []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->SB }]
S[{ S-->a }, { S-->AA }, { S-->b }]
C[{ C-->AS }, { C-->b }]

word='abbaaabbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[C]   [A]   [S, C][]    []    []    []    []    []    []    
[A]   [C]   []    [S]   []    []    []    []    []    []    
[C]   []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [A]   [S, C][]    []    []    
[S]   []    []    []    [A]   [C]   [A]   [S, C][]    []    
[]    [S]   []    [A]   [C]   [A]   [C]   []    [S]   []    
[S, C][A]   [A]   [C]   [A, S][C]   [S]   []    [A]   [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->AC }, { B-->AS }, { B-->a }]
C[{ C-->b }]
S[{ S-->SA }, { S-->CC }, { S-->SC }, { S-->BC }]

word='abbaaabbab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[B, S]   [S]      [C]      []       []       []       []       []       []       []       
[B, S]   [S]      []       [A, B]   []       []       []       []       []       []       
[B, S]   [S]      []       [A]      [A, B]   []       []       []       []       []       
[B, S]   [S]      []       [A]      [A]      [A, B]   []       []       []       []       
[B, S]   [S]      []       [A, B]   [A, B]   [B, S]   [C]      []       []       []       
[B, S]   [S]      []       [A, B, S][A, B, S][B, S]   [S]      [C]      []       []       
[B, S]   [S]      []       [A, B, S][A, B, S][B, S]   [S]      []       [A, B]   []       
[B, S]   [S]      []       [A, B, S][A, B, S][B, S]   [S]      []       [B, S]   [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->AB }, { A-->CB }, { A-->SB }]
B[{ B-->BC }, { B-->BA }, { B-->a }]
C[{ C-->b }]
S[{ S-->AA }]

word='baaaaaabaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A]   []    [B]   []    []    []    []    []    []    []    
[A]   []    []    [B]   []    []    []    []    []    []    
[A]   []    []    []    [B]   []    []    []    []    []    
[A]   []    []    []    []    [B]   []    []    []    []    
[A]   []    []    []    []    []    [B]   []    []    []    
[A]   []    []    []    []    []    [B]   [C]   []    []    
[A, S][]    []    []    []    []    [B]   [A]   [B]   []    
[A, S][]    []    []    []    []    [B]   [A]   []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }]
B[{ B-->b }]
C[{ C-->a }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->SS }, { S-->b }]

word='baaaaaabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   [A]   [A, C][]    []    []    []    []    []    []    
[S]   [A]   [A]   [A, C][]    []    []    []    []    []    
[S]   [A]   [A]   [A]   [A, C][]    []    []    []    []    
[S]   [A]   [A]   [A]   [A]   [A, C][]    []    []    []    
[S]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }]
B[{ B-->b }, { B-->SC }]
C[{ C-->a }, { C-->AA }, { C-->b }]
S[{ S-->AC }, { S-->CB }, { S-->CS }]

word='baaaaaabaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    [C]   []    
[B, S][B, S][B, S][B, S][B, S][B]   []    []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CA }, { B-->BB }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->SS }, { S-->b }, { S-->BC }, { S-->BS }]

word='baaaaaabaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[S][] [A][] [] [] [] [] [] [] 
[S][] [] [A][] [] [] [] [] [] 
[S][] [] [] [A][] [] [] [] [] 
[S][] [] [] [] [A][] [] [] [] 
[S][] [] [] [] [] [A][] [] [] 
[S][] [] [] [] [] [] [S][] [] 
[S][] [] [] [] [] [] [S][A][] 
[S][] [] [] [] [] [] [S][] [A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->AC }, { B-->a }, { B-->CC }]
S[{ S-->AA }, { S-->SC }]

word='baaaaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[A]   [S]   [A, B][]    []    []    []    []    []    []    
[S]   [A]   [S]   [A, B][]    []    []    []    []    []    
[A]   [S]   [A]   [S]   [A, B][]    []    []    []    []    
[S]   [A]   [S]   [A]   [S]   [A, B][]    []    []    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A, B][]    []    []    
[S]   []    [S]   []    [S]   []    [S]   [A]   []    []    
[A]   [S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, B][]    
[S]   [A]   [S]   [A]   [S]   [A]   [S]   [A]   [S]   [A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->b }, { B-->AS }]
C[{ C-->a }, { C-->SC }]
S[{ S-->AC }, { S-->SA }, { S-->AA }, { S-->BS }]

word='bbbbbaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       []       []       [A, C]   []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [A, C]   []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [A]      [B]      []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [S, C]   [B, C, S][S]      []       [A, C]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, B, S][S]      []       [A]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }]
B[{ B-->b }, { B-->BS }, { B-->SB }, { B-->a }]
S[{ S-->BA }, { S-->BB }, { S-->CC }]
C[{ C-->CA }, { C-->CB }]

word='bbbbbaabab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[S][B][S][B][S][B][] [] [] [] 
[B][S][B][S][B][S][B][] [] [] 
[S][B][S][B][S][B][S][B][] [] 
[B][S][B][S][B][S][B][S][B][] 
[S][B][S][B][S][B][S][B][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }, { A-->SB }]
C[{ C-->BA }]
S[{ S-->AA }, { S-->BB }, { S-->CS }, { S-->BC }, { S-->BS }]

word='bbbbbaabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][S][A][] [] [] [] [] [] 
[A][S][A][S][A][] [] [] [] [] 
[S][A][S][A][S][A][] [] [] [] 
[A][S][A][S][A][S][A][] [] [] 
[S][A][S][A][S][A][S][A][] [] 
[A][S][A][S][A][S][A][S][A][] 
[S][A][S][A][S][A][S][A][S][A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
C[{ C-->AC }, { C-->a }, { C-->AB }]
S[{ S-->BB }, { S-->SS }, { S-->CS }, { S-->b }]

word='bbbbbaabab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[] [] [] [] [] [] [] [] [C][] 
[S][S][S][S][S][S][S][S][S][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->AS }, { B-->CB }, { B-->a }]
S[{ S-->BA }, { S-->SS }]
C[{ C-->AC }, { C-->AB }]

word='bbbbbaabab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S, C]   [A, B]   []       []       []       []       []       []       []       []       
[B, C]   [S, C]   [A, B]   []       []       []       []       []       []       []       
[B, S, C][B, C]   [S, C]   [A, B]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, C]   [S, C]   [A, B]   []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [C]      [B]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B]      []       [B]      []       []       []       
[B, S, C][B, S, C][B, C, S][B, S]   [S]      []       [S]      [A, B]   []       []       
[B, C]   [B, C]   [B]      []       []       []       []       [C]      [B]      []       
[B, S, C][B, S, C][B, C, S][B, S]   [S]      []       [S]      [B]      [S]      [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }]
C[{ C-->SA }, { C-->b }]
S[{ S-->AS }, { S-->BA }, { S-->b }, { S-->AB }]

word='aabbbbabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [C, S][]    []    []    []    []    []    []    
[A]   [A]   [A]   [C, S][]    []    []    []    []    []    
[C, S][C, S][C, S][A]   [C, S][]    []    []    []    []    
[A]   [A]   [A]   [C, S][A]   [C, S][]    []    []    []    
[A]   [A]   [A]   [C]   [A]   [C]   [A]   []    []    []    
[C, S][C, S][C, S][A]   [C, S][A]   [S]   [C, S][]    []    
[A]   [A]   [A]   [C, S][A]   [C, S][A]   [A]   [C, S][]    
[C, S][C, S][C, S][A]   [C, S][A]   [S, C][C, S][A]   [C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BA }]
B[{ B-->SA }, { B-->CA }, { B-->a }]
S[{ S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]

word='aabbbbabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A]      []       [S]      []       []       []       []       []       []       []       
[A, B]   [A]      [A]      [S]      []       []       []       []       []       []       
[]       [S]      [B]      [A]      [S]      []       []       []       []       []       
[A, S]   [A]      []       [B]      [A]      [S]      []       []       []       []       
[A, B, S][A, S]   [A, B]   [A, S]   [S]      []       [B]      []       []       []       
[A, S]   [A, S]   [B]      [A, B]   [A]      []       []       [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B]      [B]      [A]      [A]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, S]   [B]      [A]      [S]      [B]      [A]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
B[{ B-->AS }]
S[{ S-->SS }, { S-->SC }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->BA }, { C-->BC }]

word='aabbbbabbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[S]      [B]      [S]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [S]      []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [S]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [S]      [S]      [S]      [S]      []       []       []       []       
[C]      [C]      []       []       []       []       [A]      []       []       []       
[A]      [A]      []       []       []       []       [B]      [S]      []       []       
[A, B, S][A, B, S][S]      [S]      [S]      [S]      [B, S]   [S]      [S]      []       
[A, B, S][A, B, S][S]      [S]      [S]      [S]      [B, S]   [S]      [S]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }]
B[{ B-->BB }, { B-->CC }, { B-->SC }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->a }]

word='aabbbbabbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   []    [A]   []    []    []    []    []    []    
[S]   [S]   []    []    [A]   []    []    []    []    []    
[S]   [S]   []    []    []    [A]   []    []    []    []    
[S]   [S]   []    []    []    []    [A, S][]    []    []    
[S]   [S]   []    []    []    []    [S]   [A]   []    []    
[S]   [S]   []    []    []    []    [S]   []    [A]   []    
[S]   [S]   []    []    []    []    [S]   []    []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->BS }]
C[{ C-->SA }, { C-->a }]
S[{ S-->AS }, { S-->CA }, { S-->SB }]

word='aabbbbabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [C][] [A][] [] [] [] [] [] 
[] [S][] [] [A][] [] [] [] [] 
[] [C][] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[S][A][S][S][S][S][S][A][] [] 
[C][] [C][C][C][C][C][] [A][] 
[S][A][S][S][S][S][S][] [] [A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->a }]
S[{ S-->AS }, { S-->a }, { S-->SS }, { S-->CC }, { S-->BC }]
C[{ C-->BA }, { C-->SB }]

word='bbbbbaabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [B, S]   []       []       []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [B, S]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B, C]   [A]      []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S]      [S]      [B, S]   []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [S, C]   [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BA }]
B[{ B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->CB }, { C-->AA }, { C-->BS }]

word='bbbbbaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[]       [A]      [S]      []       []       []       []       []       []       []       
[C]      []       [A]      [S]      []       []       []       []       []       []       
[B]      [C]      []       [A]      [S]      []       []       []       []       []       
[S, C]   [B]      [C]      []       [A]      [S]      []       []       []       []       
[A, B]   [S, C]   [B]      [C]      []       [A]      [S]      []       []       []       
[S, C]   [A, B]   [S, C]   [B]      [C]      []       [A]      [S]      []       []       
[A, B, C][S, C]   [A, B]   [S, C]   [B]      [C]      []       [A]      [S]      []       
[B, S, C][A, B, C][S, C]   [A, B]   [S, C]   [B]      [C]      []       [A]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BS }, { B-->AC }, { B-->CA }, { B-->a }, { B-->SC }]
S[{ S-->CC }, { S-->BC }]
C[{ C-->AB }]

word='bbbbbaabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[C]      [B]      [C]      [B]      [C]      [A, B]   []       []       []       []       
[B]      [C]      [B]      [C]      [B]      [C]      [A, B]   []       []       []       
[C]      [B]      [C]      [B]      [C]      [B]      []       [A]      []       []       
[B, S, C][B, S, C][B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [C]      [A, B]   []       
[B, S, C][B, S, C][B, C, S][B, C, S][B, C, S][B, S]   [C]      [B]      [C]      [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->BA }, { C-->a }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->AB }]
S[{ S-->CA }, { S-->CC }, { S-->b }]

word='bbbbbaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[C]   [C]   [S]   []    []    []    []    []    []    []    
[C, S][C]   [C]   [S]   []    []    []    []    []    []    
[S, C][S, C][C]   [C]   [S]   []    []    []    []    []    
[S, C][S, C][C, S][C, S][C]   [C]   []    []    []    []    
[S, C][S, C][C, S][C, S][C, S][S]   [C]   []    []    []    
[S, C][S, C][C, S][C, S][C]   [C]   []    [S]   []    []    
[S, C][S, C][C, S][C, S][C, S][C, S][S]   [C]   [C]   []    
[C, S][S, C][C, S][C, S][C, S][S, C][S, C][C, S][S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BC }, { B-->BS }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }]

word='bbbbbaabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][A][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AC }]
S[{ S-->CB }, { S-->a }, { S-->SS }]
C[{ C-->SA }, { C-->BB }, { C-->SC }, { C-->BC }]

word='ababaaabaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [A, S]   []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [A, S]   []       []       []       []       []       
[B, C]   [C]      [B, C]   [C]      [S, C]   [A, S]   []       []       []       []       
[B, C]   [C]      [B, C]   [C]      [B, S, C][S, C]   [A, S]   []       []       []       
[B, S, C][S, C]   [B, S, C][C, S]   [S, C]   [S]      []       [B]      []       []       
[B, S, C][S, C]   [B, S, C][C, S]   [B, S, C][S, C]   []       []       [A, S]   []       
[B, S, C][S, C]   [B, S, C][C, S]   [B, S, C][B, C, S][B, C]   [C]      [S, C]   [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->a }]
S[{ S-->SA }, { S-->a }, { S-->SS }, { S-->BC }]
C[{ C-->b }, { C-->BS }]

word='ababaaabaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      [A]      [B, S]   []       []       []       []       []       []       []       
[S]      [A]      [S]      [C]      []       []       []       []       []       []       
[S]      [A]      [S]      [A]      [B, S]   []       []       []       []       []       
[S]      [A]      [S]      [A]      [S, C]   [B, S]   []       []       []       []       
[S]      [A]      [S]      [A]      [A, S, C][S, C]   [B, S]   []       []       []       
[S]      [A]      [S]      [A]      [A, S, C][S, C]   [S]      [C]      []       []       
[S]      [A]      [S]      [A]      [A, S, C][A, S, C][S]      [A]      [B, S]   []       
[S]      [A]      [S]      [A]      [A, S, C][A, S, C][S]      [A]      [S, C]   [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->BA }, { S-->CB }, { S-->SB }]
C[{ C-->CS }]

word='ababaaabaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [A, B]   []       []       []       []       []       []       []       
[A, S]   [A]      [A, S]   [A]      []       []       []       []       []       []       
[A, S]   [A]      [A, S]   [A]      [A, B]   []       []       []       []       []       
[A, S]   [A]      [A, S]   [A]      [A, B, S][A, B]   []       []       []       []       
[A, S]   [A]      [A, S]   [A]      [A, B, S][A, B, S][A, B]   []       []       []       
[A, S]   [A]      [A, S]   [A]      [A, S]   [A, S]   [A, S]   [A]      []       []       
[A, S]   [A]      [A, S]   [A]      [A, S]   [A, S]   [A, S]   [A]      [A, B]   []       
[A, S]   [A]      [A, S]   [A]      [A, S]   [A, S]   [A, S]   [A]      [A, B, S][A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->CB }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->AB }, { S-->BC }]
C[{ C-->SS }]

word='ababaaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[C]      [S]      [C]      [S]      [C]      [S]      []       []       []       []       
[A, C]   [C, S]   [A, C]   [S, C]   [A]      [C]      [S]      []       []       []       
[B, S]   [B]      [B, S]   [B]      [S]      [B]      []       [B]      []       []       
[C]      [S]      [C]      [S]      [C]      []       []       []       [S]      []       
[A, S, C][A, C, S][A, C, S][A, S, C][A, C]   [A, S]   [C]      [S]      [C]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->SB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->CS }]
C[{ C-->SA }, { C-->BC }]

word='ababaaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[B, S]   [S]      [S]      []       []       []       []       []       []       []       
[C, S]   [C]      [C]      [A]      []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B]      [B]      [S]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [S]      [B]      [S]      []       []       []       
[B, S, C][B, S, C][B, S, C][B, C]   [B, C]   [S]      [C]      [A]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [S]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->AA }]
S[{ S-->AS }, { S-->SA }, { S-->BB }, { S-->SS }]

word='ababbbbaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [S][B][] [] [] [] [] [] [] 
[S][] [S][B][] [] [] [] [] [] 
[] [S][] [S][B][] [] [] [] [] 
[S][] [S][] [S][B][] [] [] [] 
[] [S][] [S][] [S][B][] [] [] 
[S][] [S][] [S][] [S][B][] [] 
[] [S][] [S][] [S][] [S][B][] 
[S][] [S][] [S][] [S][] [S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->BA }]
B[{ B-->b }]
C[{ C-->CB }, { C-->a }, { C-->SS }, { C-->AB }]
S[{ S-->a }, { S-->BB }, { S-->CS }]

word='ababbbbaaa'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [C, S][]    []    []    []    []    []    []    
[]    []    [C]   [B]   []    []    []    []    []    []    
[C, S][]    [C, S][S]   [B]   []    []    []    []    []    
[C, S][]    [S, C][]    [S]   [B]   []    []    []    []    
[C, S][]    [C, S][C]   []    [S]   [B]   []    []    []    
[C, S][]    [C, S][S]   []    [C]   []    [C, S][]    []    
[C, S][]    [C, S][C, S][]    [C, S][]    [C, S][C, S][]    
[C, S][]    [C, S][C, S][]    [C, S][]    [C, S][C, S][C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->CA }]
B[{ B-->BA }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->a }]
S[{ S-->BB }, { S-->CC }, { S-->b }]

word='ababbbbaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[]       [B]      [C]      []       []       []       []       []       []       []       
[A, S]   [A]      [B]      [S]      []       []       []       []       []       []       
[B]      [S]      [A]      [B]      [S]      []       []       []       []       []       
[A, B]   [B]      [A, S]   [A]      [B]      [S]      []       []       []       []       
[A, S]   [A]      [B]      [S]      [A]      [B]      [S]      []       []       []       
[B, S]   [S]      [A]      [B]      [S]      []       [B]      [C]      []       []       
[A, B, S][B, S]   [A, S]   [B]      [B, S]   [A]      [B]      [S]      [C]      []       
[A, B, S][B]      [A, B, S][A]      [B]      [S]      [A]      [B]      [S]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->BB }]
S[{ S-->CB }, { S-->CC }, { S-->SC }]

word='ababbbbaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][] [C][] [] [] [] [] [] [] 
[] [] [S][B][] [] [] [] [] [] 
[S][] [S][C][B][] [] [] [] [] 
[] [] [S][S][C][B][] [] [] [] 
[S][] [S][S][S][C][B][] [] [] 
[S][] [S][S][S][S][] [C][] [] 
[S][] [S][S][S][S][] [S][C][] 
[S][] [S][S][S][S][] [S][S][C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->b }, { B-->a }]
C[{ C-->SA }, { C-->BB }, { C-->BS }]
S[{ S-->AS }, { S-->SS }, { S-->SC }, { S-->BC }]

word='ababbbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   [C]   [B]   []    []    []    []    []    []    []    
[C]   [S]   [C]   [B]   []    []    []    []    []    []    
[S]   [C]   [S]   [C]   [B]   []    []    []    []    []    
[S, C][S]   [C]   [S]   [C]   [B]   []    []    []    []    
[S, C][S, C][S]   [C]   [S]   [C]   [B]   []    []    []    
[S, C][S, C][C, S][S]   [C]   [S]   [C]   [B]   []    []    
[S, C][S, C][C, S][C, S][S]   [C]   [S]   [C]   [B]   []    
[S, C][S, C][C, S][C, S][C, S][S]   [C]   [S]   [C]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->a }]
C[{ C-->a }]
S[{ S-->BA }, { S-->CB }, { S-->AA }, { S-->SS }, { S-->CC }]

word='bbbabbabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [A]   []    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    [S]   []    [S]   [A]   []    []    []    []    []    
[S]   []    [S]   [A]   [S]   [A]   []    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[S]   []    [S]   [A]   [S]   []    [S]   [A]   []    []    
[]    [S]   []    [S]   []    [S]   [A]   [S]   [A]   []    
[S]   []    [S]   [A]   [S]   []    [S]   []    [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }, { B-->SB }]
S[{ S-->SA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->CS }, { S-->BS }]
C[{ C-->b }]

word='bbbabbabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[B]   [B]   []    [B]   [S]   [C]   []    []    []    []    
[B, S][B, S][S]   [B, S][S]   [S]   [A, S][]    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[B, S][B, S][B, S][B, S][B]   []    [B]   [S]   [C]   []    
[B, S][B, S][B, S][B, S][B]   []    [B]   [S]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->a }]
S[{ S-->BA }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->CC }]

word='bbbabbabbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][A, S][]    []    []    []    []    
[S]   [S]   [S]   [A, S][S]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[S]   [S]   [S]   [A, S][S]   [S]   [A, S][A, S][]    []    
[S]   [S]   [S]   [A, S][S]   [S]   [A, S][S]   [A, S][]    
[S]   [S]   [S]   [A, S][S]   [S]   [A, S][S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]
C[{ C-->CB }, { C-->SS }]

word='aaababaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[C, S][S]   [C]   [S]   []    []    []    []    []    []    
[S, C][S, C][S]   [C]   [S]   []    []    []    []    []    
[C, S][S, C][C, S][S]   [C]   [S]   []    []    []    []    
[S, C][S, C][S, C][C, S][S]   [C]   [S]   []    []    []    
[S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   []    []    
[S, C][S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   []    
[C, S][S, C][S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->b }, { B-->BS }, { B-->CA }, { B-->a }]
S[{ S-->BB }, { S-->CS }, { S-->BC }]
C[{ C-->SA }]

word='aaababaaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[S][B][S][B][S][B][] [] [] [] 
[B][S][B][S][B][S][B][] [] [] 
[S][B][S][B][S][B][S][B][] [] 
[B][S][B][S][B][S][B][S][B][] 
[S][B][S][B][S][B][S][B][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }]
B[{ B-->b }]
C[{ C-->a }, { C-->b }, { C-->AB }, { C-->BC }]
S[{ S-->AC }, { S-->BB }, { S-->SS }]

word='aaababaaab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[A]      [S]      [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, S]   [C, S]   [B, C]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [C]      [A, C]   []       []       []       []       []       
[A, S, C][A, S, C][A, S, C][C]      [C, S]   [B, C]   []       []       []       []       
[A, S]   [A, S]   [A, S]   []       [A, S]   [C]      [A, C]   []       []       []       
[A, S]   [A, S]   [A, S]   []       [A, S]   []       [S]      [A, C]   []       []       
[A, S]   [A, S]   [A, S]   []       [A, S]   []       [A]      [S]      [A, C]   []       
[A, C, S][A, C, S][A, C, S][C]      [A, S, C][C]      [A, S, C][A, S]   [C, S]   [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->SC }]
S[{ S-->BA }, { S-->CS }, { S-->BC }]
C[{ C-->SA }, { C-->CA }, { C-->SB }]

word='aaababaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [S]   [A]   []    []    []    []    []    []    
[]    [S]   [C]   []    [B]   []    []    []    []    []    
[S]   [C, S][C]   []    [S]   [A]   []    []    []    []    
[C, S][C]   [B]   []    [C]   []    [B]   []    []    []    
[C]   []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[S]   []    []    []    []    []    []    []    [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
C[{ C-->AC }, { C-->a }, { C-->SC }]
S[{ S-->CA }, { S-->BB }, { S-->SS }, { S-->CC }]

word='aaababaaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C, S][A, C][]    []    []    []    []    []    []    []    
[C, S][C, S][A, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[C, S][C, S][C, S][C]   [A, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   [A, C][]    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][A, C][]    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][A, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->AS }, { B-->SC }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->BS }]
C[{ C-->b }]

word='abaababbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   [S]   []    []    []    []    []    []    
[B]   []    [B]   [B]   [C]   []    []    []    []    []    
[S]   []    [S]   [S]   []    [S]   []    []    []    []    
[B]   []    [B]   [B]   []    [B]   [C]   []    []    []    
[B, S][]    [B, S][B, S][]    [B, S][S]   [C]   []    []    
[S]   []    [S]   [S]   []    [S]   [S]   []    [S]   []    
[S]   []    [S]   [S]   []    [S]   [S]   []    [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }]
B[{ B-->AC }, { B-->a }]
S[{ S-->CC }, { S-->b }]
C[{ C-->BA }, { C-->BB }]

word='abaababbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[C, S][B]   [C]   [B]   []    []    []    []    []    []    
[A]   [C]   [A]   [C]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[A, B][C, S][A, B][C, S][B]   [C]   [A, S][]    []    []    
[S, C][A, B][C, S][A]   [C]   []    []    [A, S][]    []    
[A]   [C]   []    []    []    []    []    []    [B]   []    
[S, C][A, B][C, S][A, B][C, S][]    []    [B]   [C]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BC }]
B[{ B-->b }]
C[{ C-->a }, { C-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->b }]

word='abaababbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[S]   [A]   [C]   []    []    []    []    []    []    []    
[S]   [A, S][C]   [C]   []    []    []    []    []    []    
[S]   [A]   []    []    [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    [B, S][]    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   []    [S]   [A]   [C]   []    
[S]   [S]   [S]   [S]   [S]   []    [S]   [A, S][C]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BB }]
S[{ S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->SS }, { S-->CC }, { S-->AB }]
C[{ C-->b }]

word='abaababbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[S]   []    [S]   [S]   []    []    []    []    []    []    
[S]   []    [S]   [S]   [B, C][]    []    []    []    []    
[S]   []    [S]   [S]   []    [S]   []    []    []    []    
[S]   []    [S]   [S]   []    [S]   [B, C][]    []    []    
[S]   []    [S]   [S]   []    [S]   [B, S][B, C][]    []    
[S]   []    [S]   [S]   []    [S]   [S]   []    [S]   []    
[S]   []    [S]   [S]   []    [S]   [S]   []    [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->a }]
S[{ S-->BA }, { S-->SB }, { S-->CC }, { S-->CS }]
C[{ C-->BB }]

word='abaababbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B]   [C]   [B]   []    []    []    []    []    []    []    
[C, S][B]   [C]   [B]   []    []    []    []    []    []    
[B, S][S, C][B]   [C]   [B]   []    []    []    []    []    
[C, S][B, S][C, S][B]   [C]   [B]   []    []    []    []    
[B, S][S, C][B, S][C, S][B]   [C]   [B]   []    []    []    
[C, S][B, S][C, S][B, S][C, S][B]   [C]   [B]   []    []    
[B, S][S, C][B, S][C, S][B, S][C, S][B]   [C]   [B]   []    
[C, S][B, S][C, S][B, S][C, S][B, S][C, S][B]   [C]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->AS }, { B-->a }]
C[{ C-->BB }, { C-->b }]
S[{ S-->AC }, { S-->CB }, { S-->SS }]

word='aaaaaaabab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[S]   [C]   [A, B][]    []    []    []    []    []    []    
[A, B][S]   [C]   [A, B][]    []    []    []    []    []    
[C]   [A, B][S]   [C]   [A, B][]    []    []    []    []    
[S]   [C]   [A, B][S]   [C]   [A, B][]    []    []    []    
[A, B][S]   [C]   [A, B][S]   [C]   [A, B][]    []    []    
[S]   [C]   [A, B][S]   [C]   [A, B][S]   [C]   []    []    
[A, B][S]   [C]   [A, B][S]   [C]   [A, B][S]   [A, B][]    
[S]   [C]   [A, B][S]   [C]   [A, B][S]   []    [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }]
C[{ C-->CS }, { C-->b }, { C-->BC }]
S[{ S-->BB }]

word='aaaaaaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B]      [S]      [B]      []       []       []       []       []       []       []       
[S]      [B]      [S]      [B]      []       []       []       []       []       []       
[B]      [S]      [B]      [S]      [B]      []       []       []       []       []       
[S]      [B]      [S]      [B]      [S]      [B]      []       []       []       []       
[B]      [S]      [B]      [S]      [B]      [S]      [B]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [C]      [C]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [C]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BS }]

word='aaaaaaabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[]    []    []    []    []    []    []    []    [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->AC }, { A-->BA }]
B[{ B-->CC }]
C[{ C-->a }, { C-->AB }]
S[{ S-->SS }, { S-->CS }, { S-->b }]

word='aaaaaaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A]      [B]      [C]      []       []       []       []       []       []       []       
[A]      [A]      [B]      [C]      []       []       []       []       []       []       
[A, C]   [A]      [A]      [B]      [C]      []       []       []       []       []       
[A, B, C][A, C]   [A]      [A]      [B]      [C]      []       []       []       []       
[A, B, C][A, B, C][A, C]   [A]      [A]      [B]      [C]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [C]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->SC }, { C-->CS }, { C-->b }]

word='aaaaaaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S]   []    
[S, C][S, C][C, S][C, S][C, S][C, S][C, S][S, C][C]   [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SS }, { B-->SC }]
S[{ S-->AC }, { S-->SB }, { S-->a }, { S-->BB }]
C[{ C-->AA }]

word='babaaaaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[S]   [B]   []    [A, S][]    []    []    []    []    []    
[B, S][B, S][S]   [B, C][A, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, C][A, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, C][A, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, C][A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
B[{ B-->a }]
S[{ S-->AS }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->BA }, { C-->CS }]

word='babaaaaabb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[]       [C]      [A, S]   []       []       []       []       []       []       []       
[]       [C]      [S]      [B, S]   []       []       []       []       []       []       
[]       [C]      []       []       [B, S]   []       []       []       []       []       
[]       [C]      []       []       []       [B, S]   []       []       []       []       
[]       [C]      []       []       []       []       [B, S]   []       []       []       
[]       [C]      []       []       []       []       []       [B, S]   []       []       
[]       [A, C]   []       []       []       []       []       [C]      [A, S]   []       
[S]      [A, C, S][]       []       []       []       []       [C]      [S]      [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }]
S[{ S-->a }, { S-->b }, { S-->AB }]
C[{ C-->AC }]

word='babaaaaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[B]      [A]      [S]      []       []       []       []       []       []       []       
[B]      [B]      [A]      [S]      []       []       []       []       []       []       
[B, S]   [B]      [B]      [A]      [S]      []       []       []       []       []       
[A, B, S][B, S]   [B]      [B]      [A]      [S]      []       []       []       []       
[A, B, S][A, B, S][B, S]   [B]      [B]      [A]      [S]      []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B]      [B]      [A]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B]      [B]      [A]      [S]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B]      [B]      [A]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->SA }]
C[{ C-->CB }, { C-->b }, { C-->BS }]
S[{ S-->AA }]

word='babaaaaabb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[B]   [S]   [A, C][]    []    []    []    []    []    []    
[C]   [B]   [S]   [A]   []    []    []    []    []    []    
[A, C][]    [B]   [S]   [A]   []    []    []    []    []    
[S]   [A, C][C]   [B]   [S]   [A]   []    []    []    []    
[B, C][S]   [A, C][]    [B]   [S]   [A]   []    []    []    
[C]   [B]   [S]   [A, C][]    [B]   [S]   [A]   []    []    
[A, C][C]   [B, C][S]   [A, C][]    [B]   [S]   [A, C][]    
[S, C][A, C][C]   [B]   [S]   [A, C][]    [B]   [S]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SS }]
S[{ S-->CB }, { S-->a }, { S-->AA }]
C[{ C-->AS }, { C-->a }, { C-->b }]

word='babaaaaabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    [S]   [B, C][]    []    []    []    []    []    []    
[S]   [B]   []    [S, C][]    []    []    []    []    []    
[B, S][B]   [S]   [B]   [S, C][]    []    []    []    []    
[B, S][B, S][B]   [S]   [B]   [S, C][]    []    []    []    
[B, S][B]   [S]   [B]   [S]   [B]   [S, C][]    []    []    
[B, S][B, S][B]   [S]   [B]   [S]   [B]   [S, C][]    []    
[B, S][B, S][B]   [S]   [B]   [S]   [B]   [S]   [B, C][]    
[B, S][B]   [S]   [B]   [S]   [B]   [S]   [B]   [S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->a }]
S[{ S-->CA }, { S-->AA }, { S-->CC }, { S-->AB }]
C[{ C-->SB }, { C-->BB }, { C-->SS }]

word='bbabbaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[C]   [S]   [A, B][]    []    []    []    []    []    []    
[S, C][]    [S]   [A]   []    []    []    []    []    []    
[S]   [C]   []    [S]   [A]   []    []    []    []    []    
[S, C][S]   [C]   [C]   [S]   [A, B][]    []    []    []    
[S, C][C, S][S]   [C, S][C]   [S, C][A, B][]    []    []    
[S, C][C, S][C, S][C, S][C, S][S, C][S, C][A, B][]    []    
[S, C][C, S][C, S][C, S][C, S][C, S][S]   [S]   [A]   []    
[S, C][C, S][C, S][C, S][S, C][S, C][C]   [C]   [S]   [A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->CC }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->a }]
S[{ S-->a }, { S-->AB }, { S-->BS }]

word='bbabbaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[S]      [B, S]   [C, S]   []       []       []       []       []       []       []       
[B, C]   [B, C]   [C]      [B]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[S]      [S]      []       [S]      [B, S]   [C, S]   []       []       []       []       
[S]      [S]      []       [S]      [B, S]   [B]      [C, S]   []       []       []       
[B, C, S][B, C, S][B, C]   [B, S, C][B, S, C][B, C, S][B]      [C, S]   []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [C]      [B]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, C, S][B, C]   [B, S]   [C, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
S[{ S-->CA }, { S-->a }, { S-->BB }, { S-->SS }, { S-->AB }]
C[{ C-->b }, { C-->BS }]

word='bbabbaaaba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[S]   [S]   [S]   [A, S][A, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[]    []    []    []    []    []    []    []    [A, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->SA }, { C-->a }, { C-->AA }, { C-->SS }, { C-->SC }]
S[{ S-->CC }, { S-->b }]

word='bbabbaaaba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[C, S][C]   [A, C][]    []    []    []    []    []    []    
[C, S][C]   [C]   [A, S][]    []    []    []    []    []    
[C, S][S, C][S]   [C]   [A, S][]    []    []    []    []    
[C, S][S, C][S, C][C, S][C]   [A, C][]    []    []    []    
[C, S][S, C][S, C][C, S][C, S][C, S][A, C][]    []    []    
[C, S][S, C][S, C][C, S][C, S][S, C][C, S][A, C][]    []    
[C, S][S, C][S, C][C, S][C, S][S, C][S, C][C]   [A, S][]    
[C, S][S, C][S, C][C, S][C, S][S, C][C, S][S]   [C]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->CA }, { C-->CB }, { C-->a }]
S[{ S-->AS }, { S-->SS }, { S-->CC }, { S-->SC }]

word='bbabbaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [C]   [A]   []    []    []    []    []    []    
[]    []    [C]   []    [A]   []    []    []    []    []    
[S]   [S]   [C, S][]    []    [A, C][]    []    []    []    
[S]   [S]   [S, C][S]   [S]   [C, S][A, C][]    []    []    
[S]   [S]   [S, C][S]   [S]   [S, C][C, S][A, C][]    []    
[S]   [S]   [S, C][S]   [S]   [S, C][S, C][C]   [A]   []    
[S]   [S]   [S, C][S]   [S]   [S, C][S, C][C, S][]    [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->CA }, { A-->BA }]
B[{ B-->BS }, { B-->CB }, { B-->AA }]
S[{ S-->SA }, { S-->BB }]
C[{ C-->BC }]

word='bbababbaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[A]      [B]      [A]      []       []       []       []       []       []       []       
[B, S]   [A]      [B]      [A]      []       []       []       []       []       []       
[A, S]   [B, S]   [A]      [B]      [A]      []       []       []       []       []       
[B, S]   [A, S]   [B, S]   [A]      [B]      [A]      []       []       []       []       
[A, B, S][B, S]   [A, S]   [B, S]   [A]      [B]      [A]      []       []       []       
[A, B, S][A, B, S][B, S]   [A, S]   [B, S]   [A]      [B]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B, S]   [A]      [B]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B, S]   [A]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->BA }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->b }]
S[{ S-->CB }, { S-->SC }]

word='bbababbaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[]    [S]   []    [C]   []    []    []    []    []    []    
[S]   [B]   []    [S]   [B]   []    []    []    []    []    
[S]   [B]   []    [S]   []    [C]   []    []    []    []    
[S]   [B]   []    [S]   []    []    [C]   []    []    []    
[B, S][B]   []    [B]   []    []    [S]   [B]   []    []    
[B, S][B]   []    [B]   []    [S]   [B]   []    [B]   []    
[B, S][B]   []    [B]   []    [S]   []    []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }]
S[{ S-->CA }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->SC }, { C-->AB }]

word='bbababbaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   []    [A]   []    []    []    []    []    
[S, C][S, C][C, S][C]   [C]   [B, S][]    []    []    []    
[]    []    []    []    []    [A]   [B, S][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[S, C][S, C][C, S][C, S][C, S][C]   [C]   [C]   [C]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AS }, { B-->SA }, { B-->CB }, { B-->AA }]
C[{ C-->BA }]
S[{ S-->BB }, { S-->BS }]

word='bbababbaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[C]      [B]      [A]      []       []       []       []       []       []       []       
[S]      [C]      [B]      [A]      []       []       []       []       []       []       
[B]      [S]      [C]      [B]      [A]      []       []       []       []       []       
[C, S]   [B]      [S]      [C]      [B]      [A]      []       []       []       []       
[B, S]   [S, C]   [B]      [S]      [C]      [B]      [A]      []       []       []       
[B, C, S][B, S]   [S, C]   [B]      [S]      [C]      [B]      [A]      []       []       
[B, S, C][B, S, C][B, S]   [S, C]   [B]      [S]      [C]      [B]      [A]      []       
[B, S, C][B, S, C][B, S, C][B, S]   [S, C]   [B]      [S]      [C]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->CC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->BB }, { C-->SC }, { C-->BS }]

word='bbababbaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [S]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S, C][S, C][C, S][C]   [C]   [S]   []    []    []    []    
[S, C][S, C][C, S][S]   [S]   []    [S]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[S, C][S, C][C, S][C, S][C, S][C]   [C]   [C]   [C]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->CA }, { B-->BB }]
S[{ S-->AS }, { S-->a }, { S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->SS }]

word='ababaaabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[A]   [C]   [S]   []    []    []    []    []    []    []    
[S]   [A]   [C]   [S]   []    []    []    []    []    []    
[B, C][S]   [A]   [C]   [S]   []    []    []    []    []    
[A]   [B, C][S]   [A]   [C]   [S]   []    []    []    []    
[S]   [A]   [B, C][S]   [A]   [C]   [S]   []    []    []    
[B, C][S]   [A]   [B, C][S]   [A]   [C]   [S]   []    []    
[A]   [B, C][S]   [A]   [B, C][S]   [A]   [C]   [S]   []    
[B, S][A]   [B, C][S]   [A]   [B, C][S]   [A]   [C]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->a }, { B-->AA }, { B-->SS }]
C[{ C-->a }]
S[{ S-->BA }, { S-->BB }]

word='ababaaabba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [B, S][B, C][]    []    []    []    []    []    []    
[B]   [S]   [S]   [B]   []    []    []    []    []    []    
[B, S][B, S][S]   [B, S][B, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B]   []    [S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [B, S][B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }]
B[{ B-->b }, { B-->a }]
S[{ S-->AS }, { S-->SB }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AA }, { C-->SC }]

word='ababaaabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   []    [B]   []    []    []    []    
[S]   [S]   [S]   [S]   []    []    [B]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SB }]
B[{ B-->SA }, { B-->BA }]
C[{ C-->a }, { C-->b }]
S[{ S-->AS }, { S-->AA }, { S-->CC }]

word='ababaaabba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[B, S]   [S]      [A, C]   []       []       []       []       []       []       []       
[]       []       [S]      [C]      []       []       []       []       []       []       
[A]      []       [B, S]   [S]      [A, C]   []       []       []       []       []       
[A, S]   [A]      [B]      [B]      [S]      [A, C]   []       []       []       []       
[A, B, S][A, S]   [A, B]   [B]      [B, S]   [S]      [A, C]   []       []       []       
[S]      [S]      []       []       [S]      [S]      [S]      [C]      []       []       
[S]      [S]      [S]      []       [S]      [S]      [S]      [S]      [C]      []       
[A, B, S][A, B]   [A, B, S][A, B]   [A, B, S][A, B]   [B]      [B]      [S]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->SA }]
S[{ S-->a }, { S-->SS }, { S-->BS }]
C[{ C-->AC }, { C-->AS }, { C-->SB }]

word='ababaaabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[S]      [C]      [S]      []       []       []       []       []       []       []       
[B]      []       [B]      [A]      []       []       []       []       []       []       
[S]      [C]      [S]      [C]      [S]      []       []       []       []       []       
[S]      [C]      [S]      [C]      [S]      [S]      []       []       []       []       
[S]      [C]      [S]      [C]      [S]      [S]      [S]      []       []       []       
[B, C]   [C]      [B, C]   [C]      [B, C]   [B, C]   [B]      [A]      []       []       
[A, B, C][C]      [A, B, C][C]      [A, B, C][A, B]   [A]      []       [A]      []       
[S, C]   [C]      [S, C]   [C]      [S, C]   [S, C]   [C]      [C]      [C]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BS }, { A-->SA }]
B[{ B-->BA }, { B-->AA }]
S[{ S-->CA }, { S-->a }]
C[{ C-->b }]

word='bbaaabbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [S][A][A][A][C][] [] [] [] 
[S][A][] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[A][B][] [] [] [] [S][A][C][] 
[S][A][] [] [] [] [] [] [] [S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CB }]
S[{ S-->AS }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->b }]

word='bbaaabbaba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A, S][S, C][]    []    []    []    []    []    []    []    
[A, S][A]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [A]   [S]   []    []    []    []    []    []    
[A, S][A]   [S]   [A]   [S]   []    []    []    []    []    
[A, S][S]   [A]   [S]   [A]   [S, C][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S, C][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [S, C][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AS }, { B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->CA }, { S-->BB }, { S-->SC }, { S-->AB }]
C[{ C-->SS }]

word='bbaaabbaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [S][B][] [] [] [] [] [] [] 
[C][] [S][B][] [] [] [] [] [] 
[] [C][] [S][B][] [] [] [] [] 
[S][] [C][] [S][B][] [] [] [] 
[] [S][] [C][] [S][B][] [] [] 
[C][] [S][] [C][] [S][B][] [] 
[] [C][] [S][] [C][] [S][B][] 
[S][] [C][] [S][] [C][] [S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->SC }]
S[{ S-->SA }, { S-->SB }, { S-->AA }, { S-->BB }]

word='bbaaabbaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[S]   [A]   [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][S]   [S]   [A]   []    []    []    []    []    
[A, S][A, S][S]   [S]   []    [B]   []    []    []    []    
[A, S][A, S][S]   [S]   []    [S]   [B]   []    []    []    
[A, S][A, S][S]   [S]   []    [S]   []    [A]   []    []    
[A, S][A, S][S]   [S]   []    [S]   []    []    [B]   []    
[A, S][A, S][S]   [S]   []    [S]   []    []    []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
B[{ B-->a }, { B-->SS }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->a }]
C[{ C-->AA }, { C-->b }]

word='bbaaabbaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[S]      [A]      [B, S]   []       []       []       []       []       []       []       
[A, B]   [S]      [B]      [B, S]   []       []       []       []       []       []       
[S]      [B]      []       [B]      [B, S]   []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[A, B, S][B, S]   [B]      [B, S]   [S]      [A]      [C]      []       []       []       
[B, S]   [B]      []       [B]      [B]      [S]      [A]      [B, S]   []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A, B, S][B, S]   [B]      [B, S]   [B, S]   [A, S]   [A, C]   [S]      [A]      [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }]
S[{ S-->SB }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->BA }, { C-->SC }, { C-->AB }]

word='bbbbaaaaba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[C]   [C]   [C]   [S, C][B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, S][]    
[S, C][S, C][C, S][C, S][C, S][C, S][C, S][C, S][S, C][B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->a }]
S[{ S-->BB }, { S-->CC }, { S-->CS }]
C[{ C-->AB }]

word='bbbbaaaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[S][B][S][B][S][B][] [] [] [] 
[B][S][B][S][B][S][B][] [] [] 
[S][B][S][B][S][B][S][B][] [] 
[B][S][B][S][B][S][B][S][B][] 
[S][B][S][B][S][B][S][B][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->CB }]
B[{ B-->a }]
S[{ S-->AA }]
C[{ C-->AB }]

word='bbbbaaaaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[A]      []       [S]      [A]      []       []       []       []       []       []       
[S, C]   [A]      []       [S, C]   [A, B]   []       []       []       []       []       
[A]      [S, C]   [A, S]   [A]      [S, C]   [A, B]   []       []       []       []       
[A, S, C][A]      [S, C]   [A, S, C][A]      [S, C]   [A, B]   []       []       []       
[A, S, C][A, S, C][A, S]   [A, S, C][A, S, C][A]      [S, C]   [A, B]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, S]   []       [S]      [A]      []       
[A, S, C][A, S, C][A, S, C][A, S, C][A]      [S, C]   [A]      []       [S, C]   [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }, { B-->CA }, { B-->SS }]
C[{ C-->BB }, { C-->b }]
S[{ S-->SA }, { S-->BA }, { S-->b }]

word='bbbbaaaaba'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[B]      [C, S]   []       []       []       []       []       []       []       []       
[B]      [B]      [C, S]   []       []       []       []       []       []       []       
[B, C]   [B]      [B]      [C, S]   []       []       []       []       []       []       
[B, C, S][B, C, S][B, S]   [B, S]   [A]      []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [S]      []       [A]      []       []       []       []       
[B, S, C][B, S]   [B, S]   [S]      []       []       [A]      []       []       []       
[B, S, C][B, S]   [B, S]   [S]      []       []       []       [A]      []       []       
[B, C]   [B, C]   [B]      [B]      []       []       []       []       [C, S]   []       
[B, C, S][B, C, S][B, C, S][B, S]   []       []       []       []       [B, S]   [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->SC }]
S[{ S-->BA }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->AB }]
C[{ C-->AS }]

word='bbbbaaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[C]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [C]   [S]   [A]   []    []    []    []    []    []    
[B, C][S]   [C]   [S]   [A]   []    []    []    []    []    
[S]   [B, C][S]   [C]   [S]   [A]   []    []    []    []    
[B, C][S]   [B, C][S]   [C]   [S]   [A]   []    []    []    
[S]   [B, C][S]   [B, C][S]   [C]   [S]   [A]   []    []    
[B, C][S]   [B, C][S]   [B, C][S]   [C]   [S]   [A]   []    
[S]   [B, C][S]   [B, C][S]   [B, C][S]   [C]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->AA }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->SB }]

word='abaabaabab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B, S]   []       []       []       []       []       []       []       []       
[S]      [C]      [B]      []       []       []       []       []       []       []       
[C]      [S]      []       [B]      []       []       []       []       []       []       
[S]      [S, C]   []       []       [B, S]   []       []       []       []       []       
[B, S, C][S, C]   []       [S]      [C]      [B]      []       []       []       []       
[S, C]   [B, S, C][S]      [C]      [S]      []       [B]      []       []       []       
[B, S, C][S, C]   [S, C]   [S]      [S, C]   []       []       [B, S]   []       []       
[B, S, C][B, S, C][S, C]   [B, S, C][S, C]   []       [S]      [C]      [B]      []       
[B, S, C][B, S, C][S, C]   [S, C]   [B, S, C][S]      [S, C]   [S]      []       [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->CB }, { A-->SB }]
B[{ B-->SA }, { B-->a }, { B-->CC }]
C[{ C-->b }]
S[{ S-->b }, { S-->BS }]

word='abaabaabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [C, S][]    []    []    []    []    []    []    []    
[A]   [A]   [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[A]   [A]   [S]   [S]   [C, S][]    []    []    []    []    
[B]   [B]   [A]   [A]   [A]   [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[B, S][B, S][A]   [A]   [A]   [S]   [S]   [C, S][]    []    
[A]   [A]   [B]   [B]   [B]   [A]   [A]   [A]   [B]   []    
[A, S][A, S][B, S][B, S][B, S][A]   [A]   [A]   [S]   [C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->CS }]
S[{ S-->a }, { S-->AA }, { S-->b }]

word='abaabaabab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A, S][A]   [A, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, S][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }]
S[{ S-->SA }, { S-->a }]
C[{ C-->CB }, { C-->CC }, { C-->CS }, { C-->AB }]

word='abaabaabab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [A]   [A, S][]    []    []    []    []    []    []    
[S]   [A]   [A, S][A, S][]    []    []    []    []    []    
[S]   [A]   [A, S][S]   [A]   []    []    []    []    []    
[S]   [A]   [A, S][S]   [A]   [A, S][]    []    []    []    
[S]   [A]   [A, S][S]   [A]   [A, S][A, S][]    []    []    
[S]   [A]   [A, S][S]   [A]   [A, S][S]   [A]   []    []    
[S]   [A]   [A, S][S]   [A]   [A, S][S]   [A]   [A, S][]    
[S]   [A]   [A, S][S]   [A]   [A, S][S]   [A]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
C[{ C-->BA }, { C-->CB }, { C-->a }, { C-->AA }, { C-->b }]
S[{ S-->AS }, { S-->CA }, { S-->CS }]

word='abaabaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[A, S]   [S]      [S]      [S]      [A, C]   []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[A, S]   [A, C, S][A, S]   [A, S]   [S]      [S]      [S]      [A, C]   []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A, C, S][A, S, C][A, S]   [A, S]   [A, C, S][A, S]   [A, S]   [S]      [S]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->BA }]
C[{ C-->a }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->SS }]

word='abababbaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[S]      [B]      [C]      []       []       []       []       []       []       []       
[S]      [A]      [S]      [B]      []       []       []       []       []       []       
[S]      [A, S]   [S]      [B]      [C]      []       []       []       []       []       
[S]      [A, B, S][S]      [A]      [S]      [B]      []       []       []       []       
[S]      [A]      [S]      [B]      []       [A]      [B]      []       []       []       
[S]      [A, B, S][S]      [A, B]   []       [A, S]   [B]      [C]      []       []       
[S]      [A, B, S][S]      [A, B, S][]       [A, S]   [B]      []       [C]      []       
[S]      [A, B, S][S]      [A, B, S][]       [A, S]   [B]      []       []       [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->b }]
C[{ C-->BA }, { C-->a }]
S[{ S-->CA }, { S-->CB }]

word='abababbaaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[]       [C]      [A, C]   []       []       []       []       []       []       []       
[A]      [S]      [S]      [A, B]   []       []       []       []       []       []       
[]       []       []       [C]      [A, C]   []       []       []       []       []       
[S]      [A, C]   [A]      [S]      [S]      [A, B]   []       []       []       []       
[A]      [S]      [S]      [A, C]   [A]      [C]      [A, B]   []       []       []       
[A, S]   [A, S, C][A, S]   [A, C, S][A]      [S]      [C]      [A, C]   []       []       
[A, S]   [A, S, C][A, S]   [A, S]   [S]      [A]      [S]      [S]      [A, C]   []       
[A, S]   [A, S, C][A, S]   [A, C, S][A]      [C, S]   [A, C]   [A]      [S]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }]
C[{ C-->a }, { C-->SC }, { C-->AB }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->CC }]

word='abababbaaa'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S, C][B]   [C, S][]    []    []    []    []    []    []    
[S]   [B]   [S]   [B]   []    []    []    []    []    []    
[S, C][B]   [S, C][B]   [C, S][]    []    []    []    []    
[S]   [B]   [S]   [B]   [S]   [B]   []    []    []    []    
[S]   [B]   [S]   [B]   [S]   []    [B]   []    []    []    
[S, C][B]   [S, C][B]   [S, C][]    [B]   [C, S][]    []    
[S, C][B]   [S, C][B]   [S, C][]    [B]   [C, S][C, S][]    
[S, C][B]   [S, C][B]   [S, C][]    [B]   [C, S][C, S][C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AC }, { A-->BA }, { A-->SB }]
B[{ B-->BS }, { B-->a }, { B-->SS }]
C[{ C-->AB }]
S[{ S-->BC }]

word='abababbaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[S, C]   [C]      [B]      []       []       []       []       []       []       []       
[]       []       [A]      [A]      []       []       []       []       []       []       
[A]      [A]      [S, C]   [C]      [B]      []       []       []       []       []       
[]       []       []       []       [A]      [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       [A]      [A]      [C]      [B]      []       []       
[A]      [A]      [A]      [A]      [S, C]   [C]      []       [A]      [B]      []       
[A, C, S][A, C]   [S, C]   [C]      [A]      []       [A]      [A, C]   [A]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AS }]
B[{ B-->b }, { B-->AC }]
C[{ C-->b }]
S[{ S-->SA }, { S-->CA }, { S-->SB }, { S-->AA }]

word='abababbaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [B, C]   []       []       []       []       []       []       []       []       
[A]      [S]      [A]      []       []       []       []       []       []       []       
[A, B]   [S]      [B]      [B, C]   []       []       []       []       []       []       
[A, S]   [S]      [A]      [S]      [A]      []       []       []       []       []       
[A, B, S][S]      [A, B]   [S]      [B]      [B, C]   []       []       []       []       
[A, B, S][S]      [A, B, S][S]      [S]      [A]      [B, C]   []       []       []       
[A, S]   [S]      [A, S]   [S]      [A, S]   [S]      [S]      [A]      []       []       
[A, S]   [S]      [A, S]   [S]      [A, S]   [A, S]   [S]      [S]      [A]      []       
[A, S]   [S]      [A, S]   [S]      [A, S]   [A, S]   [S]      [A, S]   [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->SB }, { S-->BB }, { S-->b }]
C[{ C-->AS }]

word='aaabbabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[B, S][B]   []    [S]   []    []    []    []    []    []    
[B, S][S]   [S]   [B]   [S]   []    []    []    []    []    
[B, S][B, S][S]   [B, S][S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->AS }, { C-->a }, { C-->CS }, { C-->AB }, { C-->BS }]
S[{ S-->CB }]

word='aaabbabbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       [C]      [S]      [B]      []       []       []       []       []       []       
[C]      [S]      []       []       [B]      []       []       []       []       []       
[C]      [S]      []       []       [B]      [C]      []       []       []       []       
[C, S]   [C]      [S]      [B]      [C]      [S]      [B]      []       []       []       
[S, C]   [C, S]   []       [C]      [S]      []       []       [B]      []       []       
[S, C]   [C, S]   []       [C]      [S]      []       []       [B]      [C]      []       
[C, S]   [C, S]   [C, S]   [B, C, S][C]      [S]      [B]      [C]      [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BC }, { B-->CA }]
S[{ S-->BA }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->SC }]

word='aaabbabbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       [C]      [A, S]   []       []       []       []       []       []       
[]       []       [B]      [C]      [A, S]   []       []       []       []       []       
[]       [C]      [S]      [B]      []       [A]      []       []       []       []       
[]       [B]      [B, C]   [C, S]   [C]      [C]      [A, S]   []       []       []       
[C]      [S, C]   [B, C, S][B]      [B]      [B]      [C]      [A, S]   []       []       
[B]      [B, C]   [B, C, S][C, S]   [C, S]   [S]      [B]      []       [A]      []       
[S, C]   [B, C, S][B, C, S][B, C, S][B, C]   [B, C]   [C, S]   [C]      [C]      [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CS }]
C[{ C-->AS }, { C-->a }, { C-->BB }, { C-->BS }]
S[{ S-->CB }, { S-->SC }]

word='aaabbabbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[S]   [B]   [S]   [B]   []    []    []    []    []    []    
[]    [C]   []    [C]   [B]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[S]   [B]   [S]   [B]   [C]   [S]   [B]   []    []    []    
[]    [C]   []    [C]   [S]   []    [C]   [B]   []    []    
[]    [C]   []    [C]   [S]   []    []    []    [C]   []    
[B, S][B, S][B, S][B, S][C]   [S]   [B]   [C]   [S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }, { A-->SB }]
B[{ B-->a }]
C[{ C-->BB }, { C-->b }]
S[{ S-->CA }, { S-->AA }, { S-->CC }, { S-->BS }]

word='aaabbabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[S]   [S]   []    [A, C][]    []    []    []    []    []    
[S]   [S]   [S]   [A, S][A, C][]    []    []    []    []    
[A, S][A, S][A]   [A]   []    [B]   []    []    []    []    
[A, S][A, S][A, S][A, S][]    []    [A, C][]    []    []    
[A, S][A, S][A, S][A, S][]    [S]   [A, S][A, C][]    []    
[A, S][A, S][A, S][A, S][S]   [A]   [A]   []    [B]   []    
[A, S][A, S][A, S][A, S][S]   [A, S][A, S][]    []    [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AC }, { B-->BA }, { B-->SB }, { B-->a }, { B-->SS }]
C[{ C-->a }, { C-->AB }, { C-->BC }]
S[{ S-->SC }, { S-->b }]

word='babbababaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B, S]   [B, C]   []       []       []       []       []       []       []       []       
[B]      []       [S]      []       []       []       []       []       []       []       
[B]      []       [B]      [S]      []       []       []       []       []       []       
[B, C, S][C]      [B, C]   [B, S]   [B, C]   []       []       []       []       []       
[B]      []       [B]      [B]      []       [S]      []       []       []       []       
[B, C, S][C]      [B, S, C][B, C]   []       [B, S]   [B, C]   []       []       []       
[B]      []       [B]      [B]      []       [B]      []       [S]      []       []       
[B, C, S][C]      [B, S, C][B, S, C][C]      [B, C]   []       [B, S]   [B, C]   []       
[B, C, S][C]      [B, S, C][B, S, C][C]      [B, S, C][C]      [B, S, C][C]      [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->CB }]
S[{ S-->AC }, { S-->a }, { S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->b }]

word='babbababaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A, S][S]   []    []    []    []    []    []    []    []    
[A, S][S]   [S, C][]    []    []    []    []    []    []    
[A, S][S]   [A, S][S, C][]    []    []    []    []    []    
[A, S][S]   [A, S][A, S][S]   []    []    []    []    []    
[A, S][S]   [A, S][A, S][S]   [S, C][]    []    []    []    
[A, S][S]   [A, S][A, S][S]   [A, S][S]   []    []    []    
[A, S][S]   [A, S][A, S][S]   [A, S][S]   [S, C][]    []    
[A, S][S]   [A, S][A, S][S]   [A, S][S]   [A, S][S]   []    
[A, S][S]   [A, S][A, S][S]   [A, S][S]   [A, S][S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->CA }, { C-->CS }, { C-->b }]
S[{ S-->CB }, { S-->SB }, { S-->BB }, { S-->SC }, { S-->b }]

word='babbababaa'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [C, S][]    []    []    []    []    []    []    
[S]   []    [C, S][C, S][]    []    []    []    []    []    
[S]   []    [C, S][S]   [B]   []    []    []    []    []    
[S]   []    [C, S][S]   []    [C, S][]    []    []    []    
[S]   []    [C, S][S]   []    [S]   [B]   []    []    []    
[S]   []    [C, S][S]   []    [S]   []    [C, S][]    []    
[S]   []    [C, S][S]   []    [S]   []    [S]   [B]   []    
[S]   []    [C, S][S]   []    [S]   []    [C, S][S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->AA }, { C-->b }]
S[{ S-->BC }, { S-->BS }]

word='babbababaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[S]   [C]   [A, S][B, C][]    []    []    []    []    []    
[C, S][C]   [S, C][C]   [A]   []    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[]    []    []    []    []    []    []    [B, C][]    []    
[]    []    []    []    []    []    []    [C]   [A]   []    
[S]   [C]   [S]   [S]   [C]   [S]   [C]   [S]   [C]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }]
B[{ B-->b }, { B-->SA }]
S[{ S-->CA }, { S-->BA }]
C[{ C-->AC }, { C-->CS }]

word='babbababaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[B]   []    [A, B][]    []    []    []    []    []    []    
[S]   []    [S]   [A, B][]    []    []    []    []    []    
[B]   []    [B]   [S]   [A]   []    []    []    []    []    
[S]   []    [S]   [B]   []    [A, B][]    []    []    []    
[B]   []    [B]   [S]   []    [S]   [A]   []    []    []    
[S]   []    [S]   [B]   []    [B]   []    [A, B][]    []    
[B]   []    [B]   [S]   []    [S]   []    [S]   [A]   []    
[S]   []    [S]   [B]   []    [B]   []    [B]   []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AC }, { B-->BA }, { B-->CS }]
S[{ S-->CA }, { S-->SB }, { S-->a }]
C[{ C-->AA }]

word='abbbaababa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[B, S][C]   [A]   []    []    []    []    []    []    []    
[B, S][B, S][C]   [A]   []    []    []    []    []    []    
[B, S][B]   [B, S][C]   [A, S][]    []    []    []    []    
[B, S][B]   [B]   [B, S][C]   [A, S][]    []    []    []    
[B, S][B, S][B]   [B]   [B, S][C]   [A]   []    []    []    
[B, S][B, S][B, S][B]   [B, S][B, S][C]   [A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][C]   [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][C]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }, { B-->CS }]
S[{ S-->a }, { S-->BB }, { S-->CC }]
C[{ C-->SC }]

word='abbbaababa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B]   []    []    []    []    []    []    []    []    
[B, S][S]   [B]   []    []    []    []    []    []    []    
[B, S][B]   [S]   [B]   []    []    []    []    []    []    
[B, S][B, S][B]   [S]   [B, S][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->CA }, { A-->BA }]
B[{ B-->CB }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SC }]
S[{ S-->AA }]

word='abbbaababa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A]      []       []       []       []       []       []       []       []       
[S]      [S]      [A]      []       []       []       []       []       []       []       
[]       []       [S]      [A]      []       []       []       []       []       []       
[B]      []       [B]      [S]      [A, B]   []       []       []       []       []       
[A, B, S][B, S]   [A, B]   [B, S]   [A, B, S][A, B]   []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [A, B]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, S]   [A]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B, S]   [S]      [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AA }, { B-->BB }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->b }]

word='abbbaababa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [B, S][B, C][]    []    []    []    []    []    []    
[S]   [B, S][B, S][B, C][]    []    []    []    []    []    
[S]   [S]   [S]   []    [S]   []    []    []    []    []    
[S]   [S]   [S]   []    [S]   [S]   []    []    []    []    
[S]   [S]   [S]   []    [S]   [S]   [B, C][]    []    []    
[S]   [S]   [S]   []    [S]   [S]   []    [S]   []    []    
[S]   [S]   [S]   []    [S]   [S]   []    [S]   [B, C][]    
[S]   [S]   [S]   []    [S]   [S]   []    [S]   []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->SC }, { S-->CS }, { S-->BS }]
C[{ C-->SS }, { C-->b }]

word='abbbaababa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[S]   []    []    [C]   []    []    []    []    []    []    
[C]   [A, S][A, S][A, S][A, S][]    []    []    []    []    
[A, S][C]   [C]   [C]   [C]   [A, S][]    []    []    []    
[S]   [C]   [C]   [C]   [C]   [S]   [C]   []    []    []    
[C]   [A, S][A, S][A, S][A, S][C]   [A, S][A, S][]    []    
[C]   [S]   [S]   [S]   [S]   [C]   [S]   [S]   [C]   []    
[A, S][C]   [C]   [C]   [C]   [A, S][C]   [C]   [A, S][A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->BA }, { C-->a }, { C-->AB }]
S[{ S-->AA }, { S-->SS }, { S-->CS }, { S-->b }]

word='ababbaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BC }]
C[{ C-->CB }, { C-->a }, { C-->BB }, { C-->SC }, { C-->b }]
S[{ S-->AC }, { S-->CA }]

word='ababbaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[C]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [C]   [S]   [A, C][]    []    []    []    []    []    
[C]   [S]   [C]   [S]   [A, C][]    []    []    []    []    
[]    [C]   []    [C]   [S]   [C]   []    []    []    []    
[C]   [S]   [C]   [S]   [C]   []    [C]   []    []    []    
[S]   [C]   [S]   [C]   [S]   []    [S]   [A, C][]    []    
[C]   [S]   [C]   [S]   [C]   []    [C]   [S]   [A, C][]    
[S]   [C]   [S]   [C]   [S]   []    [S]   [C]   [S]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->CA }, { B-->a }]
C[{ C-->SS }, { C-->b }]
S[{ S-->AS }, { S-->SB }, { S-->SC }, { S-->AB }]

word='ababbaabbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [B, C]   []       []       []       []       []       []       []       []       
[S]      [B]      [A, B]   []       []       []       []       []       []       []       
[S, C]   []       [S]      [B, C]   []       []       []       []       []       []       
[S, C]   []       [S]      []       [B, C]   []       []       []       []       []       
[B, S, C][]       [S]      []       [B]      [A, B]   []       []       []       []       
[B, C, S][]       [C, S]   []       []       [S]      [A, B]   []       []       []       
[C, S]   []       [C, S]   []       []       [S]      [S]      [B, C]   []       []       
[C, S]   []       [C, S]   []       []       [S]      [S]      []       [B, C]   []       
[C, S]   []       [C, S]   []       []       [S]      [S]      []       []       [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->b }]
S[{ S-->AC }, { S-->a }]
C[{ C-->SA }, { C-->SS }, { C-->CC }, { C-->SC }]

word='ababbaabbb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, B]   []       []       []       []       []       []       []       []       
[]       []       [A, S]   []       []       []       []       []       []       []       
[C, S]   [S]      [A, C]   [A, B]   []       []       []       []       []       []       
[A, C, S][A, C]   []       []       [A, B]   []       []       []       []       []       
[C]      []       []       []       []       [A, S]   []       []       []       []       
[C, S]   [C, S]   []       []       [S]      [C]      [A, S]   []       []       []       
[A, C, S][A, C, S][C, S]   [S]      [A, S, C][S, C]   [A, C]   [A, B]   []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C]   []       []       [A, B]   []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, C]   []       []       []       []       [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BC }]
B[{ B-->a }]
S[{ S-->AS }, { S-->BA }, { S-->SB }, { S-->b }]
C[{ C-->CB }]

word='ababbaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[S]   [A]   []    [S]   []    []    []    []    []    []    
[A, S][A, S][S]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][S]   [A]   [S]   [B]   []    []    []    []    
[A, S][A, S][S]   [A]   [S]   []    [B]   []    []    []    
[A, S][A, S][A]   [S]   [A]   []    []    [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][]    [S]   [A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   [A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->BA }]
C[{ C-->SB }, { C-->a }, { C-->SC }, { C-->BC }]
S[{ S-->CC }, { S-->b }]

word='baaabbbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A, S][S]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [S]   [C]   []    []    []    []    []    []    
[]    []    [A]   []    [S]   []    []    []    []    []    
[]    []    []    []    [A]   [S]   []    []    []    []    
[]    []    [A]   []    []    [A]   [S]   []    []    []    
[A, S][A, S][C]   [S]   [C]   [C]   [C]   [C]   []    []    
[C]   [C]   [A, S][C]   [A, S][A, S][A, S][S]   [C]   []    
[A, S][A, S][C]   [A, S][C]   [C]   [C]   [C]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->AC }, { A-->AS }, { A-->CB }, { A-->SB }]
B[{ B-->a }]
C[{ C-->a }, { C-->b }]
S[{ S-->AA }]

word='baaabbbaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[A]   [A]   [B, C][]    []    []    []    []    []    []    
[A, S][A]   [A]   [B, C][]    []    []    []    []    []    
[A, S][A]   [A]   []    [C]   []    []    []    []    []    
[A, S][A]   [A]   []    []    [C]   []    []    []    []    
[A, S][A]   [A]   []    []    []    [C]   []    []    []    
[A, S][A, S][A, S][]    []    []    [A]   [B, C][]    []    
[A, S][A, S][A, S][]    []    []    [A]   [A]   [B, C][]    
[A, S][A, S][A, S][]    []    []    [A, S][A]   [A]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->b }, { B-->AA }]
S[{ S-->BA }, { S-->BB }, { S-->BS }]

word='baaabbbaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [B]      [A]      []       []       []       []       []       []       []       
[A, S]   [S]      [B]      [A]      []       []       []       []       []       []       
[A, S]   [A]      [S]      []       [B]      []       []       []       []       []       
[A, S]   [B]      [A, S]   []       [S]      [B]      []       []       []       []       
[A, B, S][B, S]   [A, S]   [B]      [A, S]   [S]      [B]      []       []       []       
[A, B, S][A, S]   [B, S]   [S]      [B, S]   [S]      [S]      [A]      []       []       
[A, B, S][A, B, S][A, S]   [B, S]   [A, S]   [A, S]   [S]      [B]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->CC }]
C[{ C-->AS }, { C-->a }, { C-->BB }, { C-->SC }, { C-->BC }]
S[{ S-->AC }, { S-->b }]

word='baaabbbaaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[C, S]   [C]      []       []       []       []       []       []       []       []       
[B, C]   [B]      [C]      []       []       []       []       []       []       []       
[B, C, S][C]      [B]      [C]      []       []       []       []       []       []       
[B]      []       []       []       [A, S]   []       []       []       []       []       
[B, C, S][B, C]   [C]      [B]      [B, C]   [A, S]   []       []       []       []       
[B, C, S][B, C]   [C]      [B]      [C, S]   [B, C]   [A, S]   []       []       []       
[B, C, S][B, C]   [B, C]   [B, C]   [B, C, S][B, C, S][C, S]   [C]      []       []       
[B, C, S][B, C]   [B, C]   [B, C]   [B, C, S][B, C, S][B, C]   [B]      [C]      []       
[B, C, S][B, C]   [B, C]   [B, C]   [B, C, S][B, C, S][B, C, S][C]      [B]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->a }]
S[{ S-->BA }, { S-->BB }, { S-->BC }]
C[{ C-->AC }, { C-->CC }]

word='baaabbbaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[A][S][B][] [] [] [] [] [] [] 
[S][A][S][B][] [] [] [] [] [] 
[A][S][A][S][B][] [] [] [] [] 
[S][A][S][A][S][B][] [] [] [] 
[A][S][A][S][A][S][B][] [] [] 
[S][A][S][A][S][A][S][B][] [] 
[A][S][A][S][A][S][A][S][B][] 
[S][A][S][A][S][A][S][A][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->b }]
S[{ S-->AC }, { S-->CB }, { S-->a }, { S-->SC }, { S-->BS }]
C[{ C-->SA }, { C-->SS }]

word='abaabbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [C]   [C]   [S]   []    []    []    []    []    []    
[C]   [S]   [S]   []    [B]   []    []    []    []    []    
[S]   []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[C, S][S, C][S, C][C]   [S]   [S]   [S]   [S]   []    []    
[S, C][C, S][C, S][S]   []    []    []    []    [B]   []    
[S, C][S, C][S, C][S, C][C]   [C]   [C]   [C]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->BS }, { A-->CA }]
B[{ B-->b }, { B-->SB }]
S[{ S-->SA }, { S-->a }, { S-->CS }, { S-->b }]

word='abaabbbaba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [B, S]   []       []       []       []       []       []       []       []       
[A, S]   [A]      [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      [S]      []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [B, S]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->BC }, { B-->BB }]
S[{ S-->AS }, { S-->a }, { S-->BS }]
C[{ C-->CA }]

word='abaabbbaba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->AB }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->CA }]
S[{ S-->AA }, { S-->CC }]

word='abaabbbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[A, S][S]   [A]   []    []    []    []    []    []    []    
[A, S][A]   [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, B][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, B][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, B][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, B][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->CB }, { B-->AA }]
S[{ S-->BA }, { S-->SC }, { S-->BC }]

word='abaabbbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[B]      [S]      [A]      []       []       []       []       []       []       []       
[A, S]   []       [B]      [A]      []       []       []       []       []       []       
[A, S]   []       [B]      [A]      [B]      []       []       []       []       []       
[A, S]   []       [B]      [A]      []       [B]      []       []       []       []       
[A, S]   []       [B]      [A]      []       []       [B]      []       []       []       
[A, B, S][B, S]   [A, B, S][A, B]   []       [B]      [S]      [A]      []       []       
[A, B, S][B, S]   [A, B, S][A, B]   []       [B]      [S]      [A]      [B]      []       
[A, B, S][B, S]   [A, B, S][A, B, S][B]      [B, S]   []       [B]      [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }, { A-->AB }, { A-->SA }, { A-->CA }]
B[{ B-->a }]
S[{ S-->BA }, { S-->CS }, { S-->b }]

word='abaaaaaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[S]   [A]   []    [B]   []    []    []    []    []    []    
[S]   [A]   []    []    [B]   []    []    []    []    []    
[S]   [A]   []    []    []    [B]   []    []    []    []    
[S]   [A]   []    []    []    []    [B]   []    []    []    
[S]   [A]   []    []    []    []    []    [B]   []    []    
[A, S][A]   []    []    []    []    []    [S]   [A, S][]    
[A, S][A]   []    []    []    []    [S]   [A, S][A]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->AB }, { B-->SC }]
C[{ C-->a }]
S[{ S-->AS }, { S-->SA }, { S-->SS }, { S-->b }]

word='abaaaaaabb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[B, S][B, S][A, C][]    []    []    []    []    []    []    
[B, S][B, S][A]   [A, C][]    []    []    []    []    []    
[B, S][B, S][]    [A]   [A, C][]    []    []    []    []    
[B, S][B, S][]    []    [A]   [A, C][]    []    []    []    
[B, S][B, S][]    []    []    [A]   [A, C][]    []    []    
[B, S][B, S][]    []    []    []    [A]   [A, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CA }, { B-->SC }, { B-->CS }]
C[{ C-->b }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->BC }]

word='abaaaaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[C]      [B]      [A]      []       []       []       []       []       []       []       
[B]      []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[B, C]   [B]      [S]      [S]      [S]      [S]      [S]      [S]      [C]      []       
[B, S, C][B, S]   [B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B]      []       [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->AC }, { C-->CA }, { C-->BB }]
S[{ S-->AS }, { S-->SB }, { S-->CC }, { S-->SC }]

word='abaaaaaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][B][] [] [] [] [] [] [] [] 
[] [C][B][] [] [] [] [] [] [] 
[S][] [C][B][] [] [] [] [] [] 
[S][S][] [C][B][] [] [] [] [] 
[S][S][S][] [C][B][] [] [] [] 
[S][S][S][S][] [C][B][] [] [] 
[S][S][S][S][S][] [C][B][] [] 
[S][S][S][S][S][S][] [C][B][] 
[S][S][S][S][S][S][S][] [C][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }]
S[{ S-->AS }, { S-->SA }, { S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->b }]

word='abaaaaaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   []    [A]   []    []    []    []    []    []    
[S]   [S]   []    []    [A]   []    []    []    []    []    
[S]   [S]   []    []    []    [A]   []    []    []    []    
[S]   [S]   []    []    []    []    [A]   []    []    []    
[S]   [S]   []    []    []    []    []    [A]   []    []    
[S]   [S]   [S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->SS }]
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->b }]

word='aababbaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[]       [B]      [S, C]   []       []       []       []       []       []       []       
[A]      []       [B]      [S]      []       []       []       []       []       []       
[C]      [A]      []       [B]      [S, C]   []       []       []       []       []       
[C, S]   [A, C]   [A]      [B]      [B, S]   [S, C]   []       []       []       []       
[B]      [C]      [A, C]   [A]      [B]      [B]      [S]      []       []       []       
[]       [B]      [S, C]   [A, C]   [A]      []       [B]      [S]      []       []       
[A, C]   [B]      [B, S]   [C]      [A, C]   [A]      []       [B]      [S]      []       
[A, C, S][A, C]   [B]      [B, S]   [S, C]   [C]      [A]      []       [B]      [S, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SA }]
C[{ C-->a }, { C-->BB }, { C-->b }]
S[{ S-->CB }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BS }]

word='aababbaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C, S][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C, S][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AB }, { B-->a }]
C[{ C-->AS }, { C-->BA }, { C-->SB }, { C-->SS }]
S[{ S-->BC }, { S-->BS }]

word='aababbaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[S]      [C]      [A]      []       []       []       []       []       []       []       
[C]      []       [B]      [B]      []       []       []       []       []       []       
[S]      [S]      [C]      [C]      [A]      []       []       []       []       []       
[A, C]   [A]      []       []       []       [A]      []       []       []       []       
[B, C, S][B, C]   []       []       [B]      [B]      [B]      []       []       []       
[C]      []       []       []       []       []       []       [B]      []       []       
[]       []       []       []       []       []       []       []       [B]      []       
[C, S]   [C, S]   [C, S]   [S]      [C, S]   [C, S]   [S]      [S]      [C]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }, { A-->CB }]
B[{ B-->AS }]
C[{ C-->SA }, { C-->a }, { C-->b }]
S[{ S-->CS }, { S-->b }]

word='aababbaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C, S][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C, S][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SS }]
S[{ S-->CA }, { S-->SB }, { S-->CC }, { S-->SC }, { S-->b }, { S-->AB }]

word='aababbaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[C]   []    [S]   []    []    []    []    []    []    []    
[S, C][]    [S]   [C]   []    []    []    []    []    []    
[C, S][S]   [C]   []    [S]   []    []    []    []    []    
[S, C][C, S][C, S][S]   [C]   [S]   []    []    []    []    
[C, S][C, S][C, S][S]   [C, S][S]   [C]   []    []    []    
[S, C][C, S][C, S][S, C][C, S][C, S][S]   [C]   []    []    
[S, C][C, S][C, S][S, C][C, S][C, S][S]   [S]   [C]   []    
[S, C][C, S][C, S][S, C][C, S][C, S][S, C][C]   []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BB }]
C[{ C-->CB }, { C-->a }, { C-->b }, { C-->BC }]
S[{ S-->AS }, { S-->SA }, { S-->SS }, { S-->CC }, { S-->AB }]

word='aababbaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[S][] [S][C][] [] [] [] [] [] 
[] [S][] [S][C][] [] [] [] [] 
[S][] [S][] [S][C][] [] [] [] 
[] [S][] [S][] [S][C][] [] [] 
[S][] [S][] [S][] [S][C][] [] 
[] [S][] [S][] [S][] [S][C][] 
[S][] [S][] [S][] [S][] [S][C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
C[{ C-->CB }, { C-->a }, { C-->b }]
S[{ S-->AC }, { S-->BA }, { S-->BB }, { S-->SC }, { S-->BS }]

word='aababbaaaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C, S]   [B, C]   []       []       []       []       []       []       []       []       
[S]      []       [C]      []       []       []       []       []       []       []       
[S]      []       [C]      [B, C]   []       []       []       []       []       []       
[S]      []       []       []       [C]      []       []       []       []       []       
[S]      []       []       []       []       [C]      []       []       []       []       
[S]      []       []       []       []       [C]      [B, C]   []       []       []       
[B, S]   []       []       []       []       [C]      [C, S]   [B, C]   []       []       
[B, S]   []       []       []       []       [C]      [S, C]   [C, S]   [B, C]   []       
[B, S]   []       []       []       []       [C]      [B, S, C][S, C]   [C, S]   [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->b }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->BB }]
C[{ C-->SA }, { C-->SS }]

word='aababbaaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[C]      []       [S]      [B]      []       []       []       []       []       []       
[B]      [C]      []       [S]      [B]      []       []       []       []       []       
[A, S]   [B]      [C]      []       [S]      [B]      []       []       []       []       
[]       [A, S]   [B]      [C]      []       [S]      [B]      []       []       []       
[B, C]   []       [A, S]   [B]      [C]      []       [S]      [B]      []       []       
[B, S]   [B, C]   []       [A, S]   [B]      [C]      []       [S]      [B]      []       
[A, B, S][B, S]   [B, C]   []       [A, S]   [B]      [C]      []       [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
C[{ C-->a }, { C-->b }, { C-->BS }]
S[{ S-->CA }, { S-->SS }, { S-->CC }, { S-->BC }]

word='aababbaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[A][S][C][] [] [] [] [] [] [] 
[S][A][S][C][] [] [] [] [] [] 
[A][S][A][S][C][] [] [] [] [] 
[S][A][S][A][S][C][] [] [] [] 
[A][S][A][S][A][S][C][] [] [] 
[S][A][S][A][S][A][S][C][] [] 
[A][S][A][S][A][S][A][S][C][] 
[S][A][S][A][S][A][S][A][S][C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AC }, { B-->AA }]
S[{ S-->a }, { S-->SC }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->SS }, { C-->b }, { C-->AB }]

word='aababbaaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[S][C][] [S][] [] [] [] [] [] 
[S][C][] [S][C][] [] [] [] [] 
[S][C][] [S][] [C][] [] [] [] 
[C][S][] [C][] [] [S][] [] [] 
[S][C][] [S][] [] [C][S][] [] 
[C][S][] [C][] [] [S][C][S][] 
[S][C][] [S][] [] [C][S][C][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->SB }]
B[{ B-->b }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->SC }, { S-->AB }]

word='bbbbabbaba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[A, S][A, S][A, B][]    []    []    []    []    []    []    
[A, S][A, S][A, S][A, B][]    []    []    []    []    []    
[C, S][C, S][C, S][C]   [C]   []    []    []    []    []    
[A]   [A]   [A]   []    []    [A, B][]    []    []    []    
[S]   [S]   [S]   []    []    [A, S][A, B][]    []    []    
[C, S][C, S][C, S][C]   [C]   [C, S][C]   [C]   []    []    
[A]   [A]   [A]   []    []    [A]   []    []    [A, B][]    
[C, S][C, S][C, S][C]   [C]   [C, S][C]   [C]   [C]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }]
C[{ C-->SA }, { C-->a }, { C-->BB }]
S[{ S-->CB }, { S-->AB }]

word='bbbbabbaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B, S][C]   [B]   []    []    []    []    []    []    []    
[C]   [B, S][C]   [B]   []    []    []    []    []    []    
[C]   [B, S][C]   [B]   [C]   []    []    []    []    []    
[B, S][C]   [B, S][C]   [S]   [B]   []    []    []    []    
[C]   [B, S][C]   [B, S][]    [C]   [B]   []    []    []    
[C]   [B, S][C]   [B, S][]    [C]   [B]   [C]   []    []    
[B, S][C]   [B, S][C]   [S]   [B, S][C]   [S]   [B]   []    
[B, S][C]   [B, S][C]   [S]   [B, S][C]   [S]   [B]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->CA }, { B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->a }, { S-->CS }, { S-->BC }]
C[{ C-->b }]

word='bbbbabbaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [B, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   []       [C]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B, S][A, B, S][A, S]   [C]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->CA }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }]

word='bbbbabbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [B]   [S]   [S]   []    []    []    
[S]   [S]   [S]   [S]   [B]   [S]   [S]   [A]   []    []    
[S]   [S]   [S]   [S]   [B, S][S]   [S]   [B]   [S]   []    
[S]   [S]   [S]   [S]   [B, S][S]   [S]   [B]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->CC }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->CB }, { S-->BC }]

word='bbbbabbaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[S]      [B]      [C]      []       []       []       []       []       []       []       
[]       [S]      [B]      [C]      []       []       []       []       []       []       
[C]      []       [S]      [B]      [C]      []       []       []       []       []       
[A, B]   [C]      []       [S]      [B]      [C]      []       []       []       []       
[S, C]   [A, B]   [C]      []       [S]      [B]      [C]      []       []       []       
[B, C]   [S, C]   [A, B]   [C]      []       [S]      [B]      [C]      []       []       
[B, C, S][B, C]   [C, S]   [A, B]   [C]      []       [S]      [B]      [C]      []       
[A, B, S][B, C, S][B, C]   [C, S]   [A, B]   [C]      []       [S]      [B]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
B[{ B-->SA }]
C[{ C-->BA }]
S[{ S-->AA }, { S-->SS }]

word='abaabbbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[B]   [S]   [A]   []    []    []    []    []    []    []    
[C, S][B]   [S]   [A]   []    []    []    []    []    []    
[A, B][S, C][B]   [S]   [A]   []    []    []    []    []    
[S, C][A, B][S, C][B]   [S]   [A]   []    []    []    []    
[A, B][S, C][A, B][S, C][B]   [S]   [A]   []    []    []    
[C, S][A, B][S, C][A, B][S, C][B]   [S]   [A]   []    []    
[A, B][S, C][A, B][S, C][A, B][S, C][B]   [S]   [A]   []    
[C, S][A, B][S, C][A, B][S, C][A, B][S, C][B]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->BS }, { B-->SA }, { B-->CA }, { B-->BA }]
S[{ S-->SB }, { S-->a }, { S-->b }]

word='abaabbbbbb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A, S]   [B]      [A, S]   []       []       []       []       []       []       []       
[A, B, S][B, S]   [B]      [A, S]   []       []       []       []       []       []       
[A, B, S][B, S]   [B]      []       [S]      []       []       []       []       []       
[A, B, S][B, S]   [B]      []       []       [S]      []       []       []       []       
[A, B, S][B, S]   [B]      []       []       []       [S]      []       []       []       
[A, B, S][B, S]   [B]      []       []       []       []       [S]      []       []       
[A, B, S][B, S]   [B]      []       []       []       []       []       [S]      []       
[A, B, S][B, S]   [B]      []       []       []       []       []       []       [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BC }]
B[{ B-->a }]
C[{ C-->AC }, { C-->AA }, { C-->CC }, { C-->CS }, { C-->b }]
S[{ S-->CA }, { S-->SB }]

word='abbbbaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A, C]   [C]      [C]      []       []       []       []       []       []       []       
[A, C]   [C]      [C]      [C]      []       []       []       []       []       []       
[A, C]   [C]      [C]      [C]      [C]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[A, C, S][C, S]   [C, S]   [C, S]   [S]      [A]      [B]      []       []       []       
[A, C, S][C, S]   [C, S]   [C, S]   [S]      []       [A]      [B]      []       []       
[A, C, S][C, S]   [C, S]   [C, S]   [C, S]   [A, C]   [C]      [A]      [C]      []       
[A, C, S][C, S]   [C, S]   [C, S]   [S]      []       []       []       []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->SA }]
C[{ C-->a }, { C-->BB }, { C-->SS }, { C-->b }]
S[{ S-->CA }, { S-->CC }, { S-->CS }]

word='abbbbaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S, C][S]   [S]   [C]   []    []    []    []    []    []    
[C, S][C, S][S]   [S]   [C]   []    []    []    []    []    
[C, S][C, S][S, C][S]   [S]   [C]   []    []    []    []    
[C, S][C, S][S, C][S, C][S]   [S]   [C]   []    []    []    
[C, S][C, S][S, C][S, C][S, C][S]   [S]   [C]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S]   [S]   [C]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->b }, { B-->BB }]
C[{ C-->AS }, { C-->a }]
S[{ S-->AC }, { S-->BA }, { S-->SS }, { S-->SC }]

word='abbbbaaaba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       [B]      [B]      []       []       []       []       []       []       []       
[]       [B]      [B]      [B]      []       []       []       []       []       []       
[]       [B]      [B]      [B]      [B]      []       []       []       []       []       
[C]      [S]      [S]      [S]      [S]      [A, C]   []       []       []       []       
[A, C]   [S]      [S]      [S]      [S]      [A, S]   [A, C]   []       []       []       
[A, S, C][S]      [S]      [S]      [S]      [C, S]   [A, S]   [A, C]   []       []       
[]       []       []       []       []       []       []       []       [B]      []       
[A, S, C][S]      [S]      [S]      [S]      [A, C, S][A, S, C][C]      [S]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AS }, { B-->a }, { B-->AA }]
S[{ S-->CB }, { S-->a }, { S-->CC }, { S-->BC }, { S-->BS }]

word='abbbbaaaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[]    []    []    []    []    []    []    []    [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->SA }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->AS }, { C-->SB }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BC }]

word='abbbbaaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
C[{ C-->AC }, { C-->CB }, { C-->b }]
S[{ S-->SA }, { S-->CA }, { S-->AA }, { S-->CS }]

word='babababbaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[] [C][C][] [] [] [] [] [] [] 
[S][S][S][A][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[S][S][S][S][S][A][] [] [] [] 
[] [] [] [] [] [C][C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[S][S][S][S][S][S][S][S][A][] 
[S][S][S][S][S][S][S][S][S][A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->BC }, { S-->BS }]
C[{ C-->CB }, { C-->b }]

word='babababbaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AA }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->b }]
S[{ S-->CA }, { S-->BA }, { S-->CC }, { S-->b }, { S-->BS }]

word='babababbaa'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[B, S][C]   []    []    []    []    []    []    []    []    
[B, S][S]   [C, S][]    []    []    []    []    []    []    
[B, S][B]   [B, S][C]   []    []    []    []    []    []    
[B, S][S]   [B, S][S]   [C, S][]    []    []    []    []    
[B, S][B, S][B, S][B]   [B, S][C]   []    []    []    []    
[B, S][B, S][B, S][S]   [B, S][S]   [C, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B, S][C, S][]    []    
[B, S][B, S][B, S][B]   [B, S][]    [B]   [B, S][C]   []    
[B, S][B, S][B, S][S]   [B, S][S]   [S]   [B]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }, { A-->CB }]
B[{ B-->b }]
C[{ C-->BA }, { C-->SS }]
S[{ S-->SA }, { S-->CC }]

word='babababbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[A]   []    [B]   []    []    []    []    []    []    []    
[S]   []    [C]   [A]   []    []    []    []    []    []    
[A]   []    [A]   []    [B]   []    []    []    []    []    
[]    []    [S]   []    [C]   [A]   []    []    []    []    
[A, S][]    [A]   []    [A]   []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    [C]   [A]   []    
[C, S][]    []    []    [S]   []    [C]   [A]   []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->CB }]
S[{ S-->a }, { S-->CC }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->BS }]

word='babababbaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [A, S]   []       []       []       []       []       []       []       []       
[B, C]   [S]      [B]      []       []       []       []       []       []       []       
[C, S]   [C]      [C]      [A, S]   []       []       []       []       []       []       
[B, C, S][B, S]   [B, C]   [S]      [B]      []       []       []       []       []       
[S, C]   [S, C]   [S, C]   [C]      [C]      [A, S]   []       []       []       []       
[B, C, S][B, S, C][B, C, S][B, S]   [B, C]   [S]      [B]      []       []       []       
[B, C, S][B, S]   [B, C]   [S]      [B]      []       []       [B]      []       []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       [S]      [C]      [A, S]   []       
[S, C]   [S, C]   [S, C]   [S, C]   [S, C]   []       [C]      [S]      [C]      [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }, { A-->SA }]
B[{ B-->b }, { B-->AA }, { B-->SS }, { B-->CC }]
C[{ C-->a }, { C-->b }]
S[{ S-->BB }]

word='aaabbaaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A]      [B]      [C]      []       []       []       []       []       []       []       
[S]      [A, S]   [B]      [B, C]   []       []       []       []       []       []       
[A, B]   [A, S]   [A, S]   [A, B, S][B, C]   []       []       []       []       []       
[A, B]   [A, B]   [S]      [A, S]   [A, B]   [C]      []       []       []       []       
[A, B, S][A, B]   [A]      [A, S]   [A, S]   [B]      [C]      []       []       []       
[A, B, S][A, B, S][A, B]   [A, B]   [S]      [A]      [B]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [S]      [A, S]   [B]      [B, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [S]      [A]      [A, B]   [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->a }]
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->SB }, { C-->b }]

word='aaabbaaaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][B, S][]    []    []    []    []    []    []    []    
[S, C][S, C][B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][S]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->BA }, { B-->a }]
S[{ S-->b }, { S-->BC }]
C[{ C-->BB }, { C-->SS }, { C-->CC }, { C-->AB }]

word='aaabbaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S]      [C]      [B]      []       []       []       []       []       []       []       
[C, S]   [C]      [B]      [S]      []       []       []       []       []       []       
[C, S]   [B, C]   [B, S]   [C]      [S]      []       []       []       []       []       
[B, S, C][C, S]   [C]      []       []       [B]      []       []       []       []       
[B, C, S][B, C, S][S]      [C]      []       [C]      [B]      []       []       []       
[B, C, S][B, C, S][B, S, C][]       [C]      [S]      [C]      [B]      []       []       
[B, C, S][B, C, S][B, S, C][C]      [C]      [S, C]   [C]      [B]      [S]      []       
[B, C, S][B, C, S][S, C]   [C]      []       [B, C]   [S]      [C]      []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }]
C[{ C-->CA }, { C-->a }, { C-->CC }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BS }]

word='baabbbaaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, S][C]   [C]   []    []    []    []    []    []    []    
[C]   []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    [A]   [C]   []    []    []    
[S]   []    []    [S]   [S]   [A, S][C]   [C]   []    []    
[S]   []    []    [S]   [S]   [A, S][C]   [C]   [C]   []    
[S]   []    []    [S]   [S]   [A, S][C]   [C]   [C]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BS }, { B-->AS }, { B-->CB }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->CA }, { S-->AB }]

word='baabbbaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[S]   [B]   [A]   []    []    []    []    []    []    []    
[B]   [S]   [B]   [A]   []    []    []    []    []    []    
[B, S][B]   [S]   [B]   [A]   []    []    []    []    []    
[B, S][B, S][B]   [S]   [B]   [A]   []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [B]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B]   [S]   [B]   [A]   []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   [B]   [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [B]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->BS }]

word='baabbbaaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[S]   []    []    [A, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->BS }]
S[{ S-->CA }, { S-->a }, { S-->BB }, { S-->CC }]
C[{ C-->SA }]

word='baabbbaaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[B][] [S][] [] [] [] [] [] [] 
[S][] [] [B][] [] [] [] [] [] 
[B][] [] [S][B][] [] [] [] [] 
[S][] [] [B][S][B][] [] [] [] 
[S][] [] [B][S][B][S][] [] [] 
[S][] [] [B][S][B][] [S][] [] 
[S][] [] [B][S][B][] [] [S][] 
[S][] [] [B][S][B][] [] [] [S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
S[{ S-->SA }, { S-->b }]
C[{ C-->AS }, { C-->SB }, { C-->AB }, { C-->BC }, { C-->BS }]

word='baabbbaaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   []    [A]   []    []    []    []    []    []    []    
[S]   []    [C]   [A, S][]    []    []    []    []    []    
[S]   []    [C]   [S, C][A, S][]    []    []    []    []    
[S]   []    [A, C][C, S][S, C][A, S][]    []    []    []    
[S]   []    [A, C][C, S][C, S][S]   [A]   []    []    []    
[S]   []    [A, C][C, S][C, S][S]   []    [A]   []    []    
[S]   []    [A, C][C, S][C, S][S]   []    []    [A]   []    
[S]   []    [A, C][C, S][C, S][S]   []    []    []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->AB }, { B-->CA }, { B-->BA }, { B-->SC }]
C[{ C-->a }]
S[{ S-->SA }, { S-->a }, { S-->AA }]

word='bbbabbbbbb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [S]      [A]      []       []       []       []       []       []       []       
[B]      [B]      []       [C, S]   []       []       []       []       []       []       
[B]      [B]      [B]      [B, S]   [A]      []       []       []       []       []       
[A, B, S][A, B]   [B]      [B, S]   [S]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [S]      [A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [S]      [S]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [S]      [S]      [S]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][S]      [S]      [S]      [S]      [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AC }, { B-->BA }]
S[{ S-->SB }, { S-->AA }, { S-->SC }, { S-->CS }, { S-->b }]

word='bbbbbbaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B]   [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [B]   [S]   [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [B]   []    [S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   []    []    [S]   []    [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->SA }, { A-->SB }]
B[{ B-->CB }, { B-->a }]
C[{ C-->a }, { C-->SS }]
S[{ S-->AA }, { S-->CS }, { S-->b }]

word='bbbbbbaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[C]   [S]   [C]   [S]   []    []    []    []    []    []    
[S]   [C]   [S]   [C]   [S]   []    []    []    []    []    
[C]   [S]   [C]   [S]   [C]   [S]   []    []    []    []    
[A, B][A]   [A, B][A]   [A, B][A]   [B, C][]    []    []    
[A, B][A]   [A, B][A]   [A, B][A]   [B]   [B, C][]    []    
[A, B][A]   [A, B][A]   [A, B][A]   [B]   [B]   [B, C][]    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->AB }, { B-->SA }]
S[{ S-->BA }, { S-->a }]
C[{ C-->a }, { C-->SC }]

word='bbbbbbaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [S, C]   []       []       []       
[]       []       []       []       []       []       [A, C]   [S, C]   []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [A, B, C][A, C]   [S, C]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AS }]
S[{ S-->CA }, { S-->BA }, { S-->AA }, { S-->CS }, { S-->AB }]

word='bbbbbbaaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[A][S][A][] [] [] [] [] [] [] 
[S][A][S][A][] [] [] [] [] [] 
[A][S][A][S][A][] [] [] [] [] 
[S][A][S][A][S][A][] [] [] [] 
[A][S][A][S][A][S][A][] [] [] 
[S][A][S][A][S][A][S][A][] [] 
[A][S][A][S][A][S][A][S][A][] 
[S][A][S][A][S][A][S][A][S][A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->b }]
B[{ B-->a }, { B-->BB }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->CC }]

word='bbbbbbaaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [B][B][] [] 
[] [] [] [] [] [] [B][B][B][] 
[S][S][S][S][S][S][S][S][S][A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SA }, { A-->CA }]
B[{ B-->b }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->BB }, { C-->AB }]

word='bbbbabbaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][B][] [] [] [] [] [] [] [] 
[] [C][B][] [] [] [] [] [] [] 
[S][] [C][B][] [] [] [] [] [] 
[S][] [] [] [S][] [] [] [] [] 
[S][] [] [] [S][B][] [] [] [] 
[S][] [] [] [S][C][B][] [] [] 
[S][] [] [] [S][] [] [S][] [] 
[S][] [] [] [S][] [] [S][S][] 
[S][] [] [] [S][] [] [S][S][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }, { B-->a }]
S[{ S-->BA }, { S-->SB }, { S-->SS }, { S-->CC }, { S-->b }]
C[{ C-->AA }]

word='bbbbabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, B][]    []    []    []    []    
[S]   [S]   [S]   [S]   []    [S]   []    []    []    []    
[S]   [S]   [S]   [S]   []    [S]   [S]   []    []    []    
[S]   [S]   [S]   [S]   []    [S]   [S]   [A, B][]    []    
[S]   [S]   [S]   [S]   []    [S]   [S]   [S, C][A, B][]    
[S]   [S]   [S]   [S]   []    [S]   [S]   [B, S][S, C][A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }]
C[{ C-->CB }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->CS }, { C-->AB }]
S[{ S-->CC }]

word='bbbbabbaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[S]   []    [C]   [A]   []    []    []    []    []    []    
[]    [S]   []    [C]   [A]   []    []    []    []    []    
[C]   []    [S]   []    [C]   [A]   []    []    []    []    
[]    [C]   []    [S]   []    [C]   [A]   []    []    []    
[C, S][]    [C]   []    [S]   []    [C]   [A]   []    []    
[]    [S, C][]    [C]   []    [S]   []    [C]   [A]   []    
[C, S][]    [S, C][]    [C]   []    [S]   []    [C]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->SA }]
B[{ B-->b }, { B-->AC }, { B-->a }]
S[{ S-->a }, { S-->BS }]
C[{ C-->BB }, { C-->SS }, { C-->b }]

word='bbbbabbaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [B, C][]    []    []    []    []    []    []    []    
[]    [C]   [B, C][]    []    []    []    []    []    []    
[]    []    [C]   [B, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S, C][B, S][]    []    []    []    []    
[]    []    []    []    [C]   [B, C][]    []    []    []    
[]    []    []    []    []    [C]   [B, C][]    []    []    
[C, S][C, S][S, C][S, C][S, C][S]   [S, C][B, S][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }]
C[{ C-->a }, { C-->b }]
S[{ S-->AC }, { S-->a }, { S-->AA }, { S-->SS }, { S-->BS }]

word='bbbbabbaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[]    [S]   [A, C][]    []    []    []    []    []    []    
[S]   []    [S]   [A, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C, S][]    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->a }]
C[{ C-->AS }, { C-->SA }, { C-->a }, { C-->SS }]
S[{ S-->AC }]

word='abbaaababa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A]      [A, B]   []       []       []       []       []       []       []       []       
[A]      [A]      [A, B]   []       []       []       []       []       []       []       
[S, C]   [S, C]   [S]      [B, C]   []       []       []       []       []       []       
[A]      [A]      [A]      []       [B, C]   []       []       []       []       []       
[S, C]   [S, C]   [S]      []       []       [B, C]   []       []       []       []       
[A, C, S][A, C, S][A, C]   [A]      [A]      [A]      [A, B]   []       []       []       
[A, C, S][A, C, S][C, S]   [S]      [S]      [S]      [S]      [B, C]   []       []       
[A, S, C][A, S, C][A, S, C][A, C]   [A, C]   [A, C]   [A, C]   [A]      [A, B]   []       
[A, C, S][A, C, S][A, C, S][C, S]   [C, S]   [C, S]   [C, S]   [S]      [S]      [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->a }]
C[{ C-->SC }, { C-->b }]
S[{ S-->CC }, { S-->AB }, { S-->BC }]

word='abbaaababa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A, C]   [S]      [C]      []       []       []       []       []       []       []       
[A, S]   []       [A]      [B]      []       []       []       []       []       []       
[S]      []       [S]      []       [B]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       [A]      [A]      [S]      [C]      []       []       []       
[]       []       []       [A, S]   [A, S]   [A]      [A]      [B]      []       []       
[A, S, C][C]      [A, S]   [A, S, C][A, C]   [A]      [A]      [S]      [C]      []       
[A, S]   [A]      [S]      [A, S]   [A, S]   [A, S]   [S]      [A]      [A]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->a }]
S[{ S-->CB }, { S-->AA }, { S-->BS }]
C[{ C-->SC }]

word='abbaaababa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[A, S][A]   [A]   [A, B][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, B][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, B][]    []    []    []    
[A, S][A, S][A, S][A, S][A]   []    [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, B][]    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AC }, { A-->CB }]
B[{ B-->AB }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->b }]
C[{ C-->a }]

word='abbaaababa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    [A]   [S]   []    []    []    []    []    []    []    
[S]   [A]   [A]   [S, C][]    []    []    []    []    []    
[A, S][A, S][A]   [A, S][S, C][]    []    []    []    []    
[A, S][A, S][A, S][A]   [A, S][S, C][]    []    []    []    
[A, S][A, S][A, S][S]   [A]   [A]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [S, C][]    []    
[A, S][A, S][A, S][A]   [A, S][S]   []    [A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [A]   [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }]
B[{ B-->SA }, { B-->a }, { B-->BB }]
S[{ S-->AS }, { S-->AA }, { S-->AB }, { S-->BS }]
C[{ C-->CS }]

word='abbaaababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [B]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [B]   [B]   [B]   []    []    []    []    
[B, S][B, S][B]   []    []    []    [A]   []    []    []    
[B, S][B, S][B, S][S]   [S]   [S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B]   [B]   [B]   [B]   []    [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->b }, { B-->BC }, { B-->SB }]
C[{ C-->a }, { C-->AA }]
S[{ S-->BA }, { S-->BB }, { S-->CC }, { S-->SC }]

word='aababbabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[B][] [B][] [] [] [] [] [] [] 
[B][] [B][C][] [] [] [] [] [] 
[S][] [S][] [B][] [] [] [] [] 
[B][] [B][] [S][B][] [] [] [] 
[B][] [B][] [S][B][C][] [] [] 
[S][] [S][] [B][S][] [B][] [] 
[B][] [B][] [S][B][] [S][B][] 
[S][] [S][] [B][S][] [B][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->CS }]
S[{ S-->SB }, { S-->a }]
C[{ C-->SA }, { C-->BA }]

word='aababbabbb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[C]      [A, S]   []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[]       [C]      [A, C]   [A, S]   []       []       []       []       []       []       
[]       [C]      [A]      [S]      [B]      []       []       []       []       []       
[]       [C]      [A]      [S]      []       [B]      []       []       []       []       
[S]      [B, S, C][A, B]   [S, C]   [B, C]   [A, C]   [A, S]   []       []       []       
[S]      [B, S, C][A, B]   [C, S]   [C]      [A]      [S]      [B]      []       []       
[S]      [B, S, C][A, B]   [C, S]   [C]      [A]      [S]      []       [B]      []       
[S]      [B, S, C][A, B]   [C, S]   [C]      [A]      [S]      []       []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->BC }, { B-->SB }, { B-->AA }]
S[{ S-->SA }, { S-->a }, { S-->SC }, { S-->b }, { S-->AB }]

word='aababbabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       [S]      [A, S]   []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[]       []       []       [S]      [A, S]   []       []       []       []       []       
[B]      [B]      [B, S]   [B, S]   [B, S]   [A, S]   []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       [S]      [A, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [A, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [B, S]   [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->BB }, { S-->CS }, { S-->BC }]

word='aababbabbb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[S][B][S][B][S][B][] [] [] [] 
[B][S][B][S][B][S][B][] [] [] 
[S][B][S][B][S][B][S][B][] [] 
[B][S][B][S][B][S][B][S][B][] 
[S][B][S][B][S][B][S][B][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AB }]
B[{ B-->BA }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->CC }, { C-->b }]
S[{ S-->BB }, { S-->BS }]

word='aababbabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[S]   [S]   [B]   [B]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    [C]   [C]   []    []    []    []    
[B, S][S]   [S]   [S]   [B]   [B]   [B]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    [C]   [C]   []    
[B, S][B, S][S]   [S]   [S]   [S]   [S]   [B]   [B]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }]
C[{ C-->a }, { C-->b }]
S[{ S-->AA }, { S-->SS }, { S-->CC }]

word='aababbabba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[]    [S]   [A, C][]    []    []    []    []    []    []    
[S]   []    [S]   [A, C][]    []    []    []    []    []    
[]    [S]   []    [S]   [A, C][]    []    []    []    []    
[S]   []    [S]   []    [S]   [A, C][]    []    []    []    
[]    [S]   []    [S]   []    [S]   [A, C][]    []    []    
[S]   []    [S]   []    [S]   []    [S]   [A, C][]    []    
[]    [S]   []    [S]   []    [S]   []    [S]   [A, C][]    
[S]   []    [S]   []    [S]   []    [S]   []    [S]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->a }]
S[{ S-->CA }, { S-->CB }, { S-->a }]
C[{ C-->BA }, { C-->AA }, { C-->b }]

word='aababbabba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    [C]   [A, S][B, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[C]   [A, S][C]   [C]   [A, S][A, S][B, S][]    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A, S][C]   [A, S][A, S][C]   [C]   [C]   [A, S][A, S][B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->b }]
C[{ C-->AC }, { C-->AS }, { C-->a }, { C-->SS }, { C-->CS }]
S[{ S-->CC }]

word='aababbabba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       []       [A, B]   []       []       []       []       []       []       []       
[C]      [S]      [C]      [C]      []       []       []       []       []       []       
[]       []       []       []       [A, B]   []       []       []       []       []       
[]       []       []       []       []       [A, B]   []       []       []       []       
[S, C]   [C, S]   [A, C, S][S]      [C]      [C]      [C]      []       []       []       
[]       []       []       []       []       []       []       [A, B]   []       []       
[]       []       []       []       []       []       []       []       [A, B]   []       
[C, S]   [C, S]   [A, C, S][C, S]   [A, C, S][A, C, S][S]      [C]      [C]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }, { A-->BA }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->SS }, { S-->CC }]
C[{ C-->SC }]

word='aababbabba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   []    [A, S][]    []    []    []    []    []    
[S]   [S]   []    [S]   [A]   []    []    []    []    []    
[S]   [S]   []    [S]   []    [A]   []    []    []    []    
[S]   [S]   []    [S]   []    []    [A, S][]    []    []    
[S]   [S]   []    [S]   []    []    [S]   [A]   []    []    
[S]   [S]   []    [S]   []    []    [S]   []    [A]   []    
[S]   [S]   []    [S]   []    []    [S]   []    []    [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->SS }]
S[{ S-->BA }, { S-->a }, { S-->AB }]
C[{ C-->AA }]

word='aabaaabbbb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, S]   []       []       []       []       []       []       []       []       
[S]      [C]      [A]      []       []       []       []       []       []       []       
[A, B]   []       [C]      [A, S]   []       []       []       []       []       []       
[S, C]   [A, B]   [S]      [B, C]   [A, S]   []       []       []       []       []       
[B, S]   [S, C]   [A, B]   [S]      [B, C]   [A, S]   []       []       []       []       
[A, S]   [B]      [S, C]   [A, B]   [S]      [C]      [A]      []       []       []       
[B, S, C][A, S]   []       [C, S]   [A]      []       [C]      [A]      []       []       
[B, S]   [S, C]   [A]      [S]      [C]      [A]      []       [C]      [A]      []       
[A, S]   [B]      [S, C]   [A, B]   [S]      [C]      [A]      []       [C]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
B[{ B-->b }, { B-->AS }, { B-->a }]
C[{ C-->BA }, { C-->BB }, { C-->AB }]
S[{ S-->BC }]

word='aabaaabbbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[C]      [A, B]   []       []       []       []       []       []       []       []       
[S]      [C]      [B]      []       []       []       []       []       []       []       
[B]      [S]      [C]      [A, B]   []       []       []       []       []       []       
[A, C]   [B]      [S]      [C]      [A, B]   []       []       []       []       []       
[S, C]   [A, C]   []       [S]      [C]      [A, B]   []       []       []       []       
[B, S]   [S, C]   [A, C]   [B]      [S]      [C]      [B]      []       []       []       
[A, B, C][B, S]   [C, S]   [A, C]   [B]      [S]      [C]      [B]      []       []       
[A, C, S][A, B, C][S]      [C, S]   [A, C]   [B]      [S]      [C]      [B]      []       
[B, S, C][A, C, S][A, B, C][B, S]   [C, S]   [A, C]   []       [S]      [C]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }]
C[{ C-->a }, { C-->b }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->SC }, { S-->CS }]

word='aabaaabbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [B, C][]    []    []    []    []    []    []    
[S]   [S]   []    [C]   []    []    []    []    []    []    
[S]   [S]   []    []    [C]   []    []    []    []    []    
[S]   [S]   []    []    []    [C]   []    []    []    []    
[A, S][A, S][S]   [S]   [S]   [S]   [B, C][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [B, C][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [B, C][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
S[{ S-->SA }, { S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->b }]
C[{ C-->SS }]

word='aabaaabbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   [C]   [S]   []    []    []    []    []    []    []    
[C, S][S]   [C]   [S]   []    []    []    []    []    []    
[S, C][S, C][S]   [C]   [S]   []    []    []    []    []    
[C, S][S, C][C, S][S]   [C]   [S]   []    []    []    []    
[S, C][S, C][S, C][C, S][S]   [C]   [S]   []    []    []    
[S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   []    []    
[S, C][S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   []    
[C, S][S, C][S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }]
C[{ C-->AC }, { C-->a }, { C-->AA }, { C-->CS }, { C-->BC }]
S[{ S-->AS }, { S-->SA }, { S-->CB }]

word='aabaaabbbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C, S][S]   [B]   []    []    []    []    []    []    []    
[S, C][S, C][C]   [A, C][]    []    []    []    []    []    
[S, C][S, C][C]   [C]   [A, C][]    []    []    []    []    
[S, C][S, C][C]   [C]   [C]   [A, C][]    []    []    []    
[C, S][C, S][C, S][C, S][C, S][S]   [B]   []    []    []    
[C, S][C, S][C, S][C, S][S]   []    []    [B]   []    []    
[C, S][S, C][S]   [S]   []    []    []    []    [B]   []    
[S, C][S]   []    []    []    []    []    []    []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }]
B[{ B-->b }, { B-->AS }, { B-->a }]
S[{ S-->BB }, { S-->CC }]
C[{ C-->SB }]

word='ababaabbab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[C][S][B][] [] [] [] [] [] [] 
[] [C][S][B][] [] [] [] [] [] 
[] [] [C][S][B][] [] [] [] [] 
[S][] [] [C][S][B][] [] [] [] 
[C][S][] [] [C][S][B][] [] [] 
[] [C][S][] [] [C][S][B][] [] 
[] [] [C][S][] [] [C][S][B][] 
[S][] [] [C][S][] [] [C][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->SA }, { B-->CA }, { B-->SS }]
C[{ C-->SB }, { C-->a }, { C-->b }]
S[{ S-->BB }, { S-->CS }, { S-->b }]

word='ababaabbab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C, S]   []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [C, S]   []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[B, S, C][B, C, S][B, S]   [B, S]   [S]      [S]      [C, S]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, S]   [B, S]   [B, S]   [C, S]   []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[B, C, S][B, C, S][B, S, C][B, C, S][B, S, C][B, S, C][B, C, S][B, S]   [S]      [C, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->AC }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->a }]
S[{ S-->b }, { S-->AB }]

word='ababaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[]    [A, S][A]   [B, S][]    []    []    []    []    []    
[A]   [S]   [S]   [A]   [B]   []    []    []    []    []    
[S]   [A]   []    [S]   [A]   [B]   []    []    []    []    
[]    [A, S][A]   []    [A, S][A]   [B, S][]    []    []    
[A]   [A, S][A, S][A]   [A, S][A, S][A]   [B, S][]    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [A]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A]   []    [A, S][A]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->AA }, { B-->BB }, { B-->CS }]
C[{ C-->b }]
S[{ S-->AS }, { S-->BA }, { S-->CB }, { S-->SC }]

word='ababaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[B]   [B, S][S]   [A, C][]    []    []    []    []    []    
[B]   [B]   []    [S]   [B]   []    []    []    []    []    
[B]   [B]   []    [S]   [B]   [B]   []    []    []    []    
[S]   [S]   [B]   [B, S][S]   [S]   [A, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, C][]    []    
[B]   [B, S][B]   [B, S][B]   [B]   [B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CA }, { A-->CB }]
B[{ B-->BS }]
S[{ S-->SA }, { S-->a }, { S-->b }, { S-->BC }]
C[{ C-->AB }]

word='ababaabbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][A]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->b }, { B-->AS }]
C[{ C-->a }]
S[{ S-->SA }, { S-->CA }, { S-->SS }, { S-->BC }, { S-->BS }]

word='abbbaabbaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[B]      [S]      [S]      [S]      [A, C]   []       []       []       []       []       
[B, S]   [S]      [S]      [S]      [S]      [A, C]   []       []       []       []       
[A, S]   [A]      [A]      [A]      [A]      []       [B]      []       []       []       
[A]      []       []       []       []       []       []       [B]      []       []       
[B, S]   [A, B, S][A, B, S][A, B, S][B, S]   [B]      [S]      [S]      [A, C]   []       
[B, S]   [A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [S]      [S]      [S]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BA }]
B[{ B-->BS }, { B-->a }, { B-->SC }]
S[{ S-->AS }, { S-->CB }, { S-->a }]
C[{ C-->CA }, { C-->b }]

word='abbbaabbaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[A, B][C]   [A]   [C]   []    []    []    []    []    []    
[B, S][S]   [S]   [S]   [B, S][]    []    []    []    []    
[B, S][S]   []    [S]   [B]   [B, S][]    []    []    []    
[B]   [B]   [S]   [B]   []    [B]   [C]   []    []    []    
[A, B][C, S][A, B][C]   [A]   [A]   [A]   [C]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [B, S][]    
[B, S][B, S][B, S][B, S][B]   [B]   []    [S]   [B]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->CA }, { B-->SS }, { B-->CC }]
S[{ S-->a }, { S-->SC }, { S-->BS }]

word='abbbaabbaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[B][S][S][S][S][] [] [] [] [] 
[S][B][B][B][B][S][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[B][S][S][S][S][B][S][S][S][] 
[S][B][B][B][B][S][B][B][B][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->CB }, { S-->SB }, { S-->a }]

word='abbbaabbaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[B][S][S][S][S][] [] [] [] [] 
[S][B][B][B][B][S][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[B][S][S][S][S][B][S][S][S][] 
[S][B][B][B][B][S][B][B][B][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AS }]
B[{ B-->a }]
C[{ C-->CB }, { C-->CC }, { C-->b }, { C-->AB }]
S[{ S-->CA }, { S-->SB }]

word='abbbaabbaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      [C]      [C]      []       []       []       []       []       []       []       
[A]      [C]      [C]      [C]      []       []       []       []       []       []       
[A, C]   [C]      [C]      [C]      [B]      []       []       []       []       []       
[A, C]   [C]      [C]      [C]      []       [B]      []       []       []       []       
[A, S, C][C, S]   [C, S]   [S, C]   []       [A]      [C]      []       []       []       
[A, S, C][C, S]   [C, S]   [S, C]   []       [A]      [C]      [C]      []       []       
[A, C, S][C, S]   [C, S]   [S, C]   [A]      [A, C]   [C]      [C]      [B]      []       
[A, C, S][C, S]   [C, S]   [C, S]   [A, C]   [A, C]   [C]      [C]      []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->CB }, { B-->SC }, { B-->CS }]
C[{ C-->a }]
S[{ S-->BA }, { S-->AA }, { S-->b }]

word='abbbaaaaba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[B, S][S]   [A, S][]    []    []    []    []    []    []    
[S]   []    [S]   [A, S][]    []    []    []    []    []    
[B]   [B]   [B]   [B, S][A, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [A, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B]   [S]   [A, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   [A, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][A, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->BA }]
S[{ S-->AS }, { S-->a }, { S-->AA }]
C[{ C-->SC }, { C-->AB }, { C-->BC }]

word='abbbaaaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[A, S][A, S][S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[A, S][A, S][A, S][A, S][A]   [A]   [A]   [A]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BS }, { B-->AC }, { B-->a }, { B-->SC }]
S[{ S-->BA }, { S-->CB }]
C[{ C-->SB }, { C-->AA }, { C-->SS }]

word='abbbaaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[]       [C]      [A]      []       []       []       []       []       []       []       
[B]      [B]      [C]      [A]      []       []       []       []       []       []       
[C]      []       [S]      []       [B]      []       []       []       []       []       
[B, S]   [B]      [C]      []       []       [B]      []       []       []       []       
[C]      []       [S]      []       []       []       [B]      []       []       []       
[B, S]   [B]      [C]      []       []       []       []       [B]      []       []       
[B, C, S][B, S]   [S, C]   []       []       []       [B]      [S]      [A]      []       
[B, S, C][B, C]   [B, S, C][]       []       []       []       [C]      []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AB }]
B[{ B-->a }]
S[{ S-->AC }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->SS }]

word='abbbaaaaba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[S]      [C]      [A, S]   []       []       []       []       []       []       []       
[C]      [S]      [C]      [A, S]   []       []       []       []       []       []       
[C, S]   [A, C, S][S, C]   [A, C]   [A, B]   []       []       []       []       []       
[C, S]   [A, C, S][S, C]   [A, C]   [A]      [A, B]   []       []       []       []       
[C, S]   [A, C, S][S, C]   [A, C]   [A]      [A]      [A, B]   []       []       []       
[C, S]   [A, C, S][S, C]   [A, C]   [A]      [A]      [A]      [A, B]   []       []       
[C, S]   [S, C]   [C, S]   [S]      []       []       []       []       [A, S]   []       
[A, C, S][A, C, S][A, S, C][A, C, S][S]      [S]      [S]      [S]      [A, C]   [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->CS }]
S[{ S-->SA }, { S-->CB }, { S-->AB }]

word='abbbaaaaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[A, S]   [S]      [A, B]   []       []       []       []       []       []       []       
[A, S]   [A, B, S][S]      [A, B]   []       []       []       []       []       []       
[A, S]   [A, B, S][S]      []       [A]      []       []       []       []       []       
[A, S]   [A, B, S][S]      []       []       [A]      []       []       []       []       
[A, S]   [A, B, S][S]      []       []       []       [A]      []       []       []       
[A, S]   [A, B, S][S]      []       []       []       []       [A]      []       []       
[A, S]   [A, B, S][S]      []       []       []       [A]      [S]      [A, B]   []       
[A, S]   [A, B, S][S]      []       []       []       [A]      [S]      []       [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AB }, { A-->BS }]
B[{ B-->a }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->b }, { S-->BC }]
C[{ C-->b }]

word='baabaaaaab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[S]   [A]   [B, S][]    []    []    []    []    []    []    
[S]   [A, S][A, S][S, C][]    []    []    []    []    []    
[S]   [A, S][A]   []    [B, S][]    []    []    []    []    
[S]   [A, S][A, S][S]   [A]   [B, S][]    []    []    []    
[S]   [A, S][A, S][S]   [A, S][A]   [B, S][]    []    []    
[S]   [A, S][A, S][S]   [A, S][A, S][A]   [B, S][]    []    
[S]   [A, S][A, S][S]   [A, S][A, S][A, S][A]   [B, S][]    
[S]   [A, S][A, S][S]   [A, S][A, S][A, S][A, S][A, S][S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->SB }]
B[{ B-->b }, { B-->AB }, { B-->SS }, { B-->CS }]
S[{ S-->CB }, { S-->a }]
C[{ C-->b }]

word='baabaaaaab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [B, C][]    []    []    []    []    []    
[A]   []    [A]   [B]   [S]   []    []    []    []    []    
[B, S][A, B][B]   [S]   [B]   [S]   []    []    []    []    
[A, B][A]   [A, B][B]   [A]   [B]   [S]   []    []    []    
[A, S][B]   []    [A]   []    [A]   [B]   [S]   []    []    
[B, S][A, B][B]   [S]   [B]   []    [A]   [B]   [S]   []    
[A, S][A, B][A]   [A]   [A]   [A]   [B]   [A]   [A]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->CA }, { B-->SS }]
S[{ S-->a }, { S-->b }, { S-->BC }]
C[{ C-->AA }, { C-->BB }, { C-->SC }]

word='baabaaaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [S]      []       []       []       []       []       []       []       []       
[]       [B]      [S]      []       []       []       []       []       []       []       
[C]      []       [B]      [S]      []       []       []       []       []       []       
[C]      [C]      []       [B]      [S]      []       []       []       []       []       
[C, S]   [C]      [C]      []       [B]      [S]      []       []       []       []       
[B, C, S][S, C]   [C]      [C]      []       [B]      [S]      []       []       []       
[B, C, S][B, S, C][C, S]   [C]      [C]      []       [B]      [S]      []       []       
[B, C, S][B, S, C][B, C, S][C, S]   [C]      [C]      []       [B]      [S]      []       
[B, C, S][B, S, C][B, C, S][B, C, S][C, S]   [C]      [C]      []       [B]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->SA }, { B-->CS }]
S[{ S-->a }, { S-->b }, { S-->BC }]
C[{ C-->AA }, { C-->CC }, { C-->b }]

word='baabaaaaab'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[B]   []    [S]   []    []    []    []    []    []    []    
[B, S][]    []    [S, C][]    []    []    []    []    []    
[B]   []    []    [B]   [S]   []    []    []    []    []    
[B]   []    []    [B]   []    [S]   []    []    []    []    
[B]   []    []    [B]   []    []    [S]   []    []    []    
[B]   []    []    [B]   []    []    []    [S]   []    []    
[B]   []    []    [B]   []    []    []    []    [S]   []    
[B, S][]    []    [B, S][]    []    []    []    []    [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->a }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->AB }, { S-->BC }]
C[{ C-->SS }]

word='abaaabaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [A, B][]    []    []    []    []    []    []    
[S, C][]    [S]   [A, B][]    []    []    []    []    []    
[C, S][]    [S]   [S]   [A, B][]    []    []    []    []    
[C, S][S]   [S, C][S]   [S]   [B]   []    []    []    []    
[C, S][S]   [S, C][S]   [S]   []    [A, B][]    []    []    
[C, S][C, S][S, C][S, C][C, S][]    [S]   [A, B][]    []    
[C, S][C, S][S, C][S, C][C, S][]    [S]   [S]   [A, B][]    
[C, S][C, S][S, C][S, C][S, C][S]   [S, C][S]   [S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }]
B[{ B-->a }]
S[{ S-->AS }, { S-->CA }, { S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->SS }]

word='abaaabaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[A, C]   [C]      [S]      [B]      []       []       []       []       []       []       
[A, C]   [C]      [S]      [S]      [B]      []       []       []       []       []       
[A, S, C][C]      [A, S, C][S, C]   [S]      [S]      []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[A, S, C][S, C]   [A, S, C][A, C]   [A, C]   [C]      [S]      [B]      []       []       
[A, S, C][S, C]   [A, S, C][A, C]   [A, C]   [C]      [S]      [S]      [B]      []       
[A, S, C][S, C]   [A, S, C][A, S, C][A, C, S][C]      [A, S, C][S, C]   [S]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->CS }]

word='abaaabaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   []    [A, S][]    []    []    []    []    []    []    
[S]   []    [S]   [A, S][]    []    []    []    []    []    
[S]   []    [S]   [S]   [A, S][]    []    []    []    []    
[S]   []    [S]   [S]   [S]   [A]   []    []    []    []    
[S]   []    [S]   [S]   [S]   []    [A, S][]    []    []    
[S]   []    [S]   [S]   [S]   []    [S]   [A, S][]    []    
[S]   []    [S]   [S]   [S]   []    [S]   [S]   [A, S][]    
[S]   []    [S]   [S]   [S]   []    [S]   [S]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }]
C[{ C-->SA }, { C-->BA }, { C-->a }, { C-->AA }]
S[{ S-->CC }, { S-->SC }, { S-->BS }]

word='abaaabaaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[S]   [C]   [A, C][]    []    []    []    []    []    []    
[C, S][S]   [C, S][A, C][]    []    []    []    []    []    
[S, C][S, C][S, C][C, S][A, C][]    []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [A]   []    []    []    []    
[S, C][S, C][S, C][S, C][S]   [C]   [A, C][]    []    []    
[S, C][S, C][S, C][S, C][S, C][S]   [C, S][A, C][]    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][C, S][A, C][]    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][C]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AB }, { A-->BS }, { A-->SA }]
B[{ B-->AS }]
C[{ C-->a }]
S[{ S-->CA }, { S-->a }, { S-->b }]

word='abaaabaaab'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, S]   []       []       []       []       []       []       []       []       
[B]      [B]      [C, S]   []       []       []       []       []       []       []       
[A, S]   [A]      []       [C, S]   []       []       []       []       []       []       
[B]      [B]      []       []       [C, S]   []       []       []       []       []       
[A, B, S][A, B]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       
[A, B, S][A, B]   [B]      [B]      [B]      [B]      [C, S]   []       []       []       
[A, B, S][A, B]   [A, S]   [A, S]   [A, S]   [A]      []       [C, S]   []       []       
[A, B, S][A, B]   [B]      [B]      [B]      [B]      []       []       [C, S]   []       
[A, B, S][A, B]   [A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [A, S]   [A, S]   [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->BC }, { A-->BS }, { A-->CA }]
B[{ B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->BA }, { S-->CC }]

word='bbbabbbaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[S]      [B]      [A]      []       []       []       []       []       []       []       
[B]      [A]      []       [B]      []       []       []       []       []       []       
[B, S]   [A, B]   []       [S]      [A]      []       []       []       []       []       
[A, S]   [B, S]   [B]      [A]      [B]      [A]      []       []       []       []       
[A, B]   [A, S]   [B, S]   [A, B]   [S]      [B]      [A]      []       []       []       
[A, S]   [B, S]   [A, B]   [A]      [B]      [A]      []       [B]      []       []       
[A, B, S][A, B]   [A, S]   [B, S]   [A]      [S]      [B]      [A]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [B, S]   [A, B]   [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }]
B[{ B-->b }]
C[{ C-->a }, { C-->AA }]
S[{ S-->SA }, { S-->BA }, { S-->SB }, { S-->SC }, { S-->BS }]

word='bbbabbbaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[]       []       [B]      []       []       []       []       []       []       []       
[S]      [S]      [A, S]   [A, C]   []       []       []       []       []       []       
[S]      [S]      [S]      []       [B]      []       []       []       []       []       
[S]      [S]      [S]      []       []       [B]      []       []       []       []       
[S]      [S]      [S]      []       []       []       [B]      []       []       []       
[S]      [S]      [S]      []       [S]      [S]      [A, S]   [A, C]   []       []       
[S]      [S]      [S]      []       [S]      [A, S]   [A, C, S][C]      [A, C]   []       
[S]      [S]      [S]      []       [S]      [S]      [S]      []       []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->SB }]
B[{ B-->BC }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->SA }, { S-->b }, { S-->BS }]

word='bbbabbbaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[]       [S]      [A]      [B]      []       []       []       []       []       []       
[]       [S]      [A]      [S]      [S]      []       []       []       []       []       
[]       [S]      [A]      []       []       [S]      []       []       []       []       
[]       [S]      [A]      []       []       []       [S]      []       []       []       
[S]      [A, S]   [A, B]   []       []       [S]      [A]      [B]      []       []       
[A, S]   [A, S]   [A, B]   [S]      [S]      [A, S]   [A]      [B]      [B]      []       
[A, S]   [A, S]   [A, B, S][S]      [S]      [A, S]   [A]      [S]      [S]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }]
B[{ B-->b }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CS }]
C[{ C-->SS }, { C-->SC }, { C-->BC }]

word='bbbabbbaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S]   []    
[S, C][S, C][C, S][C, S][S]   [S]   [S]   [S]   []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->BC }]
C[{ C-->a }, { C-->AA }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->CC }, { S-->BS }]

word='bbbabbbaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A]   [S]   [C]   []    []    []    []    []    []    []    
[]    [A]   [S]   [C]   []    []    []    []    []    []    
[S]   []    [A]   [S]   [C]   []    []    []    []    []    
[A, C][S]   []    [A]   [S]   [C]   []    []    []    []    
[S]   [A, C][S]   []    [A]   [S]   [C]   []    []    []    
[A, S][S]   [A, C][S]   []    [A]   [S]   [C]   []    []    
[A, C][A, S][S]   [A, C][S]   []    [A]   [S]   [C]   []    
[S]   [A, C][A, S][S]   [A, C][S]   []    [A]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }]
C[{ C-->SA }, { C-->a }, { C-->SC }]
S[{ S-->AC }, { S-->CA }, { S-->SS }, { S-->CS }, { S-->BS }]

word='bbbaabbbab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[S]   [S]   [S]   [C]   []    []    []    []    []    []    
[C, S][C, S][C]   []    [C]   []    []    []    []    []    
[S, C][S, C][S]   [S]   [S]   [A, B][]    []    []    []    
[C, S][C, S][S, C][C]   [C]   []    [A, B][]    []    []    
[S, C][S, C][S, C][S]   [S]   []    []    [A, B][]    []    
[C, S][C, S][S, C][S, C][S, C][S]   [S]   [S]   [C]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   [A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }]
B[{ B-->a }]
S[{ S-->AS }, { S-->BA }, { S-->SB }, { S-->AB }, { S-->BS }]
C[{ C-->CA }]

word='bbbaabbbab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[S][S][S][B][] [] [] [] [] [] 
[S][S][S][] [B][] [] [] [] [] 
[S][S][S][S][S][A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[S][S][S][S][S][S][S][S][B][] 
[S][S][S][S][S][S][S][S][S][A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
C[{ C-->AC }, { C-->a }, { C-->b }]
S[{ S-->CA }, { S-->BA }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->AB }]

word='bbbaabbbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[S][] [S][C][] [] [] [] [] [] 
[] [S][] [S][C][] [] [] [] [] 
[S][] [S][] [S][C][] [] [] [] 
[] [S][] [S][] [S][C][] [] [] 
[S][] [S][] [S][] [S][C][] [] 
[] [S][] [S][] [S][] [S][C][] 
[S][] [S][] [S][] [S][] [S][C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->BA }]
C[{ C-->a }, { C-->b }]
S[{ S-->CB }, { S-->AA }, { S-->BB }, { S-->CS }, { S-->AB }]

word='bbbaabbbab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, S][B, C][]    []    []    []    []    []    []    []    
[B, S][A, S][B, C][]    []    []    []    []    []    []    
[S]   [B]   [A]   [C]   []    []    []    []    []    []    
[B, S][S]   [B]   [A]   [C]   []    []    []    []    []    
[S]   [B, S][S]   [S]   [A, S][B, C][]    []    []    []    
[B, S][S]   [B, S][S]   [S]   [A, S][B, C][]    []    []    
[S]   [B, S][S]   [S]   [S]   [B, S][A, S][B, C][]    []    
[B, S][S]   [B, S][S]   [S]   [S]   [B]   [A]   [C]   []    
[S]   [B, S][S]   [S]   [S]   [B, S][S]   [B, S][A, S][B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }]
C[{ C-->a }, { C-->BB }, { C-->CS }, { C-->b }]
S[{ S-->AC }, { S-->SS }, { S-->AB }]

word='bbbaabbbab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [B, C]   []       []       []       []       []       []       []       []       
[]       [C]      [B, C]   []       []       []       []       []       []       []       
[]       []       []       [A, C]   []       []       []       []       []       []       
[]       [C]      [A, C]   [S]      [A, C]   []       []       []       []       []       
[C]      [A, C]   [S]      [C]      [S]      [B, C]   []       []       []       []       
[A, C]   [A, S, C][S]      [C]      [S]      [C]      [B, C]   []       []       []       
[A, S, C][S]      []       []       []       []       [C]      [B, C]   []       []       
[S]      []       []       []       []       []       []       []       [A, C]   []       
[A, S, C][S]      []       []       []       []       [C]      [A, C]   [S]      [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BS }, { A-->AS }]
B[{ B-->b }, { B-->BA }, { B-->SB }, { B-->AA }]
C[{ C-->a }]
S[{ S-->b }, { S-->BC }]

word='bbabbababa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [B, S]   []       []       []       []       []       []       []       []       
[A, S]   [S]      [C]      []       []       []       []       []       []       []       
[A, B]   [B]      []       [B, S]   []       []       []       []       []       []       
[A, B]   [A, B]   []       [A, B]   [B, S]   []       []       []       []       []       
[A, B, S][A, S]   []       [A, S]   [S]      [C]      []       []       []       []       
[A, B]   [A, B]   []       [A, B]   [B]      []       [B, S]   []       []       []       
[A, B, S][A, S]   []       [A, S]   [S]      []       [S]      [C]      []       []       
[A, B]   [A, B]   []       [A, B]   [B]      []       [B]      []       [B, S]   []       
[A, B, S][A, S]   []       [A, S]   [S]      []       [S]      []       [S]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }, { B-->BB }, { B-->SC }, { B-->CS }]
S[{ S-->CB }, { S-->b }]
C[{ C-->CA }, { C-->BC }, { C-->BS }]

word='bbabbababa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       [B]      [A]      []       []       []       []       []       []       []       
[B]      [C]      []       [S]      []       []       []       []       []       []       
[C]      [B]      []       []       [S]      []       []       []       []       []       
[B, C]   [S]      []       []       [B]      [A]      []       []       []       []       
[B, C]   [B]      []       [B]      [C]      []       [S]      []       []       []       
[B, C, S][B, S]   []       [B]      [B, C]   []       [B]      [A]      []       []       
[B, C]   [B, C, S][]       [B, C]   [B, C]   []       [C]      []       [S]      []       
[B, C, S][B, C, S][]       [B, C]   [B, C, S][]       [B, C]   []       [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
S[{ S-->SA }, { S-->SS }, { S-->b }, { S-->BS }]
C[{ C-->AA }]

word='bbabbababa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][A][] [] [] [] [] [] [] 
[S][S][] [S][] [] [] [] [] [] 
[S][S][] [S][S][] [] [] [] [] 
[S][S][] [S][S][A][] [] [] [] 
[S][S][] [S][S][] [S][] [] [] 
[S][S][] [S][S][] [S][A][] [] 
[S][S][] [S][S][] [S][] [S][] 
[S][S][] [S][S][] [S][] [S][A]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }, { A-->SA }, { A-->CB }]
B[{ B-->b }, { B-->a }]
C[{ C-->SB }, { C-->BB }]
S[{ S-->AC }]

word='bbabbababa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[A]      [C]      [B]      []       []       []       []       []       []       []       
[]       [A]      [C]      [B]      []       []       []       []       []       []       
[S]      []       [A]      [C]      [B]      []       []       []       []       []       
[A, C]   [S]      []       [A]      [C]      [B]      []       []       []       []       
[A]      [A, C]   [S]      []       [A]      [C]      [B]      []       []       []       
[A, S]   [A]      [A, C]   [S]      []       [A]      [C]      [B]      []       []       
[A, S, C][A, S]   [A]      [A, C]   [S]      []       [A]      [C]      [B]      []       
[A, S, C][A, S, C][A, S]   [A]      [A, C]   [S]      []       [A]      [C]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }]
C[{ C-->AS }, { C-->a }, { C-->CC }, { C-->CS }]
S[{ S-->AC }, { S-->a }, { S-->BC }]

word='bbabbababa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[C, S][C, S][C, S][]    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[C, S][C, S][C]   [C, S][C, S][C, S][]    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[C, S][C, S][C]   [C, S][S, C][C]   [C, S][C, S][]    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[C, S][C, S][C]   [C, S][S, C][C]   [S, C][C]   [C, S][C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->CA }, { B-->a }, { B-->SS }, { B-->CC }]
C[{ C-->SA }, { C-->a }, { C-->b }]
S[{ S-->CS }, { S-->b }]

word='ababbaaabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B, S][C, S][]    []    []    []    []    []    []    []    
[]    [B]   [B, C][]    []    []    []    []    []    []    
[B, S][B, S][B, S][C, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][C, S][]    []    []    []    []    
[]    []    []    []    [B]   [B, C][]    []    []    []    
[]    []    []    []    []    [B]   [B, C][]    []    []    
[]    []    []    []    []    []    [B]   [B, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][C, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BA }]
B[{ B-->BS }]
S[{ S-->a }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->a }, { C-->SS }]

word='ababbaaabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[C, S][C, S][C]   [S]   []    []    []    []    []    []    
[S, C][S, C][S]   [C]   [S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][C]   [S]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][C, S][S]   [C]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CS }]
C[{ C-->AC }]

word='ababbaaabb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   []    [S]   [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->a }, { B-->CS }]
C[{ C-->SA }, { C-->CB }, { C-->b }]
S[{ S-->BC }]

word='ababbaaabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B, C]   []       []       []       []       []       []       []       []       
[S]      [C]      [B]      []       []       []       []       []       []       []       
[S]      [B, C]   [S]      [B, C]   []       []       []       []       []       []       
[S]      [B, C, S][S]      [C, S]   [B, C]   []       []       []       []       []       
[S]      [B, S, C][S]      [S, C]   [C]      [B]      []       []       []       []       
[S]      [B, S, C][S]      [S, C]   [C]      []       [B]      []       []       []       
[S]      [B, S, C][S]      [S, C]   [C]      []       []       [B]      []       []       
[S]      [B, C, S][S]      [B, C, S][B, C]   []       []       [S]      [B, C]   []       
[S]      [B, C, S][S]      [B, C, S][B, C, S][]       []       [S]      [C, S]   [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->AC }]
S[{ S-->SA }, { S-->a }, { S-->b }, { S-->BS }]

word='ababbaaabb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][A]   [S]   []    []    []    []    []    []    
[A, S][A, S][S]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->SA }, { A-->CA }, { A-->CB }]
C[{ C-->a }, { C-->SS }]
S[{ S-->AC }, { S-->SB }, { S-->b }]

word='bbbbbababb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[A]      [A]      [C]      [S]      []       []       []       []       []       []       
[A, S]   [A]      [A]      [C]      [S]      []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [A]      [A]      [C]      []       []       []       []       
[A, C]   [A, C]   [C]      []       []       []       [S]      []       []       []       
[A, S, C][A, S]   [A]      [A]      [A]      [A]      [A]      [C]      []       []       
[A, C]   [C]      []       []       []       []       []       []       [S]      []       
[A, S, C][A, S, C][A, C, S][A, C, S][C, S]   [S]      [S]      []       [C]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->a }, { B-->SS }]
S[{ S-->AC }, { S-->SA }, { S-->BB }, { S-->CS }, { S-->AB }]

word='bbbbbababb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[B]      []       [S]      [B]      []       []       []       []       []       []       
[S]      [B]      []       [S]      [B]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A, B]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [S]      [B]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [A, B]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [S]      [B]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      []       [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }, { A-->CA }]
B[{ B-->b }]
S[{ S-->AC }, { S-->a }, { S-->AA }, { S-->BB }]
C[{ C-->CC }, { C-->b }]

word='bbbbbababb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S, C][B, C][]    []    []    []    []    []    []    []    
[C]   [S, C][B, C][]    []    []    []    []    []    []    
[C]   [C]   [S, C][B, C][]    []    []    []    []    []    
[C]   [C]   [C]   [S, C][B, C][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->CS }]
S[{ S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->SC }]
C[{ C-->b }]

word='bbbbbababb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[B, S][S]   [C]   []    []    []    []    []    []    []    
[B, S][B, S][S]   [C]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [C]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [S]   []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [S]   [C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   [C]   []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CS }]
B[{ B-->CA }, { B-->CB }]
C[{ C-->BA }, { C-->b }]
S[{ S-->CC }, { S-->BS }]

word='bbbbbababb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A]      [S]      [C]      []       []       []       []       []       []       []       
[A, B]   [A]      [S]      [C]      []       []       []       []       []       []       
[B]      [A, B]   [A]      [S]      [C]      []       []       []       []       []       
[B, C, S][A, B, C][A, B]   [B]      [B]      [A]      []       []       []       []       
[A, S]   [S]      []       []       []       []       [C]      []       []       []       
[A, B]   [B]      []       []       []       []       [B]      [A]      []       []       
[]       []       []       []       []       []       []       []       [C]      []       
[A, B, S][A, B, S][A, B, S][A, S]   [S]      []       [S]      []       [S]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }]
C[{ C-->a }, { C-->BS }]
S[{ S-->CA }, { S-->CB }, { S-->SS }, { S-->b }, { S-->AB }]

word='abbbbaaabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C, S][A, S][]    []    []    []    []    []    []    []    
[C, S][S]   [A, S][]    []    []    []    []    []    []    
[S, C][S]   [S]   [A, S][]    []    []    []    []    []    
[S, C][S]   [S]   [S]   [A, S][]    []    []    []    []    
[S, C][S]   [S]   [S]   [S]   [B, C][]    []    []    []    
[S, C][S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    
[S, C][S]   [S]   [S]   [S]   [C]   [S]   [B, C][]    []    
[S, C][S]   [S]   [S]   [S]   [C, S][C, S][C, S][A, S][]    
[S, C][S]   [S]   [S]   [S]   [C, S][C, S][C, S][S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->BB }, { S-->CS }]
C[{ C-->b }]

word='abbbbaaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [A]   [C]   []    []    []    []    []    []    []    
[A]   [S]   [A]   [C]   []    []    []    []    []    []    
[A, S][S]   [S]   [A]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [S]   [S]   []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [A]   [S]   []    []    []    
[A, S][A, S][A, S][S]   [S]   [S]   [A]   [S]   []    []    
[A, S][A, S][A, S][A]   [A]   [A]   [S]   []    [C]   []    
[A, S][A, S][A, S][S]   [S]   [S]   [A]   [S]   [A]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
B[{ B-->BA }]
S[{ S-->a }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->AB }, { S-->BS }]

word='abbbbaaabb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A]   []    []    []    []    []    []    []    []    
[A, S][S]   [A]   []    []    []    []    []    []    []    
[A, S][A]   [S]   [A]   []    []    []    []    []    []    
[A, S][S]   [A]   [S]   [A]   []    []    []    []    []    
[A, S][A, S][S]   [A, S][S]   [A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->BS }, { B-->SC }]
C[{ C-->SB }, { C-->a }]
S[{ S-->BB }, { S-->CS }, { S-->AB }, { S-->BC }]

word='abbbbaaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [A, B]   []       []       []       []       []       []       []       []       
[S]      [S]      [A, B]   []       []       []       []       []       []       []       
[C]      [B, C]   [S]      [A, B]   []       []       []       []       []       []       
[S]      [S]      [B, C]   [S]      [A, B]   []       []       []       []       []       
[B, C, S][B, C, S][S]      [B]      [S]      [C]      []       []       []       []       
[B, S]   [B, S]   [B, C]   [S]      [B]      []       [C]      []       []       []       
[B, C, S][B, C, S][S]      [B]      [S]      []       []       [C]      []       []       
[C, S]   [S, C]   [B, C]   [S]      [C]      []       []       []       [A, B]   []       
[B, C, S][B, C, S][B, S, C][B, S, C][B]      [S]      [S]      [S]      [S]      [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }, { A-->SB }]
B[{ B-->SA }, { B-->SS }]
C[{ C-->b }]
S[{ S-->AC }, { S-->CA }, { S-->BS }]

word='abbbbaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[A, B]   [S]      [A, C]   []       []       []       []       []       []       []       
[B, S]   [A, B]   [S]      [A, C]   []       []       []       []       []       []       
[A, B, S][B, S]   [A, B]   [S]      [A, C]   []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [A, B]   [S]      [A]      []       []       []       []       
[A, B]   [B, S]   [A, B]   []       [B]      []       [A]      []       []       []       
[]       [B]      []       []       []       []       []       [A]      []       []       
[A, B, S][A, B, S][A, B, S][A]      [B, S]   []       [A]      [S]      [A, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A]      [S]      [A, B]   [S]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }]
C[{ C-->AC }, { C-->a }, { C-->BC }]
S[{ S-->a }, { S-->BB }, { S-->SS }, { S-->b }]

word='abbbbabbab'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S, C][C, S][C, S][C, S][C, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C, S][C, S][C, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->b }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->SC }]
S[{ S-->CA }]

word='abbbbabbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C, S][A, B][]    []    []    []    []    []    []    []    
[S, C][A]   [A, B][]    []    []    []    []    []    []    
[C, S][A]   [A]   [A, B][]    []    []    []    []    []    
[S, C][A]   [A]   [A]   [A, B][]    []    []    []    []    
[C]   []    []    []    []    [C]   []    []    []    []    
[C, S][]    []    []    []    [C, S][A, B][]    []    []    
[C, S][]    []    []    []    [S, C][A]   [A, B][]    []    
[C]   []    []    []    []    [C]   []    []    [C]   []    
[C, S][]    []    []    []    [C, S][]    []    [C, S][A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->SA }]
C[{ C-->BA }, { C-->a }, { C-->b }]
S[{ S-->AA }, { S-->SC }]

word='abbbbabbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[S]   []    [A]   [C]   []    []    []    []    []    []    
[A, S][S]   []    [A]   [C]   []    []    []    []    []    
[A, S][A, S][S]   []    [A]   [C]   []    []    []    []    
[A, S][A, S][A, S][S]   []    [A]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][S]   []    [A]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][S]   []    [A]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   []    [A]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->CC }]
C[{ C-->AS }, { C-->b }]

word='abbbbabbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S, C][S]   [C]   []    []    []    []    []    []    []    
[S]   []    [S]   [C]   []    []    []    []    []    []    
[S, C][S]   []    [S]   [C]   []    []    []    []    []    
[S, C][S]   []    [S]   []    [A, S][]    []    []    []    
[S]   []    []    []    []    []    [C]   []    []    []    
[S, C][S]   [S]   [S]   [S]   [S, C][S]   [C]   []    []    
[S, C][S]   [S]   [S]   [S]   [S, C][S]   []    [A, S][]    
[S, C][S]   []    [S]   []    [S]   []    []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }]
C[{ C-->a }]
S[{ S-->SS }, { S-->AB }]

word='aababbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       [A]      [B]      []       []       []       []       []       []       []       
[A]      [B]      []       [C]      []       []       []       []       []       []       
[S]      [A]      [B]      [A]      [B]      []       []       []       []       []       
[B]      [S]      []       [S]      []       [B]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[A, B]   [B, S]   []       [B, S]   []       [B]      [A]      [B]      []       []       
[A, B]   [B, S]   []       [B]      []       []       [B]      []       [C]      []       
[A, B, S][B, S]   []       [B, S]   []       [B]      [A]      [B]      [A]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->CB }]
B[{ B-->CA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->SC }]
C[{ C-->a }]
S[{ S-->AS }, { S-->b }]

word='aababbabab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, B][B, C][]    []    []    []    []    []    []    []    
[S]   []    [S]   []    []    []    []    []    []    []    
[A, B][A, B][B]   [B, C][]    []    []    []    []    []    
[S]   [S]   []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [B]   [B, C][]    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[A, B][A, B][]    [B]   [A]   [A, B][A, B][B]   [B, C][]    
[S]   [S]   []    []    [S]   [S]   [S]   []    []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }, { A-->SB }]
B[{ B-->a }]
C[{ C-->a }, { C-->BB }]
S[{ S-->SA }, { S-->CA }, { S-->b }, { S-->BC }]

word='aababbabaa'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, C, S][B, C]   []       []       []       []       []       []       []       []       
[]       []       [S]      []       []       []       []       []       []       []       
[S]      [S]      [A]      [B, C]   []       []       []       []       []       []       
[]       []       []       []       [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       []       []       []       [S]      [A]      [B, C]   []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[]       []       []       []       [S]      []       [S]      [A]      [B, C]   []       
[S]      [S]      []       [S]      [A]      [S]      [A]      [S]      [A, C, S][B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->AS }, { B-->a }]
S[{ S-->BA }, { S-->BB }, { S-->SS }, { S-->AB }]
C[{ C-->CA }, { C-->SC }]

word='aababbabaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [S][B][] [] [] [] [] [] [] 
[S][] [S][B][] [] [] [] [] [] 
[] [S][] [S][B][] [] [] [] [] 
[S][] [S][] [S][B][] [] [] [] 
[] [S][] [S][] [S][B][] [] [] 
[S][] [S][] [S][] [S][B][] [] 
[] [S][] [S][] [S][] [S][B][] 
[S][] [S][] [S][] [S][] [S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->BS }]
B[{ B-->a }]
C[{ C-->a }, { C-->b }]
S[{ S-->CB }, { S-->SB }, { S-->AA }, { S-->SC }]

word='aababbabaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   []    [A, C][]    []    []    []    []    []    []    
[S]   [A]   [A, S][B, C][]    []    []    []    []    []    
[A, S][A, S][S]   []    [A, C][]    []    []    []    []    
[A, S][A, S][S]   [A]   [S]   [A, C][]    []    []    []    
[A, S][A, S][S]   [A]   [S]   [A, S][B, C][]    []    []    
[A, S][A, S][S]   [A, S][S]   [S]   []    [A, C][]    []    
[A, S][A, S][S]   [A, S][S]   [S]   [A]   [A, S][B, C][]    
[A, S][A, S][S]   [A, S][S]   [S]   [A]   [A, S][S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->b }, { A-->AC }, { A-->SA }]
S[{ S-->CA }, { S-->a }]
C[{ C-->AS }, { C-->SB }, { C-->AB }]

word='aababbabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [C]      [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [A]      [A]      []       []       []       []       []       
[A]      [A]      [A]      []       []       [A]      []       []       []       []       
[A, S, C][A, S, C][A, S, C][A]      [A]      [C]      [S]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, C]   [C]      [S]      [A]      [A]      []       []       
[A, S, C][A, S, C][A, S, C][A, C]   [A]      [A]      [A, C]   [C]      [S]      []       
[A, S, C][A, S, C][A, S, C][A, C]   [A, C]   [A, S, C][A, C]   [A]      []       [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->BA }, { B-->SC }, { B-->CS }]
C[{ C-->SS }, { C-->b }]
S[{ S-->AC }, { S-->SB }]

word='aababbabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       [S]      [A, C]   []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[B, S]   [B, C]   [B]      [S]      [A, C]   []       []       []       []       []       
[B]      [B, S]   [B]      [B]      [S]      [A, C]   []       []       []       []       
[B]      [B, S]   [B]      [B]      []       []       [A]      []       []       []       
[B, S]   [B, C, S][B]      [B, S]   [B, C]   [B]      [S]      [A, C]   []       []       
[B, S]   [B, C, S][B]      [B, S]   [B]      [B]      []       []       [A]      []       
[B, S]   [B, C, S][B]      [B, S]   [B]      [B]      []       []       []       [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->AS }, { B-->CC }]
S[{ S-->SB }, { S-->a }, { S-->AA }, { S-->BB }, { S-->SS }]

word='babbabbaba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[B, S][S]   [A, B][]    []    []    []    []    []    []    
[B, S][S]   [S]   [A, B][]    []    []    []    []    []    
[B, S][S]   [S]   [B]   [S]   []    []    []    []    []    
[B, S][S]   [B, S][B, S][S]   [A, B][]    []    []    []    
[B, S][S]   [B, S][B, S][S]   [S]   [A, B][]    []    []    
[B, S][S]   [B, S][B, S][S]   [S]   [B]   [S]   []    []    
[B, S][S]   [B, S][B, S][S]   [B, S][B, S][S]   [A, B][]    
[B, S][S]   [B, S][B, S][S]   [B, S][B, S][S]   [B]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->AC }, { A-->BA }, { A-->SB }]
B[{ B-->b }]
S[{ S-->AA }, { S-->b }]
C[{ C-->CA }]

word='babbabbaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[S]   [S]   [A]   [B, S][]    []    []    []    []    []    
[S]   [S]   [A, S][A]   [A]   []    []    []    []    []    
[A, S][A, S][A]   []    []    [B, S][]    []    []    []    
[A]   [A]   [S]   [S]   [S]   [A]   [B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][A]   [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A]   []    []    [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->AB }]

word='babbabbaba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[C]      [A]      [B, S]   []       []       []       []       []       []       []       
[S]      [C]      [A]      [B, S]   []       []       []       []       []       []       
[A, C]   [S]      [C]      [A]      [B, S]   []       []       []       []       []       
[S, C]   [A, C]   [S]      [C]      [A]      [B, S]   []       []       []       []       
[A, S, C][S, C]   [A, C]   [S]      [C]      [A]      [B, S]   []       []       []       
[A, C, S][A, C, S][S, C]   [A, C]   [S]      [C]      [A]      [B, S]   []       []       
[A, S, C][A, C, S][A, C, S][S, C]   [A, C]   [S]      [C]      [A]      [B, S]   []       
[A, S, C][A, C, S][A, C, S][A, C, S][S, C]   [A, C]   [S]      [C]      [A]      [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->a }, { B-->SC }, { B-->CS }]
C[{ C-->b }]
S[{ S-->AA }, { S-->SS }, { S-->BC }]

word='babbabbaba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B, C][]    []    []    []    []    []    []    
[A, S][B]   [A, S][B, C][]    []    []    []    []    []    
[]    []    []    [A]   [B]   []    []    []    []    []    
[S]   []    [A, S][B]   [S]   [B, C][]    []    []    []    
[B]   [S]   [B]   [A, S][B]   [A, S][B, C][]    []    []    
[]    []    [S]   []    []    []    [A]   [B]   []    []    
[B]   [S]   [B]   [S]   []    [A, S][B]   [S]   [B, C][]    
[S]   []    [A, S][B]   [S]   [B]   [S]   []    [A]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BS }]
B[{ B-->b }, { B-->AC }, { B-->CS }]
S[{ S-->SA }, { S-->a }, { S-->AA }, { S-->CC }]
C[{ C-->b }]

word='babbabbaba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, B]   [S]      []       []       []       []       []       []       []       []       
[A, B]   []       [B, C]   []       []       []       []       []       []       []       
[A, B]   []       [S]      [B, C]   []       []       []       []       []       []       
[A, S]   []       []       [A, B]   [S]      []       []       []       []       []       
[A, B, S][]       []       [A, B]   []       [B, C]   []       []       []       []       
[A, B, S][]       []       [A, B]   []       [S]      [B, C]   []       []       []       
[A, B, S][S]      [A, B]   [A, S]   []       []       [A, B]   [S]      []       []       
[A, B, S][S]      [A, B]   [A, B, S][]       []       [A, B]   []       [B, C]   []       
[A, B, S][S]      [A, B, S][A, B, S][S]      [A, B]   [A, B, S][S]      [A, B]   [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BS }, { B-->AA }, { B-->SS }]
S[{ S-->b }, { S-->AB }]
C[{ C-->CB }, { C-->BC }]

word='abbbaaaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[S]   [B]   [S]   []    []    []    []    []    []    []    
[B, S][B]   [B]   [S]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [B]   [A]   []    []    []    []    
[B, S][B]   [B]   [B]   [S]   [B]   [A]   []    []    []    
[]    []    []    []    []    [S]   [B]   [A]   []    []    
[]    []    []    []    [B]   []    [S]   [B]   [A]   []    
[B, S][B]   [B]   [B]   [B, S][B]   []    [S]   [B]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }]
B[{ B-->SA }, { B-->SS }]
S[{ S-->AS }, { S-->CB }, { S-->SB }, { S-->a }, { S-->CC }]
C[{ C-->b }]

word='abbbaaaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[B]      [A, C]   []       []       []       []       []       []       []       []       
[A, B]   [S]      [A, C]   []       []       []       []       []       []       []       
[A, B, S][B, S]   [S]      [A, C]   []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S]      [S]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      [S]      []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [B]      [S]      []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      [S]      [B]      [S]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [S]      [B]      [S]      [B]      [S]      []       
[B, S]   [B, S]   [B, S]   [B, S]   [B]      [S]      [B]      [S]      [B]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->SB }]
B[{ B-->AB }, { B-->SA }, { B-->CA }, { B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->BB }, { S-->b }]

word='abbbaaaaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[S]      [B]      [S]      []       []       []       []       []       []       []       
[B]      [A]      [B]      [S]      []       []       []       []       []       []       
[B, S]   [A, B]   [B, S]   [A]      [B]      []       []       []       []       []       
[A, S]   [B, S]   [A, S]   [B]      [S]      [B]      []       []       []       []       
[A, B, S][A, B, S][A, B]   [B, S]   [A]      [S]      [B]      []       []       []       
[A, B, S][A, B, S][B, S]   [A, S]   [B]      [A]      [S]      [B]      []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [B]      [A]      [S]      [B]      []       
[A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [B, S]   [B]      [A]      [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->SB }, { B-->BB }]
C[{ C-->a }]
S[{ S-->AS }, { S-->CB }, { S-->SS }, { S-->CC }, { S-->SC }]

word='abbbaaaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B, S][B]   [B]   []    []    []    []    []    []    []    
[B, S][B]   [B]   [B]   []    []    []    []    []    []    
[A, S][A]   [A]   [A]   [C]   []    []    []    []    []    
[S]   []    []    []    [S]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AC }, { B-->AS }, { B-->a }, { B-->CC }]
C[{ C-->SS }, { C-->b }]
S[{ S-->SA }, { S-->CB }]

word='babaabbbaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[S]      [B]      [A, C]   []       []       []       []       []       []       []       
[S, C]   [B]      [S]      [A, B]   []       []       []       []       []       []       
[S, C]   [B]      [S]      []       [A, B]   []       []       []       []       []       
[B, S, C][B]      [S]      []       [B]      [A, C]   []       []       []       []       
[B, S, C][B]      [S]      []       []       [B]      [A, C]   []       []       []       
[B, S, C][B]      [C, S]   []       [B]      [S]      [B]      [A, C]   []       []       
[S, C]   [B]      [C, S]   []       [B]      [S]      [B]      [S]      [A, B]   []       
[S, C]   [B]      [C, S]   []       [B]      [S]      [B]      [S]      []       [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->CA }, { B-->SB }, { B-->a }, { B-->BB }, { B-->CS }]
C[{ C-->b }]
S[{ S-->CB }, { S-->SS }]

word='babaabbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[B]      [A]      [C]      []       []       []       []       []       []       []       
[B, S]   []       [S]      [B]      []       []       []       []       []       []       
[B, S]   [B]      [B, S]   [B]      [B]      []       []       []       []       []       
[A, B, S][A, B]   [A, B]   [A]      [A]      [C]      []       []       []       []       
[A, B]   [A]      [A]      []       []       []       [C]      []       []       []       
[A]      []       []       []       []       []       []       [C]      []       []       
[B, S]   [B]      [B, S]   []       []       [S]      [B]      [S]      [B]      []       
[B, S]   [B]      [B, S]   [B]      [B]      [B, S]   [B, S]   [B, S]   [B]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->b }, { B-->AS }, { B-->a }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SA }, { S-->CA }, { S-->b }, { S-->BC }]

word='babaabbbaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [C]   [B, S][]    []    []    []    []    []    []    
[S]   [C]   [S]   [B, C][]    []    []    []    []    []    
[S]   [C]   []    [S]   [B, C][]    []    []    []    []    
[S]   [C]   []    [S]   [C]   [B, S][]    []    []    []    
[S]   [C]   []    [S]   [C]   []    [B, S][]    []    []    
[S]   [C]   []    [S]   [C]   []    []    [B, S][]    []    
[S]   [C]   []    [S]   [C]   []    []    [S]   [B, C][]    
[S]   [C]   []    [S]   [C]   []    []    []    [S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->AB }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->SA }, { C-->b }]
S[{ S-->BA }, { S-->BB }]

word='babaabbbaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[S]      [S]      [B]      [B]      []       []       []       []       []       []       
[A]      [A]      [S]      [S]      [B]      []       []       []       []       []       
[]       []       []       []       []       [C]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[]       []       []       []       []       []       []       [C]      []       []       
[B, S]   [B, S]   [A]      [A]      [S]      [B]      [B]      [B]      [B]      []       
[A, C, S][A, C, S][B, S]   [B, S]   [A]      [S]      [S]      [S]      [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }]
B[{ B-->b }]
C[{ C-->BA }, { C-->a }, { C-->BS }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->CC }, { S-->BC }]

word='babaabbbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[C][S][B][] [] [] [] [] [] [] 
[S][] [S][C][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[S][] [S][] [S][B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [S][C][S][C][] 
[S][] [S][] [S][C][S][C][S][C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->BA }]
B[{ B-->a }]
S[{ S-->AS }, { S-->CS }, { S-->AB }]

word='babaabaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[] [A][A][] [] [] [] [] [] [] 
[S][S][S][B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [A][A][A][] [] [] [] 
[S][S][S][S][S][S][B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [A][A][A][] 
[S][S][S][S][S][S][S][S][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->AC }, { B-->SB }, { B-->SC }]
S[{ S-->a }, { S-->BB }]
C[{ C-->AA }]

word='babaabaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[S][B][B][] [] [] [] [] [] [] 
[S][B][B][S][] [] [] [] [] [] 
[S][B][B][] [S][] [] [] [] [] 
[B][S][S][B][B][B][] [] [] [] 
[B][S][S][B][B][B][S][] [] [] 
[B][S][S][B][B][B][] [S][] [] 
[S][B][B][S][S][S][B][B][B][] 
[S][B][B][S][S][S][B][B][B][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->a }]
C[{ C-->b }]
S[{ S-->SA }, { S-->SS }, { S-->b }, { S-->AB }]

word='babaabaaba'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[A, S][A, B][]    []    []    []    []    []    []    []    
[S]   []    [C, S][]    []    []    []    []    []    []    
[S]   []    [A, S][A, B][]    []    []    []    []    []    
[S]   []    [S]   [S]   [A, B][]    []    []    []    []    
[S]   []    [S]   [S]   []    [C, S][]    []    []    []    
[S]   []    [S]   [S]   []    [A, S][A, B][]    []    []    
[S]   []    [S]   [S]   []    [S]   [S]   [A, B][]    []    
[S]   []    [S]   [S]   []    [S]   [S]   []    [C, S][]    
[S]   []    [S]   [S]   []    [S]   [S]   []    [A, S][A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->AS }, { A-->SB }]
B[{ B-->CC }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->b }, { S-->BS }]

word='babaabaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A]   [S]   []    []    []    []    []    []    []    
[S]   [A]   [S]   [A, S][]    []    []    []    []    []    
[S]   [A]   [S]   [A, S][A, S][]    []    []    []    []    
[S]   [A]   [S]   [A, S][A]   [S]   []    []    []    []    
[S]   [A]   [S]   [A, S][A]   [S]   [A, S][]    []    []    
[S]   [A]   [S]   [A, S][A]   [S]   [A, S][A, S][]    []    
[S]   [A]   [S]   [A, S][A]   [S]   [A, S][A]   [S]   []    
[S]   [A]   [S]   [A, S][A]   [S]   [A, S][A]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->CA }]
B[{ B-->AA }]
C[{ C-->AS }, { C-->a }, { C-->CS }]
S[{ S-->BC }]

word='babaabaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[B]   [A]   [A]   []    []    []    []    []    []    []    
[S]   []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    [B]   [B]   [A]   [A]   [A]   []    []    []    []    
[C]   [S, C][S]   []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[A, B][A]   []    [B]   [B]   [B]   [A]   [A]   [A]   []    
[A, S][C]   [C]   [C, S][C, S][S]   []    []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }]
B[{ B-->b }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->SB }, { S-->a }]

word='ababbaaaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [A, S][]    []    []    []    []    []    []    
[S]   []    [S]   [B]   []    []    []    []    []    []    
[S]   []    [S]   [A]   [B]   []    []    []    []    []    
[S]   []    [S]   [S]   []    [A, S][]    []    []    []    
[S]   []    [S]   [S]   []    [S]   [A, S][]    []    []    
[S]   []    [S]   [S]   []    [S]   [S]   [A, S][]    []    
[S]   []    [S]   [S]   []    [S]   [S]   [S]   [A, S][]    
[S]   []    [S]   [S]   []    [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->AC }]
B[{ B-->CB }, { B-->CC }, { B-->CS }]
C[{ C-->b }, { C-->BS }]
S[{ S-->AA }]

word='ababbaaaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A, S]   [A, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [A]      []       []       []       []       []       []       []       
[A, S]   [B, S]   [A, S]   [A, C]   []       []       []       []       []       []       
[A, S]   [B, S]   [A, S]   [A, B, S][A, C]   []       []       []       []       []       
[A, S]   [B, C, S][A, S]   [B, S]   [S]      [A]      []       []       []       []       
[A, S]   [B, C, S][A, S]   [A, B, C][B]      [S]      [A]      []       []       []       
[A, S]   [B, C, S][A, S]   [C, S]   []       []       [S]      [A]      []       []       
[A, S]   [B, C, S][A, S]   [A, B, C][C]      []       []       [S]      [A]      []       
[A, S]   [B, C, S][A, S]   [B, S]   []       []       []       []       [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AA }]
C[{ C-->a }, { C-->b }]
S[{ S-->AC }, { S-->BA }, { S-->SB }, { S-->SS }, { S-->CC }, { S-->BC }]

word='babbbaaaba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    [S]   [A, C][]    []    []    []    []    []    []    
[S]   []    [B, S][A, C][]    []    []    []    []    []    
[S]   [S]   [S]   [B, S][A, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   []    [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   []    [S]   [C]   []    []    
[S]   [S]   [S]   [S]   []    [S]   []    [S]   [A, C][]    
[S]   [S]   [S]   [S]   [S]   []    [S]   []    [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->CA }, { B-->AA }, { B-->CS }]
C[{ C-->a }]
S[{ S-->SB }, { S-->CC }, { S-->b }, { S-->BC }]

word='babbbaaaba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[B, S][B]   [A, S][]    []    []    []    []    []    []    
[]    []    [B]   [A, S][]    []    []    []    []    []    
[S]   [B]   [S]   [B]   [A, S][]    []    []    []    []    
[S]   [B, S][S]   [B, S][A]   [C]   []    []    []    []    
[S]   [B, S][S]   [B, S][A]   [S]   [C]   []    []    []    
[S]   [B, S][S]   [B, S][A, S][B]   [S]   [C]   []    []    
[S]   [B, S][S]   [S]   [B]   [S]   []    [B]   [A, S][]    
[S]   [B, S][S]   [S]   [B, S][S]   [B]   [B, S][A]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }]
B[{ B-->b }, { B-->a }]
C[{ C-->AC }, { C-->CB }, { C-->AA }]
S[{ S-->BB }, { S-->SS }]

word='babbbaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [A, B]   []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[S]      []       [S]      [B]      []       []       []       []       []       []       
[]       [S]      []       [S]      [B]      []       []       []       []       []       
[S]      []       [S]      []       [S]      [A, B]   []       []       []       []       
[]       [S]      []       [S]      []       [C, S]   [A, B]   []       []       []       
[S]      []       [S]      []       [S]      [C]      [C, S]   [A, B]   []       []       
[]       [S]      []       [S]      []       [A, C, S][C]      [S]      [B]      []       
[S]      []       [S]      []       [S]      [A, C]   [A, S, C][]       [S]      [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AB }, { B-->SC }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->CC }, { S-->CS }, { S-->b }]
C[{ C-->SB }, { C-->b }]

word='babbbaaaba'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B, C]   [B]      [S, C]   []       []       []       []       []       []       []       
[B, S, C][C]      [B, S]   [S, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S]   [S, C]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, C]   [B]      [C]      [B]      [S, C]   []       
[S]      [S]      [S]      [S]      [S]      []       [S]      []       [S]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->BC }, { B-->BS }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->SC }]
S[{ S-->AC }, { S-->b }]

word='babbbaaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[S]   [S]   [C]   [C]   [C]   [C]   []    []    []    []    
[C]   [C]   []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[C]   [C]   []    []    []    []    [C]   [A]   [S]   []    
[A, S][A, S][C]   [C]   [C]   [C]   [A]   [S]   [C]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AS }]
B[{ B-->SB }]
C[{ C-->a }]
S[{ S-->SA }, { S-->SC }, { S-->b }]

word='baabbaabbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   []    [A, C][]    []    []    []    []    []    []    
[S]   []    [A]   [A, S][]    []    []    []    []    []    
[S]   []    [A]   [A, S][A, S][]    []    []    []    []    
[S]   []    [A]   [A, S][S]   [A, C][]    []    []    []    
[S]   []    [A]   [A, S][S]   []    [A, C][]    []    []    
[S]   []    [A]   [A, S][S]   []    [A]   [A, S][]    []    
[S]   []    [A]   [A, S][S]   []    [A]   [A, S][A, S][]    
[S]   []    [A]   [A, S][S]   []    [A]   [A, S][A, S][A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CB }]
B[{ B-->a }]
S[{ S-->SA }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->CA }, { C-->BB }]

word='baabbaabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[A, S]   [S, C]   [B, S]   []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [B, S]   []       []       []       []       
[A, S]   [A, S, C][A, S]   [A, S]   [A, S]   [S, C]   [B, S]   []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }]
C[{ C-->CB }, { C-->a }, { C-->SS }, { C-->CS }, { C-->b }]
S[{ S-->BA }, { S-->AA }, { S-->BC }]

word='baabbaabbb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[C]   [S]   [A, C][]    []    []    []    []    []    []    
[C]   []    [C]   [B, C][]    []    []    []    []    []    
[C, S][C]   [C]   [C, S][B, C][]    []    []    []    []    
[C]   []    [C]   [C]   [S]   [A, C][]    []    []    []    
[C, S][C]   [C]   [S, C][C]   [S]   [A, C][]    []    []    
[C, S][C]   [C]   [S, C][C]   []    [C]   [B, C][]    []    
[C, S][C]   [C]   [C, S][S, C][C]   [C]   [C, S][B, C][]    
[C, S][C]   [C]   [C, S][S, C][C]   [C]   [C, S][C, S][B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->SB }]
S[{ S-->a }, { S-->BB }, { S-->BC }]
C[{ C-->BS }]

word='baabbaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[S]   [B]   [B]   [B]   []    []    []    []    []    []    
[B, C][S]   [S]   [S]   [B]   []    []    []    []    []    
[C]   [S]   [S]   [S]   [C]   [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[S]   [B, C][B, C][B, C][S]   [B]   [B]   [B]   []    []    
[B, C][S]   [S]   [S]   [B, C][S]   [S]   [S]   [B]   []    
[S]   [B, C][B, C][B, C][S]   [B, C][B, C][B, C][S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->AC }, { B-->SS }, { B-->CC }]
C[{ C-->a }, { C-->SC }, { C-->b }]
S[{ S-->CB }, { S-->BC }]

word='baabbaabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[S]      [B]      [C]      []       []       []       []       []       []       []       
[C]      [S]      [B]      [C]      []       []       []       []       []       []       
[B]      [C]      [S]      [B]      [C]      []       []       []       []       []       
[B, S]   [B]      [C]      [S]      [B]      [C]      []       []       []       []       
[C, S]   [B, S]   [B]      [C]      [S]      [B]      [C]      []       []       []       
[B, C]   [C, S]   [B, S]   [B]      [C]      [S]      [B]      [C]      []       []       
[B, S]   [B, C]   [S, C]   [B, S]   [B]      [C]      [S]      [B]      [C]      []       
[B, C, S][B, S]   [B, C]   [S, C]   [B, S]   [B]      [C]      [S]      [B]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->AB }]
C[{ C-->a }, { C-->b }]
S[{ S-->AC }, { S-->BA }, { S-->BC }]

word='bbabababba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    [A]   [S]   [C]   []    []    []    []    []    []    
[A]   [S]   []    []    [A, C][]    []    []    []    []    
[S]   []    [A]   [A]   [S]   [C]   []    []    []    []    
[]    [A]   [A, S][S]   []    []    [A, C][]    []    []    
[A]   [A, S][S]   []    [A]   [A]   [S]   [C]   []    []    
[A, S][A, S][A]   [A]   [A, S][S]   []    []    [C]   []    
[A, S][A, S][A, S][A, S][S]   []    []    []    []    [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->SB }]
S[{ S-->SA }, { S-->BA }, { S-->CC }, { S-->b }, { S-->AB }]

word='bbabababba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   []    [A, S][]    []    []    []    []    []    
[S]   [S]   []    [S]   [A]   []    []    []    []    []    
[S]   [S]   []    [S]   []    [A, S][]    []    []    []    
[S]   [S]   []    [S]   []    [S]   [A]   []    []    []    
[S]   [S]   []    [S]   []    [S]   []    [A, S][]    []    
[S]   [S]   []    [S]   []    [S]   []    [S]   [A, S][]    
[S]   [S]   []    [S]   []    [S]   []    [S]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->SA }, { B-->BA }]
S[{ S-->CB }, { S-->AA }, { S-->AB }, { S-->BS }]

word='bbabababba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[B]   [S]   [A]   []    []    []    []    []    []    []    
[B, S][B]   [S]   [A]   []    []    []    []    []    []    
[B, S][B, S][B]   [S]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [A]   []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [S]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   [A]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->SS }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }]

word='bbabababba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[B]   [B]   [S]   []    []    []    []    []    []    []    
[B, S][B]   [B, S][A, S][]    []    []    []    []    []    
[B, S][S]   [B]   [B]   [S]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [B, S][A, S][]    []    []    []    
[B, S][B, S][B, S][S]   [B]   [B]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B, S][A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->SB }]
C[{ C-->AA }, { C-->b }, { C-->AB }]
S[{ S-->CA }]

word='bbabababba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B]      [B, C]   []       []       []       []       []       []       []       []       
[]       [S]      [A]      []       []       []       []       []       []       []       
[B]      [B]      [C]      [B, C]   []       []       []       []       []       []       
[S]      [A, S]   [A, S]   [S]      [A]      []       []       []       []       []       
[B]      [B, C]   [B, C]   [B]      [C]      [B, C]   []       []       []       []       
[A, B, S][A, B, S][A, C, S][A, S]   [A, S]   [S]      [A]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [C]      [B, C]   []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [C]      [B]      [B, C]   []       
[S]      [A, S]   [A, S]   [S]      [S]      []       [S]      []       [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->AS }, { C-->a }, { C-->BC }]
S[{ S-->BA }, { S-->SB }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->b }]

word='bbbabababb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][C][] [] [] [] [] [] 
[S][S][S][] [S][] [] [] [] [] 
[S][S][S][] [S][C][] [] [] [] 
[S][S][S][] [S][] [S][] [] [] 
[S][S][S][] [S][] [S][C][] [] 
[S][S][S][] [S][] [S][] [S][] 
[S][S][S][] [S][] [S][] [S][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
B[{ B-->BC }, { B-->SC }]
S[{ S-->AC }, { S-->AS }, { S-->b }]

word='bbbabababb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->b }, { B-->SA }, { B-->CB }, { B-->SC }, { B-->CS }]
C[{ C-->BA }, { C-->a }]
S[{ S-->AA }]

word='bbbabababb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[C]      [A]      [B]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[B, S]   [C]      [A]      [B]      [B]      []       []       []       []       []       
[B]      []       []       []       []       [C]      []       []       []       []       
[A]      [B, S]   [C]      [A]      [A]      [B]      [B]      []       []       []       
[A]      [B]      []       []       []       []       []       [C]      []       []       
[B, C]   [A]      [B, S]   [C]      [C]      [A]      [A]      [B]      [B]      []       
[A, B, S][B, C]   [A]      [B, S]   [B, S]   [C]      [C]      [A]      [A]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->AB }, { B-->BS }, { B-->SA }, { B-->SS }]
S[{ S-->a }, { S-->AA }]

word='bbbabababb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[B]      [S]      [A]      []       []       []       []       []       []       []       
[B]      [B]      []       [S]      []       []       []       []       []       []       
[A, B, S][A, B]   [B]      [B]      [A]      []       []       []       []       []       
[B]      [B]      [B]      [B]      []       [S]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [A]      [B]      [B]      [A]      []       []       []       
[B]      [B]      [B]      []       [B]      [B]      []       [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [A]      [B]      [B]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->BC }, { B-->CB }, { B-->AA }, { B-->CS }]
C[{ C-->a }, { C-->b }]
S[{ S-->SC }, { S-->AB }]

word='bbbabababb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B]      [A, C]   []       []       []       []       []       []       []       []       
[B, S]   [B]      [A, C]   []       []       []       []       []       []       []       
[B, S]   [B]      []       [C]      []       []       []       []       []       []       
[B, S]   [B]      []       []       [A, C]   []       []       []       []       []       
[B, S]   [B]      []       []       []       [C]      []       []       []       []       
[B, S]   [B]      []       []       []       []       [A, C]   []       []       []       
[B, S]   [B]      []       []       []       []       []       [C]      []       []       
[B, S]   [B]      []       []       []       []       []       []       [A, C]   []       
[A, B, S][B, S]   [B, S]   [B]      [B, S]   [B]      [B, S]   [B]      [B]      [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CA }, { B-->CB }, { B-->SB }]
C[{ C-->a }]
S[{ S-->SA }, { S-->BA }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }]

word='aabbaaaabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][C][] [] [] [] [] 
[S][S][S][S][] [C][] [] [] [] 
[S][S][S][S][] [] [C][] [] [] 
[S][S][S][S][] [] [] [C][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->CA }]
B[{ B-->a }]
S[{ S-->a }, { S-->AA }, { S-->BB }, { S-->SC }]
C[{ C-->b }, { C-->BS }]

word='aabbaaaabb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][B, S][]    []    []    []    []    []    []    []    
[C, S][S]   [C]   []    []    []    []    []    []    []    
[S, C][S]   []    [C]   []    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[S, C][S]   []    []    [S, C][B, S][]    []    []    []    
[S, C][S]   []    []    [S, C][S, C][B, S][]    []    []    
[S, C][S]   []    []    [S, C][S, C][S, C][B, S][]    []    
[S, C][S]   []    []    [S, C][S, C][C, S][S]   [C]   []    
[S, C][S]   []    []    [S, C][S, C][C, S][S]   []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }]
B[{ B-->b }, { B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->CS }, { S-->b }]
C[{ C-->CC }]

word='aabbaaaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [S]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B]   [S]   [B]   [S]   [B, S][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->b }, { B-->SA }, { B-->AA }, { B-->SS }]
C[{ C-->b }]
S[{ S-->SB }, { S-->BB }]

word='abbabbabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [B, C]   []       []       []       []       []       []       []       []       
[B]      [A, S]   [B, C]   []       []       []       []       []       []       []       
[]       [B]      []       [A]      []       []       []       []       []       []       
[]       [S]      []       []       [B, C]   []       []       []       []       []       
[S]      [S]      [A, S]   [B]      [A, S]   [B, C]   []       []       []       []       
[B]      [A, B, S][B]      []       [B]      []       [A]      []       []       []       
[S]      [S]      [S]      []       [S]      []       []       [B, C]   []       []       
[S]      [B, S]   [S]      [S]      [S]      [A, S]   [B]      [A, S]   [B, C]   []       
[B, S]   [A, B, S][A, B, S][B]      [A, B, S][B]      []       [B]      []       [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->SB }, { B-->a }, { B-->CC }]
C[{ C-->b }]
S[{ S-->BB }]

word='abbabbabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[B, S][B, S][B, C][]    []    []    []    []    []    []    
[B, S][B, S][S]   [B]   []    []    []    []    []    []    
[B, S][B, S][B]   [S]   [B, C][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   [B, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
C[{ C-->AC }, { C-->a }, { C-->b }]
S[{ S-->BB }, { S-->CC }, { S-->CS }, { S-->b }]

word='abbabbabba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B, S][C, S][]    []    []    []    []    []    []    []    
[B, S][S]   [C, S][]    []    []    []    []    []    []    
[B, S][S]   [S]   [B, C][]    []    []    []    []    []    
[B, S][S]   [S]   [B, S][C, S][]    []    []    []    []    
[B, S][S]   [S]   [B, S][S]   [C, S][]    []    []    []    
[B, S][S]   [S]   [B, S][S]   [S]   [B, C][]    []    []    
[B, S][S]   [S]   [B, S][S]   [S]   [B, S][C, S][]    []    
[B, S][S]   [S]   [B, S][S]   [S]   [B, S][S]   [C, S][]    
[B, S][S]   [S]   [B, S][S]   [S]   [B, S][S]   [S]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->AC }]
B[{ B-->b }]
C[{ C-->a }, { C-->CS }]
S[{ S-->AA }, { S-->SS }, { S-->b }]

word='abbabbabba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[C]      [S]      [B, S]   []       []       []       []       []       []       []       
[A]      []       [A]      [C]      []       []       []       []       []       []       
[A]      []       [A]      [C]      [B, S]   []       []       []       []       []       
[A]      []       [A]      [C]      [S]      [B, S]   []       []       []       []       
[A, S, C][S]      [A, S]   [A]      []       [A]      [C]      []       []       []       
[A, S, C][S]      [A, S]   [A]      []       [A]      [C]      [B, S]   []       []       
[A, S, C][S]      [A, S]   [A]      []       [A]      [C]      [S]      [B, S]   []       
[A, C, S][S]      [A, S]   [A, C, S][S]      [A, S]   [A]      []       [A]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
C[{ C-->AC }, { C-->a }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BC }, { C-->BS }]
S[{ S-->CA }, { S-->SS }]

word='abbabbabba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C, S][C, S][C, S][A, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][A, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->b }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->a }]
S[{ S-->CA }, { S-->CC }, { S-->CS }, { S-->BS }]

word='baaabbabab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[S][S][C][] [] [] [] [] [] [] 
[S][S][S][C][] [] [] [] [] [] 
[S][S][S][C][B][] [] [] [] [] 
[S][S][S][C][] [B][] [] [] [] 
[S][S][S][S][] [] [C][] [] [] 
[S][S][S][S][] [] [C][B][] [] 
[S][S][S][S][S][S][S][] [C][] 
[S][S][S][S][S][S][S][] [C][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->BC }, { A-->SB }]
C[{ C-->a }]
S[{ S-->BA }, { S-->AA }, { S-->SS }, { S-->BS }]

word='baaabbabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[]    [S]   [A, C][]    []    []    []    []    []    []    
[S]   []    [S]   [A, C][]    []    []    []    []    []    
[]    [S]   []    [S]   [A]   []    []    []    []    []    
[S]   []    [S]   []    [S]   [A]   []    []    []    []    
[]    [S]   []    [S]   []    [S]   [A, C][]    []    []    
[S]   []    [S]   []    [S]   []    [S]   [A]   []    []    
[]    [S]   []    [S]   []    [S]   []    [S]   [A, C][]    
[S]   []    [S]   []    [S]   []    [S]   []    [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->CB }, { A-->SB }]
S[{ S-->AA }, { S-->b }, { S-->BS }]
C[{ C-->BB }, { C-->CC }]

word='baaabbabab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[A]   [S]   [A]   []    []    []    []    []    []    []    
[A, S][]    [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A]   [S]   [A, S][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [A, S][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    [S]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->a }]
C[{ C-->a }]
S[{ S-->BA }, { S-->CB }, { S-->BB }, { S-->CS }, { S-->BC }]

word='baaabbabab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[B]   [S]   [B, C][]    []    []    []    []    []    []    
[B, S][B, S][S]   [B, C][]    []    []    []    []    []    
[B, S][B, S][B, S][S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   []    []    []    []    
[B, S][B, S][B, S][S]   [B]   [S]   [B, C][]    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->AC }, { A-->CB }]
B[{ B-->CA }]
C[{ C-->a }, { C-->AB }]
S[{ S-->BA }, { S-->SB }, { S-->CS }]

word='baaabbabab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      []       [C]      []       []       []       []       []       []       []       
[A]      []       []       [C]      []       []       []       []       []       []       
[C]      [B]      [A]      [B]      [A]      []       []       []       []       []       
[B]      [S]      [S]      [S]      []       [A]      []       []       []       []       
[B]      [S]      [S]      [S]      []       [A]      [C]      []       []       []       
[C, S]   [B, S]   [A, S]   [B, S]   [A]      [C]      [B]      [A]      []       []       
[C, S]   [B, S]   [A, S]   [B, S]   [A]      [C]      [B]      [A]      [C]      []       
[A, B, S][S]      [S, C]   [S]      [C]      [A, B]   [S]      [C]      [B]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->CS }]
C[{ C-->BA }, { C-->SC }]
S[{ S-->AC }, { S-->CB }, { S-->SS }, { S-->CC }]

word='abbabaabba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[B][] [S][C][A][] [] [] [] [] 
[] [] [] [S][] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[B][] [S][C][] [] [C][A][] [] 
[C][] [] [] [] [] [] [] [A][] 
[S][] [] [] [] [] [] [] [] [B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BC }, { A-->AC }]
B[{ B-->AB }, { B-->AA }]
S[{ S-->BA }, { S-->a }, { S-->b }]
C[{ C-->CA }, { C-->CC }]

word='abbabaabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[]    [A]   [S]   []    []    []    []    []    []    []    
[B]   []    [A]   [S]   []    []    []    []    []    []    
[]    [B]   []    [A]   [S]   []    []    []    []    []    
[B, S][]    [B]   []    [A]   [S]   []    []    []    []    
[A]   [B, S][]    [B]   []    [A]   [S]   []    []    []    
[B, S][A]   [B, S][]    [B]   []    [A]   [S]   []    []    
[A, B][B, S][A]   [B, S][]    [B]   []    [A]   [S]   []    
[B, S][A, B][B, S][A]   [B, S][]    [B]   []    [A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->b }]
C[{ C-->a }, { C-->b }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->SS }, { S-->CS }, { S-->BS }]

word='abbabaabba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[A, S][S]   [B, C][]    []    []    []    []    []    []    
[A]   [A]   []    [C]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][]    []    []    []    []    
[A, S][A, S][A]   [A]   []    [C]   []    []    []    []    
[A]   [A]   []    []    []    []    [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [B, C][]    
[A, S][A, S][A, S][A, S][A]   [A]   [A]   [A]   []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->b }, { B-->BS }, { B-->a }, { B-->AA }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->BC }]
C[{ C-->BA }]

word='abbabaabba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][B, S][]    []    []    []    []    []    
[B, S][B, S][B, S][S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->CA }]
C[{ C-->SB }, { C-->a }, { C-->BB }, { C-->b }]
S[{ S-->AC }, { S-->SS }]

word='abbabaabba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [A, C][]    []    []    []    []    []    []    []    
[A, S][A, S][A, C][]    []    []    []    []    []    []    
[A, S][A, S][S]   [C]   []    []    []    []    []    []    
[A, S][A, S][A]   [A]   [A, C][]    []    []    []    []    
[A, S][A, S][S]   [S]   [S]   [C]   []    []    []    []    
[A, S][A, S][A]   [A]   [A]   []    [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [A, C][]    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, C][]    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }, { B-->SS }]
S[{ S-->SA }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AC }, { C-->CS }]

word='abaaabbbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[B, S][B]   [S]   [B]   []    []    []    []    []    []    
[B, S][B, S][S]   [S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    
[B, S][B, S][B, S][B, S][B, S][S]   [B]   [S]   []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->a }]
S[{ S-->CB }, { S-->CC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]
C[{ C-->AS }]

word='abaaabbbba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S, C]   [S]      []       []       []       []       []       []       []       []       
[A, S]   [A]      [A, B]   []       []       []       []       []       []       []       
[A, S, C][S]      [S]      [A, B]   []       []       []       []       []       []       
[A, C, S][A, C]   [A, S, C][S]      [A, B]   []       []       []       []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [S, C]   [S]      []       []       []       []       
[C, S]   [C, S]   [S, C]   [S, C]   [S]      []       [S]      []       []       []       
[C, S]   [C, S]   [S, C]   [S]      []       []       []       [S]      []       []       
[S, C]   [S]      [S]      []       []       []       []       []       [S]      []       
[A, S]   [A]      [A]      []       []       []       []       []       [A]      [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->CA }, { B-->a }, { B-->CS }]
C[{ C-->a }]
S[{ S-->AC }, { S-->AA }, { S-->SC }]

word='abaaabbbba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[B, S]   [A]      [B, C]   []       []       []       []       []       []       []       
[A, B, S][S]      [A]      [B, C]   []       []       []       []       []       []       
[A, B, S][A, S]   [B, S]   [A]      [B, C]   []       []       []       []       []       
[A, S]   []       [A, S]   [B]      [A]      [B]      []       []       []       []       
[A, B, S][A, S]   [B]      [A, S]   [B]      [A]      [B]      []       []       []       
[A, S]   []       [A, S]   [B]      [A, S]   []       [A]      [B]      []       []       
[A, B, S][A, S]   [B]      [A, S]   [B]      [S]      []       [A]      [B]      []       
[A, B, S][A, S]   [A, B, S][A, B, S][A, B, S][S]      [S]      [S]      [A]      [B, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BS }, { B-->a }]
C[{ C-->AS }, { C-->SB }, { C-->CC }, { C-->CS }, { C-->b }, { C-->AB }]
S[{ S-->CB }, { S-->BB }]

word='abaaabbbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[B]      [S]      [B]      []       []       []       []       []       []       []       
[S]      [C]      [S]      [B]      []       []       []       []       []       []       
[B, C]   [S, C]   [B, C]   [S]      [B]      []       []       []       []       []       
[C]      [C]      [C]      []       []       [C]      []       []       []       []       
[C]      [C]      [C]      []       []       [C]      [C]      []       []       []       
[C]      [C]      [C]      []       []       [C]      [C]      [C]      []       []       
[C]      [C]      [C]      []       []       [C]      [C]      [C]      [C]      []       
[B, C, S][S, C]   [B, C, S][S]      [B]      [C, S]   [C, S]   [C, S]   [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
B[{ B-->AB }, { B-->BC }, { B-->BA }, { B-->SB }, { B-->AA }]
S[{ S-->BB }, { S-->SC }]

word='abaaabbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   [B]   [A]   []    []    []    []    []    []    []    
[B, S][B]   [B]   [A]   []    []    []    []    []    []    
[B, S][B, S][B]   [B]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [A]   []    []    []    []    
[B, S][B, S][B, S][B, S][B]   [B]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   [A]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->SA }]
S[{ S-->CC }, { S-->b }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->AA }, { C-->AB }]

word='bbabaaaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A]      [B]      [A]      []       []       []       []       []       []       []       
[C]      []       [C]      [S]      []       []       []       []       []       []       
[C]      []       [C]      [B]      [A]      []       []       []       []       []       
[S, C]   []       [S, C]   []       [C]      [A]      []       []       []       []       
[B, S, C][A]      [B, S, C][]       [C]      [C]      [A]      []       []       []       
[B, S, C][A, C]   [B, S, C][]       [S, C]   [C]      [C]      [A]      []       []       
[B, C, S][A, C]   [B, C, S][A]      [B, C, S][S, C]   [C]      [C]      [A]      []       
[S]      [S, C]   [S]      [C]      [C, S]   [C, S]   [S]      []       [C]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AS }, { A-->CB }]
B[{ B-->a }]
S[{ S-->AC }, { S-->BB }, { S-->SS }, { S-->b }, { S-->AB }]

word='bbabaaaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [A][S][] [] [] [] [] [] 
[S][S][S][] [B][] [] [] [] [] 
[] [] [A][S][S][B][] [] [] [] 
[S][S][S][] [A][S][B][] [] [] 
[] [] [A][S][S][A][S][B][] [] 
[S][S][S][] [A][S][A][S][B][] 
[S][S][S][] [A][S][A][S][A][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }]
B[{ B-->b }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->CS }]
C[{ C-->b }]

word='bbabaaaaab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [A]   [B, C][]    []    []    []    []    []    
[S]   [S]   [A]   [S]   [A, S][]    []    []    []    []    
[S]   [S]   [A]   [S]   [A]   [A, S][]    []    []    []    
[S]   [S]   [A]   [S]   [A]   [A]   [A, S][]    []    []    
[S]   [S]   [A]   [S]   [A]   [A]   [A]   [A, S][]    []    
[S]   [S]   [A]   [S]   [A]   [A]   [A]   [A]   [A, S][]    
[S]   [S]   [A]   [S]   [A]   [A]   [A]   [A]   [A]   [B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->SA }]
B[{ B-->BA }]
C[{ C-->CB }, { C-->a }]
S[{ S-->AC }, { S-->CA }, { S-->SS }, { S-->CS }, { S-->b }]

word='bbabaaaaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[A, S][A, S][A, S][A]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][S]   []    [C]   []    []    []    []    
[A, S][A, S][A, S][A]   []    []    [C]   []    []    []    
[A, S][A, S][A, S][S]   []    []    []    [C]   []    []    
[A, S][A, S][A, S][A]   []    []    []    []    [C]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->BB }]
C[{ C-->SA }, { C-->a }, { C-->BC }]
S[{ S-->BA }, { S-->SS }, { S-->CC }, { S-->AB }]

word='bbabaaaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[C]      [C]      [C]      []       []       []       []       []       []       []       
[]       []       []       [B]      []       []       []       []       []       []       
[S]      [S]      [S]      [C]      [C]      []       []       []       []       []       
[]       []       []       [S]      [S]      [C]      []       []       []       []       
[S]      [S]      [S]      []       []       [S]      [C]      []       []       []       
[]       []       []       [S]      [S]      []       [S]      [C]      []       []       
[S]      [S]      [S]      []       []       [S]      []       [S]      [C]      []       
[A, C, S][A, C, S][A, C]   [S]      [S]      [A, C]   []       [A]      []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->SB }]
B[{ B-->b }, { B-->a }]
S[{ S-->AS }, { S-->SS }, { S-->CS }, { S-->AB }]

word='bbbbbabbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[A]   [S]   [A]   [B]   []    []    []    []    []    []    
[S]   [A]   [S]   [A]   [B]   []    []    []    []    []    
[A, S][S]   [A]   [S]   [A]   [B]   []    []    []    []    
[A, S][A, S][S]   [A]   [S]   [A]   [B]   []    []    []    
[A, S][A, S][A, S][S]   [A]   [S]   [A]   [B]   []    []    
[A, S][A, S][A, S][A, S][S]   [A]   [S]   [A]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   [A]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }, { A-->CA }]
B[{ B-->a }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->BA }, { S-->SB }]

word='bbbbbabbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[S]      [B]      [A]      []       []       []       []       []       []       []       
[A]      [S]      [B]      [A]      []       []       []       []       []       []       
[B, S]   [A]      [S]      [B]      [A]      []       []       []       []       []       
[S]      []       [S]      []       []       [B]      []       []       []       []       
[A, B, S][B]      [A, B]   []       []       [S]      [A]      []       []       []       
[A, B, S][B, S]   [A, B, S][S]      [B]      [A]      [B]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][A]      [S]      [B, S]   [S]      [B]      [A]      []       
[B, S]   [B, S]   [B, S]   []       [S]      [S]      [S]      []       []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->AS }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->BA }]
C[{ C-->CC }]

word='bbbbbabbba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [B]      []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A, B]   []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [A, B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BS }, { B-->AA }, { B-->SS }]
S[{ S-->AC }, { S-->CA }, { S-->BA }, { S-->SB }, { S-->a }]

word='bbbbbabbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[S]   [B]   [A]   []    []    []    []    []    []    []    
[]    [S]   [B]   [A]   []    []    []    []    []    []    
[B, S][]    [S]   [B]   [A]   []    []    []    []    []    
[B, S][]    [B]   [B]   []    [S]   []    []    []    []    
[B, S][B]   [S]   [S]   []    []    [A]   []    []    []    
[B, S][S]   [B]   [B]   []    [S]   [B]   [A]   []    []    
[B, S][B]   [B, S][B, S][]    [B]   [S]   [B]   [A]   []    
[B, S][B]   [B, S][B, S][]    [B, S][B]   [B]   []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->CA }, { B-->AA }, { B-->CS }]
C[{ C-->b }]
S[{ S-->AC }, { S-->BB }, { S-->CC }, { S-->b }]

word='bbababbabb'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [C, S]   []       []       []       []       []       []       []       []       
[A]      [B]      [A]      []       []       []       []       []       []       []       
[A, S]   [B]      [S]      [C, S]   []       []       []       []       []       []       
[B]      [S]      []       [B]      [A]      []       []       []       []       []       
[B]      [S]      []       [B]      [S]      [C, S]   []       []       []       []       
[S]      []       []       [S]      []       [B, S]   [C, S]   []       []       []       
[B, S]   [A, S]   [B]      [A, S]   [B]      [A]      [B]      [A]      []       []       
[B, S]   [A, S]   [B]      [A, S]   [B]      [A, S]   [B]      [S]      [C, S]   []       
[A, B, S][B, S]   [S]      [B, S]   [S]      [B, S]   [S]      []       [B, S]   [C, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->b }, { B-->AS }, { B-->CB }]
S[{ S-->CC }, { S-->AB }, { S-->BS }]

word='bbababbabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    [B]   [S]   [S]   [B]   []    []    []    []    
[]    []    []    [A]   [A]   []    [B]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[A, S][A, S][A, S][B]   [B]   [S]   [S]   [S]   [B]   []    
[A, S][A, S][A, S][]    []    [A]   [A]   [A]   []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CA }]
B[{ B-->b }, { B-->AS }]
S[{ S-->AC }, { S-->a }, { S-->BC }]
C[{ C-->BA }, { C-->CB }, { C-->BS }]

word='bbababbabb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [B]      []       []       []       []       []       []       []       []       
[S]      [C]      [S]      []       []       []       []       []       []       []       
[S]      [C]      []       [B]      []       []       []       []       []       []       
[A, S]   [C]      [A]      [C]      [S]      []       []       []       []       []       
[A, S]   [C]      [A]      [C]      []       [B]      []       []       []       []       
[A, S]   [C]      [A]      [C]      []       []       [B]      []       []       []       
[A, B, S][C]      [B, S]   []       []       [S]      [C]      [S]      []       []       
[A, B, S][C]      [B, S]   []       []       [S]      [C]      []       [B]      []       
[A, B, S][C]      [B, S]   []       []       [S]      [C]      []       []       [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AC }, { B-->a }, { B-->CC }]
S[{ S-->CA }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->BA }, { C-->SB }]

word='bbababbabb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [C]      [B]      []       []       []       []       []       []       []       
[C]      []       []       [B, S]   []       []       []       []       []       []       
[C]      [B]      [S]      [C]      [B]      []       []       []       []       []       
[B]      [S]      [C]      []       []       [B, S]   []       []       []       []       
[B, C, S][S, C]   []       [B]      [S]      [C]      [B, S]   []       []       []       
[B, S, C][C]      [B]      [S]      [C]      [S]      [C]      [B]      []       []       
[B, C]   [B, S]   [S]      [B, C]   [S]      [C]      []       []       [B, S]   []       
[B, C, S][B, S, C][S, C]   [B, S, C][B, S, C][C]      [B]      [S]      [C]      [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }]
B[{ B-->BB }, { B-->SC }]
C[{ C-->a }, { C-->SS }, { C-->b }]
S[{ S-->AC }, { S-->CC }, { S-->AB }]

word='bbababbabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[B]   [S]   [A, C][]    []    []    []    []    []    []    
[C]   [B]   [S]   [C]   []    []    []    []    []    []    
[S]   [C]   [B]   [S]   [A, C][]    []    []    []    []    
[B, C][S]   [S, C][B]   [S]   [C]   []    []    []    []    
[C, S][B]   [B, S][C]   [B]   [S]   [C]   []    []    []    
[B, S][C, S][B, C][S]   [S, C][B]   [S]   [A, C][]    []    
[B, C][B, S][S, C][B]   [B, S][C]   [B]   [S]   [C]   []    
[S, C][B, C][B, S][S, C][B, C][S]   [C]   [B]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->SA }]
C[{ C-->b }]
S[{ S-->AS }, { S-->CA }, { S-->CB }]

word='aabbaabbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[]    [A]   []    [C]   []    []    []    []    []    []    
[S]   [S]   []    [S]   [A]   []    []    []    []    []    
[A, S][A, S][S]   [A]   []    [A]   []    []    []    []    
[A, S][A, S][S]   [A]   []    [A]   [C]   []    []    []    
[A, S][A, S][S]   [A]   []    [A]   []    [C]   []    []    
[A, S][A, S][S]   [A]   []    [A]   []    []    [C]   []    
[A, S][A, S][A]   [S]   [S]   [S]   []    []    [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AC }, { A-->SA }]
B[{ B-->AA }]
S[{ S-->a }, { S-->BS }]
C[{ C-->b }, { C-->AB }]

word='aabbaabbba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [A, C]   []       []       []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, C]   []       []       []       []       []       []       
[S]      [S]      [S]      []       [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][B]      [A]      [A]      [A, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [A, B]   [A, B]   [A, B]   [A, C]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->CA }, { B-->SC }]
C[{ C-->a }]
S[{ S-->AA }, { S-->SS }, { S-->CC }, { S-->AB }]

word='aabbaabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[]       [B]      [A]      []       []       []       []       []       []       []       
[B, S]   [A]      [S]      [A]      []       []       []       []       []       []       
[A, B]   []       [B]      []       [C]      []       []       []       []       []       
[B, S]   [A]      [S]      []       [S]      [C]      []       []       []       []       
[A, S]   [S]      []       []       []       [B]      [A]      []       []       []       
[A, B, S][A, B, S][A, S]   [S]      [B, S]   [A]      [S]      [A]      []       []       
[A, B, S][A, S]   [S]      [S]      [A]      [S]      []       [S]      [A]      []       
[A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [A, B]   [S]      [B]      []       [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BA }]
B[{ B-->BS }, { B-->AC }, { B-->SS }, { B-->CC }]
C[{ C-->a }, { C-->b }]
S[{ S-->CB }, { S-->SC }]

word='aabbaabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[S]      [B]      [C]      []       []       []       []       []       []       []       
[A, S]   [S]      [B]      [C]      []       []       []       []       []       []       
[B, S]   [A, S]   [S]      [B]      [C]      []       []       []       []       []       
[A, B, S][B, S]   [A, S]   [S]      [B]      [C]      []       []       []       []       
[A, B, S][A, B, S][B, S]   [A, S]   [S]      [B]      [C]      []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [S]      [B]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [S]      [B]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   [S]      [B]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->BC }, { B-->a }]
C[{ C-->BA }]
S[{ S-->SA }, { S-->CB }, { S-->BB }]

word='aabbaabbba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C, S][A, B][]    []    []    []    []    []    []    []    
[B, S][C]   [A]   []    []    []    []    []    []    []    
[C, S][]    []    [A]   []    []    []    []    []    []    
[A, S][]    []    []    [A, B][]    []    []    []    []    
[A, S][]    []    []    [C, S][A, B][]    []    []    []    
[A, S][]    []    []    [B, S][C]   [A]   []    []    []    
[A, S][]    []    []    [C, S][]    []    [A]   []    []    
[A, S][]    []    []    [S]   []    []    []    [A]   []    
[A, S][]    []    []    [A, S][]    []    []    []    [A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->SB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->b }]
C[{ C-->AS }, { C-->SS }, { C-->b }]

word='aababbbabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[S]   [C]   [S, C][]    []    []    []    []    []    []    
[C, S][]    [C]   [S]   []    []    []    []    []    []    
[S, C][S, C][S]   [C]   [S, C][]    []    []    []    []    
[C, S][S, C][S, C][C, S][S, C][S, C][]    []    []    []    
[C, S][S, C][S, C][C, S][S, C][S, C][S, C][]    []    []    
[C, S][S, C][S, C][C, S][S, C][S, C][C]   [S]   []    []    
[C, S][S, C][S, C][C, S][S, C][C, S][S]   [C]   [S, C][]    
[C, S][S, C][S, C][C, S][S, C][S, C][S, C][C, S][S, C][S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }]
B[{ B-->SS }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->CS }]
S[{ S-->CA }]

word='aababbbabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[C]   [S]   [A]   []    []    []    []    []    []    []    
[A]   [B]   []    [C]   []    []    []    []    []    []    
[A, C][B]   []    [S]   [A]   []    []    []    []    []    
[A, S][B]   []    [C]   []    [A]   []    []    []    []    
[A, C][B]   []    [S]   []    []    [A]   []    []    []    
[A]   []    []    [B]   []    []    []    [C]   []    []    
[A, C][]    []    [B]   []    []    []    [S]   [A]   []    
[A, S][]    []    [B]   []    []    []    [C]   []    [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->BC }, { A-->BS }, { A-->BA }]
B[{ B-->AS }, { B-->a }]
S[{ S-->BB }, { S-->b }, { S-->AB }]

word='aababbbabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[A]   [A]   [S]   []    []    []    []    []    []    []    
[A, S][S]   []    [B]   []    []    []    []    []    []    
[B]   []    []    [A]   [S]   []    []    []    []    []    
[A, S][S]   []    [B]   []    [S]   []    []    []    []    
[B]   []    []    [A]   []    []    [S]   []    []    []    
[B, S][B]   []    [S]   []    []    []    [B]   []    []    
[A]   [A]   []    []    []    []    []    [A]   [S]   []    
[B, S][B]   []    [S]   []    []    []    [B]   []    [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->AB }, { A-->BS }]
B[{ B-->b }, { B-->BA }]
S[{ S-->CA }, { S-->SB }, { S-->a }]
C[{ C-->a }]

word='aababbbabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[A]   [S]   [B]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [S, C][]    []    []    []    []    []    
[A, S][A, S][A]   [S]   [B]   []    []    []    []    []    
[A, S][A, S][A]   [S]   []    [B]   []    []    []    []    
[A, S][A, S][A]   [S]   []    []    [B]   []    []    []    
[A, S][A, S][A, B][A, S][]    [B]   [A]   [S, C][]    []    
[A, S][A, S][A, B][A, S][]    [B]   [A]   [S]   [B]   []    
[A, S][A, S][A, B][A, S][]    [B]   [A]   [S]   []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->b }, { B-->SB }, { B-->AA }]
C[{ C-->a }]
S[{ S-->a }, { S-->SS }, { S-->AB }]

word='aababbbabb'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [C, S][]    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[]    []    [A]   [C, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B]   [A, B][]    []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][A, B][]    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][A, B][]    []    []    
[B, S][B, S][B, S][S]   [S]   [B, S][A]   [C, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [A, B][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }]
B[{ B-->AB }, { B-->CC }]
C[{ C-->a }]
S[{ S-->AS }, { S-->AA }]

word='abbbaaabab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[S]      [S]      [A]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [A]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [A, C]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, C]   []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [A]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [A, C]   []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AB }, { B-->CA }, { B-->AA }, { B-->SS }, { B-->SC }]
S[{ S-->a }, { S-->BC }]
C[{ C-->AS }, { C-->b }]

word='abbbaaabab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[S]      []       [C]      []       []       []       []       []       []       []       
[B]      []       []       [C]      []       []       []       []       []       []       
[]       []       []       [B]      [A, S]   []       []       []       []       []       
[S]      []       []       []       [B, C]   [A, S]   []       []       []       []       
[B]      []       []       [S]      [B]      [B, C]   [A, S]   []       []       []       
[S]      []       []       [B]      [B, C, S][B, S]   [B]      [C]      []       []       
[B]      []       []       []       [B]      [B]      [B]      [B]      [A, S]   []       
[B, S]   []       []       [B, S]   [B, C, S][B, C, S][B, C, S][S]      [B]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CB }, { B-->AA }, { B-->BB }, { B-->CS }]
C[{ C-->a }, { C-->b }]
S[{ S-->AS }, { S-->CC }, { S-->b }, { S-->BS }]

word='abbbaaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B, S][C, S][]    []    []    []    []    []    []    []    
[B, S][B, S][C, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][C, S][]    []    []    []    []    []    
[B, S][B, S][B]   [S]   [C]   []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   [C]   []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [S]   [C]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B, S][C, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   [S]   [C]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, S][C, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->CA }]
S[{ S-->AS }, { S-->BA }, { S-->BB }, { S-->BC }, { S-->BS }]
C[{ C-->AB }]

word='abbbaaabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    [C]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S, C][B, S][S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->SS }, { C-->SC }, { C-->AB }, { C-->BC }]
S[{ S-->CB }, { S-->CS }, { S-->b }]

word='aabbbbaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [S]   []    []    []    []    []    []    
[C, S][C, S][C, S][C]   [S]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C]   [S]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][S]   [S]   [S]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   [C]   [C]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }]
B[{ B-->AB }, { B-->BS }, { B-->CA }, { B-->SB }]
S[{ S-->a }, { S-->AA }, { S-->CS }, { S-->b }]

word='aabbbbaabb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[] [A][S][] [] [] [] [] [] [] 
[S][] [A][S][] [] [] [] [] [] 
[A][S][] [A][S][] [] [] [] [] 
[] [A][S][] [A][S][] [] [] [] 
[S][] [A][S][] [A][S][] [] [] 
[A][S][] [A][S][] [A][S][] [] 
[] [A][S][] [A][S][] [A][S][] 
[S][] [A][S][] [A][S][] [A][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->b }, { B-->BC }, { B-->BA }, { B-->a }]
S[{ S-->AC }, { S-->BB }]
C[{ C-->CC }]

word='aabbbbaabb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, B]   []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[A]      []       [S]      [B]      []       []       []       []       []       []       
[A, B]   [A]      []       [S]      [B]      []       []       []       []       []       
[B, S]   [B]      [A]      []       [S]      [B]      []       []       []       []       
[B, S]   [B, S]   [A, B]   [A]      [S]      [B, S]   [A, B]   []       []       []       
[A, B, S][B, S]   [A, B, S][A, B]   [A, S]   [B, S]   [B, S]   [A, B]   []       []       
[A, B, S][A, S]   [B, S]   [A, B, S][A, B]   [A, S]   [S]      [S]      [B]      []       
[A, B, S][A, B]   [A, S]   [B, S]   [A, B, S][A, B]   [A]      []       [S]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->AA }]
S[{ S-->AC }, { S-->SA }, { S-->SS }, { S-->CS }]
C[{ C-->AB }]

word='aabbbbaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[C]   [A]   [B]   []    []    []    []    []    []    []    
[B]   [C]   [A]   [B]   []    []    []    []    []    []    
[A, S][B]   [C]   [A]   [B]   []    []    []    []    []    
[C]   [A, S][B]   [C]   [A]   [B]   []    []    []    []    
[B, S][C]   [A, S][B]   [C]   [A]   [B]   []    []    []    
[A, S][B, S][C]   [A, S][B]   [C]   [A]   [B]   []    []    
[C, S][A, S][B, S][C]   [A, S][B]   [C]   [A]   [B]   []    
[B, S][C, S][A, S][B, S][C]   [A, S][B]   [C]   [A]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AS }, { A-->SB }]
B[{ B-->BC }]
C[{ C-->a }, { C-->b }]
S[{ S-->AA }, { S-->SC }, { S-->CS }, { S-->AB }]

word='aabbbbaabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[S]   []    [A]   [C]   []    []    []    []    []    []    
[S]   [S]   []    [A]   [C]   []    []    []    []    []    
[A, S][S]   [S]   []    [A]   [C]   []    []    []    []    
[A, S][A, S][S]   [S]   []    [A]   [C]   []    []    []    
[A, S][A, S][A, S][S]   [S]   []    [A]   [C]   []    []    
[A, S][A, S][A, S][A, S][S]   [S]   []    [A]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   []    [A]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->SC }, { S-->BS }]
C[{ C-->CA }]

word='babbabbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   []    [A]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   []    [A]   []    []    []    
[S]   [S]   [S]   [S]   [S]   []    []    [A]   []    []    
[S]   [S]   [S]   [S]   [S]   []    []    []    [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BB }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->SS }, { C-->CC }, { C-->b }]
S[{ S-->SC }, { S-->b }]

word='babbabbbba'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[C, S][C]   [C, S][]    []    []    []    []    []    []    
[C, S][C]   [C, S][C, S][]    []    []    []    []    []    
[C, S][C]   [C, S][C, S][C]   []    []    []    []    []    
[C, S][C]   [C, S][C, S][C]   [C, S][]    []    []    []    
[C, S][C]   [C, S][C, S][C]   [C, S][C, S][]    []    []    
[C, S][C]   [C, S][C, S][C]   [C, S][C, S][C, S][]    []    
[C, S][C]   [C, S][C, S][C]   [C, S][C, S][C, S][C, S][]    
[C, S][C]   [C, S][C, S][C]   [C, S][C, S][C, S][C, S][C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AB }, { B-->CS }]
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->SS }]

word='babbabbbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[B][C][S][] [] [] [] [] [] [] 
[S][B][C][S][] [] [] [] [] [] 
[C][S][B][C][S][] [] [] [] [] 
[B][C][S][B][C][S][] [] [] [] 
[S][B][C][S][B][C][S][] [] [] 
[C][S][B][C][S][B][C][S][] [] 
[B][C][S][B][C][S][B][C][S][] 
[S][B][C][S][B][C][S][B][C][S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CS }, { A-->b }, { A-->BC }, { A-->SA }, { A-->BA }]
S[{ S-->AS }, { S-->a }]

word='babbabbbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A, S][A, S][S]   [S]   [S]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }]
C[{ C-->AS }, { C-->SC }, { C-->b }]
S[{ S-->CA }, { S-->BS }]

word='babbabbbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[C]   []    [A, C][]    []    []    []    []    []    []    
[S]   [C]   [S]   [A, C][]    []    []    []    []    []    
[C]   [S]   [C]   [S]   [A]   []    []    []    []    []    
[S]   [C]   [S]   [C]   []    [A, C][]    []    []    []    
[C]   [S]   [C]   [S]   [C]   [S]   [A, C][]    []    []    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [A, C][]    []    
[C]   [S]   [C]   [S]   [C]   [S]   [C]   [S]   [A, C][]    
[S]   [C]   [S]   [C]   [S]   [C]   [S]   [C]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }]
C[{ C-->AC }, { C-->BA }, { C-->a }]
S[{ S-->CA }, { S-->SB }, { S-->AA }, { S-->SC }]

word='abbbbbabba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [A]      []       []       []       []       []       []       []       
[S]      [A]      [S]      [A]      []       []       []       []       []       []       
[A]      [S]      [A]      [S]      [A]      []       []       []       []       []       
[S]      [A]      [S]      [A]      [S]      [A]      []       []       []       []       
[A, C, S][S, C]   [A, C, S][C, S]   [A, C, S][C, S]   [A, C]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A]      []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      [S]      [A]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C, S]   [A, C, S][C, S]   [A, C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->BS }]
B[{ B-->a }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->AA }, { S-->SC }, { S-->b }, { S-->AB }]

word='abbbbbabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[S]   [A]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [A]   [S]   []    []    []    []    []    []    
[A, S][A, S][S]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [A]   [S]   []    []    []    []    
[A, S][A, S][S]   [A]   [S]   []    [B]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    [A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [S]   [A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][S]   [A]   [S]   []    [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AS }, { A-->CA }]
B[{ B-->BS }, { B-->BB }, { B-->CC }, { B-->CS }]
S[{ S-->SA }, { S-->a }, { S-->b }]

word='abbbbbabba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [A, S][A, S][]    []    []    []    []    []    []    
[S]   [A, S][A, S][A, S][]    []    []    []    []    []    
[S]   [A, S][A, S][A, S][A, S][]    []    []    []    []    
[S]   [A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[S]   [A, S][A, S][A, S][A, S][A]   [S]   []    []    []    
[S]   [A, S][A, S][A, S][A, S][A]   [S]   [A, S][]    []    
[S]   [A, S][A, S][A, S][A, S][A]   [S]   [A, S][A, S][]    
[S]   [A, S][A, S][A, S][A, S][A]   [S]   [A, S][A]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }]
C[{ C-->AC }, { C-->AS }, { C-->CB }, { C-->a }, { C-->SC }]
S[{ S-->b }, { S-->BC }, { S-->BS }]

word='abbbbbabba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C, S][B, S][]    []    []    []    []    []    []    []    
[S, C][S]   [B, S][]    []    []    []    []    []    []    
[C, S][S]   [S]   [B, S][]    []    []    []    []    []    
[C, S][S]   [S]   [S]   [B, S][]    []    []    []    []    
[C, S][S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][B, C][]    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][B, S][]    []    
[C, S][C, S][C, S][C, S][C, S][C, S][S, C][S]   [B, S][]    
[C, S][C, S][C, S][C, S][C, S][C, S][S, C][C, S][C, S][B, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AS }, { B-->SA }]
S[{ S-->a }, { S-->SS }, { S-->CC }, { S-->b }]
C[{ C-->CA }, { C-->a }, { C-->BC }]

word='abbbbbabba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][S, C][S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->a }, { B-->AA }]
S[{ S-->b }, { S-->BC }]
C[{ C-->BB }, { C-->SS }, { C-->CC }, { C-->b }]

word='abbbbbabbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S, C][C]   [S, C][]    []    []    []    []    []    []    
[C, S][C]   [C]   [S, C][]    []    []    []    []    []    
[C, S][C]   [C]   [C]   [S, C][]    []    []    []    []    
[C, S][C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[C, S][C]   [C]   [C]   [C]   [C]   [S]   [S, C][]    []    
[C, S][C]   [C]   [C]   [C]   [C]   [S, C][C]   [S, C][]    
[C, S][C]   [C]   [C]   [C]   [C]   [S, C][C]   [C]   [S, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->b }, { B-->a }, { B-->SS }]
S[{ S-->CA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->BS }]
C[{ C-->SA }]

word='abbbbbabbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B, S][S]   [B]   []    []    []    []    []    []    []    
[B, S][S]   [S]   [B]   []    []    []    []    []    []    
[B, S][B, S][S]   [S]   [B]   []    []    []    []    []    
[B, S][B, S][B, S][S]   [S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [B, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [B]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CB }]
B[{ B-->CA }, { B-->SC }]
C[{ C-->a }, { C-->b }]
S[{ S-->a }, { S-->BB }, { S-->CC }]

word='abbbbbabbb'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [C]      []       []       []       []       []       []       []       []       
[A, B]   [S]      [C]      []       []       []       []       []       []       []       
[A]      [B]      [S]      [C]      []       []       []       []       []       []       
[B, S]   [A]      [B]      [S]      [C]      []       []       []       []       []       
[A, B, S][B]      [A]      [B]      [S]      [C]      []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, B]   [A, B]   [S]      [C, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [B, S]   [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [A, B]   [S]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B]      [A]      [B]      [S]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->BB }]
C[{ C-->AS }, { C-->SS }]

word='abbbbbabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[S]   [B]   [A]   []    []    []    []    []    []    []    
[C, S][S]   [B]   [A]   []    []    []    []    []    []    
[S, C][S, C][S]   [B]   [A]   []    []    []    []    []    
[C, S][S, C][C, S][S]   [B]   [A]   []    []    []    []    
[C, S][C, S][S, C][C, S][S]   [B]   [A]   []    []    []    
[C, S][C, S][S, C][S, C][C, S][S]   [B]   [A]   []    []    
[C, S][C, S][S, C][S, C][S, C][C, S][S]   [B]   [A]   []    
[C, S][C, S][S, C][S, C][S, C][S, C][C, S][S]   [B]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }]
C[{ C-->AS }, { C-->SA }, { C-->a }, { C-->CS }]
S[{ S-->CA }, { S-->b }, { S-->BC }]

word='abbbbbabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C, S]   [A, S]   []       []       []       []       []       []       []       []       
[S, C]   [A, C]   [A, S]   []       []       []       []       []       []       []       
[C, S]   [A, C, S][A, C]   [A, S]   []       []       []       []       []       []       
[C, S]   [A, S, C][A, C, S][A, C]   [A, S]   []       []       []       []       []       
[C, S]   [A, C, S][A, C, S][A, C, S][A, C]   [A, S]   []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [C, S]   [A, S]   []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [S, C]   [A, C]   [A, S]   []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [A, C, S][A, C]   [A, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->SB }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->a }, { S-->BS }]

word='abaaabaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B, S][S]   [S]   []    []    []    []    []    []    []    
[B, S][B]   [B]   [S]   []    []    []    []    []    []    
[B, S][B, S][B, S][B]   [S]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [S]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   [S]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SC }, { B-->CS }]
S[{ S-->AS }, { S-->a }]
C[{ C-->CB }]

word='abaaabaaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[A, S][B]   [S]   []    []    []    []    []    []    []    
[A, S][B]   [A]   [S]   []    []    []    []    []    []    
[A, S][B]   [A, S][A]   [S]   []    []    []    []    []    
[A]   []    [A]   [A]   [A]   [B]   []    []    []    []    
[A, S][B]   [A, S][A, S][A, S][B]   [S]   []    []    []    
[A, S][B]   [A, S][A, S][A, S][B]   [A]   [S]   []    []    
[A]   []    [A]   [A]   [A]   []    [A]   [A]   [B]   []    
[A, S][B]   [A, S][A, S][A, S][B]   [A, S][A, S][B]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->CA }]
B[{ B-->AA }]
C[{ C-->a }]
S[{ S-->AS }, { S-->BA }, { S-->CS }, { S-->b }]

word='abaaabaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[A]      [A]      [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[A, B]   [A, B]   [A]      [A]      [A]      [A]      [C]      []       []       []       
[A]      [A]      []       []       []       []       []       [C]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       
[A, B, S][A, B, S][A, B]   [A, B]   [A, B]   [A, B]   [A]      [A]      [A]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CB }]
B[{ B-->BA }, { B-->a }]
C[{ C-->AS }, { C-->SA }, { C-->AA }, { C-->b }, { C-->BS }]
S[{ S-->CC }]

word='bbbbaababb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A]      [S]      [C]      []       []       []       []       []       []       []       
[]       [A]      [S]      [C]      []       []       []       []       []       []       
[C, S]   [C]      []       [A]      [B]      []       []       []       []       []       
[A]      [A]      []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       []       [C]      []       []       []       
[A, C, S][A, C]   []       []       []       [B]      [A]      [B]      []       []       
[A, S]   [S]      []       []       []       []       []       []       [C]      []       
[A, S, C][A, S, C][]       []       []       [C]      [S, C]   [C]      [S]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
C[{ C-->b }]
S[{ S-->CA }, { S-->AA }, { S-->SS }, { S-->CC }]

word='bbbbaababb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[S][] [S][C][] [] [] [] [] [] 
[] [S][] [S][A][] [] [] [] [] 
[S][] [S][] [S][A][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[S][] [S][] [S][] [S][A][] [] 
[] [] [] [] [] [] [] [] [C][] 
[S][] [S][] [S][] [S][] [S][C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->AA }, { B-->BB }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->CB }, { S-->a }]
C[{ C-->BS }]

word='bbbbaababb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[B]      [B]      []       []       []       []       []       []       []       []       
[B]      [B]      [B]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [B]      []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [C]      [S]      []       []       []       []       []       
[B, C]   [B, C]   [C]      []       []       [S]      []       []       []       []       
[B, S, C][B, S, C][S]      []       []       []       [B]      []       []       []       
[B, C]   [B, C]   [B]      []       []       []       [C]      [S]      []       []       
[B, C, S][B, C, S][B]      []       []       []       [S]      []       [B]      []       
[B, C, S][B, C, S][B]      []       []       []       [S]      []       [B]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }, { A-->SB }]
B[{ B-->a }]
C[{ C-->BA }]
S[{ S-->AS }, { S-->SA }, { S-->AA }, { S-->AB }, { S-->BS }]

word='bbbbaababb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A]   []    []    []    []    []    []    
[A, S][A, S][A, S][S]   [B]   []    []    []    []    []    
[A, S][A, S][A, S][A]   []    [B]   []    []    []    []    
[S]   [S]   [S]   [S]   []    [C]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][C, S][A, S][S]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AC }, { A-->SA }, { A-->CB }]
B[{ B-->BS }, { B-->CA }, { B-->SB }]
C[{ C-->a }]
S[{ S-->AA }]

word='bbbbaababb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A]      []       []       []       []       []       []       []       []       
[A]      [S]      [A]      []       []       []       []       []       []       []       
[S]      [A]      [S]      [A]      []       []       []       []       []       []       
[S]      [A]      [S]      [A]      [C]      []       []       []       []       []       
[S]      [A]      [S]      [A]      []       [C]      []       []       []       []       
[A, B]   [S]      [A, B]   [S]      [A]      [B]      [A]      []       []       []       
[A, B]   [S]      [A, B]   [S]      [A]      [B]      [A]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A]      [S]      [B]      [A]      []       
[A, B, S][A, S]   [A, B, S][A, S]   [A]      [B, S]   [A]      []       [S]      [A]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }]
S[{ S-->AC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->BA }, { C-->SB }, { C-->BC }]

word='bababbaaab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[C]      [B]      [S]      []       []       []       []       []       []       []       
[S]      [C]      []       [A]      []       []       []       []       []       []       
[]       [S]      [C]      [B]      [S]      []       []       []       []       []       
[C]      [B]      [S]      []       []       [S]      []       []       []       []       
[S]      [C]      []       []       []       []       [A]      []       []       []       
[]       []       []       []       []       []       []       [A]      []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[S, C]   [B, C, S][S, C]   [B, C]   [S]      [C]      [B]      [S]      [B]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SS }, { A-->SC }]
B[{ B-->b }, { B-->AS }]
S[{ S-->BA }, { S-->b }]
C[{ C-->SA }, { C-->AB }]

word='bababbaaab'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S, C]   [A]      []       []       []       []       []       []       []       []       
[A]      [B, C]   [B, S]   []       []       []       []       []       []       []       
[A]      [B, S]   [S, C]   [A]      []       []       []       []       []       []       
[B, C, S][A]      [A]      [B, C]   [B, S]   []       []       []       []       []       
[A]      [B, S, C][B, S, C][A]      [A]      [B, S]   []       []       []       []       
[A]      [B, S, C][B, C, S][]       [A]      [S, C]   [A]      []       []       []       
[A]      [B, S, C][C, S]   []       [A]      [C]      []       [A]      []       []       
[A]      [S, C]   [C]      []       []       []       []       []       [A]      []       
[B, C, S][A]      [A]      [B, S]   [S, C]   [A]      []       [C]      [B, C]   [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
C[{ C-->BA }, { C-->SS }, { C-->CS }, { C-->b }]
S[{ S-->AA }, { S-->BB }, { S-->CC }, { S-->AB }, { S-->BC }]

word='bababbaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[C]   [S]   [C]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[C, S][C, S][C]   [S]   [C]   []    []    []    []    []    
[S, C][S]   [S]   []    [S]   [C]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[C, S][C, S][C, S][S]   [S, C][C]   [S]   [B]   []    []    
[]    []    []    []    []    []    []    [S]   [B]   []    
[C, S][C, S][C, S][S, C][C, S][S, C][C]   []    [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AC }, { A-->CA }]
B[{ B-->BC }, { B-->BS }, { B-->AS }, { B-->BA }, { B-->a }]
C[{ C-->b }]
S[{ S-->BB }]

word='aaaaaaaaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[B][S][B][] [] [] [] [] [] [] 
[S][B][S][B][] [] [] [] [] [] 
[B][S][B][S][B][] [] [] [] [] 
[S][B][S][B][S][B][] [] [] [] 
[B][S][B][S][B][S][B][] [] [] 
[S][B][S][B][S][B][S][B][] [] 
[B][S][B][S][B][S][B][S][B][] 
[S][B][S][B][S][B][S][B][S][B]

validity=true
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->BB }, { B-->CS }]
C[{ C-->CB }, { C-->a }]
S[{ S-->CC }, { S-->b }]

word='aaaaaaaaaa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[B]      [S]      [C]      []       []       []       []       []       []       []       
[C]      [B]      [S]      [C]      []       []       []       []       []       []       
[B, S]   [C]      [B]      [S]      [C]      []       []       []       []       []       
[B, C]   [B, S]   [C]      [B]      [S]      [C]      []       []       []       []       
[B, C, S][B, C]   [B, S]   [C]      [B]      [S]      [C]      []       []       []       
[B, S, C][B, C, S][B, C]   [B, S]   [C]      [B]      [S]      [C]      []       []       
[B, C, S][B, S, C][B, C, S][B, C]   [B, S]   [C]      [B]      [S]      [C]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B, S]   [C]      [B]      [S]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
C[{ C-->CB }, { C-->a }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->CC }, { S-->CS }, { S-->BS }]

word='aaaaaaaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[A, S][S]   [S]   [C]   []    []    []    []    []    []    
[A, S][A, S][S]   [S]   [C]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [S]   [C]   []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [S]   [C]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [S]   [C]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->AA }, { S-->BS }]
C[{ C-->BC }]

word='ababbabbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[B]   [S]   [S]   []    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[S]   [B]   [B]   [S]   [A, B][]    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[B, S][B, S][B, S][B, S][B]   [B]   [S]   [A, B][]    []    
[B, S][B, S][B, S][B, S][B]   [B]   [S]   [S]   [A, B][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AS }, { A-->CA }, { A-->BA }]
C[{ C-->a }, { C-->b }]
S[{ S-->AA }]

word='ababbabbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[A, S][A]   [A, C][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [A, C][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [A]   [A, C]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->SA }]
C[{ C-->BA }, { C-->a }, { C-->b }, { C-->AB }]
S[{ S-->AS }, { S-->SB }, { S-->CC }]

word='ababbabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    [S]   [C]   []    []    []    []    []    []    []    
[A]   []    [S]   [C]   []    []    []    []    []    []    
[]    [A]   []    [S]   [C]   []    []    []    []    []    
[A, S][]    [A]   []    [S]   [C]   []    []    []    []    
[]    [A, S][]    [A]   []    [S]   [C]   []    []    []    
[A, S][]    [A, S][]    [A]   []    [S]   [C]   []    []    
[]    [A, S][]    [A, S][]    [A]   []    [S]   [C]   []    
[A, S][]    [A, S][]    [A, S][]    [A]   []    [S]   [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->CB }, { B-->SB }]
S[{ S-->a }, { S-->SS }, { S-->b }]

word='ababbabbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B, S][A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[B, S][B, S][B, S][A, S][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][A, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->CB }]
B[{ B-->AC }, { B-->CC }]
C[{ C-->a }, { C-->b }]
S[{ S-->CA }]

word='ababbabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A]      [B]      [C]      []       []       []       []       []       []       []       
[B, S]   [A]      [B]      [C]      []       []       []       []       []       []       
[A]      [B, S]   [A]      [B]      [C]      []       []       []       []       []       
[A, B, S][A]      [B, S]   [A]      [B]      [C]      []       []       []       []       
[A, B, S][A, B, S][A]      [B, S]   [A]      [B]      [C]      []       []       []       
[A, B, S][A, B, S][A, B, S][A]      [B, S]   [A]      [B]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A]      [B, S]   [A]      [B]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A]      [B, S]   [A]      [B]      [C]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AB }, { A-->CA }, { A-->CB }]
B[{ B-->a }]
C[{ C-->a }, { C-->b }]
S[{ S-->AA }, { S-->BB }, { S-->SS }]

word='babbabbbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[A, S][A]   [A]   [A]   [B, C][]    []    []    []    []    
[A]   []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[A, S][A, S][A, S][A, S][A]   [A]   [A]   [A]   [B, C][]    
[A, S][A]   [A]   [A]   []    []    []    []    []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->CA }, { B-->BB }, { B-->SC }]
C[{ C-->SA }, { C-->AA }, { C-->b }]
S[{ S-->BC }]

word='babbabbbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[S]   []    [C]   []    []    []    []    []    []    []    
[B]   []    []    [C]   []    []    []    []    []    []    
[]    []    []    [B]   [A]   []    []    []    []    []    
[A]   []    []    [S]   []    [C]   []    []    []    []    
[]    []    []    [B]   []    []    [C]   []    []    []    
[A]   []    []    [S]   []    []    []    [C]   []    []    
[B, C][]    []    [B, C][]    []    []    [B]   [A]   []    
[A, S][]    []    [S]   []    []    []    [S]   []    [C]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->BB }, { C-->CC }, { C-->SC }]
S[{ S-->CS }, { S-->b }, { S-->BC }]

word='babbabbbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C, S][C, S][A, S][]    []    []    []    []    []    []    
[C, S][C, S][C]   [A, S][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][A, S][]    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C]   [A, S][]    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C]   [A, S][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }]
B[{ B-->BS }, { B-->BB }]
S[{ S-->AS }, { S-->b }]
C[{ C-->AC }]

word='babbabbbab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->SS }]
S[{ S-->AS }, { S-->AA }, { S-->CS }, { S-->b }]
C[{ C-->SC }, { C-->AB }, { C-->BC }]

word='babbabbbab'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[B]      [S]      [S]      []       []       []       []       []       []       []       
[C]      [B, C]   [B]      [S]      []       []       []       []       []       []       
[B]      [A, S]   [A]      []       [A]      []       []       []       []       []       
[B, S]   [B, S]   [S]      [B]      [S]      [S]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [C]      [B, C]   [B]      [S]      []       []       []       
[B, S, C][B, S, C][B, S]   [B, S]   [S]      []       [B]      [S]      []       []       
[A, B]   [A, S]   [A]      [A]      []       []       [A]      []       [A]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B]      [S]      [B]      [S]      [S]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->CC }]
S[{ S-->CA }, { S-->SB }, { S-->a }, { S-->BC }]
C[{ C-->AC }, { C-->AS }, { C-->BS }]

word='babaaaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[S]      []       [A]      []       []       []       []       []       []       []       
[B, S, C][S]      [C]      [B, S]   []       []       []       []       []       []       
[B, S, C][S]      [C]      [S, C]   [B, S]   []       []       []       []       []       
[B, S, C][S]      [B, C]   [S, C]   [S, C]   [B, S]   []       []       []       []       
[B, S, C][S]      [B, C]   [B, S, C][S, C]   [S, C]   [B, S]   []       []       []       
[B, S, C][S, C]   [B, C, S][S, C]   [C, S]   [S]      []       [A]      []       []       
[B, C, S][S, C]   [C, S]   [C, S]   [S]      []       []       []       [A]      []       
[B, C, S][B, S, C][B, C, S][B, S, C][B, S]   [B, C]   [S]      [C]      [C]      [B, S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AB }, { B-->AC }, { B-->BA }, { B-->SB }]
S[{ S-->AS }, { S-->a }, { S-->AA }]
C[{ C-->BS }]

word='babaaaabba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A]   [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[A, S][A, S][A, S][A]   [A]   [A]   [A]   [A]   []    []    
[A, S][A, S][A, S][S]   [S]   [S]   [S]   [S]   [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->a }, { B-->SS }]
C[{ C-->BB }, { C-->b }]
S[{ S-->SB }, { S-->CC }, { S-->BS }]

word='babaaaabba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S]      [C]      [B, C]   []       []       []       []       []       []       []       
[S]      []       [C]      [B]      []       []       []       []       []       []       
[S]      [S]      [S]      [C]      [B]      []       []       []       []       []       
[S]      [S]      [S]      []       [C]      [B]      []       []       []       []       
[B, S]   [S]      [S]      [S]      []       [C]      [B]      []       []       []       
[B, C, S][B, S, C][B, S]   [S]      [S]      [S]      [C]      [B, C]   []       []       
[B, S, C][B, C, S][B, C, S][B, S]   [S]      [S]      [S]      [C, S]   [B, C]   []       
[B, C, S][B, S, C][B, C, S][B, S, C][S]      [S]      [S]      [S]      [C]      [B]      

validity=true
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }]
B[{ B-->CB }, { B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->a }, { S-->CS }, { S-->BS }]
C[{ C-->CA }]

word='babaaaabba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, S]

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AA }]
S[{ S-->AS }, { S-->BA }, { S-->BB }, { S-->CC }, { S-->BC }]
C[{ C-->SC }, { C-->AB }]

word='babaaaabba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[C, S][B]   [A]   []    []    []    []    []    []    []    
[S]   [S, C][B]   [A]   []    []    []    []    []    []    
[S]   [S]   [C, S][B]   [A]   []    []    []    []    []    
[S, C][S]   [S]   [C, S][B]   [A]   []    []    []    []    
[C, S][S, C][S]   [S]   [C, S][B]   [A]   []    []    []    
[C, S][C, S][S, C][S]   [S]   [C, S][B]   [A]   []    []    
[S, C][S, C][S, C][S, C][S]   [S]   [C, S][B]   [A]   []    
[S, C][S, C][S, C][S, C][S, C][S]   [S]   [C, S][B]   [A]   

validity=true
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->SB }]
B[{ B-->a }]
C[{ C-->b }]
S[{ S-->AS }, { S-->AA }]

word='aaaabbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [A]   [A, C][]    []    []    []    []    
[]    []    []    [A, S][A, S][A, C][]    []    []    []    
[]    []    []    [A, S][A, S][A, S][A, C][]    []    []    
[]    []    []    [A, S][A, S][A]   []    [B]   []    []    
[]    []    []    [A]   [A]   []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->a }, { B-->CC }, { B-->CS }]
C[{ C-->AC }, { C-->SA }, { C-->AB }, { C-->BS }]
S[{ S-->SB }]

word='aaaabbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[C]   [A]   [B]   []    []    []    []    []    []    []    
[]    [C]   [A]   [B]   []    []    []    []    []    []    
[C]   []    [C]   [A]   [B]   []    []    []    []    []    
[B]   [C]   []    [C]   [A]   [B]   []    []    []    []    
[A, C][B]   [C]   []    [C]   [A]   [B]   []    []    []    
[B, C][A, C][B]   [C]   []    [C]   [A]   [B]   []    []    
[A, C][B, C][A, C][B]   [C]   []    [C]   [A]   [B]   []    
[B, C][A, C][B, C][A, C][B]   [C]   []    [C]   [A]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SA }]
B[{ B-->b }, { B-->a }]
C[{ C-->b }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->AA }, { S-->SC }, { S-->AB }, { S-->BC }]

word='aaaabbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [B]   []    []    []    []    []    []    []    []    
[S]   [A]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [A]   [B]   []    []    []    []    []    []    
[A, S][S]   [S]   [A, S][B, C][]    []    []    []    []    
[A, S][A, S][S]   [S]   [A, S][B, C][]    []    []    []    
[A, S][A, S][A, S][A, S][S]   [A, S][B, C][]    []    []    
[A, S][A, S][A, S][A, S][A, S][S]   [A, S][B]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [B]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   [B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AS }, { B-->a }]
S[{ S-->SA }, { S-->a }]
C[{ C-->AC }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BS }]

word='aaaabbbaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[C]   [C]   [B, S][]    []    []    []    []    []    []    
[C]   [C]   [C]   [B, S][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    [C]   [B, S][]    []    
[]    []    []    []    []    []    [C]   [C]   [B, S][]    
[]    []    []    []    []    []    [C]   [C]   [C]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->CB }]
C[{ C-->BA }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->CS }, { S-->BC }]

word='aaaabbbaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->SB }, { B-->a }]
S[{ S-->BA }]

word='abbaaaaaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CC }, { A-->SB }]
B[{ B-->BS }, { B-->a }]
C[{ C-->SS }, { C-->b }]
S[{ S-->AC }, { S-->CA }, { S-->CB }]

word='abbaaaaaab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[]    []    [S]   [B]   []    []    []    []    []    []    
[B]   [S]   [A, S][A]   [B]   []    []    []    []    []    
[A, B][A, S][A]   []    [A]   [B]   []    []    []    []    
[A]   [A]   []    []    []    [A]   [B]   []    []    []    
[]    []    []    []    []    []    [A]   [B]   []    []    
[]    []    []    []    []    []    []    [A]   [B]   []    
[A]   [A]   []    []    []    [A]   [B]   [S]   []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->CA }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->AC }, { S-->AS }, { S-->a }, { S-->b }]
C[{ C-->b }]

word='abbaaaaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [S, C][]    []    []    []    []    []    []    []    
[B]   []    [S, C][]    []    []    []    []    []    []    
[B]   []    []    [B, S][]    []    []    []    []    []    
[B]   []    []    [B]   [B, S][]    []    []    []    []    
[B]   []    []    [B]   [B]   [B, S][]    []    []    []    
[B]   []    []    [B]   [B]   [B]   [B, S][]    []    []    
[B]   []    []    [B]   [B]   [B]   [B]   [B, S][]    []    
[B]   []    []    [B]   [B]   [B]   [B]   [B]   [B, S][]    
[B]   []    []    [B]   [B]   [B]   [B]   [B]   [B]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }, { B-->AC }, { B-->BA }, { B-->AA }, { B-->CS }]
S[{ S-->SA }, { S-->a }]
C[{ C-->SB }]

word='abbaaaaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][B][] [] [] [] [] [] [] [] 
[S][A][B][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [C][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AC }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->CS }]
C[{ C-->AS }]

word='abbaaaaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [B]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A, B][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AC }]
B[{ B-->BB }, { B-->CC }]
C[{ C-->a }, { C-->b }]
S[{ S-->SC }]

word='bbabbaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [C]   []    []    []    []    []    []    []    []    
[A]   [B]   [C]   []    []    []    []    []    []    []    
[A, B][A]   [B]   [C]   []    []    []    []    []    []    
[A]   [A, B][A]   [B]   [C]   []    []    []    []    []    
[A, B][A]   [A, B][A]   [B]   [C]   []    []    []    []    
[A]   [A, B][A]   [A, B][A]   [B]   [C]   []    []    []    
[A, B][A]   [A, B][A]   [A, B][A]   [B]   [C]   []    []    
[A]   [A, B][A]   [A, B][A]   [A, B][A]   [B]   [C]   []    
[A, B][A]   [A, B][A]   [A, B][A]   [A, B][A]   [B]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }]
B[{ B-->AB }, { B-->SA }, { B-->SS }]
S[{ S-->a }, { S-->BB }]
C[{ C-->CA }, { C-->BS }]

word='bbabbaabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[B][B][B][A][] [] [] [] [] [] 
[B][B][B][A][A][] [] [] [] [] 
[C][C][C][] [] [S][] [] [] [] 
[S][S][S][B][B][B][S][] [] [] 
[B][B][B][] [] [] [B][A][] [] 
[B][B][B][] [] [] [B][A][A][] 
[B][B][B][] [] [] [B][A][A][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->AC }, { B-->CA }, { B-->BB }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->SS }, { S-->BC }]
C[{ C-->AS }, { C-->AA }, { C-->CS }]

word='bbabbaabbb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[B, C]      [C]         [A, S]      []          []          []          []          []          []          []          
[A, B, S]   [B]         [C]         [A]         []          []          []          []          []          []          
[A, S, C]   [A, S]      [B]         [C]         [A]         []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, B, S]   [B, C]      [C]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, C]      [S, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][B, S, C]   [A, B, C, S][A, B, S]   [B]         [C]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [B]         [C]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [S, C]      [A, S]      [B]         [C]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->CB }]
B[{ B-->SA }, { B-->BA }, { B-->SB }, { B-->a }]
C[{ C-->a }, { C-->b }, { C-->BC }]

word='bbabbaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [A]   [B, C][]    []    []    []    []    []    []    
[]    [A]   [C]   [C]   []    []    []    []    []    []    
[]    [A]   []    []    [C]   []    []    []    []    []    
[]    [A]   []    []    [A]   [B, C][]    []    []    []    
[]    [A]   []    []    [A]   [A, C][B, C][]    []    []    
[]    [A]   []    []    [A]   [A, C][C]   [C]   []    []    
[]    [A]   []    []    [A]   [A]   []    []    [C]   []    
[]    [A]   []    []    [A]   [A]   []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->a }]
S[{ S-->AA }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SB }, { C-->CS }]

word='bbabbaabbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[B]   [C]   [B]   []    []    []    []    []    []    []    
[B]   [C]   []    [B, S][]    []    []    []    []    []    
[B]   [C]   [B]   [C]   [B, S][]    []    []    []    []    
[B]   []    []    [B]   [C]   [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B, S][]    []    
[]    []    []    []    []    []    [B]   [C]   [B, S][]    
[]    []    []    []    []    []    [B]   [B, C][C]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->AC }]
B[{ B-->b }, { B-->BA }]
S[{ S-->CS }, { S-->AB }, { S-->BC }]

word='aaaaabbbba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       [S]      [A, B]   []       []       []       []       
[]       []       []       []       [S]      [B, S]   [A, B]   []       []       []       
[]       []       []       []       [A, S]   [B, S]   [B, S]   [A, B]   []       []       
[]       []       []       []       [A, S]   [A, B, S][B, S]   [B, S]   [A, B]   []       
[]       []       []       []       [A, S]   [A, B, S][B, S]   [B, S]   [B]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }]
S[{ S-->CA }, { S-->a }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->BC }]
C[{ C-->a }, { C-->BS }]

word='aaaaabbbba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AC }, { B-->CA }, { B-->CB }, { B-->AA }]
C[{ C-->SA }, { C-->a }]
S[{ S-->SB }, { S-->BB }, { S-->SS }, { S-->BS }]

word='aaaaabbbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[S][S][S][S][S][S][B][] [] [] 
[S][S][S][S][S][S][S][B][] [] 
[S][S][S][S][S][S][S][S][B][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }]
B[{ B-->a }]
S[{ S-->AS }, { S-->CC }, { S-->b }]
C[{ C-->CA }, { C-->SB }, { C-->AB }]

word='aaaaabbbba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, B]   []       []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, B]   []       []       []       []       []       []       []       
[A, C, S][A, C]   [A, C]   [A, B]   []       []       []       []       []       []       
[A, S, C][A, S, C][A, C]   [A, C]   [A, B]   []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[]       []       []       []       []       []       []       [S]      []       []       
[]       []       []       []       []       []       []       []       [S]      []       
[]       []       []       []       []       []       []       []       [C]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->CB }]
B[{ B-->b }]
S[{ S-->a }, { S-->BB }, { S-->b }]
C[{ C-->SB }, { C-->BS }]

word='aaaaabbbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [C]   [B, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [S, C][B, S][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A, C][S, C][B, S][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][S, C][B, S][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->BB }, { B-->CC }]
C[{ C-->CA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->AB }]
S[{ S-->b }]

word='abaabaaaba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[B]      [C]      [C]      []       []       []       []       []       []       []       
[B, C]   [B, C]   [B]      [C]      []       []       []       []       []       []       
[A, B, C][A, B, C][A, B]   [C]      [S]      []       []       []       []       []       
[B, C]   [B, C]   [C]      [B]      [C]      [C]      []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [C]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      [B]      [C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [A, B]   [C]      [S]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [C]      [B]      [C]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->SA }, { B-->a }]
C[{ C-->CB }]
S[{ S-->SC }]

word='abaabaaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->SA }]
B[{ B-->a }, { B-->SS }, { B-->CC }, { B-->SC }, { B-->CS }]
S[{ S-->b }]
C[{ C-->b }]

word='abaabaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [S, C][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    [A]   [S, C][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    [A]   [S, C][]    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AC }, { A-->CA }]
B[{ B-->AB }, { B-->SB }, { B-->SS }]
C[{ C-->a }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->a }, { S-->b }]

word='abaabaaaba'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [C, S]   []       []       []       []       []       []       []       []       
[A, B, C][A, B]   [C, S]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B]   [C, S]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [C, S]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C, S]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C, S]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C, S]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C, S]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [C, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AC }, { B-->a }]
C[{ C-->BA }, { C-->CB }, { C-->BB }]
S[{ S-->AB }]

word='abaabaaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[C][B][] [] [] [] [] [] [] [] 
[C][C][B][] [] [] [] [] [] [] 
[C][C][C][B][] [] [] [] [] [] 
[C][C][C][C][B][] [] [] [] [] 
[C][C][C][C][C][B][] [] [] [] 
[C][C][C][C][C][C][B][] [] [] 
[C][C][C][C][C][C][C][B][] [] 
[C][C][C][C][C][C][C][C][B][] 
[C][C][C][C][C][C][C][C][C][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }]
S[{ S-->a }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }]
C[{ C-->AS }, { C-->SA }, { C-->AA }, { C-->SS }, { C-->b }, { C-->BS }]

word='bbbbbbbabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[S, C][S, C][S, C][S, C][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][]    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    []    []    
[C, S][S, C][S, C][S, C][S, C][S, C][S, C][S]   []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][]    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AS }]
B[{ B-->CA }]
C[{ C-->SC }, { C-->BC }]
S[{ S-->AC }, { S-->SA }, { S-->CS }]

word='bbbbbbbabb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AS }, { B-->CC }]
C[{ C-->CB }, { C-->SB }, { C-->AA }, { C-->BS }]
S[{ S-->SA }]

word='bbbbbbbabb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[] [C][A][] [] [] [] [] [] [] 
[B][] [C][A][] [] [] [] [] [] 
[] [B][] [C][A][] [] [] [] [] 
[C][] [B][] [C][A][] [] [] [] 
[] [C][] [B][] [C][A][] [] [] 
[B][] [C][] [B][] [C][A][] [] 
[] [B][] [C][] [B][] [C][A][] 
[C][] [B][] [C][] [B][] [C][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->BS }, { A-->SB }]
B[{ B-->b }, { B-->AB }]
C[{ C-->BA }, { C-->a }]
S[{ S-->CA }, { S-->AA }, { S-->b }]

word='bbbbbbbabb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [B, S]      []          []          []          []          []          []          []          []          
[B, C]      [A]         [B, S]      []          []          []          []          []          []          []          
[A, S]      [B, C]      [A]         [B, S]      []          []          []          []          []          []          
[A, B, C, S][A, S]      [B, C]      [A]         [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, S]      [B, C]      [A]         [B, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, S]      [B, C]      [A]         [B, S]      []          []          []          
[A, C, S]   [A, S, C]   [A, C, S]   [A, C, S]   [A, S]      [C]         [A]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [B, C]      [A]         [B, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S]      [B, S]      [A]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->SB }]
B[{ B-->b }, { B-->BS }, { B-->SA }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->CS }]
C[{ C-->AC }, { C-->AS }]

word='bbbbbbbabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][A][] [] 
[B][B][B][B][B][B][B][] [B][] 
[B][B][B][B][B][B][B][] [B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->a }]
S[{ S-->CA }, { S-->a }, { S-->SC }, { S-->CS }]
C[{ C-->BA }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->AB }]

word='baabbbaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[S]   [C]   [B, S][]    []    []    []    []    []    []    
[]    [S]   [C]   [B]   []    []    []    []    []    []    
[S]   [C]   [S]   [C]   [B]   []    []    []    []    []    
[]    [S]   []    []    [C]   [B]   []    []    []    []    
[S]   [C]   [S]   []    [S]   [C]   [B, S][]    []    []    
[C]   [S]   [C]   [S]   [C]   [S]   [C]   [B, S][]    []    
[S]   [C]   [S]   []    [S]   []    [S]   [C]   [B]   []    
[C]   [S]   [C]   [S]   [C]   [S]   [C]   [S]   [C]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AC }, { A-->SA }, { A-->BA }, { A-->SB }]
B[{ B-->BC }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->a }, { S-->b }]
C[{ C-->AA }, { C-->BB }, { C-->AB }]

word='baabbbaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][B, S]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][B]      [S]      []       []       []       []       []       []       
[A, B, C][A, B, C][B]      []       [S]      []       []       []       []       []       
[A, B, C][A, B, C][B]      []       []       [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      [A]      [A]      [B, S]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, S]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      [S]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      []       [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->SA }, { B-->BB }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->AB }]
S[{ S-->AA }]

word='baabbbaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][B][] [] [] [] [] [] 
[] [] [C][B][B][] [] [] [] [] 
[] [] [C][B][B][B][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [C][B][] 
[] [] [] [] [] [] [] [C][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AB }, { B-->BS }, { B-->a }]
C[{ C-->AS }, { C-->a }, { C-->BC }]

word='baabbbaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[C]   [C]   [B, C][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    [B]   [B]   [B]   [B, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [B, C][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }]
B[{ B-->AB }, { B-->CB }, { B-->SS }, { B-->CC }]
C[{ C-->a }, { C-->b }]
S[{ S-->AC }, { S-->SA }]

word='baabbbaabb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[B]      [B]      [C]      []       []       []       []       []       []       []       
[A, B]   [B]      [B]      [C]      []       []       []       []       []       []       
[A, B, S][A, B]   [B]      [B]      [C]      []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [B]      [B]      [C]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B]      [B]      [C]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B]      [B]      [C]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B]      [B]      [C]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B]      [B]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }]
B[{ B-->AB }, { B-->CB }]
C[{ C-->AC }, { C-->a }, { C-->SS }, { C-->b }]
S[{ S-->BA }, { S-->AA }]

word='abababaaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->AS }, { B-->CB }, { B-->SB }, { B-->a }]
S[{ S-->b }]
C[{ C-->SC }, { C-->CS }]

word='abababaaba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [S]   []    []    []    []    []    []    []    []    
[A]   [B]   [A, B][]    []    []    []    []    []    []    
[A, B][B]   [B]   [S]   []    []    []    []    []    []    
[A]   [A]   [A]   [B]   [A, B][]    []    []    []    []    
[A, B][A, B][A, B][B]   [B]   [S]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [B]   [A, B][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   [S]   []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [B]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->CS }]
S[{ S-->CB }, { S-->SC }]
C[{ C-->CA }, { C-->SB }]

word='abababaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AC }, { A-->AS }, { A-->CB }]
S[{ S-->SB }, { S-->a }, { S-->AA }]
C[{ C-->CA }, { C-->CC }, { C-->b }, { C-->AB }]

word='abababaaba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, S][C]   [A, S][]    []    []    []    []    []    []    
[A, S][C]   [A]   [C]   []    []    []    []    []    []    
[A, S][C]   [A, S][C]   [A, S][]    []    []    []    []    
[A, S][C]   [A, S][C]   [A]   [C]   []    []    []    []    
[A, S][C]   [A, S][C]   [A, S][C]   [A, S][]    []    []    
[A, S][C]   [A, S][C]   [A, S][C]   [A, S][A, S][]    []    
[A, S][C]   [A, S][C]   [A, S][C]   [A, S][A]   [C]   []    
[A, S][C]   [A, S][C]   [A, S][C]   [A, S][A, S][C]   [A, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AS }, { A-->SA }, { A-->CA }, { A-->BA }]
S[{ S-->SC }]

word='abababaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->BB }, { B-->SC }, { B-->CS }]
C[{ C-->SA }, { C-->SS }]
S[{ S-->CA }, { S-->BS }]

word='bbbbaaabab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[B]   [B]   [B]   [A, B][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A, B][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->AA }]
C[{ C-->AS }, { C-->SA }, { C-->SB }]
S[{ S-->SC }]

word='bbbbaaabab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
B[{ B-->BS }, { B-->AC }, { B-->a }]
S[{ S-->AA }, { S-->b }]
C[{ C-->CA }, { C-->CB }, { C-->SB }, { C-->CC }, { C-->BC }]

word='bbbbaaabab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[]          []          []          [C]         [A, B]      []          []          []          []          []          
[]          []          []          [C]         [S]         [A, B]      []          []          []          []          
[]          []          []          [A, C]      [B, C]      [S]         [A, B]      []          []          []          
[]          []          []          [A, C]      [A, B, C]   []          [B]         [S]         []          []          
[]          []          [C]         [B, C, S]   [B, C, S]   [B, C]      [B, C]      [C]         [A, B]      []          
[]          []          [A, C]      [A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [B]         [S]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->BS }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->a }, { B-->BB }]
S[{ S-->CA }, { S-->a }, { S-->b }]
C[{ C-->CC }]

word='bbbbaaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [A]   [B, S][]    []    []    []    []    
[]    []    []    [A]   [A, B][B, S][]    []    []    []    
[]    []    []    [A]   [A, B][A, B][B, S][]    []    []    
[]    []    []    [A]   [A]   [A]   [A]   [S]   []    []    
[]    []    []    [A]   [A]   [A]   [A]   [A]   [B, S][]    
[]    []    []    [A]   [A]   [A]   [A]   []    [A]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }, { B-->CA }, { B-->a }]
C[{ C-->SA }, { C-->BA }, { C-->CS }]
S[{ S-->CB }, { S-->SB }, { S-->BB }, { S-->CC }]

word='bbbbaaabab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       []       [B]      []       []       []       []       []       
[]       []       []       [B]      [S]      [B]      []       []       []       []       
[]       []       [B]      [B, S]   [S]      [S]      [B]      []       []       []       
[]       []       [C]      [C]      [C]      [C]      [C]      [A]      []       []       
[]       [B]      [B, S]   [B, S]   [S]      [S]      [S]      []       [B]      []       
[]       [B, C]   [B, S, C][B, S, C][S, C]   [S, C]   [S, C]   []       [C]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }]
B[{ B-->b }, { B-->BC }, { B-->CA }]
S[{ S-->CS }, { S-->b }]
C[{ C-->CB }, { C-->AA }]

word='bbabbbbaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    [B]   [C]   [A]   []    
[]    []    []    []    []    []    [B]   [S, C][]    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->CA }]
B[{ B-->BC }, { B-->BS }]
C[{ C-->AC }, { C-->a }, { C-->SC }]
S[{ S-->AS }, { S-->SA }, { S-->BA }, { S-->b }]

word='bbabbbbaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[A, S][A, S][A]   [A, S][]    []    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][]    []    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [A, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CA }]
B[{ B-->BS }, { B-->CS }]
C[{ C-->AC }, { C-->b }]
S[{ S-->CB }]

word='bbabbbbaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A, C][A, C][C]   [C]   []    []    []    []    []    []    
[A, C][A, C][A]   [A]   [C]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   [C]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A]   [C]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][C]   [C]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SA }]
B[{ B-->a }]
S[{ S-->CB }, { S-->SB }, { S-->BB }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->BA }, { C-->b }]

word='bbabbbbaab'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[S]      [S, C]   []       []       []       []       []       []       []       []       
[S]      [S]      [B]      []       []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [S, C]   []       []       []       []       []       []       
[A, S]   [A, S]   [A]      [S]      [S, C]   []       []       []       []       []       
[A, S]   [A, S]   [A]      [S]      [S]      [S, C]   []       []       []       []       
[A, S]   [A, S]   [A]      [S]      [S]      [S]      [S, C]   []       []       []       
[A, S]   [A, S]   [A, S]   [S]      [S]      [S]      [S]      [B]      []       []       
[A, S]   [A, S]   [A, S]   [S]      [S]      [S]      [S]      [S]      [B]      []       
[A, S]   [A, S]   [A, C, S][A, S]   [A, S]   [A, S]   [A, S]   [C, S]   [A]      [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BA }]
B[{ B-->BC }, { B-->BS }, { B-->SA }, { B-->AA }]
S[{ S-->a }, { S-->SC }, { S-->b }]
C[{ C-->SB }]

word='bbabbbbaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AB }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->SC }]
C[{ C-->a }, { C-->BB }]

word='abaabaaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->CS }, { A-->b }, { A-->BC }, { A-->BS }, { A-->AS }, { A-->BA }]
B[{ B-->AA }]
S[{ S-->AC }, { S-->CB }, { S-->AB }]

word='abaabaaaaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[A, S]   [B]      [A]      []       []       []       []       []       []       []       
[A, B]   [A, S]   [B]      [A]      []       []       []       []       []       []       
[A, B, S][A, B]   [A, S]   [B]      [A]      []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, S]   [B]      [A]      []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [B]      [A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [B]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [B]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [B]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BA }]
B[{ B-->b }]
S[{ S-->a }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->BB }]

word='abaabaaaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[]    [A, S][A, S][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    [A]   [B, S][]    []    []    []    []    
[]    []    []    []    [A, S][A, S][]    []    []    []    
[]    []    []    []    []    []    [A, S][]    []    []    
[]    []    []    []    []    []    []    [A, S][]    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    []    [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->SA }, { B-->BA }]
C[{ C-->CB }, { C-->a }, { C-->CC }, { C-->b }]
S[{ S-->SB }]

word='abaabaaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AS }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->SC }]
S[{ S-->b }]
C[{ C-->CA }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->AB }]

word='abaabaaaaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A, S][]    []    []    []    []    []    []    []    
[C]   [B]   [A]   []    []    []    []    []    []    []    
[C]   []    []    [A]   []    []    []    []    []    []    
[B, C][B, C][C]   [B]   [A, S][]    []    []    []    []    
[B, C][B, C][C]   [C]   [B]   [A]   []    []    []    []    
[C]   [B, C][C]   [C]   []    []    [A]   []    []    []    
[C]   [B, C][C]   [C]   []    []    []    [A]   []    []    
[C]   [B, C][C]   [C]   []    []    []    []    [A]   []    
[C]   [B, C][C]   [C]   []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AB }, { B-->AA }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->SS }, { C-->b }]
S[{ S-->SB }]

word='babbbaabaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [A, C][]    []    []    []    []    []    []    
[C]   [C]   [B, C][A, C][]    []    []    []    []    []    
[C]   [C]   [B, C][B, C][A, C][]    []    []    []    []    
[]    []    [C]   [C]   [C]   [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    [C]   [A, C][]    []    
[]    []    []    []    []    []    []    [C]   [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AC }]
B[{ B-->AB }, { B-->BB }]
S[{ S-->CA }, { S-->BA }, { S-->CB }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->BC }]

word='babbbaabaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
B[{ B-->AB }, { B-->CA }, { B-->CB }, { B-->AA }, { B-->CC }]
S[{ S-->CS }]

word='babbbaabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[B][A][] [] [] [] [] [] [] [] 
[B][B][A][] [] [] [] [] [] [] 
[B][B][B][A][] [] [] [] [] [] 
[B][B][B][B][A][] [] [] [] [] 
[B][B][B][B][B][A][] [] [] [] 
[B][B][B][B][B][B][A][] [] [] 
[B][B][B][B][B][B][B][A][] [] 
[B][B][B][B][B][B][B][B][A][] 
[B][B][B][B][B][B][B][B][B][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->BA }, { B-->SB }, { B-->a }, { B-->CS }]
C[{ C-->a }, { C-->SC }]

word='babbbaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }]
B[{ B-->b }, { B-->AC }, { B-->AS }, { B-->a }]
C[{ C-->SB }, { C-->a }, { C-->AB }]
S[{ S-->SA }, { S-->CA }, { S-->SC }]

word='babbbaabaa'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[A]         [B, C]      []          []          []          []          []          []          []          []          
[C]         []          [B]         []          []          []          []          []          []          []          
[]          []          []          [B]         []          []          []          []          []          []          
[]          []          []          []          [B]         []          []          []          []          []          
[]          []          []          []          [A]         [B, C]      []          []          []          []          
[S]         []          []          [A]         [B, C]      [A]         [B, C]      []          []          []          
[C]         [S]         [A]         [C]         [A]         [C]         []          [B]         []          []          
[A, B, S, C][A, C, S]   [B, C]      [A]         [B, S, C]   []          [S]         [A]         [B, C]      []          
[A, B, S, C][B, S, C]   [A]         [A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [B, C]      [A]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BA }, { B-->SS }]
S[{ S-->SA }, { S-->SB }, { S-->a }]
C[{ C-->BB }, { C-->b }]

word='bbababbbbb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [B, C][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [B, C][]    []    []    []    []    []    
[]    [C]   [B]   []    [S]   []    []    []    []    []    
[]    [C]   [B, C][]    [S]   [B, C][]    []    []    []    
[]    [C]   [B, C][]    [S]   [C]   [B, C][]    []    []    
[]    [C]   [B, C][]    [S]   []    [C]   [B, C][]    []    
[]    [C]   [B, C][]    [S]   []    []    [C]   [B, C][]    
[]    [C]   [B, C][]    [S]   []    []    []    [C]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->CA }]
B[{ B-->BS }, { B-->AS }, { B-->SB }]
S[{ S-->a }]
C[{ C-->AC }, { C-->AA }, { C-->b }]

word='bbababbbbb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, C]   []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, S]   []       []       []       []       []       []       []       
[A, C]   [A, C]   [C]      [A, C]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, S]   []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [C]      [A, C]   []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }]
C[{ C-->CA }, { C-->a }, { C-->BB }, { C-->BS }]
S[{ S-->CC }, { S-->AB }]

word='bbababbbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [C][A][] [] [] [] [] [] 
[] [] [S][] [C][] [] [] [] [] 
[] [] [S][] [C][A][] [] [] [] 
[] [] [S][] [C][] [A][] [] [] 
[] [] [S][] [C][] [] [A][] [] 
[] [] [S][] [C][] [] [] [A][] 
[] [] [S][] [C][] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->BA }, { B-->a }]
S[{ S-->b }]
C[{ C-->AC }, { C-->CS }]

word='bbababbbbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[A][A][B][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[A][A][B][A][B][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->AB }]
S[{ S-->a }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->a }, { C-->CC }]

word='bbababbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[A]   [A]   [A]   [S]   []    []    []    []    []    []    
[A]   [A]   [A]   []    [S, C][]    []    []    []    []    
[A]   [A]   [A, C][A]   [A]   [S]   []    []    []    []    
[A]   [A]   [A, C][A]   [A]   []    [S]   []    []    []    
[A]   [A]   [A, C][A]   [A]   []    []    [S]   []    []    
[A]   [A]   [A, C][A]   [A]   []    []    []    [S]   []    
[A]   [A]   [A, C][A]   [A]   []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->BA }, { B-->CC }]
C[{ C-->AS }, { C-->a }]
S[{ S-->AC }, { S-->SA }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->b }, { S-->AB }]

word='abbaaabbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [B][C][] [] [] [] [] 
[] [] [] [B][B][C][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [S][S][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CB }]
B[{ B-->b }]
C[{ C-->b }]
S[{ S-->CA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->CC }, { S-->AB }, { S-->BC }]

word='abbaaabbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [A, S][B, C][]    []    []    []    []    []    []    
[]    [S]   [S]   [A]   []    []    []    []    []    []    
[]    []    []    [S]   [A]   []    []    []    []    []    
[]    []    []    []    [S]   [A]   []    []    []    []    
[]    []    []    []    [S]   [S]   [B, C][]    []    []    
[]    []    []    []    [S]   [S]   [A, S][B, C][]    []    
[]    []    []    []    []    []    [S]   [S]   [A]   []    
[]    []    []    []    []    []    [S]   [S]   [S]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }, { A-->BA }]
B[{ B-->BC }, { B-->AA }]
C[{ C-->a }, { C-->BB }]
S[{ S-->CA }, { S-->CB }, { S-->SB }, { S-->b }]

word='abbaaabbab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[A]         []          [S]         []          []          []          []          []          []          []          
[B]         []          []          [A, C]      []          []          []          []          []          []          
[A, B]      []          [S]         [B, S]      [A, C]      []          []          []          []          []          
[A, B, C]   []          [S]         [A, B, S]   [B, S]      [A, C]      []          []          []          []          
[A, B, C]   []          []          [A, S]      [B, S]      [A]         [S]         []          []          []          
[A, B, C]   []          []          [A, S]      [B, S]      [A]         []          [S]         []          []          
[A, B, C, S][]          [S]         [A, B, S, C][A, B, S]   [B]         []          []          [A, C]      []          
[A, B, C, S][]          [S]         [A, B, S, C][A, S]      [B]         []          []          [A]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->CC }]
C[{ C-->a }]
S[{ S-->AC }, { S-->AS }, { S-->a }, { S-->AA }]

word='abbaaabbab'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [B]   [C, S][]    []    []    []    []    []    
[]    []    [B]   [B]   [C, S][]    []    []    []    []    
[]    []    [B]   [B]   [B]   [C, S][]    []    []    []    
[]    []    []    [B]   [B]   [B]   [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    [B]   [C, S][]    
[]    []    []    []    []    []    []    []    [B]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->CB }, { B-->BB }]
S[{ S-->AC }, { S-->AS }, { S-->a }, { S-->b }]
C[{ C-->BS }]

word='abbaaabbab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->CA }]
S[{ S-->a }, { S-->AB }]
C[{ C-->AC }, { C-->a }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BC }]

word='baaaaaabaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [S, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [S, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    
[B, S][B]   [B]   [B]   [B]   [B]   [B]   [A, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->BC }, { B-->SB }]
S[{ S-->AS }, { S-->a }, { S-->AA }, { S-->CC }, { S-->BS }]
C[{ C-->CA }, { C-->BB }]

word='baaaaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[A, S][A]   [S]   []    []    []    []    []    []    []    
[A, S][S]   [A]   [S]   []    []    []    []    []    []    
[A, S][A, S][S]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][S]   [A]   [S]   []    []    []    []    
[A, S][A, S][A, S][A, S][S]   [A]   [S]   []    []    []    
[A, S][A, S][A, S][S]   [A]   [S]   []    [A]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }]
B[{ B-->b }]
S[{ S-->a }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->SS }, { C-->CC }, { C-->AB }]

word='baaaaaabaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    [C]   [S]   []    []    []    []    []    []    []    
[]    [A]   [C]   [S]   []    []    []    []    []    []    
[]    [C]   [A]   [C]   [S]   []    []    []    []    []    
[]    [A, C][C]   [A]   [C]   [S]   []    []    []    []    
[]    [A, C][A, C][C]   [A]   [C]   [S]   []    []    []    
[]    [A, C][C]   [A]   [C]   []    []    [B]   []    []    
[]    [C]   [A]   [C]   []    []    []    []    [S]   []    
[]    [A, C][C]   [A]   [C]   []    []    []    [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AB }, { B-->BA }, { B-->a }, { B-->AA }]
C[{ C-->CB }, { C-->b }]
S[{ S-->AS }, { S-->CS }]

word='baaaaaabaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[C]   []    [B]   []    []    []    []    []    []    []    
[C]   []    []    [B]   []    []    []    []    []    []    
[C]   []    []    []    [B]   []    []    []    []    []    
[C]   []    []    []    []    [B]   []    []    []    []    
[C]   []    []    []    []    []    [B]   []    []    []    
[C]   []    []    []    []    []    []    [B, C][]    []    
[C]   []    []    []    []    []    []    [C]   [B]   []    
[C]   []    []    []    []    []    []    [C]   []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->AC }, { B-->CA }, { B-->SB }]
C[{ C-->AS }, { C-->CB }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->BA }, { S-->BB }]

word='baaaaaabaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->SA }, { B-->a }]
S[{ S-->a }, { S-->SS }, { S-->b }]
C[{ C-->b }, { C-->AB }]

word='bbbbbaabab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[S]         [S, C]      []          []          []          []          []          []          []          []          
[S]         [S]         [S, C]      []          []          []          []          []          []          []          
[S]         [S]         [S]         [S, C]      []          []          []          []          []          []          
[S]         [S]         [S]         [S]         [S, C]      []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [B, S]      [A, S]      [B, S]      []          []          []          []          
[S, C]      [S, C]      [S, C]      [S]         [S, C]      [S]         [B, S]      []          []          []          
[S]         [S]         [S]         [S]         [S]         [S]         [S]         [S, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S, C][A, B, S]   [A, B, S]   [A, S]      [B, S]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, B, S, C][A, B, S]   [A, B, S]   [A, S]      [S]         [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->BS }, { A-->SA }, { A-->BA }]
B[{ B-->AB }, { B-->AS }]
C[{ C-->BB }]

word='bbbbbaabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BS }]
B[{ B-->SC }]
S[{ S-->a }, { S-->CS }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->b }]

word='bbbbbaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [A, S]   []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C]      [A, S]   []       []       []       
[C]      [C]      [C]      [C]      [C]      [A, C]   [B]      [C]      []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, C, S][A, C]   [S]      [A, S]   []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [A, B, C][A, B, C][B, C]   [B]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BS }]
B[{ B-->AB }, { B-->AS }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->SS }]
C[{ C-->SB }, { C-->SC }, { C-->b }]

word='bbbbbaabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[]       [A]      [C]      []       []       []       []       []       []       []       
[]       []       [A]      [C]      []       []       []       []       []       []       
[]       []       []       [A]      [C]      []       []       []       []       []       
[B, S]   [B]      [S]      [B]      []       [S]      []       []       []       []       
[A, B, S][A, B]   [S]      [A, B]   []       [S]      [S]      []       []       []       
[C]      [A]      [C]      []       [A]      [C]      [C]      [C]      []       []       
[B, S]   [B, S]   [B]      [S]      [B]      []       []       []       [S]      []       
[A, S, C][B, S, C][A]      [S, C]   []       [A]      [A]      [A]      [C]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }, { A-->BC }, { A-->CA }, { A-->CB }, { A-->SB }]
B[{ B-->BS }, { B-->a }, { B-->SS }]
C[{ C-->SA }]

word='bbbbbaabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->AC }, { B-->BA }, { B-->CB }, { B-->CC }, { B-->CS }]
S[{ S-->a }, { S-->b }]
C[{ C-->SS }, { C-->BC }]

word='aabbbbabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A, B]   [C]      [S]      []       []       []       []       []       []       []       
[B]      [A, B]   [C]      [S]      []       []       []       []       []       []       
[B, C]   [B]      [A, B]   [C]      [S]      []       []       []       []       []       
[A, B, C][B, C]   [B]      [A, B]   [C]      [S]      []       []       []       []       
[A, B, C][A, B, C][B, C]   [B]      [A, B]   [C]      [S]      []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [B]      [A, B]   [C]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B]      [A, B]   [C]      [S]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B]      [A, B]   [C]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
B[{ B-->a }, { B-->BB }, { B-->SS }]
C[{ C-->BA }]
S[{ S-->AS }, { S-->CA }, { S-->CB }]

word='aabbbbabbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, B]   []       []       []       []       []       []       []       []       
[A, C, S][C]      [A]      []       []       []       []       []       []       []       
[S]      [S]      []       [A]      []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[]       []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A, B]   []       []       []       
[]       []       []       []       []       [A]      [C]      [A]      []       []       
[B, S]   [B, S]   [S]      [S]      [S]      [S]      [S]      []       [A]      []       
[A, C]   [C]      []       []       []       []       []       []       []       [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->BS }, { A-->AS }, { A-->BA }]
S[{ S-->a }, { S-->b }]
C[{ C-->AA }]

word='aabbbbabbb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, C][A, S][]    []    []    []    []    []    []    []    
[A, C][A, C][A, S][]    []    []    []    []    []    []    
[A, C][A, C][A, C][A, S][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, S][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, S][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, S][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, S][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, S][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }]
S[{ S-->SA }, { S-->CB }, { S-->AA }, { S-->CC }]

word='aabbbbabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }]
B[{ B-->BA }]
C[{ C-->AC }, { C-->AS }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->CB }]

word='aabbbbabbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, C][A, C][]    []    []    []    []    []    []    []    
[A, C][A, C][A, C][]    []    []    []    []    []    []    
[A, C][A, C][A, C][A, C][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
S[{ S-->AS }, { S-->SB }, { S-->a }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->BB }]

word='bbbbbaabaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->SA }, { B-->CB }, { B-->BB }]
S[{ S-->a }, { S-->b }]
C[{ C-->SC }, { C-->BS }]

word='bbbbbaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [B]   [A, S][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B]   [A, S][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    [S]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   []    [B]   [A, S][]    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   [C]   [B]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->BC }, { A-->BS }]
B[{ B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->SC }, { S-->b }]
C[{ C-->BA }, { C-->SB }]

word='bbbbbaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    [S]   [C]   [B]   []    []    []    []    
[]    []    [S]   [C]   [S]   [A]   [B]   []    []    []    
[]    []    []    []    [S]   [C, S][A]   [S]   []    []    
[]    []    [S]   [S]   [S, C][C, S][A]   [C]   [B]   []    
[]    [S]   [S, C][S, C][S, C][C, S][A]   [S]   [A]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->b }, { A-->CB }, { A-->SB }]
B[{ B-->SA }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->SC }, { S-->BC }]
C[{ C-->BS }]

word='bbbbbaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[A]   [A]   [A]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A]   []    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   []    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][A, B][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, B][A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
C[{ C-->a }, { C-->CC }, { C-->b }]
S[{ S-->CA }, { S-->CB }, { S-->AA }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->BC }]

word='bbbbbaabaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->SC }, { A-->AC }]
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->SB }, { S-->a }, { S-->AA }]
C[{ C-->CS }, { C-->b }]

word='ababaaabaa'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, B, S]   [B, C]      []          []          []          []          []          []          []          []          
[A, B, S]   [B, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, S]   [A, B, C]   [A, B, S]   [B, C]      []          []          []          []          []          []          
[A, B, S]   [A, B, C]   [A, B, S]   [B, C]      [B, S]      []          []          []          []          []          
[A, B, S]   [A, B, S, C][A, B, S]   [B, C]      [A, B, S]   [B, S]      []          []          []          []          
[A, B, S]   [A, B, C, S][A, B, S]   [B, C]      [A, B, S]   [A, B, S]   [B, S]      []          []          []          
[A, B, S]   [A, B, C, S][A, B, S]   [A, B, C]   [A, B, S]   [A, B, S]   [A, B, S]   [B, C]      []          []          
[A, B, S]   [A, B, C, S][A, B, S]   [A, B, C]   [A, B, S]   [A, B, S]   [A, B, S]   [B, C]      [B, S]      []          
[A, B, S]   [A, B, S, C][A, B, S]   [A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [B, C]      [A, B, S]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BS }]
B[{ B-->b }, { B-->SB }, { B-->CC }]
S[{ S-->SA }, { S-->CB }, { S-->a }]
C[{ C-->CA }, { C-->b }]

word='ababaaabaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A, B]   [B, C]   []       []       []       []       []       []       []       []       
[A, S]   [A]      [S]      []       []       []       []       []       []       []       
[A, B]   [S, C]   [A, B]   [B, C]   []       []       []       []       []       []       
[A, S]   [A, C]   [A, S]   [A]      [S]      []       []       []       []       []       
[]       []       []       []       []       [S]      []       []       []       []       
[]       []       []       []       []       []       [S]      []       []       []       
[B]      [B, S]   [B]      [S]      [B]      [B, S]   [A, B]   [B, C]   []       []       
[A, S]   [A, S, C][A, S]   [A, C]   [A, S]   [A, S]   [A, S]   [A]      [S]      []       
[]       []       []       []       []       []       []       []       []       [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CS }, { A-->AS }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->SC }]
S[{ S-->b }]
C[{ C-->CB }, { C-->BC }, { C-->BS }]

word='ababaaabaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[]    [A]   [A]   [B, S][]    []    []    []    []    []    
[]    []    []    [A]   [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    [A]   [B, S][]    []    
[]    []    []    []    []    []    []    [A]   [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->a }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->a }, { S-->SS }]
C[{ C-->CB }, { C-->BB }, { C-->b }]

word='ababaaabaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       [C]      [B, S]   []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       [C]      [B, S]   []       []       []       []       []       
[]       []       []       [C]      [B, S, C][B, S]   []       []       []       []       
[]       []       []       [C]      [B, S, C][B, S, C][B, S]   []       []       []       
[]       []       []       []       []       []       []       [C]      []       []       
[]       []       []       []       []       []       []       [C]      [B, S]   []       
[]       []       []       []       []       []       []       [C]      [B, S, C][B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }]
S[{ S-->a }, { S-->b }]
C[{ C-->AS }, { C-->BA }, { C-->BB }, { C-->SS }]

word='ababaaabaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[A]   [C]   [S]   []    []    []    []    []    []    []    
[C]   [A]   [C]   [B, S][]    []    []    []    []    []    
[A]   [C]   [A]   [C]   [S]   []    []    []    []    []    
[C]   [A]   [C]   [A]   [C]   [S]   []    []    []    []    
[A]   [C]   [A]   [C]   [A]   [C]   [S]   []    []    []    
[C]   [A]   [C]   [A]   [C]   [A]   [C]   [B, S][]    []    
[A]   [C]   [A]   [C]   [A]   [C]   [A]   [C]   [S]   []    
[C]   [A]   [C]   [A]   [C]   [A]   [C]   [A]   [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->b }, { A-->BC }, { A-->CB }, { A-->SB }]
B[{ B-->BS }, { B-->AS }, { B-->a }]
S[{ S-->a }, { S-->SS }, { S-->CS }, { S-->b }]
C[{ C-->CA }]

word='ababbbbaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, S]   []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   [A, S]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [A, S]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BS }, { B-->SA }, { B-->CA }, { B-->CB }, { B-->a }]
C[{ C-->SB }, { C-->AA }, { C-->b }]
S[{ S-->CC }, { S-->SC }]

word='ababbbbaaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[]       [B]      [B]      []       []       []       []       []       []       []       
[]       []       []       [A, C]   []       []       []       []       []       []       
[]       [B]      [B]      [B, C, S][A, C]   []       []       []       []       []       
[]       [B]      [B]      [B, S]   [B, C, S][A, C]   []       []       []       []       
[]       [B]      [B]      [B, C, S][B, S]   [B, C, S][A, C]   []       []       []       
[]       [B]      [B]      [B, S, C][B, S, C][B, C]   [B]      [B]      []       []       
[]       [B]      [B]      [B, S, C][B, C]   [B]      []       []       [B]      []       
[]       []       []       [B, C]   [B]      []       []       []       []       [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->AC }, { B-->CB }, { B-->AA }]
S[{ S-->AS }, { S-->a }, { S-->b }]
C[{ C-->SS }, { C-->CS }]

word='ababbbbaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][C][S][] [] [] [] [] [] [] 
[C][C][C][S][] [] [] [] [] [] 
[C][C][C][C][S][] [] [] [] [] 
[C][C][C][C][C][S][] [] [] [] 
[C][C][C][C][C][C][S][] [] [] 
[C][C][C][C][C][C][C][S][] [] 
[C][C][C][C][C][C][C][C][S][] 
[C][C][C][C][C][C][C][C][C][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->BC }, { B-->CC }, { B-->CS }]
S[{ S-->AC }, { S-->SA }, { S-->CA }, { S-->SB }, { S-->a }, { S-->AA }, { S-->b }]
C[{ C-->BA }, { C-->CB }, { C-->SS }, { C-->SC }, { C-->b }]

word='ababbbbaaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S, C]      []          []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [C]         [S, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][B, S, C]   [B, C]      [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [S, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [C]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, C]      [C]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
B[{ B-->BC }, { B-->AC }, { B-->AS }, { B-->CB }, { B-->a }]
S[{ S-->b }]
C[{ C-->AA }, { C-->SC }, { C-->CS }]

word='ababbbbaaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, S]   []       []       []       []       []       []       []       []       
[B]      [C]      [A, B]   []       []       []       []       []       []       []       
[A, B]   [B, C]   [B, C]   [A, S]   []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [B, C]   [A, S]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [A, S]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [A, S]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [C]      [A, B]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [C]      [A, B]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B]      [C]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CB }, { B-->SB }]
S[{ S-->a }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->BB }, { C-->BC }]

word='bbbabbabbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [C]   [A, S][]    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [C]   [A, S][]    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->BS }]
S[{ S-->a }]
C[{ C-->AA }, { C-->BB }, { C-->SS }]

word='bbbabbabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[A]   [C]   [A]   []    []    []    []    []    []    []    
[A, C][A, C][A, C][A, S][]    []    []    []    []    []    
[A, C][A, C][A, C][C]   [A]   []    []    []    []    []    
[A, C][A, C][A, C][A]   [C]   [A]   []    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, S][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   [A]   []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A]   [C]   [A]   []    
[A, C][A, C][A, C][A, C][A, C][A, C][C]   [A]   [C]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->SB }]
B[{ B-->AB }]
S[{ S-->a }, { S-->BC }]
C[{ C-->CA }, { C-->SC }, { C-->b }]

word='bbbabbabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[C][A][C][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[A][C][A][C][C][] [] [] [] [] 
[C][A][C][A][A][C][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[A][C][A][C][C][A][C][C][] [] 
[C][A][C][A][A][C][A][A][C][] 
[A][C][A][C][C][A][C][C][A][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->a }]
S[{ S-->CA }, { S-->SB }, { S-->CC }, { S-->b }, { S-->BS }]
C[{ C-->AS }, { C-->b }, { C-->AB }]

word='bbbabbabbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[]    [S]   [S, C][]    []    []    []    []    []    []    
[]    [S]   [S]   [B]   []    []    []    []    []    []    
[]    []    []    [S]   [S, C][]    []    []    []    []    
[]    []    []    [S]   [S]   [S, C][]    []    []    []    
[]    []    []    [S]   [S]   [S]   [B]   []    []    []    
[]    []    []    []    []    []    [S]   [S, C][]    []    
[]    []    []    []    []    []    [S]   [S]   [S, C][]    
[]    []    []    []    []    []    []    []    [S]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BS }, { A-->CB }, { A-->SB }]
B[{ B-->SA }, { B-->CA }]
C[{ C-->a }, { C-->SC }, { C-->b }]
S[{ S-->AS }, { S-->a }, { S-->AB }, { S-->BC }]

word='bbbabbabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    [C]   [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C, S][]    []    []    
[]    []    []    []    []    []    [C]   [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->BA }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->BS }]
S[{ S-->CA }, { S-->SS }]

word='aaababaaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A, S][A, C][]    []    []    []    []    []    []    []    
[S]   [A, S][A, C][]    []    []    []    []    []    []    
[S]   []    [S]   [A]   []    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[S]   []    [S]   []    [S]   [A]   []    []    []    []    
[]    []    []    []    []    []    [A, C][]    []    []    
[S]   []    [S]   []    [S]   []    [A, S][A, C][]    []    
[S]   []    [S]   []    [S]   []    [S]   [A, S][A, C][]    
[S]   []    [S]   []    [S]   []    [S]   []    [S]   [A]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->CA }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]

word='aaababaaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[B][A][] [] [] [] [] [] [] [] 
[B][B][A][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[B][B][B][B][B][B][B][A][] [] 
[B][B][B][B][B][B][B][B][A][] 
[B][B][B][B][B][B][B][B][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AS }]
B[{ B-->SA }, { B-->BA }]
S[{ S-->b }]
C[{ C-->SB }, { C-->SC }]

word='aaababaaab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [A]   [A, S][]    []    []    []    []    []    
[]    []    []    [B]   [A]   []    []    []    []    []    
[]    []    []    [A, B][A]   [A, S][]    []    []    []    
[]    []    []    [B]   []    [B]   [A]   []    []    []    
[]    []    []    [B]   []    [B]   []    [A]   []    []    
[]    []    []    [B]   []    [B]   []    []    [A]   []    
[]    []    []    [A, B][]    [A, B][]    []    [A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->AB }]
B[{ B-->AC }, { B-->CB }, { B-->SB }]
S[{ S-->CA }, { S-->a }, { S-->b }]
C[{ C-->CS }]

word='aaababaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[] [A][S][] [] [] [] [] [] [] 
[] [] [A][S][] [] [] [] [] [] 
[] [] [] [A][S][] [] [] [] [] 
[] [] [] [] [A][S][] [] [] [] 
[] [] [] [] [] [A][S][] [] [] 
[] [] [] [] [] [] [A][S][] [] 
[] [] [] [] [] [] [] [A][S][] 
[] [] [] [] [] [] [] [] [A][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->CB }]
B[{ B-->b }, { B-->a }, { B-->CS }]
C[{ C-->a }, { C-->AA }, { C-->BC }, { C-->BS }]

word='aaababaaab'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, C][B, C][]    []    []    []    []    []    []    []    
[A, C][A, C][B, C][]    []    []    []    []    []    []    
[A, C][A, C][A]   [A, B][]    []    []    []    []    []    
[A, C][A, C][C]   [C]   [B, C][]    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   [A, B][]    []    []    []    
[A, C][A, C][A, C][A, C][C]   [C]   [B, C][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][B, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][B, C][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BC }, { B-->CA }]
S[{ S-->SB }, { S-->a }, { S-->SS }, { S-->SC }, { S-->CS }]
C[{ C-->AC }, { C-->BB }, { C-->b }, { C-->AB }]

word='abaababbaa'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[S, C]   [C]      []       []       []       []       []       []       []       []       
[B, S, C][B, S]   [A, S]   []       []       []       []       []       []       []       
[B, S]   [S]      [S]      [A, S]   []       []       []       []       []       []       
[B, S, C][B, S]   [S, C]   [S, C]   [C]      []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [A, S]   []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [S, C]   [C]      []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S]   [S]      []       [C]      []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][S, C]   [S]      [S]      [B, S]   [A, S]   []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [S]      [S]      [S]      [S]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AC }, { A-->CA }, { A-->BA }]
B[{ B-->a }]
S[{ S-->SA }, { S-->CS }, { S-->b }, { S-->BS }]

word='abaababbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [S][S][S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [S][S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }]
B[{ B-->b }, { B-->AC }, { B-->CA }, { B-->BA }]
C[{ C-->a }, { C-->CC }, { C-->AB }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->SS }, { S-->CS }, { S-->BC }]

word='abaababbaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[S][S][C][] [] [] [] [] [] [] 
[S][S][C][C][] [] [] [] [] [] 
[S][S][] [] [B][] [] [] [] [] 
[S][S][S][S][S][C][] [] [] [] 
[S][S][S][S][S][] [B][] [] [] 
[S][S][S][S][S][] [] [B][] [] 
[S][S][S][S][S][] [] [S][C][] 
[S][S][S][S][S][] [] [S][C][C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }]
B[{ B-->b }, { B-->SA }, { B-->SB }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->AC }, { C-->SS }]

word='abaababbaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B, C]      [B, S]      []          []          []          []          []          []          []          []          
[A, S]      [C]         [S]         []          []          []          []          []          []          []          
[A, B, C]   [A, S]      [C]         [S]         []          []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B, S]   [B, C]      [B, S]      []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, C]      [A, S]      [C]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, S]   [B, C]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, B, S]   [B, C]      [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, S]      [C]         [S]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, S]      [C]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SB }]
B[{ B-->b }, { B-->CB }]
S[{ S-->AS }, { S-->SA }, { S-->CA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->AB }, { S-->BS }]
C[{ C-->BA }, { C-->CC }]

word='abaababbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[]       []       []       [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [A]      [B]      []       []       []       []       []       
[]       []       []       [S]      [S]      [S]      []       []       []       []       
[S]      [S]      [S]      [A, S]   [A, C]   [A]      [B]      []       []       []       
[A, S]   [A, S, C][A, S]   [A, S]   [B, S]   [S]      [S]      [B]      []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      [S]      []       
[]       []       []       []       []       []       []       []       []       [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }]
B[{ B-->AC }, { B-->SA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }]
C[{ C-->b }]
S[{ S-->CB }, { S-->BB }, { S-->SS }, { S-->BC }]

word='aaaaaaabab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B, S]   [A, B]   []       []       []       []       []       []       []       []       
[B, S]   [B, S]   [A, B]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [A, B]   []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [A, B]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A, B]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [A, B]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [C]      []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S]      [A, B]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BS }]
S[{ S-->b }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->AA }, { C-->SS }, { C-->AB }]

word='aaaaaaabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[C]   [C]   [A]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [A]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [A]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, S][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->AA }]
C[{ C-->a }, { C-->b }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BS }]

word='aaaaaaabab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [C]   []    []    []    []    []    []    
[S]   [S]   [S]   [S]   [C]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [C]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A, S][B, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    
[S]   [S]   [S]   [S]   [S]   [A, S][B, S][S]   [A, S][B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->BC }, { B-->AA }, { B-->CC }]
S[{ S-->AC }, { S-->SB }, { S-->a }, { S-->SC }, { S-->CS }, { S-->b }, { S-->BS }]

word='aaaaaaabab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[] [A][S][] [] [] [] [] [] [] 
[B][] [A][S][] [] [] [] [] [] 
[S][B][] [A][S][] [] [] [] [] 
[A][S][B][] [A][S][] [] [] [] 
[] [A][S][B][] [A][S][] [] [] 
[B][] [A][S][B][] [A][S][] [] 
[S][B][] [A][S][B][] [A][S][] 
[A][S][B][] [A][S][B][] [A][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
C[{ C-->a }, { C-->b }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->AA }, { S-->AB }]

word='aaaaaaabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }, { A-->CA }, { A-->BA }]
B[{ B-->b }, { B-->a }]
C[{ C-->b }]

word='babaaaaabb'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[A]   [A]   [A]   [A, B][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, B][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, B][]    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }, { A-->AS }, { A-->CA }, { A-->BA }]
C[{ C-->b }]
S[{ S-->AA }]

word='babaaaaabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[S][S][A][A][] [] [] [] [] [] 
[A][A][S][S][A][] [] [] [] [] 
[S][S][A][A][S][A][] [] [] [] 
[A][A][S][S][A][S][A][] [] [] 
[S][S][A][A][S][A][S][A][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BA }]
B[{ B-->SA }, { B-->CB }, { B-->SS }]
C[{ C-->CA }, { C-->a }]
S[{ S-->BS }]

word='babaaaaabb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][A][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [C][A][] 
[] [] [] [] [] [] [] [C][] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }]
B[{ B-->AS }]
S[{ S-->CA }, { S-->a }, { S-->b }]
C[{ C-->AC }, { C-->CB }, { C-->a }, { C-->SC }, { C-->b }, { C-->AB }]

word='babaaaaabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [S, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [S, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }]
B[{ B-->AS }, { B-->BA }, { B-->AA }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->SA }, { S-->CA }, { S-->a }, { S-->b }]

word='babaaaaabb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[] [B][S][] [] [] [] [] [] [] 
[B][] [B][S][] [] [] [] [] [] 
[] [B][] [B][S][] [] [] [] [] 
[B][] [B][] [B][S][] [] [] [] 
[] [B][] [B][] [B][S][] [] [] 
[B][] [B][] [B][] [B][S][] [] 
[] [B][] [B][] [B][] [B][S][] 
[B][] [B][] [B][] [B][] [B][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->BB }, { B-->CS }]
C[{ C-->CB }]
S[{ S-->AC }, { S-->SB }]

word='bbabbaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[B]   [B]   [A, B][]    []    []    []    []    []    []    
[B]   [B]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CS }, { A-->AB }, { A-->AS }]
C[{ C-->CA }, { C-->b }]
S[{ S-->SA }]

word='bbabbaaaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [C][A][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][A][] [] [] [] 
[] [] [] [] [C][A][A][] [] [] 
[] [] [] [] [C][A][A][A][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [C][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }]
B[{ B-->AC }, { B-->AA }, { B-->BB }]
C[{ C-->a }]
S[{ S-->BC }]

word='bbabbaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[A, S][B]   [A, C][]    []    []    []    []    []    []    
[B]   [A]   [B]   [A]   []    []    []    []    []    []    
[A]   [B]   [A]   [B]   [A]   []    []    []    []    []    
[B]   [A, S][B]   [A, S][B]   [A, C][]    []    []    []    
[A, S][B]   [A, S][B]   [A, S][B]   [A, C][]    []    []    
[B]   [A, S][B]   [A, S][B]   [A, S][B]   [A, C][]    []    
[A]   [B]   [A]   [B]   [A]   [B]   [A]   [B]   [A]   []    
[B]   [A, S][B]   [A, S][B]   [A, S][B]   [A, S][B]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->b }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SA }]
S[{ S-->a }]
C[{ C-->BA }, { C-->SB }, { C-->SC }, { C-->AB }, { C-->BC }]

word='bbabbaaaba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, B]   []       []       []       []       []       []       []       []       
[A, B, C][B]      [S]      []       []       []       []       []       []       []       
[A, C]   [A, C]   [B, C]   [A, B]   []       []       []       []       []       []       
[C]      [A, C]   [A, B, C][A, C]   [A, B]   []       []       []       []       []       
[A, C]   [A, B, C][A, B, C][A, B, C][B]      [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B]      []       [S]      []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B]      []       []       [S]      []       []       
[A, C]   [A, C]   [A, B, C][A, C]   [A, C]   [C]      [C]      [B, C]   [A, B]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->BA }]
B[{ B-->AS }, { B-->SB }, { B-->AA }]
S[{ S-->a }, { S-->b }, { S-->AB }]
C[{ C-->CB }, { C-->b }, { C-->BC }]

word='bbabbaaaba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S, C][]    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S, C][]    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->BA }]
B[{ B-->BS }, { B-->SA }]
S[{ S-->CA }, { S-->a }]
C[{ C-->SB }, { C-->a }, { C-->AA }, { C-->b }]

word='bbababbaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[A, S]      [A]         [S, C]      []          []          []          []          []          []          []          
[A, S, C]   [A, S]      [A]         [C]         []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, B, S]   [A]         [S, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S]      [A]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, B, S]   [A]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S]      [A]         [S, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S]      [A]         [S, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [A, B, S]   [A]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->BA }, { A-->SB }]
B[{ B-->BS }]
S[{ S-->CB }, { S-->a }, { S-->CC }]
C[{ C-->b }, { C-->BC }]

word='bbababbaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A]   []    [A, S][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    [A]   [S]   [C]   []    []    []    
[]    []    []    []    [A]   [A]   []    [A, S][]    []    
[]    []    []    []    [A]   [A]   []    [A]   [A, S][]    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->CA }, { B-->SB }, { B-->a }, { B-->CS }]
C[{ C-->CB }, { C-->AA }]

word='bbababbaab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, B]   []       []       []       []       []       []       []       []       
[C]      []       [B]      []       []       []       []       []       []       []       
[A, B, C][A, C]   [A]      [A, B]   []       []       []       []       []       []       
[A, C]   [C]      []       []       [B]      []       []       []       []       []       
[A, B, C][A, B, C][A, C]   [A, C]   [A]      [A, B]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, C]   [A, B]   []       []       []       
[A, B, C][A, C]   [A, C]   [A, C]   [C]      [C]      []       [B]      []       []       
[A, B, C][A, C]   [A, C]   [A, C]   [C]      [C]      []       []       [B]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A]      [A]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BC }]
B[{ B-->a }]
S[{ S-->AS }, { S-->SB }, { S-->b }, { S-->BS }]
C[{ C-->CC }]

word='bbababbaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B]   []    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [A, S][A, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    [B]   []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BC }]
B[{ B-->b }, { B-->AB }]
S[{ S-->CA }, { S-->BA }, { S-->a }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->b }]

word='bbababbaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, S][B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [A, S][]    []    []    []    []    []    []    
[B, S][A, S][B, S][B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, S][]    []    []    []    []    
[A, S][B, S][A, S][A, S][B, S][B, S][]    []    []    []    
[B, S][A, S][B, S][B, S][A, S][A, S][B, S][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [A, S][]    
[A, S][B, S][A, S][A, S][B, S][B, S][A, S][B, S][B, S][B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->AB }, { A-->BC }, { A-->AS }]
B[{ B-->BS }, { B-->AC }, { B-->SA }, { B-->AA }, { B-->BB }, { B-->SS }]
S[{ S-->BA }, { S-->a }, { S-->b }]

word='ababaaabba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[B][B][S][] [] [] [] [] [] [] 
[B][B][B][S][] [] [] [] [] [] 
[B][B][B][B][S][] [] [] [] [] 
[B][B][B][B][B][S][] [] [] [] 
[B][B][B][B][B][B][S][] [] [] 
[B][B][B][B][B][B][B][S][] [] 
[B][B][B][B][B][B][B][B][S][] 
[B][B][B][B][B][B][B][B][B][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->BA }, { B-->SS }]
C[{ C-->AC }, { C-->CB }, { C-->a }]
S[{ S-->a }, { S-->CS }, { S-->b }]

word='ababaaabba'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[B, S]   [S]      []       []       []       []       []       []       []       []       
[B, C]   [B]      [C, S]   []       []       []       []       []       []       []       
[B, S, C][B]      [B, S]   [S]      []       []       []       []       []       []       
[B, C, S][B]      [B, C]   [B]      [C, S]   []       []       []       []       []       
[B, C, S][B]      [B, C, S][B]      [B, S]   [C, S]   []       []       []       []       
[B, C, S][B]      [B, C, S][B]      [B, C, S][B, S]   [C, S]   []       []       []       
[B, C, S][B]      [B, C, S][B]      [B, C, S][B, C, S][B, S]   [S]      []       []       
[B, C, S][B]      [B, C, S][B]      [B, C, S][B, C, S][B, C]   [B]      [S]      []       
[B, C, S][B]      [B, C, S][B]      [B, C, S][B, C, S][B, C, S][B]      [B]      [C, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->b }, { B-->AB }, { B-->SC }]
C[{ C-->SA }, { C-->CA }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->b }]
S[{ S-->AA }]

word='ababaaabba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [B, C]      []          []          []          []          []          []          []          []          
[A, S]      [A, C]      [A]         []          []          []          []          []          []          []          
[B, C]      [B, C]      [B]         [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, C, S]   [A, S]      [A, C]      [A]         []          []          []          []          []          
[A, B, C, S][C, S]      [C, S]      [C, S]      [S]         [A]         []          []          []          []          
[A, B, C, S][C]         [C]         [C]         [C]         [S]         [A]         []          []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B]         [B, C]      []          []          
[B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [B, C]      [C]         [C]         [B, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, C]      [A, C]      [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->b }, { B-->a }, { B-->CS }]
C[{ C-->AC }, { C-->AS }, { C-->CA }, { C-->a }, { C-->b }]
S[{ S-->BA }, { S-->SB }, { S-->BB }, { S-->AB }]

word='ababaaabba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [B, C]      []          []          []          []          []          []          []          []          
[B, C, S]   [A, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][B, C, S]   [A, S]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SB }]
B[{ B-->b }, { B-->a }, { B-->CS }]
C[{ C-->AS }, { C-->SA }, { C-->CA }, { C-->CB }, { C-->BB }, { C-->SC }, { C-->BC }]
S[{ S-->AA }, { S-->SS }]

word='ababaaabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[C]   [C]   [B]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [A, B][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [B]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [B]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [B]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, B][]    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   [C, S][A, B][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C][C]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->b }]
C[{ C-->CA }, { C-->SB }, { C-->a }, { C-->CS }]
S[{ S-->AA }, { S-->BC }, { S-->BS }]

word='bbaaabbaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[S][A][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [C][A][] [] [] [] 
[] [] [] [] [C][S][A][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [C][A][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->BB }, { B-->SC }]
S[{ S-->a }, { S-->SS }, { S-->CC }, { S-->CS }, { S-->AB }, { S-->BC }]

word='bbaaabbaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [S][S][S][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [B][B][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AS }, { A-->CB }]
B[{ B-->BS }, { B-->SA }, { B-->CA }, { B-->BB }]
C[{ C-->SB }, { C-->AA }]
S[{ S-->AC }, { S-->SC }]

word='bbaaabbaba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[B, S]      [C]         [A]         []          []          []          []          []          []          []          
[A, B]      [B, S]      [C]         [A]         []          []          []          []          []          []          
[A, S, C]   [A, B]      [B, S]      [C]         [A]         []          []          []          []          []          
[A, B, C, S][A, S, C]   [A, B]      [B, S]      [C]         [A]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, B]      [B, S]      [C]         [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B]      [B, S]      [C]         [A]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B]      [B, S]      [C]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, B]      [B, S]      [C]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AB }, { B-->BS }, { B-->CB }, { B-->a }, { B-->AA }, { B-->SC }]
C[{ C-->a }]
S[{ S-->CC }, { S-->BC }]

word='bbaaabbaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B, S][B]   [B, C][]    []    []    []    []    []    []    
[B, S][B, S][B, S][B, C][]    []    []    []    []    []    
[B, S][B, S][B, S][B, S][B, C][]    []    []    []    []    
[A, B][A, B][A]   [A]   []    [A]   []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B, C][]    []    
[A, B][A, B][A]   [A]   [A]   [A]   []    []    [A]   []    
[B, S][B, S][B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }]
B[{ B-->BS }, { B-->AC }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->CS }, { S-->b }]
C[{ C-->SA }, { C-->CA }, { C-->BB }, { C-->AB }, { C-->BC }]

word='bbaaabbaba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [A, S]      []          []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[]          []          []          []          [S]         []          []          []          []          []          
[A, B, C]   [A, B, C]   [C]         [A]         [C]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [A, S, C]   [S, C]      [A, S]      []          []          []          
[B, S, C]   [B, S]      [S]         [S]         [S]         [S]         [S]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C, S][A, B, C]   [A, B, C]   [C]         [A, S]      []          
[A, B, C, S][A, B, S, C][A, B, S]   [B, C, S]   [A, B, S]   [B, S, C]   [B, S]      [S]         [S]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->BC }]
B[{ B-->AC }, { B-->SA }]
C[{ C-->CA }, { C-->SC }, { C-->b }]
S[{ S-->SB }]

word='bbbbaaaaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][A][] [] [] [] [] 
[] [] [] [C][] [A][] [] [] [] 
[] [] [] [C][] [] [A][] [] [] 
[] [] [] [C][] [] [] [A][] [] 
[] [] [] [C][] [] [A][B][C][] 
[] [] [] [C][] [] [A][B][C][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AS }]
B[{ B-->BA }]
S[{ S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->CB }, { C-->BB }]

word='bbbbaaaaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [A][S][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->SA }, { A-->CB }]
B[{ B-->AC }, { B-->AA }]
S[{ S-->SB }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->BA }]

word='bbbbaaaaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[]          [S]         []          []          []          []          []          []          []          []          
[]          []          [S]         []          []          []          []          []          []          []          
[]          []          []          [S]         []          []          []          []          []          []          
[A]         [A]         [A]         [A]         [A]         []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B]         [A]         []          []          []          []          
[A, C]      [A, C]      [A, C]      [A, C]      [C]         [B]         [A]         []          []          []          
[B, S, C]   [B, S, C]   [B, S, C]   [B, S, C]   [B, C]      [C]         [B]         [A]         []          []          
[S]         [S]         [S]         [S]         [S]         []          [S]         []          [S]         []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [B, C]      [A, C]      [B]         [A]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->BA }]
B[{ B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->CA }, { S-->CS }, { S-->b }, { S-->BS }]
C[{ C-->SB }]

word='bbbbaaaaba'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, S]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       []       
[A, S, C][A, S, C][S, C]   [C]      [B]      []       []       []       []       []       
[A, C, S][C, S]   [C]      []       []       [B]      []       []       []       []       
[C, S]   [C]      []       []       []       []       [B]      []       []       []       
[C]      []       []       []       []       []       []       [B]      []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       
[A, S, C][A, S, C][A, S, C][S, C]   [C]      [C]      [C]      [C]      [C]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->BS }]
B[{ B-->b }, { B-->a }, { B-->AA }]
C[{ C-->BA }]
S[{ S-->AC }]

word='bbbbaaaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
C[{ C-->AC }, { C-->AS }, { C-->BA }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->CB }, { S-->b }, { S-->BC }]

word='abaabaabab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [C, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [C]   [A]   []    []    []    []    []    []    
[]    []    [C]   [C]   [C, S][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[]    []    []    []    []    [C]   [C]   [C, S][]    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    [C]   [C, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->AB }]
C[{ C-->a }, { C-->AA }, { C-->SC }, { C-->BC }]

word='abaabaabab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->BA }]
B[{ B-->BC }, { B-->CB }, { B-->SB }, { B-->CC }]
S[{ S-->a }, { S-->AA }, { S-->CS }]
C[{ C-->CA }, { C-->b }]

word='abaabaabab'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[]          [S, C]      [A, S]      []          []          []          []          []          []          []          
[]          [S, C]      [S]         [A, S]      []          []          []          []          []          []          
[B]         [B]         []          []          [C]         []          []          []          []          []          
[A, B, S]   [A, B, S]   []          []          [S, C]      [A, S]      []          []          []          []          
[A, B, S]   [A, B, S]   []          []          [S, C]      [S]         [A, S]      []          []          []          
[B]         [B]         [B]         [B]         [B]         []          []          [C]         []          []          
[A, B, S]   [A, B, S, C][A, B, S]   [A, B, S]   [A, B, S]   []          []          [S, C]      [A, S]      []          
[A, B, S]   [A, B]      [B]         [B]         [B]         [B]         [B]         [B]         []          [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CA }, { S-->BA }, { S-->CB }, { S-->SB }, { S-->a }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->AB }]
C[{ C-->b }, { C-->BC }]

word='abaabaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[S]   [A, S][S]   []    []    []    []    []    []    []    
[S]   [A, S][S]   [S]   []    []    []    []    []    []    
[S]   [A, S][S]   [S]   [A, C][]    []    []    []    []    
[S]   [A, S][S]   [S]   [A, S][S]   []    []    []    []    
[S]   [A, S][S]   [S]   [A, S][S]   [S]   []    []    []    
[S]   [A, S][S]   [S]   [A, S][S]   [S]   [A, C][]    []    
[S]   [A, S][S]   [S]   [A, S][S]   [S]   [A, S][S]   []    
[S]   [A, S][S]   [S]   [A, S][S]   [S]   [A, S][S]   [A, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AC }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BA }, { B-->CB }, { B-->a }, { B-->SS }]
C[{ C-->SB }, { C-->AA }, { C-->BB }, { C-->b }]
S[{ S-->CC }]

word='abaabaabab'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B, C]      [B, C]      []          []          []          []          []          []          []          []          
[B, C]      [B, C]      [B]         []          []          []          []          []          []          []          
[B, C, S]   [B, C, S]   [C]         [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [B, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S, C]   [C]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C]      [B, C]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [B, C]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AS }, { B-->SA }, { B-->a }, { B-->AA }]
C[{ C-->CA }, { C-->SB }, { C-->a }, { C-->SS }, { C-->CS }, { C-->b }]

word='abababbaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [C]   [A, C][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    [C]   [A, C][]    []    []    []    
[]    []    []    []    [C]   [B, C][A, C][]    []    []    
[]    []    []    []    []    []    []    [B, C][]    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AB }, { A-->CA }, { A-->BA }]
B[{ B-->SC }]
C[{ C-->AS }, { C-->SB }, { C-->BS }]

word='abababbaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AB }, { A-->BS }]
B[{ B-->b }, { B-->SA }]
S[{ S-->SB }, { S-->a }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }]

word='abababbaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [B, S]   []       []       []       []       []       []       []       []       
[B]      [A]      [S]      []       []       []       []       []       []       []       
[A, B]   [A]      [S]      [B, S]   []       []       []       []       []       []       
[A, S]   [S]      [B]      [A]      [S]      []       []       []       []       []       
[A, B, S][B, S]   [A, B]   [A]      [S]      [B, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [B, S]   [A, S]   [B, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [A]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A]      []       []       [S]      []       
[A, B, S][A, B, S][A, B, S][A, B]   [A]      []       []       []       []       [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->SA }, { B-->CA }, { B-->a }, { B-->CS }]
S[{ S-->SB }, { S-->a }]
C[{ C-->CC }]

word='abababbaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[S]   []    [B, S][]    []    []    []    []    []    []    
[S]   []    [S]   [B]   []    []    []    []    []    []    
[S]   []    [S]   []    [B, S][]    []    []    []    []    
[S]   []    [S]   []    [S]   [B]   []    []    []    []    
[S]   []    [S]   []    [S]   []    [B]   []    []    []    
[S]   []    [S]   []    [S]   []    []    [B, S][]    []    
[S]   []    [S]   []    [S]   []    []    [S]   [B, S][]    
[S]   []    [S]   []    [S]   []    []    [S]   [S]   [B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CA }]
B[{ B-->b }, { B-->a }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->CS }, { S-->BS }]
C[{ C-->AC }, { C-->SB }, { C-->AA }, { C-->BC }]

word='abababbaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S]      [S]      [B, S]   []       []       []       []       []       []       []       
[A, C]   [C]      [C]      [B]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [B, S]   []       []       []       []       []       
[A, C, S][A, C, S][A, C]   [C]      [C]      [B]      []       []       []       []       
[C]      [C]      []       []       []       []       [B]      []       []       []       
[S]      [S]      [S]      [S]      [S]      [S]      [S]      [B, S]   []       []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [B, S]   []       
[A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [S, C]   [S, C]   [S, C]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->CA }, { A-->CB }]
C[{ C-->a }, { C-->BB }, { C-->b }]
S[{ S-->AS }, { S-->BC }]

word='aaabbabbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->BS }, { B-->BA }, { B-->BB }, { B-->CS }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->b }, { C-->AB }]

word='aaabbabbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }]
B[{ B-->CS }]
S[{ S-->a }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->CB }, { C-->SB }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->AB }]

word='aaabbabbab'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A, C]   [A, S]   []       []       []       []       []       []       []       []       
[A, B, C][A, C]   [A, S]   []       []       []       []       []       []       []       
[B, C]   [B, C]   [C]      [S]      []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [C]      [S]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B]   [A, C]   [A, S]   []       []       []       []       
[B, C]   [B, C]   [B, C]   [C]      [B, C]   [C]      [S]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   [A, S]   []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [C]      [B, C]   [C]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->a }, { B-->CS }]
S[{ S-->BA }, { S-->SB }, { S-->a }, { S-->BB }, { S-->BS }]
C[{ C-->CC }, { C-->BC }]

word='aaabbabbab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[S]   [S]   [B, S][]    []    []    []    []    []    []    
[B, S][B, S][B, S][A]   []    []    []    []    []    []    
[B, S][B, S][B, S][]    [A]   []    []    []    []    []    
[S]   [S]   [S]   []    []    [B, S][]    []    []    []    
[B, S][B, S][B, S][]    []    [B, S][A]   []    []    []    
[B, S][B, S][B, S][]    []    [B, S][]    [A]   []    []    
[S]   [S]   [S]   []    []    [S]   []    []    [B, S][]    
[B, S][B, S][B, S][]    []    [B, S][]    []    [B, S][A]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->SB }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->a }, { B-->SS }, { B-->SC }, { B-->CS }]
C[{ C-->CB }, { C-->BC }]
S[{ S-->AA }, { S-->BB }]

word='aaabbabbab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[A]      [S]      [B]      []       []       []       []       []       []       []       
[S]      []       []       [A]      []       []       []       []       []       []       
[B, S]   [B]      [A]      [S]      [A]      []       []       []       []       []       
[A, B, S][A, S]   [B, S]   [A, B]   [B]      [B]      []       []       []       []       
[A, B, S][B, S]   [A]      [S]      []       []       [A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A]      [S]      [A]      []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [A, B]   [B]      [B]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A]      [S]      []       []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CA }, { B-->BA }]
S[{ S-->a }, { S-->b }]
C[{ C-->AC }, { C-->AS }, { C-->SA }, { C-->SB }, { C-->SS }, { C-->CC }, { C-->CS }, { C-->AB }, { C-->BS }]

word='babbababaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][S][] [] [] [] [] [] [] [] 
[C][C][S][] [] [] [] [] [] [] 
[C][C][C][S][] [] [] [] [] [] 
[C][C][C][C][S][] [] [] [] [] 
[C][C][C][C][C][S][] [] [] [] 
[C][C][C][C][C][C][S][] [] [] 
[C][C][C][C][C][C][C][S][] [] 
[C][C][C][C][C][C][C][C][S][] 
[C][C][C][C][C][C][C][C][C][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AC }]
B[{ B-->b }, { B-->a }]
C[{ C-->a }, { C-->b }]
S[{ S-->AS }, { S-->BA }, { S-->SB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->BS }]

word='babbababaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[S]   [S]   [B, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [B, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AC }, { A-->SA }]
B[{ B-->BS }, { B-->SB }, { B-->a }, { B-->BB }, { B-->SS }]
S[{ S-->b }, { S-->AB }]
C[{ C-->SC }]

word='babbababaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][S][] [] [] [] [] [] [] 
[B][B][B][S][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][S][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][S][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }]
B[{ B-->AS }, { B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->SB }, { C-->b }, { C-->AB }]
S[{ S-->BA }, { S-->CS }]

word='babbababaa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[A]         [A]         [C]         []          []          []          []          []          []          []          
[]          []          [B]         [C]         []          []          []          []          []          []          
[B, C]      [C]         [B]         [B]         [B]         []          []          []          []          []          
[A, B, S]   [A, B, S]   [A, S]      [A]         [A]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [C]         [B]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [B, S]      [A]         [A]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, C]   [B, C]      [C]         [B]         [B]         []          
[A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B, C]      [B]         [B]         []          []          [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->a }, { B-->SS }, { B-->CS }]
C[{ C-->BC }]

word='babbababaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AS }, { B-->BB }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->SA }, { C-->AA }, { C-->CS }, { C-->b }, { C-->BS }]

word='abbbaababa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S, C][S, C][]    []    []    []    []    []    []    
[S]   [S, C][S, C][S, C][]    []    []    []    []    []    
[S]   [S, C][S, C][C]   [S]   []    []    []    []    []    
[S]   [S, C][S, C][C]   []    [S]   []    []    []    []    
[S]   [S, C][S, C][C]   []    [S]   [S, C][]    []    []    
[S]   [S, C][S, C][C]   []    [S]   [C]   [S]   []    []    
[S]   [S, C][S, C][C]   []    [S]   [C]   [S]   [S, C][]    
[S]   [S, C][S, C][C]   []    [S]   [C]   [S]   [C]   [S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CA }]
B[{ B-->SS }]
C[{ C-->CB }, { C-->a }, { C-->b }]
S[{ S-->AC }, { S-->AB }, { S-->BC }]

word='abbbaababa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[A]         [A, C]      []          []          []          []          []          []          []          []          
[A, S]      [A, S]      [A, C]      []          []          []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, C]      []          []          []          []          []          []          
[B, S, C]   [B, S]      [S]         [S]         [C]         []          []          []          []          []          
[S]         [S]         []          []          []          [C]         []          []          []          []          
[A]         [A]         [A]         [A]         [A]         [A]         [A, C]      []          []          []          
[B, S, C]   [B, S, C]   [B, C, S]   [B, S]      [S]         [S]         [S]         [C]         []          []          
[A, B, S, C][A, B, S]   [A, S]      [A, S]      [A]         [A]         [A]         [A]         [A, C]      []          
[B, S, C]   [B, S, C]   [B, C, S]   [B, C, S]   [B, C, S]   [B, C, S]   [B, S]      [S]         [S]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->CA }]
B[{ B-->b }, { B-->a }]
C[{ C-->CB }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->CS }]
S[{ S-->SB }]

word='abbbaababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    [A]   [A, B][]    []    []    []    []    []    []    
[]    [A]   [A]   [A, B][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->BS }]
B[{ B-->BC }, { B-->CA }, { B-->BA }, { B-->CB }, { B-->SB }]
C[{ C-->AS }, { C-->a }, { C-->AB }]
S[{ S-->b }]

word='abbbaababa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AS }, { B-->CC }]
S[{ S-->a }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->AA }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='abbbaababa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[B, C][B]   [C]   []    []    []    []    []    []    []    
[B, C][C]   [B]   [C]   []    []    []    []    []    []    
[B, C][B, C][B, C][C]   [A, S][]    []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][A, S][]    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   [C]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   [C]   [A, S][]    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   [C]   [C]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   [C]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AB }, { B-->AS }, { B-->a }, { B-->CC }]
C[{ C-->AC }, { C-->SA }, { C-->CB }, { C-->AA }, { C-->BB }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->b }]

word='ababbaabbb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    [C]   [B]   []    []    []    []    []    []    []    
[C]   [B]   []    [C]   []    []    []    []    []    []    
[B, C][B, C][C]   [B]   [C]   []    []    []    []    []    
[B, C][B, C][C]   [B, C][C]   [B]   []    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   [B]   []    []    []    
[B, C][B, C][B, C][B, C][B, C][B]   []    [C]   []    []    
[B, C][B, C][B, C][B, C][B, C][C]   [C]   [B]   [C]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   [C]   [B]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AB }, { A-->AS }]
B[{ B-->AA }]
S[{ S-->a }, { S-->b }]
C[{ C-->AC }, { C-->SB }, { C-->CS }]

word='ababbaabbb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[A, B]   []       [A, S]   []       []       []       []       []       []       []       
[A, B]   []       [A]      [S]      []       []       []       []       []       []       
[A, B]   []       [A]      []       [S]      []       []       []       []       []       
[A, B, C][C]      [A, B]   []       []       [A, S]   []       []       []       []       
[A, B, C][A, C]   [A, B, C][A]      [C]      [A, B]   [A, S]   []       []       []       
[A, B, C][A, C]   [A, B, C][A]      [C]      [A, B]   [A]      [S]      []       []       
[A, B, C][A, C]   [A, B, C][A]      [C]      [A, B]   [A]      []       [S]      []       
[A, B, C][A, C]   [A, B, C][A]      [C]      [A, B]   [A]      []       []       [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BA }, { A-->SB }]
B[{ B-->b }]
C[{ C-->AC }, { C-->a }]

word='ababbaabbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[C]   [A, C][A, C][]    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    [A]   [A, B][]    []    []    []    []    
[C]   [C]   [C]   [A, C][A, C][A, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    
[]    []    []    []    []    []    []    [A, B][]    []    
[]    []    []    []    []    []    []    [A]   [A, B][]    
[]    []    []    []    []    []    []    [A]   [A]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->SA }, { B-->a }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }]
C[{ C-->AS }, { C-->BA }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }]

word='ababbaabbb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[C]         [B, C]      []          []          []          []          []          []          []          []          
[A, B, C, S][A, S, C]   [B, S]      []          []          []          []          []          []          []          
[A, S, C]   [S, C]      [C]         [B, C]      []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, C, S]   [S, C]      [B, C]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, S, C]   [A, S, C]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][S, C]      [A]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [S, C]      [C]         [C]         [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [S, C]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [S, C]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AC }, { A-->SB }]
B[{ B-->CA }, { B-->CC }, { B-->CS }]
S[{ S-->SA }, { S-->a }, { S-->b }]
C[{ C-->AS }, { C-->BA }, { C-->SS }, { C-->BC }, { C-->BS }]

word='ababbaabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[A, B]      [C]         [S]         []          []          []          []          []          []          []          
[A, B, C, S][A, B]      [C]         [S]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B]      [C]         [S]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [C]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B]      [C]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [C]         [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [C]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B]      [C]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->SA }, { B-->a }]
C[{ C-->AS }, { C-->a }, { C-->AA }, { C-->SC }, { C-->AB }, { C-->BC }]

word='baaabbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B, C][]    []    []    []    []    []    []    []    
[C]   [C]   [B, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [B, C][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [B, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BC }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CC }]
C[{ C-->SS }, { C-->CS }, { C-->b }]

word='baaabbbaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    []    [B]   [A, C][]    []    []    []    
[]    []    []    []    [B]   [B]   [A, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->AS }]
C[{ C-->a }, { C-->b }]
S[{ S-->SA }, { S-->SB }]

word='baaabbbaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    []    [A, C][]    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [B, C][]    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [A, C][]    
[]    []    []    []    []    []    []    []    []    [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AC }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->SC }, { S-->AB }]
C[{ C-->AS }, { C-->a }, { C-->BB }]

word='baaabbbaaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    [S]   [S, C][]    []    []    []    []    []    []    
[]    [S]   [S]   [S, C][]    []    []    []    []    []    
[]    []    []    [S]   [B]   []    []    []    []    []    
[]    [S]   [S]   [S]   [C]   [B]   []    []    []    []    
[]    []    []    [S]   [S]   [C]   [B]   []    []    []    
[]    []    []    [S]   [S]   []    []    [S, C][]    []    
[]    []    []    [S]   [S]   []    []    [S]   [S, C][]    
[]    []    []    [S]   [S]   []    []    [S]   [S]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SC }, { A-->AB }, { A-->AC }, { A-->SB }]
C[{ C-->CB }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->BA }, { S-->BB }]

word='baaabbbaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[A][A][A][C][] [] [] [] [] [] 
[A][A][A][A][C][] [] [] [] [] 
[A][A][A][A][A][C][] [] [] [] 
[A][A][A][A][A][A][C][] [] [] 
[A][A][A][A][A][A][A][C][] [] 
[A][A][A][A][A][A][A][A][C][] 
[A][A][A][A][A][A][A][A][A][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }, { A-->BA }]
C[{ C-->SA }, { C-->a }, { C-->AA }]
S[{ S-->CB }, { S-->BB }, { S-->b }]

word='abaabbbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[] [A][C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [C][] [A][S][] [] [] [] [] 
[] [A][] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [C][] [] [A][C][A][C][] [] 
[] [A][] [C][C][A][C][A][S][] 
[] [] [] [C][C][A][C][] [A][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BC }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->CC }]
S[{ S-->a }, { S-->AA }, { S-->BB }, { S-->SC }, { S-->b }]
C[{ C-->CA }, { C-->a }]

word='abaabbbaba'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, S]   []       []       []       []       []       []       []       []       
[B]      [B, S]   [S, C]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [S, C]   []       []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, C]   [A, S]   []       []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, C]   [B, S]   [A, S]   []       []       []       []       
[B, S]   [B, S]   [B, S]   [B, S, C][B]      [B, S]   [A, S]   []       []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [S, C]   []       []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, C]   [A, S]   []       
[B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B, S]   [B]      [B, S]   [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }]
B[{ B-->b }, { B-->AS }, { B-->SC }]
S[{ S-->a }, { S-->b }]
C[{ C-->AC }, { C-->AB }]

word='abaabbbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [B, S][]    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [B, S][]    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->BC }, { A-->CB }]
B[{ B-->CA }]
C[{ C-->AS }, { C-->a }, { C-->AA }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->BB }, { S-->SS }, { S-->AB }]

word='abaabbbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->b }]
C[{ C-->AS }, { C-->CA }, { C-->AA }, { C-->SS }, { C-->CS }]
S[{ S-->BC }]

word='abaabbbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[A]      [B]      []       []       []       []       []       []       []       []       
[C]      [A]      [A]      []       []       []       []       []       []       []       
[A, C]   [C, S]   [C]      [A]      []       []       []       []       []       []       
[A, C]   [A, C, S][A, C]   [A]      [B]      []       []       []       []       []       
[A, C]   [A, C, S][A, C]   [A]      []       [B]      []       []       []       []       
[A, C]   [A, C, S][A, C]   [A]      []       []       [B]      []       []       []       
[A, C]   [A, C, S][A, C]   [C]      [A]      [A]      [A]      [A]      []       []       
[A, C]   [A, C, S][A, C]   [A, C]   [A]      [A]      [A]      [A]      [B]      []       
[A, C]   [A, C, S][A, C]   [A, C]   [S, C]   [S, C]   [S, C]   [C]      [A]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->CB }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->BA }, { B-->a }, { B-->SS }]
S[{ S-->AA }]
C[{ C-->SC }]

word='abaaaaaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->SB }, { B-->a }, { B-->CC }]
S[{ S-->CB }, { S-->BC }]
C[{ C-->CA }]

word='abaaaaaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [B][B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->AA }, { B-->SC }]
S[{ S-->a }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->BB }, { C-->CC }, { C-->AB }, { C-->BC }]

word='abaaaaaabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A]         [S]         []          []          []          []          []          []          []          []          
[B, C]      [A, C]      [A, S]      []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [A, B, C]   [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C]   [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C]   [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C]   [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C]   [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C]      [A]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BC }]
B[{ B-->a }]
S[{ S-->AS }, { S-->SB }, { S-->AA }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->SS }]

word='abaaaaaabb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [A, B]   []       []       []       []       []       []       []       
[A, S, C][S, C]   [S]      [A, B]   []       []       []       []       []       []       
[A, C, S][C, S]   [S]      [S]      [A, B]   []       []       []       []       []       
[A, C, S][C, S]   [S, C]   [S]      [S]      [A, B]   []       []       []       []       
[A, S, C][S, C]   [A, S, C][S, C]   [S]      [S]      [A, B]   []       []       []       
[A, C, S][S, C]   [A, S, C][A, S, C][S, C]   [S]      [S]      [A, B]   []       []       
[A, C, S][S, C]   [A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [S]      [A, S]   []       
[A, C, S][C, S]   [A, C, S][A, S, C][A, S, C][A, S, C][A, S, C][A, S, C][S, C]   [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->SA }]
B[{ B-->AA }, { B-->SS }]
C[{ C-->BA }]
S[{ S-->CB }, { S-->SB }, { S-->SC }, { S-->CS }, { S-->BS }]

word='abaaaaaabb'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[C]         [B]         [A]         []          []          []          []          []          []          []          
[]          [C]         [B]         [A]         []          []          []          []          []          []          
[S]         []          [C]         [B]         [A]         []          []          []          []          []          
[A]         [S]         []          [C]         [B]         [A]         []          []          []          []          
[B, S]      [A]         [S]         []          [C]         [B]         [A]         []          []          []          
[A, S, C]   [B, S]      [A]         [S]         []          [C]         [B]         [A]         []          []          
[A, B, S]   [A, C, S]   [B, S]      [A]         [S]         []          [C]         [B]         [A]         []          
[A, B, S, C][A, B, S]   [A, C, S]   [B, S]      [A]         [S]         []          [C]         [B]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
S[{ S-->CA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->b }]

word='aababbaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AC }, { A-->CA }, { A-->SB }]
C[{ C-->a }, { C-->b }]
S[{ S-->SA }, { S-->BA }, { S-->CS }, { S-->AB }]

word='aababbaaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, C][]    []    []    []    []    []    []    []    
[A]   [A]   [C]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A, C][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [C]   []    []    []    []    []    
[A]   [A]   [A]   [A]   []    [C]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }]
B[{ B-->b }, { B-->AC }, { B-->BB }]
C[{ C-->CB }, { C-->a }]
S[{ S-->AS }, { S-->CA }, { S-->AA }, { S-->AB }]

word='aababbaaab'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, S]      [A, C]      []          []          []          []          []          []          []          []          
[B, S]      [C, S]      [A, B]      []          []          []          []          []          []          []          
[A, B, S]   [A, S, C]   [B, S]      [A, C]      []          []          []          []          []          []          
[A, B, S]   [A, C, S]   [B, S]      [C, S]      [A, B]      []          []          []          []          []          
[A, B, S]   [A, C, S]   [B, S]      [C, S]      [B, S]      [A, B]      []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S]   [A, C, S]   [A, B, S]   [B, S]      [A, C]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, S]   [B, S]      [A, C]      []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, S]   [A, C, S]   [B, S]      [A, C]      []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, C, S][A, B, S]   [A, B, S]   [A, C, S]   [B, S]      [C, S]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->AS }]
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->BB }, { C-->SS }, { C-->CC }]

word='aababbaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][B, S][]    []    []    []    []    []    []    []    
[S, C][S, C][B, S][]    []    []    []    []    []    []    
[C, S][C, S][S, C][B, S][]    []    []    []    []    []    
[C, S][C, S][S, C][S, C][B, S][]    []    []    []    []    
[C, S][C, S][S, C][S, C][S, C][B, S][]    []    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][B, S][]    []    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][B, S][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][S, C][B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AC }, { A-->SA }, { A-->CB }]
B[{ B-->BS }, { B-->SC }]
C[{ C-->a }, { C-->AA }, { C-->SS }]
S[{ S-->BA }, { S-->b }]

word='aababbaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [A][B][C][] [] [] [] [] [] 
[] [A][B][] [S][] [] [] [] [] 
[] [A][B][] [C][S][] [] [] [] 
[] [A][A][] [] [B][C][] [] [] 
[] [A][A][] [] [] [] [C][] [] 
[] [A][A][] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }, { A-->CB }]
B[{ B-->BS }]
C[{ C-->AC }, { C-->a }, { C-->BB }, { C-->b }]
S[{ S-->AB }]

word='aababbaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->AC }, { A-->SB }]
S[{ S-->CA }, { S-->a }, { S-->b }, { S-->AB }]

word='aababbaaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    []    [A, S][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }, { A-->AS }]
B[{ B-->a }, { B-->AA }]
C[{ C-->SA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->b }]
S[{ S-->CS }]

word='aababbaaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[C]   [A]   [C]   []    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    [B]   []    [A]   [C]   []    []    []    []    []    
[C]   [A]   []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    [B]   []    []    []    []    [A]   [B, C][]    []    
[C]   [A]   []    []    []    []    [C]   [A]   [B, C][]    
[A]   [B, C][]    []    []    []    [A, B][C]   [A]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BA }]
B[{ B-->b }]
S[{ S-->AS }, { S-->a }]
C[{ C-->SA }, { C-->CA }, { C-->SB }, { C-->CC }, { C-->CS }, { C-->BC }]

word='aababbaaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [C][B][] [] [] [] [] [] [] 
[] [C][] [S][] [] [] [] [] [] 
[] [C][C][C][B][] [] [] [] [] 
[] [C][C][C][A][B][] [] [] [] 
[] [C][C][C][S][] [S][] [] [] 
[] [C][C][C][] [] [] [S][] [] 
[] [C][C][C][] [] [] [] [S][] 
[] [C][C][C][] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->CC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->BC }, { B-->BA }]
S[{ S-->a }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->SC }]

word='aababbaaaa'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[A, C][S, C][]    []    []    []    []    []    []    []    
[A, C][A, C][A]   []    []    []    []    []    []    []    
[A, C][A, C][C]   [S, C][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   []    []    []    []    []    
[A, C][A, C][A, C][A, C][A]   [A]   []    []    []    []    
[A, C][A, C][A, C][A, C][C]   [C]   [S, C][]    []    []    
[A, C][A, C][A, C][A, C][A]   [A]   [A, C][S, C][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][S, C][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }, { A-->BC }, { A-->SA }]
B[{ B-->a }]
C[{ C-->AS }, { C-->SB }, { C-->CS }, { C-->AB }]
S[{ S-->CA }]

word='bbbbabbaba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[]       []       []       [C]      [B]      []       []       []       []       []       
[]       []       [C]      [S]      []       [A]      []       []       []       []       
[]       [C]      [S]      [A]      []       []       [A]      []       []       []       
[]       []       [A, C]   [C]      []       []       [C]      [B]      []       []       
[]       [C]      [C, S]   [A, S]   [A]      [C]      [S]      []       [A]      []       
[C]      [S, C]   [A, S, C][A, C]   [C]      []       [A, C]   [A]      [C]      [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->AS }]
S[{ S-->a }, { S-->AA }, { S-->BB }, { S-->b }]

word='bbbbabbaba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->BS }, { B-->AC }, { B-->CA }, { B-->AA }, { B-->SS }, { B-->CS }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->a }, { C-->b }]

word='bbbbabbaba'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[B]   [S, C][]    []    []    []    []    []    []    []    
[B]   [B]   [S, C][]    []    []    []    []    []    []    
[B, S][B]   [B]   [S, C][]    []    []    []    []    []    
[B, S][B, S][B]   [B]   [S, C][]    []    []    []    []    
[B, S][B, S][B, S][B]   [B]   [S, C][]    []    []    []    
[B, S][B, S][B, S][B, S][B]   [B]   [S, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B]   [B]   [S, C][]    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [S, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   [S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->b }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->BA }, { B-->BB }]
S[{ S-->AC }, { S-->CC }, { S-->BS }]
C[{ C-->BC }]

word='bbbbabbaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->SA }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->a }, { S-->b }]

word='bbbbabbaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[A, B][A]   [B, S][]    []    []    []    []    []    []    
[A, B][A, B][A]   [B, S][]    []    []    []    []    []    
[A, B][A, B][A, B][A]   [B, S][]    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   [B, S][]    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   [B, S][]    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   [B, S][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [B, S][]    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AB }]
B[{ B-->b }, { B-->BA }]
C[{ C-->CB }, { C-->a }, { C-->CC }, { C-->CS }]
S[{ S-->AA }, { S-->SS }, { S-->b }]

word='abaabbbbbb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [B, S]   []       []       []       []       []       []       []       []       
[A, C, S][A, B]   [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, B, S][C, S]   [A, C]   []       []       []       []       []       []       
[A, C, S][A, B, S][C, S]   [A, C]   [B, S]   []       []       []       []       []       
[A, C, S][A, B, S][C, S]   [A, C]   [S]      [B, S]   []       []       []       []       
[A, C, S][A, B, S][C, S]   [A, C]   [S]      [S]      [B, S]   []       []       []       
[A, C, S][A, B, S][C, S]   [A, C]   [S]      [S]      [S]      [B, S]   []       []       
[A, C, S][A, B, S][C, S]   [A, C]   [S]      [S]      [S]      [S]      [B, S]   []       
[A, C, S][A, B, S][C, S]   [A, C]   [S]      [S]      [S]      [S]      [S]      [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->SB }]
S[{ S-->AC }, { S-->CB }, { S-->a }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->BS }]

word='abaabbbbbb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CA }]
B[{ B-->b }, { B-->BS }, { B-->a }]
C[{ C-->CB }, { C-->a }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->CC }, { S-->SC }, { S-->AB }, { S-->BC }]

word='abaabbbbbb'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[B, C, S][S]      [B, C]   []       []       []       []       []       []       []       
[B, C, S][B, S]   [C, S]   [B, C]   []       []       []       []       []       []       
[B, S, C][B, S]   [S, C]   [C]      [B]      []       []       []       []       []       
[B, S, C][B, S]   [S, C]   [C]      []       [B]      []       []       []       []       
[B, S, C][B, S]   [S, C]   [C]      []       []       [B]      []       []       []       
[B, S, C][B, S]   [S, C]   [C]      []       []       []       [B]      []       []       
[B, S, C][B, S]   [S, C]   [C]      []       []       []       []       [B]      []       
[B, S, C][B, S]   [S, C]   [C]      []       []       []       []       []       [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }, { B-->AS }, { B-->AA }, { B-->CC }]
C[{ C-->CA }]

word='abaabbbbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A, B][]    []    []    []    []    []    []    []    
[]    [B]   [A]   []    []    []    []    []    []    []    
[]    []    [B]   [A]   []    []    []    []    []    []    
[]    []    []    [B]   [A, B][]    []    []    []    []    
[]    []    []    []    [B]   [A, B][]    []    []    []    
[]    []    []    []    []    [B]   [A, B][]    []    []    
[]    []    []    []    []    []    [B]   [A, B][]    []    
[]    []    []    []    []    []    []    [B]   [A, B][]    
[]    []    []    []    []    []    []    []    [B]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->SC }]
C[{ C-->AC }, { C-->BA }, { C-->b }]
S[{ S-->CB }, { S-->BB }, { S-->AB }]

word='abaabbbbbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [C][C][C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SB }]
C[{ C-->AS }, { C-->AA }, { C-->SS }]
S[{ S-->CA }]

word='abbbbaaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[S][C][A][] [] [] [] [] [] [] 
[C][S][C][A][] [] [] [] [] [] 
[S][C][S][C][A][] [] [] [] [] 
[C][S][C][S][C][A][] [] [] [] 
[S][C][S][C][S][C][A][] [] [] 
[C][S][C][S][C][S][C][A][] [] 
[S][C][S][C][S][C][S][C][A][] 
[C][S][C][S][C][S][C][S][C][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }]
B[{ B-->BA }, { B-->CC }]
C[{ C-->AS }, { C-->SC }, { C-->b }, { C-->AB }, { C-->BS }]

word='abbbbaaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[C][B][C][] [] [] [] [] [] [] 
[B][A][B][C][] [] [] [] [] [] 
[A][] [A][B][C][] [] [] [] [] 
[] [] [] [B][] [A][] [] [] [] 
[] [] [] [B][] [] [A][] [] [] 
[] [] [] [B][] [] [] [A][] [] 
[C][B][] [A][] [] [] [] [C][] 
[C][B][] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->BB }]
C[{ C-->b }]

word='abbbbaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [B, C][]    []    []    []    []    []    []    []    
[A]   [A, B][B, C][]    []    []    []    []    []    []    
[A]   [A, B][A, B][B, C][]    []    []    []    []    []    
[A]   [A, B][A, B][A, B][B, C][]    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    [A]   [B, C][]    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }]
B[{ B-->AC }, { B-->AS }, { B-->a }, { B-->BB }]
S[{ S-->b }]
C[{ C-->SA }, { C-->SC }]

word='abbbbaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[B]   []    [S]   []    []    []    []    []    []    []    
[A]   []    []    [S]   []    []    []    []    []    []    
[B]   []    []    []    [S]   []    []    []    []    []    
[B]   []    []    []    []    [B]   []    []    []    []    
[B]   []    []    []    []    [B]   [B]   []    []    []    
[B]   []    []    []    []    [B]   [B]   [B]   []    []    
[A, B][C]   [C]   [C]   [C]   [A]   [A]   [A]   [S]   []    
[B]   []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->AC }]
B[{ B-->BS }, { B-->AS }, { B-->CB }, { B-->SC }]
C[{ C-->BA }, { C-->b }]
S[{ S-->BB }, { S-->CS }]

word='abbbbaaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][] [C][] [] [] [] [] [] [] 
[A][] [] [C][] [] [] [] [] [] 
[A][] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [A][C][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->b }, { B-->SS }]
S[{ S-->BA }, { S-->CS }]
C[{ C-->BS }]

word='babababbaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[B]   []    [S]   [A]   []    []    []    []    []    []    
[S]   []    []    []    [A, B][]    []    []    []    []    
[C]   []    [B]   []    [S]   [A]   []    []    []    []    
[B]   []    [S]   []    []    []    [A, B][]    []    []    
[S]   []    [C]   []    [B]   []    [S]   [A, B][]    []    
[C]   []    [B]   []    [S]   []    [C]   [S]   [A]   []    
[B]   []    [S]   []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->CA }]
B[{ B-->a }]
S[{ S-->CB }, { S-->BB }, { S-->b }, { S-->AB }]
C[{ C-->SA }, { C-->SB }, { C-->BS }]

word='babababbaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[A]      [C]      [S]      []       []       []       []       []       []       []       
[A, S]   [S]      [C]      [B]      []       []       []       []       []       []       
[A, C]   [A]      [A]      [C]      [S]      []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [S]      [C]      [B]      []       []       []       []       
[A, C]   [A, C]   [A, C]   [A]      [A]      [C]      [S]      []       []       []       
[A, C]   [A, C]   [A, C]   [C]      [A]      []       [A]      [S]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [C]      [A, S]   [C]      [B]      []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [S]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BB }, { A-->AB }, { A-->CA }, { A-->BA }]
B[{ B-->CS }]
S[{ S-->AS }, { S-->CB }, { S-->a }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->SS }, { C-->CC }]

word='babababbaa'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[B]         [C]         [S]         []          []          []          []          []          []          []          
[S, C]      [B]         [C]         [S]         []          []          []          []          []          []          
[B, C, S]   [C, S]      [B]         [C]         [S]         []          []          []          []          []          
[A, B, C, S][B, S, C]   [C, S]      [B]         [C]         [S]         []          []          []          []          
[B, S, C]   [A, B, C, S][B, C, S]   [C, S]      [B]         [C]         [S]         []          []          []          
[A, B, C, S][B, S, C]   [A, B, C, S][B, C, S]   [C, S]      [B]         [C]         [S]         []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [C, S]      [B]         [C]         [S]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [C, S]      [B]         [C]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->AC }, { A-->SA }]
B[{ B-->b }, { B-->BA }]
S[{ S-->a }, { S-->CC }]

word='babababbaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [B][A][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->SB }, { B-->CC }]
S[{ S-->CA }, { S-->a }, { S-->SC }, { S-->CS }]
C[{ C-->b }]

word='babababbaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [A, S][]    []    []    []    []    []    []    []    
[S]   [S]   [C]   []    []    []    []    []    []    []    
[]    []    [S]   [A, S][]    []    []    []    []    []    
[]    []    [S]   [S]   [C]   []    []    []    []    []    
[]    []    []    []    [S]   [A, S][]    []    []    []    
[]    []    []    []    [S]   [S]   [C]   []    []    []    
[B]   [B]   [B]   [B]   [B, S][B, S][B]   [C]   []    []    
[]    []    []    []    []    []    [S]   [S]   [A, S][]    
[]    []    []    []    []    []    []    []    []    [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->CB }, { A-->SB }]
B[{ B-->AC }, { B-->a }]
S[{ S-->a }, { S-->CS }, { S-->b }]

word='aaabbaaaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [B, S][]    []    []    []    []    []    []    []    
[]    [A]   [B, S][]    []    []    []    []    []    []    
[]    []    []    [A, S][]    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    [A]   [B, S][]    []    []    []    
[]    []    []    []    []    [A]   [B, S][]    []    []    
[]    []    []    []    []    []    [A]   [B, S][]    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    [A]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->AC }, { A-->AS }, { A-->SB }]
S[{ S-->SA }, { S-->a }]
C[{ C-->BB }, { C-->CC }, { C-->b }]

word='aaabbaaaba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, S][A, S][]    []    []    []    []    []    []    []    
[A, S][A, S][A, S][]    []    []    []    []    []    []    
[A, S][A, S][A, S][A, C][]    []    []    []    []    []    
[A, S][A, S][A, S][A, C][A, C][]    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [A, S][]    []    []    []    
[A, S][A, S][A, S][A]   [A]   [A, S][A, S][]    []    []    
[A, S][A, S][A, S][A]   [A]   [A, S][A, S][A, S][]    []    
[A, S][A, S][A, S][A]   [A]   [A, S][A, S][A, S][A, C][]    
[A, S][A, S][A, S][A]   [A]   [A, S][A, S][A, S][A]   [A, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->b }, { B-->SS }]
C[{ C-->AC }, { C-->a }, { C-->CC }]
S[{ S-->SA }, { S-->BA }, { S-->CB }, { S-->BB }]

word='aaabbaaaba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [A, B][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [A, B][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   [S]   [A, B][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }]
B[{ B-->AA }, { B-->CS }]
C[{ C-->CA }, { C-->a }, { C-->CC }, { C-->BS }]
S[{ S-->AS }, { S-->BC }]

word='aaabbaaaba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, C]      [A, C]      []          []          []          []          []          []          []          []          
[C, S]      [B, C]      [A, C]      []          []          []          []          []          []          []          
[C, S]      [C]         [B, C]      [A]         []          []          []          []          []          []          
[C, S]      [C]         [C]         [B]         [A]         []          []          []          []          []          
[A, B, C, S][B, C, S]   [B, S, C]   [S]         [B]         [A, C]      []          []          []          []          
[A, B, C, S][B, C, S]   [B, S, C]   [S]         [S]         [B, C]      [A, C]      []          []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [S, C]      [S]         [C, S]      [B, C]      [A, C]      []          []          
[A, B, C, S][B, C, S]   [B, C, S]   [S, C]      [S]         [C, S]      [C]         [B, C]      [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, S, C]   [B, C, S]   [B, C, S]   [C, S]      [B]         [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->AC }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AS }, { B-->a }]
S[{ S-->a }]
C[{ C-->BA }, { C-->CB }, { C-->AA }, { C-->SC }]

word='aaabbaaaba'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A]      [B, S]   []       []       []       []       []       []       []       []       
[A, B, C][A]      [B, S]   []       []       []       []       []       []       []       
[A, C]   [A, C]   [A]      [B]      []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A]      [B]      []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      [B, S]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [B, S]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [B, S]   []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A]      [B]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A]      [B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }]
B[{ B-->CB }]
C[{ C-->BA }, { C-->a }, { C-->b }, { C-->AB }]
S[{ S-->BB }, { S-->CC }, { S-->b }]

word='baabbbaaaa'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[]    [S]   [C]   []    []    []    []    []    []    []    
[]    []    [S]   [C, S][]    []    []    []    []    []    
[]    []    []    [S]   [C, S][]    []    []    []    []    
[]    []    []    []    [S]   [C, S][]    []    []    []    
[]    []    []    []    []    [S]   [C]   []    []    []    
[]    []    []    []    []    []    [S]   [C]   []    []    
[]    []    []    []    []    []    []    [S]   [C]   []    
[]    []    []    []    []    []    []    []    [S]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AC }, { B-->a }]
C[{ C-->SA }, { C-->CC }, { C-->b }]
S[{ S-->AS }]

word='baabbbaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [C][C][C][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->a }]
C[{ C-->AA }, { C-->SC }]
S[{ S-->SS }]

word='baabbbaaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CS }]
B[{ B-->b }, { B-->BA }, { B-->SB }, { B-->a }]
S[{ S-->CB }, { S-->SS }, { S-->CC }, { S-->BS }]

word='baabbbaaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->AC }, { A-->CB }]
B[{ B-->CA }]
C[{ C-->AS }, { C-->a }, { C-->b }, { C-->BS }]

word='baabbbaaaa'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[A, B][A]   [C]   []    []    []    []    []    []    []    
[A, B][A, B][A]   [C]   []    []    []    []    []    []    
[A, B][A, B][A, B][A]   [C]   []    []    []    []    []    
[A, B][A, B][A, B][A, B][A]   [C]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A]   [C]   []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   [C]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [C]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->BS }, { B-->AC }, { B-->AS }, { B-->CB }, { B-->SS }]
C[{ C-->SA }, { C-->b }]
S[{ S-->BB }]

word='bbbabbbbbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[B][B][B][B][C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->AS }, { S-->CA }, { S-->CS }, { S-->b }]
C[{ C-->SC }, { C-->b }, { C-->AB }]

word='bbbabbbbbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    [S, C][S, C][]    []    []    []    
[]    []    []    []    [S, C][S, C][S, C][]    []    []    
[]    []    []    []    [S, C][S, C][S, C][S, C][]    []    
[]    []    []    []    [S, C][S, C][S, C][S, C][S, C][]    
[]    []    []    []    [S, C][S, C][S, C][S, C][S, C][S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
C[{ C-->AC }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }, { C-->SS }, { C-->CC }, { C-->b }]
S[{ S-->AA }]

word='bbbabbbbbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [A, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SC }, { S-->b }, { S-->BS }]
C[{ C-->SB }, { C-->AA }, { C-->CS }, { C-->b }]

word='bbbabbbbbb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S, C][S, C][]    []    []    []    []    []    []    []    
[S, C][S, C][S, C][]    []    []    []    []    []    []    
[C, S][C, S][C]   [S]   []    []    []    []    []    []    
[C, S][C, S][C]   [S]   [S, C][]    []    []    []    []    
[C, S][C, S][C]   [S]   [S, C][S, C][]    []    []    []    
[C, S][C, S][C]   [S]   [S, C][S, C][S, C][]    []    []    
[C, S][C, S][C]   [S]   [S, C][S, C][S, C][S, C][]    []    
[C, S][C, S][C]   [S]   [S, C][S, C][S, C][S, C][S, C][]    
[C, S][C, S][C]   [S]   [S, C][S, C][S, C][S, C][S, C][S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AC }]
B[{ B-->AS }, { B-->SA }, { B-->a }, { B-->BB }]
S[{ S-->a }, { S-->b }]
C[{ C-->CC }]

word='bbbabbbbbb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[]    []    [B]   [A]   [S]   []    []    []    []    []    
[]    [B]   [A]   [B]   []    [S]   []    []    []    []    
[B]   [A]   [B]   [A]   []    []    [S]   []    []    []    
[A]   [B]   [A]   [B]   []    []    []    [S]   []    []    
[B]   [A]   [B]   [A]   []    []    []    []    [S]   []    
[A]   [B]   [A]   [B]   []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BA }]
B[{ B-->BS }]
S[{ S-->a }, { S-->b }]
C[{ C-->SB }, { C-->SC }, { C-->CS }, { C-->BC }]

word='bbbbbbaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->AS }]
S[{ S-->AC }, { S-->SA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->BC }]
C[{ C-->CC }, { C-->SC }, { C-->AB }]

word='bbbbbbaaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [B][S][] [] [] 
[] [] [] [] [] [B][] [S][] [] 
[] [] [] [] [] [B][] [] [S][] 
[] [] [] [] [] [B][] [] [S][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }]
C[{ C-->CB }, { C-->AA }]
S[{ S-->SA }, { S-->CS }]

word='bbbbbbaaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[] [C][A][] [] [] [] [] [] [] 
[A][] [C][A][] [] [] [] [] [] 
[C][A][] [C][A][] [] [] [] [] 
[] [C][A][] [C][A][] [] [] [] 
[A][] [C][A][] [C][A][] [] [] 
[C][A][] [C][A][] [C][A][] [] 
[] [C][A][] [C][A][] [C][A][] 
[A][] [C][A][] [C][A][] [C][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->AC }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SS }, { S-->CC }]

word='bbbbbbaaab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A]      [A, B]   []       []       []       []       []       []       []       []       
[A]      [A]      [A, B]   []       []       []       []       []       []       []       
[A]      [A]      [A]      [A, B]   []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A, B]   []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A, B]   []       []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [B]      [A, C]   []       []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A]      [A, B, S][A, C]   []       []       
[A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B]   [A, B, C][A, B, S][A, C]   []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->AB }, { A-->BC }, { A-->SA }]
B[{ B-->CA }, { B-->a }, { B-->CC }]
C[{ C-->AA }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->b }]
S[{ S-->AS }]

word='bbbbbbaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [C]      []       []       []       []       []       []       []       []       
[A]      [B]      [C]      []       []       []       []       []       []       []       
[A, B]   [A]      [B]      [C]      []       []       []       []       []       []       
[A, B]   [A, B]   [A]      [B]      [C]      []       []       []       []       []       
[A, B, C][A, B]   [A, B]   [A]      [B]      [C]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A]      [B]      [A, B]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, C]   [A, B]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, C]   [A, B]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [A]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BA }]
B[{ B-->BC }, { B-->BS }, { B-->SC }]
S[{ S-->a }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->CA }]

word='bbbbabbaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->BS }]
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->SB }]
S[{ S-->AS }, { S-->BA }, { S-->a }, { S-->SS }, { S-->b }]

word='bbbbabbaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, B, S][B, S]   []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, S]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, S]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [S]      []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [S]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [S]      [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->AC }, { A-->CB }]
B[{ B-->AB }]
C[{ C-->a }, { C-->SC }]
S[{ S-->SB }, { S-->SS }, { S-->b }, { S-->BS }]

word='bbbbabbaaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S]   [S]   [S]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [S]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A, C][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [S]   [S]   []    []    []    
[A]   [A]   [A]   [A]   [A]   [C]   [C]   [A, C][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->BC }, { A-->AC }, { A-->CB }]
B[{ B-->AB }]
S[{ S-->a }, { S-->AA }, { S-->b }]
C[{ C-->BA }]

word='bbbbabbaaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AA }]
S[{ S-->CB }, { S-->SB }, { S-->a }, { S-->BB }, { S-->CC }, { S-->CS }, { S-->BS }]
C[{ C-->AB }]

word='bbbbabbaaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][S][B][] [] [] [] [] [] [] 
[S][S][S][B][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][B][] [] [] [] 
[S][S][S][S][S][S][B][] [] [] 
[] [] [] [] [] [S][S][S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AB }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->a }]
C[{ C-->b }]
S[{ S-->AA }, { S-->BB }, { S-->CS }, { S-->BC }]

word='abbaaababa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[B, S][A, C][]    []    []    []    []    []    []    []    
[B, S][A, S][A, C][]    []    []    []    []    []    []    
[B, S][B]   [B]   [B]   []    []    []    []    []    []    
[B, S][S]   [S]   [S]   [B]   []    []    []    []    []    
[B, S][B]   [B]   [B]   [S]   [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B, S][A, C][]    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][A, C][]    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][B]   [B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->BA }]
B[{ B-->AS }, { B-->BB }]
C[{ C-->CA }, { C-->a }, { C-->SC }, { C-->AB }, { C-->BC }]
S[{ S-->b }]

word='abbaaababa'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[B]      []       [S]      []       []       []       []       []       []       []       
[A, C]   [C]      [C]      [C]      []       []       []       []       []       []       
[A, C]   [A]      [A]      [A]      [C]      []       []       []       []       []       
[A, C]   [C]      [C]      [C]      [A]      [C]      []       []       []       []       
[A, B, C][A]      [A]      [A]      [B, C]   [A]      [S]      []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A]      [C]      [C]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [A]      [A]      [S]      []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A]      [A]      [C]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BA }]
B[{ B-->CA }, { B-->SB }, { B-->BB }, { B-->SS }, { B-->SC }, { B-->CS }]
S[{ S-->AC }, { S-->a }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->CC }, { C-->b }]

word='abbaaababa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B, S, C]   [S, C]      []          []          []          []          []          []          []          []          
[B, S, C]   [B, C]      [S, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, C]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [B, C]      [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, B, S]   [B, C]      [A, S]      []          []          []          []          
[B, C, S]   [B, C, S]   [B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, C]      [A, S]      []          []          
[B, C, S]   [B, C, S]   [B, C, S]   [B, S, C]   [B, S, C]   [B, S, C]   [B, C]      [B, S, C]   [S, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B, S, C][B, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
S[{ S-->AS }, { S-->a }, { S-->BB }]
C[{ C-->SA }, { C-->CB }, { C-->BS }]

word='abbaaababa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    [S]   [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[]    []    []    []    []    []    [S]   [S]   []    []    
[]    []    []    []    []    [C]   [A, C][C]   [A]   []    
[]    []    []    []    []    []    [S]   []    [S]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SC }, { A-->CS }, { A-->SB }]
C[{ C-->AC }, { C-->a }, { C-->b }]
S[{ S-->BA }, { S-->SS }]

word='abbaaababa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[C][A][C][] [] [] [] [] [] [] 
[A][C][A][C][] [] [] [] [] [] 
[C][A][C][A][C][] [] [] [] [] 
[A][C][A][C][A][C][] [] [] [] 
[C][A][C][A][C][A][C][] [] [] 
[A][C][A][C][A][C][A][C][] [] 
[C][A][C][A][C][A][C][A][C][] 
[A][C][A][C][A][C][A][C][A][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->BA }]
S[{ S-->b }]
C[{ C-->CA }, { C-->BB }, { C-->b }, { C-->BS }]

word='aababbabbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    []    [S, C][]    []    []    []    []    []    []    
[]    []    [C]   [A]   []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    [C]   [A]   [A]   [S, C][]    []    []    []    
[]    []    [C]   [A]   [A]   [C]   [A]   []    []    []    
[]    []    []    []    []    []    []    [S, C][]    []    
[]    []    [C]   [A]   [A]   [C]   [A]   [A]   [S, C][]    
[]    []    []    []    []    []    []    [C]   [A]   [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->AB }, { A-->BC }, { A-->AS }, { A-->CB }, { A-->SB }]
C[{ C-->a }, { C-->BB }, { C-->b }]

word='aababbabbb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->CS }, { A-->b }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->a }]
C[{ C-->a }, { C-->AA }]
S[{ S-->CA }, { S-->BS }]

word='aababbabbb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A]         [B, C]      []          []          []          []          []          []          []          []          
[A, S, C]   [A, S]      [A, B]      []          []          []          []          []          []          []          
[A, B, S]   [A, B]      [B]         [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][C, S]      [A, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A]         [B]         [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][C, S]      [A, S]      [A, B]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [C]         [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AS }, { B-->AA }]
C[{ C-->a }, { C-->CS }]
S[{ S-->SA }, { S-->BA }, { S-->CC }, { S-->AB }, { S-->BS }]

word='aababbabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[S]      []       [A]      []       []       []       []       []       []       []       
[S]      []       [A]      [C]      []       []       []       []       []       []       
[S]      []       [B]      []       [A]      []       []       []       []       []       
[S]      [C]      [S]      []       [B]      [A]      []       []       []       []       
[S, C]   [S, C]   [S]      []       [B]      [A]      [C]      []       []       []       
[S, C]   [S, C]   [A, B, S][C]      [S]      [B]      []       [A]      []       []       
[S, C]   [S, C]   [A, B, S][C]      [B, S]   [S]      []       [B]      [A]      []       
[S, C]   [S, C]   [A, B, S][C]      [B, S]   [A, B, S][C]      [S]      [B]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CB }]
B[{ B-->a }]
S[{ S-->CS }, { S-->AB }]

word='aababbabbb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    [A]   [S]   [A, B][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    [A]   [S]   [A, B][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BA }, { A-->SB }]
B[{ B-->AC }, { B-->AA }, { B-->CC }]
S[{ S-->a }, { S-->BB }]
C[{ C-->CS }, { C-->b }]

word='aababbabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[]       [S]      []       []       []       []       []       []       []       []       
[]       []       [C]      []       []       []       []       []       []       []       
[]       []       [C]      [S]      []       []       []       []       []       []       
[]       [A]      [B]      []       [C]      []       []       []       []       []       
[A]      [B]      [A]      [A]      [B]      [C]      []       []       []       []       
[A]      [B]      [A]      [A]      [B]      [C]      [S]      []       []       []       
[B]      [A]      [B, S]   [B]      [A]      [B]      []       [C]      []       []       
[A, B]   [A, B, S][A, B, C][A, B]   [A, B, S][A]      [A]      [B]      [C]      []       
[A, B]   [A, B, S][A, B, C][A, B]   [A, B, S][A]      [A]      [B]      [C]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->b }, { A-->AC }, { A-->AS }, { A-->BA }, { A-->CB }, { A-->SB }]
C[{ C-->SA }, { C-->a }, { C-->BB }, { C-->CS }, { C-->BC }]
S[{ S-->AB }]

word='aababbabba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][C][] [] [] [] [] [] 
[] [] [A][] [A][] [] [] [] [] 
[] [] [A][] [A][A][] [] [] [] 
[] [] [A][] [A][A][C][] [] [] 
[] [] [A][] [A][A][] [A][] [] 
[] [] [A][] [A][A][] [A][A][] 
[] [] [A][] [A][A][] [A][A][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->BA }, { B-->a }, { B-->SS }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->SB }, { S-->a }, { S-->AB }, { S-->BS }]
C[{ C-->SC }]

word='aababbabba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B, S][B, S][]    []    []    []    []    []    []    []    
[B, S][S]   [B]   []    []    []    []    []    []    []    
[B, S][B, S][S]   [B, S][]    []    []    []    []    []    
[B, S][B, S][S]   [S]   [B]   []    []    []    []    []    
[B, S][B, S][S]   [S]   []    [B]   []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [B, S][]    []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   [B]   []    []    
[B, S][B, S][B, S][B, S][S]   [S]   [S]   []    [B]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [S]   [B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->SA }]
B[{ B-->b }, { B-->a }, { B-->CC }]
S[{ S-->AC }, { S-->AS }, { S-->CB }]

word='aababbabba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->AS }, { B-->SS }]
C[{ C-->AC }, { C-->SB }, { C-->a }, { C-->BB }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->BA }, { S-->CB }, { S-->CS }]

word='aababbabba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->a }]
S[{ S-->a }, { S-->AA }, { S-->BS }]
C[{ C-->BA }]

word='aabaaabbbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [B, S][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[S]   [S]   [S]   [B, S][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [B, S][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }]
B[{ B-->AS }]
C[{ C-->CA }, { C-->CB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->AB }]
S[{ S-->SA }]

word='aabaaabbbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C]   [C]   [A]   []    []    []    []    []    []    []    
[C]   [C]   []    [A, C][]    []    []    []    []    []    
[C]   [C]   []    [C]   [A, C][]    []    []    []    []    
[C]   [C]   []    [C]   [C]   [A, C][]    []    []    []    
[C]   [C]   []    [C]   [C]   [C]   [A]   []    []    []    
[C]   [C]   []    [C]   [C]   [C]   []    [A]   []    []    
[C]   [C]   []    [C]   [C]   [C]   []    []    [A]   []    
[C]   [C]   []    [C]   [C]   [C]   []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AB }]
B[{ B-->b }, { B-->a }]
S[{ S-->a }]
C[{ C-->CB }, { C-->SB }]

word='aabaaabbbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A, C][B, S][]    []    []    []    []    []    []    []    
[A, C][A, C][B]   []    []    []    []    []    []    []    
[A, C][A, C][A]   [B, S][]    []    []    []    []    []    
[A, C][A, C][A]   [A, C][B, S][]    []    []    []    []    
[A, C][A, C][A]   [A, C][A, C][B, S][]    []    []    []    
[A, C][A, C][A]   [A, C][A, C][A, C][B]   []    []    []    
[A, C][A, C][A]   [A, C][A, C][A, C][A]   [B]   []    []    
[A, C][A, C][A]   [A, C][A, C][A, C][A]   [A]   [B]   []    
[A, C][A, C][A]   [A, C][A, C][A, C][A]   [A]   [A]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BC }, { A-->CA }, { A-->BA }]
C[{ C-->SA }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->CB }, { S-->BS }]

word='aabaaabbbb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, C][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[A]   [A]   [A]   [A, C][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, C][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }]
B[{ B-->AB }, { B-->BA }, { B-->CB }, { B-->SB }, { B-->AA }, { B-->SS }]
C[{ C-->SC }, { C-->b }]
S[{ S-->AC }]

word='aabaaabbbb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [C]   []    []    []    []    []    []    []    
[B]   [B]   [A]   [A]   []    []    []    []    []    []    
[B]   [B]   [B]   [B]   [A]   []    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [A]   []    []    []    []    
[]    []    []    []    []    [S]   [C]   []    []    []    
[]    []    []    []    [S]   [C]   []    [C]   []    []    
[B]   [B]   [S]   [S]   [C]   []    []    []    [C]   []    
[S]   [C, S][C]   [C]   []    []    []    []    []    [C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AS }, { B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->b }]
S[{ S-->SA }, { S-->AB }]

word='ababaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B]   [B]   []    []    []    []    []    []    []    
[]    []    []    [B, C][]    []    []    []    []    []    
[]    []    []    [B]   [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B, C][]    []    []    
[]    []    []    []    []    []    [B]   [B, C][]    []    
[]    []    []    []    []    []    [B]   [B]   [B]   []    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
B[{ B-->BC }, { B-->AS }, { B-->SS }, { B-->SC }]
S[{ S-->b }]
C[{ C-->AC }, { C-->CB }, { C-->SB }, { C-->AA }, { C-->b }, { C-->BS }]

word='ababaabbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B, C]   [S, C]   []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [S, C]   []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[B, C]   [B, C]   [B]      [B]      [C]      [A]      []       []       []       []       
[A, B, C][A, B, C][B, C]   [B, C]   [A, C]   [B, C]   [S, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [S, C]   []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [C]      [C]      [C]      []       [A]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [S, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BA }]
B[{ B-->b }, { B-->AS }, { B-->SA }, { B-->SB }, { B-->AA }, { B-->CC }, { B-->CS }]
S[{ S-->a }]

word='ababaabbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[A, B][A]   [B]   [B]   []    []    []    []    []    []    
[B]   [B]   []    []    [S]   []    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[A, B][A]   [A, B][A]   [B]   [B]   [B]   []    []    []    
[A, B][A, B][A, B][A]   [A, B][A, B][A]   [B]   []    []    
[A, B][A, B][A, B][A, B][B]   [B]   [B]   []    [S]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   [A]   [B]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }]
B[{ B-->b }, { B-->a }, { B-->AA }, { B-->CC }]
S[{ S-->SB }, { S-->b }]

word='ababaabbab'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    [S]   [B]   []    []    []    []    []    []    []    
[]    [S]   []    [B, S][]    []    []    []    []    []    
[]    [S]   []    [S]   [B]   []    []    []    []    []    
[]    [S]   []    [S]   []    [B]   []    []    []    []    
[]    [S]   []    [S]   []    []    [B, S][]    []    []    
[]    [S]   []    [S]   []    []    [S]   [B, S][]    []    
[]    [S]   []    [S]   []    []    [S]   [S]   [B]   []    
[]    [S]   []    [S]   []    []    [S]   [S]   []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->a }]
S[{ S-->b }]
C[{ C-->SA }, { C-->BA }, { C-->AA }, { C-->CC }]

word='ababaabbab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, C][A, S][]    []    []    []    []    []    []    []    
[A, C][A, C][A, B][]    []    []    []    []    []    []    
[A, C][A, C][A, C][A, S][]    []    []    []    []    []    
[A, C][A, C][A, C][A, C][A, B][]    []    []    []    []    
[A, C][A, C][A, C][A, C][C]   [A, B][]    []    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, S][]    []    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, S][]    []    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, B][]    
[A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, C][A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->SB }, { B-->AA }]
C[{ C-->BA }, { C-->BB }, { C-->CC }, { C-->AB }]
S[{ S-->AS }, { S-->SA }, { S-->BC }]

word='abbbaabbaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[C]      [B]      [A]      []       []       []       []       []       []       []       
[C]      [C]      [B]      [A]      []       []       []       []       []       []       
[S]      [C]      [C]      [B]      [A]      []       []       []       []       []       
[C, S]   [S]      [C]      [C]      [B]      [A]      []       []       []       []       
[B, C, S][S, C]   [S]      [C]      [C]      [B]      [A]      []       []       []       
[B, C, S][B, C, S][S, C]   [S]      [C]      [C]      [B]      [A]      []       []       
[B, C, S][B, S, C][B, S, C][S, C]   [S]      [C]      [C]      [B]      [A]      []       
[B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [S]      [C]      [C]      [B]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->AB }, { B-->CB }, { B-->SB }, { B-->SC }]
S[{ S-->a }, { S-->b }]
C[{ C-->CA }, { C-->BA }, { C-->CC }]

word='abbbaabbaa'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->SA }]
B[{ B-->AB }, { B-->a }]
S[{ S-->CS }, { S-->b }]
C[{ C-->AC }, { C-->SB }, { C-->CC }]

word='abbbaabbaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [A, S]   []       []       []       []       []       []       []       []       
[]       [A]      [A, S]   []       []       []       []       []       []       []       
[]       [A]      [A]      [A, S]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   []       []       []       []       
[S]      [S]      [S]      [S]      []       []       [A, S]   []       []       []       
[A]      [A]      [A]      [A]      []       []       [A]      [A, S]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }]
B[{ B-->CB }, { B-->SB }, { B-->a }]
C[{ C-->AC }, { C-->BB }, { C-->CC }, { C-->b }, { C-->BC }]

word='abbbaabbaa'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[C]   [C]   [C]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [C]   []    []    []    []    []    []    
[B, C][B]   [B]   [B]   [B]   []    []    []    []    []    
[B, C][C]   [C]   [C]   [C]   [B]   []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   [B]   [B]   []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   [C]   [C]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
C[{ C-->SA }, { C-->AA }, { C-->SC }, { C-->b }, { C-->AB }]
S[{ S-->BA }, { S-->BS }]

word='abbbaabbaa'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[]    [C]   [A, C][]    []    []    []    []    []    []    
[]    []    [C]   [A, C][]    []    []    []    []    []    
[]    []    []    [C]   [A]   []    []    []    []    []    
[]    []    []    []    [C]   [A]   []    []    []    []    
[]    []    []    []    []    [C]   [A, C][]    []    []    
[]    []    []    []    []    []    [C]   [A, C][]    []    
[]    []    []    []    []    []    []    [C]   [A]   []    
[]    []    []    []    []    []    []    []    [C]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->BA }]
S[{ S-->CB }, { S-->a }, { S-->BB }, { S-->CS }]
C[{ C-->AS }, { C-->SB }, { C-->b }, { C-->AB }]

word='abbbaaaaba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[C]         [B, C]      []          []          []          []          []          []          []          []          
[C, S]      [S]         [B, C]      []          []          []          []          []          []          []          
[S, C]      [A, C, S]   [S]         [B, C]      []          []          []          []          []          []          
[S, C]      [A, B, C, S][A, B, S]   [A, B, S]   [A, S]      []          []          []          []          []          
[S, C]      [A, B, C, S][A, B, S, C][A, B, C]   [C]         [A, S]      []          []          []          []          
[S, C]      [A, B, C, S][A, B, S, C][A, B, S, C][S]         [C]         [A, S]      []          []          []          
[S, C]      [A, B, C, S][A, B, S, C][A, B, C, S][C]         [S]         [C]         [A, S]      []          []          
[S, C]      [A, B, S, C][A, B, S, C][A, S, C]   [S]         [C]         [S]         [C]         [B, C]      []          
[S, C]      [A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [C, S]      [C, S]      [C, S]      [A, B, S]   [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->BA }, { C-->CB }, { C-->SB }, { C-->SC }, { C-->b }]
S[{ S-->AS }, { S-->CS }]

word='abbbaaaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[C]   [C]   [A, C][]    []    []    []    []    []    []    
[C]   [C]   [C]   [A, C][]    []    []    []    []    []    
[C]   [C]   [C]   [C]   [A]   []    []    []    []    []    
[C]   [C]   [C]   [C]   []    [A]   []    []    []    []    
[C]   [C]   [C]   [C]   []    []    [A]   []    []    []    
[C]   [C]   [C]   [C]   []    []    []    [A]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->AS }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->SA }]

word='abbbaaaaba'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BC }]
B[{ B-->AS }, { B-->SA }, { B-->SB }]
C[{ C-->AC }, { C-->CS }]

word='abbbaaaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SC }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->a }, { B-->CC }, { B-->CS }]
C[{ C-->b }, { C-->BC }, { C-->BS }]

word='abbbaaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B, C]   []       []       []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][B, C]   []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [B]      []       []       []       []       []       
[]       []       []       []       []       [B]      []       []       []       []       
[]       []       []       []       []       []       [B]      []       []       []       
[]       []       []       []       []       []       []       [B]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][C]      [C]      [C]      [C]      [B, C]   []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [B]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->AC }, { A-->SA }]
B[{ B-->BS }, { B-->BB }, { B-->CS }]
C[{ C-->SS }, { C-->b }, { C-->AB }]
S[{ S-->SB }]

word='baabaaaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [A][C][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [A][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CS }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }, { A-->BA }]
B[{ B-->b }, { B-->SS }, { B-->SC }]
S[{ S-->CC }, { S-->b }, { S-->AB }]

word='baabaaaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[A]   [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[A]   [A]   [A, S][B, S][]    []    []    []    []    []    
[]    []    [A]   [A]   [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [A]   []    
[]    []    []    []    []    []    []    [A]   [A, S][B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BC }, { A-->AC }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->SA }]
C[{ C-->a }, { C-->SS }, { C-->b }]
S[{ S-->CB }]

word='baabaaaaab'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, C][]    []    []    []    []    []    []    []    
[A]   [A]   [A, C][]    []    []    []    []    []    []    
[A]   [A]   [A]   [A, C][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, C][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AS }, { B-->SB }]
C[{ C-->BA }, { C-->CB }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->BC }]

word='baabaaaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }, { A-->CA }]
S[{ S-->AC }, { S-->a }, { S-->AA }, { S-->BS }]
C[{ C-->CB }, { C-->SB }, { C-->CS }, { C-->b }, { C-->AB }, { C-->BC }]

word='baabaaaaab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[C]      [S]      []       []       []       []       []       []       []       []       
[A, S, C][A]      [S]      []       []       []       []       []       []       []       
[A, S, C][S]      []       [A, C]   []       []       []       []       []       []       
[A, S, C][A, S]   []       [C]      [S]      []       []       []       []       []       
[A, S, C][A, S]   [A]      [A, S, C][A]      [S]      []       []       []       []       
[A, S, C][A, S]   []       [A, C]   []       [A]      [S]      []       []       []       
[A, C, S][A, S]   [A, S]   [A, C, S][S]      []       [A]      [S]      []       []       
[A, C, S][A, S]   [A]      [A, S, C][A]      [S]      []       [A]      [S]      []       
[A, C, S][A, S]   [A, S]   [A, C, S][S]      []       [A]      [S]      []       [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->a }]
S[{ S-->SB }, { S-->a }, { S-->AB }]
C[{ C-->AA }, { C-->SS }, { C-->b }, { C-->BS }]

word='abaaabaaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    [S, C][B, S][]    []    []    []    []    []    
[]    []    [C, S][S, C][B, S][]    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    [S, C][B, S][]    []    
[]    []    []    []    []    []    [C, S][S, C][B, S][]    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->CA }]
B[{ B-->AB }]
S[{ S-->a }, { S-->CS }]
C[{ C-->CB }, { C-->b }, { C-->BC }, { C-->BS }]

word='abaaabaaab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [S][S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [S][S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->SA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->AC }]
C[{ C-->a }, { C-->SC }]

word='abaaabaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][B][] [] [] [] [] [] [] [] 
[B][] [C][] [] [] [] [] [] [] 
[A][] [A][C][] [] [] [] [] [] 
[B][] [B][A][C][] [] [] [] [] 
[A][] [A][] [A][B][] [] [] [] 
[B][] [B][A][B][] [C][] [] [] 
[A][] [A][B][A][] [A][C][] [] 
[B][] [B][A][B][] [B][A][C][] 
[A][] [A][] [A][] [A][] [A][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AB }, { A-->BC }, { A-->AC }, { A-->SA }, { A-->BA }]
B[{ B-->AS }, { B-->a }]
C[{ C-->b }]
S[{ S-->AA }, { S-->SC }, { S-->BS }]

word='abaaabaaab'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[A]      [C]      []       []       []       []       []       []       []       []       
[A]      []       [B]      []       []       []       []       []       []       []       
[A, S]   []       [A]      [B]      []       []       []       []       []       []       
[A, S]   []       [A]      [A]      [B]      []       []       []       []       []       
[A, B, S][]       [A, S]   [A]      [A]      [C]      []       []       []       []       
[A, B, S][]       [A, S]   [A]      [A]      []       [B]      []       []       []       
[A, B, S][]       [A, B, S][A, S]   [A, S]   []       [A]      [B]      []       []       
[A, B, S][]       [A, B, S][A, S]   [A, S]   []       [A]      [A]      [B]      []       
[A, B, S][]       [A, B, S][A, B, S][A, B, S][]       [A, S]   [A]      [A]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->AS }]
B[{ B-->b }, { B-->BC }, { B-->CB }, { B-->SB }, { B-->BB }]
C[{ C-->AC }, { C-->SA }, { C-->CA }, { C-->a }, { C-->CC }]
S[{ S-->AA }, { S-->b }]

word='abaaabaaab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[B]      [B, S]   []       []       []       []       []       []       []       []       
[B]      [B]      [C]      []       []       []       []       []       []       []       
[B]      [B]      [C]      [C]      []       []       []       []       []       []       
[B]      [B]      [C]      [C]      [C]      []       []       []       []       []       
[A, B, C][A, B]   [B]      [B]      [B]      [B, S]   []       []       []       []       
[B, C]   [B, C]   [B]      [B]      [B]      [B]      [C]      []       []       []       
[B, C]   [B, C]   [B]      [B]      [B]      [B]      [C]      [C]      []       []       
[B, C]   [B, C]   [B]      [B]      [B]      [B]      [C]      [C]      [C]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [B]      [B]      [B]      [B, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CA }, { A-->BA }, { A-->SB }]
B[{ B-->SC }]
S[{ S-->b }]
C[{ C-->AA }, { C-->SS }, { C-->BC }]

word='bbbabbbaab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[B]   [C]   [S]   []    []    []    []    []    []    []    
[A]   [A]   []    [A]   []    []    []    []    []    []    
[]    []    []    []    [S]   []    []    []    []    []    
[]    []    []    []    [C]   [S]   []    []    []    []    
[]    []    []    []    [B]   [C]   [S]   []    []    []    
[B, C][A, C][B]   [C]   [A]   [A]   []    [A]   []    []    
[A, B][A, C][A]   [A]   [B, C][A, C][B]   [C]   [A]   []    
[]    []    []    []    []    []    []    []    []    [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->AS }, { B-->SA }, { B-->BA }, { B-->a }]
S[{ S-->a }, { S-->b }, { S-->BC }]
C[{ C-->AA }, { C-->b }]

word='bbbabbbaab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[A]         [S, C]      []          []          []          []          []          []          []          []          
[B]         [A]         [S, C]      []          []          []          []          []          []          []          
[C]         [B]         [A]         [B, S]      []          []          []          []          []          []          
[A, C]      [B, S]      [A, B]      [S]         [S, C]      []          []          []          []          []          
[A, B]      [A, B, S]   [B, C, S]   [B]         [A]         [S, C]      []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][B, S]      [B]         [A]         [S, C]      []          []          []          
[A, B, C]   [B, S, C]   [A, B]      [B, S]      [C]         [B]         [A]         [B, S]      []          []          
[A, B]      [A, B]      [B, C]      [B]         [A]         []          [B]         []          [B, S]      []          
[A, B, C, S][A, B, S]   [A, B, C, S][B, S]      [A, B]      [A]         [B, S]      []          [S]         [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SA }, { A-->CB }]
B[{ B-->AS }, { B-->a }, { B-->SC }, { B-->CS }]
C[{ C-->a }, { C-->BB }, { C-->b }, { C-->AB }]
S[{ S-->SB }, { S-->CC }]

word='bbbabbbaab'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[B]         [S]         [C]         []          []          []          []          []          []          []          
[A, B, C]   [B, S]      [A, S]      [B, C]      []          []          []          []          []          []          
[A, S]      [A, B]      [B]         [S]         [C]         []          []          []          []          []          
[A, B, C, S][A, S]      [A, B]      [B]         [S]         [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][S, C]      [A, C]      [B]         [S]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, C, S]   [A, B, C]   [B, S]      [A, S]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [A, C, S]   [B, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B, S]   [B, S]      [S]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }]
B[{ B-->b }, { B-->BA }]
S[{ S-->AS }, { S-->a }, { S-->BB }, { S-->b }]
C[{ C-->SA }, { C-->CB }, { C-->CC }, { C-->CS }, { C-->BS }]

word='bbbabbbaab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S, C][B, S][]    []    []    []    []    []    []    []    
[C]   [S, C][B, S][]    []    []    []    []    []    []    
[C]   [C]   [C]   [S]   []    []    []    []    []    []    
[C]   [C]   [C]   []    [B, S][]    []    []    []    []    
[C]   [C]   [C]   []    [S, C][B, S][]    []    []    []    
[C]   [C]   [C]   []    [C]   [S, C][B, S][]    []    []    
[C]   [C]   [C]   []    [C]   [C]   [C]   [S]   []    []    
[C]   [C]   [C]   []    [C]   [C]   [C]   []    [S]   []    
[C]   [C]   [C]   []    [C]   [C]   [C]   []    []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AC }]
C[{ C-->AS }, { C-->CB }, { C-->BB }, { C-->SS }, { C-->CS }]
S[{ S-->SA }, { S-->SB }]

word='bbbabbbaab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BC }, { A-->CB }]
B[{ B-->b }, { B-->AC }, { B-->BA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }]
S[{ S-->SA }, { S-->b }]
C[{ C-->CS }]

word='bbbaabbbab'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [B, S][]    []    []    []    []    []    []    []    
[B]   [B]   [B, S][]    []    []    []    []    []    []    
[B]   [B]   [B, S][A, B][]    []    []    []    []    []    
[B]   [B]   [B, S][A, B][A, B][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][A, B][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SC }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->BC }, { B-->a }, { B-->CC }, { B-->CS }]
S[{ S-->b }]

word='bbbaabbbab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [A][B][] [] [] [] [] 
[] [] [] [A][A][S][] [] [] [] 
[] [] [] [A][A][] [S][] [] [] 
[] [] [] [A][A][] [] [S][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [A][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->AS }, { B-->BA }, { B-->SB }, { B-->a }]
S[{ S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->SS }, { C-->CC }, { C-->AB }]

word='bbbaabbbab'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[A]         [C]         [S]         []          []          []          []          []          []          []          
[B, C]      [B]         [B]         [B]         []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [C, S]      [S]         [B]         []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, C, S]   [S, C]      [S]         [S]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [C]         [C]         [S]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B]      [A]         [C]         [S]         []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, S, C]   [B, S, C]   [B, C]      [B]         [B]         [B]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, C, S]   [C, S]      [S]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AB }]
B[{ B-->SA }, { B-->BB }]
S[{ S-->AC }, { S-->BA }, { S-->a }, { S-->SS }, { S-->CS }]
C[{ C-->SC }, { C-->b }]

word='bbbaabbbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[S][S][S][S][S][S][S][S][S][] 
[C][C][C][C][C][C][C][C][C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->b }, { A-->AB }, { A-->AC }, { A-->AS }]
B[{ B-->b }, { B-->SB }]
C[{ C-->a }, { C-->CS }, { C-->BS }]
S[{ S-->BB }]

word='bbbaabbbab'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[A, B, C][A, S]   [A, B]   []       []       []       []       []       []       []       
[A]      [A]      [A]      [A, C]   []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A, C]   []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A, B]   []       []       []       []       
[A]      [A]      [A]      [A]      [A, C]   [A, S]   [A, B]   []       []       []       
[A]      [A]      [A]      [A]      [A]      [A, B, C][A, S]   [A, B]   []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A, C]   []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A, B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CB }]
B[{ B-->b }, { B-->AB }, { B-->AC }]
C[{ C-->AS }, { C-->CA }, { C-->SB }, { C-->a }]

word='bbabbababa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [A][B][] [] [] [] [] [] 
[] [] [B][] [B][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [A][B][] [] [] 
[] [] [] [] [] [B][] [C][] [] 
[] [] [] [] [] [] [] [A][B][] 
[] [] [] [] [] [B][] [B][] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->AB }, { B-->BS }, { B-->SA }]
C[{ C-->a }, { C-->BB }, { C-->BC }]
S[{ S-->AS }, { S-->AA }, { S-->SS }, { S-->b }]

word='bbabbababa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[B]      [B]      [A, C]   []       []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [S]      []       []       []       []       []       []       
[B, S]   [B, S]   [S]      [S]      [S]      []       []       []       []       []       
[B, C]   [B, C]   [B]      [B]      [B]      [A, C]   []       []       []       []       
[B, C, S][B, C, S][B, S]   [B, S]   [B, S]   [S]      [S]      []       []       []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [B]      [A, C]   []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [B, S]   [S]      [S]      []       
[B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B, C]   [B]      [B]      [A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->b }, { B-->SA }, { B-->BA }, { B-->a }, { B-->AA }]
C[{ C-->CB }, { C-->SB }, { C-->a }, { C-->SS }, { C-->SC }, { C-->CS }, { C-->BS }]
S[{ S-->BB }]

word='bbabbababa'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B, S]      [A, B]      []          []          []          []          []          []          []          []          
[B, C, S]   [A, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, C, S]   [A, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][B, C, S]   [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][B, C, S]   [A, S]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][B, C, S]   [A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, B]      []          
[A, B, S, C][A, B, S, C][B, C, S]   [A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [A, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
B[{ B-->b }, { B-->SA }, { B-->CB }, { B-->SB }, { B-->a }, { B-->AA }]
S[{ S-->AS }, { S-->CA }, { S-->a }, { S-->CC }, { S-->CS }, { S-->BS }]
C[{ C-->AC }]

word='bbabbababa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[B]      [A, B]   []       []       []       []       []       []       []       []       
[S]      [S]      [B, S]   []       []       []       []       []       []       []       
[B]      [B]      [B]      [A, B]   []       []       []       []       []       []       
[B]      [B]      [B]      [B]      [A, B]   []       []       []       []       []       
[A, B, S][A, B, S][A, S]   [S]      [S]      [B, S]   []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [A, B]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      [B, S]   []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [B]      [B]      [A, B]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SB }]
B[{ B-->BC }, { B-->a }, { B-->CS }]
C[{ C-->AA }, { C-->SC }, { C-->b }]
S[{ S-->AC }, { S-->AS }, { S-->SA }, { S-->BA }, { S-->CB }, { S-->BB }, { S-->AB }]

word='bbabbababa'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[]          [C]         []          []          []          []          []          []          []          []          
[B]         [S]         [B]         []          []          []          []          []          []          []          
[B]         [C, S]      [B]         [C]         []          []          []          []          []          []          
[B]         [C, S]      [B]         []          [C]         []          []          []          []          []          
[B, S]      [A, B, S]   [S]         [B]         [S]         [B]         []          []          []          []          
[B, S, C]   [A, B, C, S][B, S, C]   [B]         [S, C]      [B]         [C]         []          []          []          
[A, B, S]   [A, B, S]   [A, S]      [B, S]      [A, B, S]   [S]         [S]         [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, B, S, C][B, S, C]   [S, C]      [B]         [C]         []          
[A, B, S]   [A, B, C, S][A, B, S]   [A, B, S]   [A, B, S]   [A, S]      [A, B, S]   [S]         [S]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->AC }, { A-->SA }, { A-->CA }]
B[{ B-->SB }]
C[{ C-->b }]
S[{ S-->AB }]

word='ababbaaabb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][C][] [] [] [] [] [] 
[A][A][A][] [C][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][C][] 
[A][A][A][A][A][A][A][A][] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CB }]
S[{ S-->CA }, { S-->a }, { S-->BB }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->AS }, { C-->BA }, { C-->SS }, { C-->CC }, { C-->BS }]

word='ababbaaabb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[C]      [B, S]   []       []       []       []       []       []       []       []       
[S]      [C]      [S]      []       []       []       []       []       []       []       
[C]      [B, S]   [C]      [B, S]   []       []       []       []       []       []       
[B, C, S][S, C]   [B, C, S][S, C]   [B, S]   []       []       []       []       []       
[C, S]   [S, C]   [C, S]   [S, C]   [C]      [S]      []       []       []       []       
[C, S]   [S, C]   [C, S]   [C, S]   [S]      [C]      [S]      []       []       []       
[C, S]   [S, C]   [C, S]   [S, C]   [C]      [S]      [C]      [S]      []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S]   [C]      [B, S]   [C]      [B, S]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][S, C]   [B, C, S][C, S]   [B, C, S][S, C]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SA }, { A-->CA }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->CS }]
S[{ S-->AS }, { S-->AA }, { S-->SS }, { S-->BC }, { S-->BS }]
C[{ C-->SC }]

word='ababbaaabb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[B]   [B]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    [B]   [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [A]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][S]   [A]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AB }, { A-->BC }]
B[{ B-->CA }, { B-->SS }, { B-->SC }]
C[{ C-->BB }, { C-->b }]
S[{ S-->AC }, { S-->SA }]

word='ababbaaabb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A, S]   [B]      [A]      []       []       []       []       []       []       []       
[B, S]   [A]      [S]      [C]      []       []       []       []       []       []       
[A, B]   [S]      [B]      []       [C]      []       []       []       []       []       
[C]      [A, S]   []       []       [B]      [A]      []       []       []       []       
[B]      [S]      []       []       []       []       [A]      []       []       []       
[]       [S]      []       []       []       []       []       [A]      []       []       
[A]      [B]      []       []       []       []       []       [S]      [C]      []       
[B, C, S][A, S]   []       []       []       []       [A]      [B]      []       [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->CC }]
S[{ S-->a }, { S-->b }]
C[{ C-->SC }, { C-->BC }]

word='ababbaaabb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->AC }, { B-->BA }, { B-->CB }, { B-->BB }]
S[{ S-->a }, { S-->AA }, { S-->b }]

word='bbbbbababb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[A]   [A]   [S]   []    []    []    []    []    []    []    
[A, S][A]   [A]   [S]   []    []    []    []    []    []    
[A, S][A, S][A]   [A]   [S]   []    []    []    []    []    
[A, S][A, S][A, S][A]   [A]   [S]   []    []    []    []    
[A, S][A, S][A, S][A, S][A]   [A]   [S]   []    []    []    
[A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   []    []    
[A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   []    
[A, S][A, S][A, S][A, S][A, S][A, S][A, S][A]   [A]   [S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->SS }, { A-->CC }, { A-->BS }, { A-->BA }, { A-->SB }]
B[{ B-->b }, { B-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->a }]
S[{ S-->SC }, { S-->CS }, { S-->b }]

word='bbbbbababb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [B, S]      []          []          []          []          []          []          []          []          
[A, C]      [A]         [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, C]      [A]         [B, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, C]      [A]         [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [B, S]      [C]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [S]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [S]         [B, S]      [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [A]         [S]         [B, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C]      [A, C]      [A]         [A]         [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AB }, { A-->AS }, { A-->BA }, { A-->SB }]
B[{ B-->a }]
C[{ C-->CA }, { C-->CB }, { C-->BB }, { C-->SS }, { C-->CC }]
S[{ S-->BC }]

word='bbbbbababb'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [A]   [A, B][]    []    []    []    
[]    []    []    []    []    [A]   [A]   []    []    []    
[]    []    []    []    []    [A]   [A]   [A, B][]    []    
[]    []    []    []    []    []    []    [A]   [A]   []    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->b }, { B-->a }]
S[{ S-->CA }]

word='bbbbbababb'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [A, B][]    []    []    []    []    []    []    []    
[]    []    [A, B][]    []    []    []    []    []    []    
[]    []    []    [A, B][]    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [A, B][]    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [A, B][]    
[]    []    []    []    []    []    []    []    []    [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->AC }, { S-->AS }, { S-->CB }, { S-->a }, { S-->SS }, { S-->b }, { S-->AB }, { S-->BC }, { S-->BS }]
C[{ C-->SB }, { C-->b }]

word='bbbbbababb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[S]   [S, C][]    []    []    []    []    []    []    []    
[S]   [S]   [S, C][]    []    []    []    []    []    []    
[S]   [S]   [S]   [S, C][]    []    []    []    []    []    
[S]   [S]   [S]   [S]   [S, C][]    []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [S, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SB }]
C[{ C-->CA }, { C-->a }, { C-->AA }, { C-->AB }, { C-->BC }]
S[{ S-->BA }, { S-->CB }, { S-->BB }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BS }]

word='abbbbaaabb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[C, S]   [B, S]   []       []       []       []       []       []       []       []       
[B, C, S][B, S]   [B, S]   []       []       []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B, S]   []       []       []       []       []       []       
[B, S, C][B, S]   [B, S]   [B, S]   [B, S]   []       []       []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [A, C]   []       []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [A, C]   []       []       []       
[C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [S, C]   [C, S]   [A, C]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [C, S]   [B, S]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->b }, { B-->AC }, { B-->CB }, { B-->SB }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->CA }, { S-->BA }, { S-->a }, { S-->CC }]
C[{ C-->b }]

word='abbbbaaabb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[B]   [B, S][B, C][]    []    []    []    []    []    []    
[B]   [B]   [B, S][B, C][]    []    []    []    []    []    
[B]   [B]   [B]   [B, S][B, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->SC }]
S[{ S-->AC }, { S-->CB }, { S-->BB }, { S-->CC }, { S-->BS }]
C[{ C-->SA }]

word='abbbbaaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[S][B][] [] [] [] [] [] [] [] 
[S][S][B][] [] [] [] [] [] [] 
[S][S][S][B][] [] [] [] [] [] 
[S][S][S][S][B][] [] [] [] [] 
[S][S][S][S][S][B][] [] [] [] 
[S][S][S][S][S][S][B][] [] [] 
[S][S][S][S][S][S][S][B][] [] 
[S][S][S][S][S][S][S][S][B][] 
[S][S][S][S][S][S][S][S][S][B]

validity=false
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->b }, { B-->SA }, { B-->BA }, { B-->CC }, { B-->CS }]
S[{ S-->a }, { S-->BC }]
C[{ C-->AC }, { C-->SB }, { C-->b }]

word='abbbbaaabb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A, C]      [B, C]      []          []          []          []          []          []          []          []          
[B, C]      [B, S]      [B, C]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][B, S]      [B, C]      []          []          []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][B, S]      [B, C]      []          []          []          []          []          
[A, B, C]   [B, C, S]   [B, C]      []          [B]         [S]         []          []          []          []          
[B, C]      [B]         [B]         []          []          []          [S]         []          []          []          
[B]         []          []          []          []          []          []          [S]         []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, C]      [A, B]      [A, C]      [B, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [A, C, S]   [B, C]      [B, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BA }]
C[{ C-->SA }, { C-->SB }, { C-->a }, { C-->SC }, { C-->BC }]
S[{ S-->AA }, { S-->BS }]

word='abbbbaaabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [S][A][] [] [] [] [] [] [] 
[] [C][S][A][] [] [] [] [] [] 
[] [] [C][S][A][] [] [] [] [] 
[] [C][] [C][] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [S][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->BS }, { B-->a }, { B-->SS }, { B-->SC }]
C[{ C-->a }, { C-->b }]
S[{ S-->BA }]

word='abbbbabbab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[B, S]   [A]      [B, C]   []       []       []       []       []       []       []       
[A, B]   [B, S]   [A]      [B, C]   []       []       []       []       []       []       
[A, B, S][A, B]   [B, S]   [A]      [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [B, S]   [A]      [B, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A]      [B, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A]      [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A]      [B, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B, S]   [A]      [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
S[{ S-->BA }, { S-->a }, { S-->AA }, { S-->SC }, { S-->b }, { S-->AB }]
C[{ C-->SS }, { C-->CC }, { C-->CS }]

word='abbbbabbab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[S, C][S, C][A, S][]    []    []    []    []    []    []    
[C, S][C, S][S, C][A, S][]    []    []    []    []    []    
[S, C][S, C][S, C][S, C][A, S][]    []    []    []    []    
[S, C][S, C][S, C][S, C][C]   [S]   []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][C]   [A, S][]    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][S, C][A, S][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][C]   [S]   []    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][C]   [A, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->SB }, { S-->a }, { S-->SS }, { S-->b }]
C[{ C-->a }, { C-->BB }]

word='abbbbabbab'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[S]         [S]         []          []          []          []          []          []          []          []          
[S]         [S]         [S]         []          []          []          []          []          []          []          
[S]         [S]         [S]         [S]         []          []          []          []          []          []          
[S]         [S]         [S]         [S]         [S]         []          []          []          []          []          
[A, S]      [A, S]      [A, S]      [A, S]      [A, S]      [S, C]      []          []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [S]         [S]         []          []          []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [S]         [S]         [S]         []          []          
[A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, B, S]   [A, S]      [A, S]      [A, S]      [S, C]      []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S, C]   [B, S]      [B, S]      [B, S]      [S]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AB }, { B-->CA }]
S[{ S-->CB }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->b }]
C[{ C-->AC }, { C-->SA }, { C-->BB }, { C-->SC }]

word='abbbbabbab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[C, S]   [S, C]   [A, S]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][S, C]   [A, S]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][S, C]   [A, S]   []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [A]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, S, C][S]      [A, S]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][C, S]   [S, C]   [A, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, C, S][B, S, C][S, C]   [A]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, C, S][B, S, C][B, S, C][S]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }]
B[{ B-->b }, { B-->BS }, { B-->CB }, { B-->a }, { B-->BB }]
S[{ S-->SS }]
C[{ C-->CA }, { C-->BC }]

word='abbbbabbab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->BS }]
B[{ B-->AC }]
C[{ C-->AS }, { C-->SA }, { C-->BA }, { C-->AA }, { C-->CS }, { C-->AB }, { C-->BC }]
S[{ S-->CB }, { S-->SB }]

word='aababbabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A]         []          []          []          []          []          []          []          []          
[B]         [C]         [A]         []          []          []          []          []          []          []          
[C]         [B]         [C]         [A]         []          []          []          []          []          []          
[B, C, S]   [C]         [B]         [C]         [A]         []          []          []          []          []          
[B, C]      [B, S, C]   [C]         [B]         [C]         [A]         []          []          []          []          
[B, C, S]   [B, C]      [B, S, C]   [C]         [B]         [C]         [A]         []          []          []          
[A, B, C, S][B, C, S]   [B, C]      [B, S, C]   [C]         [B]         [C]         [A]         []          []          
[B, C, S]   [A, B, S, C][B, C, S]   [B, C]      [B, S, C]   [C]         [B]         [C]         [A]         []          
[A, B, C, S][B, C, S]   [A, B, C, S][B, C, S]   [B, C]      [B, S, C]   [C]         [B]         [C]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->b }]
B[{ B-->AB }, { B-->BC }]
S[{ S-->AC }, { S-->AS }, { S-->BA }]
C[{ C-->SB }, { C-->SS }, { C-->BS }]

word='aababbabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->BS }, { A-->CB }, { A-->SB }]
B[{ B-->b }]
S[{ S-->SC }]
C[{ C-->AS }, { C-->CS }]

word='aababbabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }]
B[{ B-->CA }, { B-->CB }, { B-->SC }, { B-->CS }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->AB }]

word='aababbabab'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[B, C]   [A, C]   []       []       []       []       []       []       []       []       
[B, C]   [B]      [A]      []       []       []       []       []       []       []       
[B, C]   [C]      [C]      [A, C]   []       []       []       []       []       []       
[A, B, C][A, B, C][B, C]   [B]      [A]      []       []       []       []       []       
[A, B, C][B, C]   [B, C]   [C]      []       [A]      []       []       []       []       
[A, B, C][A, B, C][B, C]   [B, C]   [C]      [C]      [A, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [B]      [A]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B, C]   [C]      [C]      [A, C]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [B]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AS }, { B-->a }, { B-->BB }]
C[{ C-->AC }, { C-->SA }, { C-->SB }, { C-->b }, { C-->BC }]
S[{ S-->BA }, { S-->BS }]

word='aababbabab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [C][C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [C][C][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AC }, { B-->CB }, { B-->BB }]
C[{ C-->SA }, { C-->a }, { C-->b }, { C-->BS }]
S[{ S-->AS }, { S-->CA }, { S-->AA }, { S-->SS }, { S-->SC }, { S-->CS }, { S-->BC }]

word='aababbabaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->BS }, { A-->BA }, { A-->SB }]
B[{ B-->CB }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->SC }]
C[{ C-->b }, { C-->AB }]
S[{ S-->CS }]

word='aababbabaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [C][B][C][B][C][] [] [] [] 
[] [] [A][] [A][] [A][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->BC }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->AA }, { B-->BB }]
S[{ S-->AS }, { S-->CA }, { S-->SB }]

word='aababbabaa'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }, { B-->SC }]
S[{ S-->a }]
C[{ C-->CB }]

word='aababbabaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, S][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[]    []    []    [B, S][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    []    [A]   []    []    []    []    
[]    []    []    []    []    []    [B, S][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    []    [B, S][]    
[]    []    []    []    []    []    []    []    []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->SC }, { A-->BS }]
B[{ B-->SA }, { B-->SB }, { B-->BB }]
S[{ S-->AS }, { S-->BA }, { S-->CS }, { S-->b }]
C[{ C-->CB }]

word='aababbabaa'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [S]      [S]      []       []       []       []       []       
[S]      [S]      [S]      []       []       [S]      []       []       []       []       
[B]      [B]      [B]      [B]      [B]      [B]      [A]      []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, B]   [A]      [S]      [S]      []       []       
[A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B]      [B]      [B]      [A]      []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [S]      [S]      []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->a }]
S[{ S-->AC }, { S-->CA }, { S-->a }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BC }, { S-->BS }]
C[{ C-->CS }]

word='bbaabaabba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [A, S][]    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    []    [S]   [B, S][]    []    []    []    []    []    
[]    []    [S]   [S]   [A, S][]    []    []    []    []    
[]    []    []    []    []    [B, S][]    []    []    []    
[]    []    []    []    []    [S]   [B, S][]    []    []    
[]    []    []    []    []    [S]   [S]   [A, S][]    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->b }, { B-->BS }, { B-->CA }, { B-->a }, { B-->SS }, { B-->CS }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->AA }, { C-->SC }]
S[{ S-->BB }, { S-->CC }]

word='bbaabaabba'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[S]         [B]         []          []          []          []          []          []          []          []          
[B, C]      [S]         [B, C]      []          []          []          []          []          []          []          
[A, B, S]   [B, C]      [A, S]      [B, C]      []          []          []          []          []          []          
[B, C, S]   [A, B, S]   [B, C]      [A, S]      [B]         []          []          []          []          []          
[A, B, S, C][B, C, S]   [A, B, S]   [B, C]      [S]         [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, S]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      [A, S]      [B]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, B, S]   [B]         [S]         [B]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B, C]      [S]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AB }, { B-->BS }, { B-->a }]
S[{ S-->SA }, { S-->CA }, { S-->CB }, { S-->BC }]
C[{ C-->BB }, { C-->SC }]

word='bbaabaabba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[]          [A]         []          []          []          []          []          []          []          []          
[B]         [B]         [B]         []          []          []          []          []          []          []          
[A, C]      [A, C]      [C]         [B]         []          []          []          []          []          []          
[S]         [S]         [S]         []          [A]         []          []          []          []          []          
[B, S]      [B, S]      [S]         [C]         [B]         [B]         []          []          []          []          
[A, B, S, C][A, B, S, C][B, S, C]   [S]         [A, C]      [C]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [S]         [S]         []          [A]         []          []          
[A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [S]         [S]         []          []          [A]         []          
[A, B, C, S][A, B, C, S][S, C]      [B, C]      [B, S]      [S]         [C]         [B]         [B]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->AC }, { B-->SA }, { B-->SS }]
S[{ S-->AS }, { S-->CA }, { S-->BA }, { S-->SB }, { S-->AA }, { S-->CS }, { S-->AB }]
C[{ C-->CB }]

word='bbaabaabba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[S]   [A]   []    []    []    []    []    []    []    []    
[B, S][S]   [A]   []    []    []    []    []    []    []    
[B, S][B, S][S]   [A]   []    []    []    []    []    []    
[B, S][B, S][B, S][S]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [A]   []    []    []    []    
[B, S][B, S][B, S][B, S][B, S][S]   [A]   []    []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][S]   [A]   []    []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [A]   []    
[B, S][B, S][B, S][B, S][B, S][B, S][B, S][B, S][S]   [A]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->SB }]
S[{ S-->AS }, { S-->a }, { S-->CC }, { S-->b }]
C[{ C-->CA }, { C-->a }, { C-->CS }]

word='bbaabaabba'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [S]      []       []       []       []       []       []       []       []       
[S]      [A]      [S, C]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S, C][S, C]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S, C][A, C]   [S]      []       []       []       []       []       
[A, S]   [A, S]   [A, S, C][C, S]   [A]      [S, C]   []       []       []       []       
[A, S]   [A, S]   [A, S, C][A, C, S][A, S]   [A, S, C][S, C]   []       []       []       
[A, S]   [A, S]   [A, C, S][A, C, S][A, S]   [A, S, C][A, C]   [S]      []       []       
[A, S]   [A, S]   [A, C, S][A, C, S][A, S]   [A, S, C][C, S]   [A]      [S]      []       
[A, S]   [A, S]   [A, C, S][A, C, S][A, S]   [A, S, C][A, C, S][S]      [A]      [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
C[{ C-->CA }, { C-->BA }, { C-->CB }, { C-->a }, { C-->AA }]
S[{ S-->SS }, { S-->b }]

word='babbabbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [S]   []    []    []    []    []    []    
[]    []    []    []    [A, C][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    [S]   [S]   []    []    []    
[]    []    []    []    []    []    []    [A, C][]    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->CB }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->BB }]
S[{ S-->SA }, { S-->SS }, { S-->b }]

word='babbabbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [C]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    [S]   [S]   []    []    []    []    []    []    
[]    []    [A, S][A]   [C]   []    []    []    []    []    
[]    []    [S]   []    []    [S]   []    []    []    []    
[]    []    [S]   []    []    [S]   [S]   []    []    []    
[]    []    [A, S][]    []    [A, S][A]   [C]   []    []    
[]    []    [S]   []    []    [S]   []    []    [S]   []    
[]    []    [A, S][]    []    [A, S][]    []    [A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BS }]
B[{ B-->BC }, { B-->AC }, { B-->AS }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }]
C[{ C-->AA }, { C-->b }]
S[{ S-->SS }]

word='babbabbaba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [B][C][] [] [] [] [] [] [] 
[] [B][] [C][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [B][C][] [] [] [] 
[] [] [] [] [B][] [C][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [B][C][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AC }]
B[{ B-->AS }]
S[{ S-->CA }, { S-->CB }, { S-->a }, { S-->b }, { S-->AB }, { S-->BC }]
C[{ C-->SA }, { C-->BS }]

word='babbabbaba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[A, C]      [C]         [A, S]      []          []          []          []          []          []          []          
[B, S]      [S]         [B, C]      [A, S]      []          []          []          []          []          []          
[B, S, C]   [S]         [S, C]      [B]         [S]         []          []          []          []          []          
[A, B, S, C][S, C]      [A, C, S]   [A, C]      [C]         [A, S]      []          []          []          []          
[A, B, S, C][S, C]      [B, S, C]   [B, S]      [S]         [B, C]      [A, S]      []          []          []          
[A, B, C, S][S, C]      [A, B, S, C][B, S, C]   [S]         [S, C]      [B]         [S]         []          []          
[A, B, C, S][S, C]      [A, B, C, S][A, B, S, C][C, S]      [A, C, S]   [A, C]      [C]         [A, S]      []          
[A, B, C, S][S, C]      [A, B, S, C][B, C, S]   [S]         [B, S]      [B]         []          [B]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CB }]
B[{ B-->AS }, { B-->CA }, { B-->a }]
C[{ C-->a }, { C-->AA }]
S[{ S-->BA }, { S-->b }]

word='babbabbaba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [B, C][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [B, C][]    []    
[]    []    []    []    []    []    []    []    [S]   []    
[]    []    []    []    []    []    []    []    []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SB }]
B[{ B-->b }]
C[{ C-->CA }, { C-->BA }, { C-->a }, { C-->BB }, { C-->b }]
S[{ S-->AB }]

word='abbbaaaaaa'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [B, C][]    []    []    []    []    []    []    []    
[A]   [C]   [B, C][]    []    []    []    []    []    []    
[S]   []    [C]   [B, C][]    []    []    []    []    []    
[]    []    [C]   [C]   [A, C][]    []    []    []    []    
[]    []    [C]   [C]   [C]   [A, C][]    []    []    []    
[]    []    [C]   [C]   [C]   [C]   [A, C][]    []    []    
[]    []    [C]   [C]   [C]   [C]   [C]   [A, C][]    []    
[]    []    [C]   [C]   [C]   [C]   [C]   [C]   [A, C][]    
[]    []    [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->BS }, { B-->AS }, { B-->SA }, { B-->a }, { B-->AA }, { B-->SC }]
C[{ C-->BB }, { C-->CC }, { C-->CS }, { C-->b }]
S[{ S-->AC }, { S-->SS }, { S-->AB }]

word='abbbaaaaaa'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[B, S]   [C]      [C]      []       []       []       []       []       []       []       
[B, S]   [C]      [C]      [C]      []       []       []       []       []       []       
[B, C]   []       []       []       [A, B]   []       []       []       []       []       
[B, C, S][C]      [C]      [C]      [B, C, S][A, B]   []       []       []       []       
[B, C, S][C]      [C]      [C]      [B, C, S][B, C, S][A, B]   []       []       []       
[B, C, S][C]      [C]      [C]      [B, C, S][B, C, S][B, C, S][A, B]   []       []       
[B, C, S][C]      [C]      [C]      [B, C, S][B, C, S][B, C, S][B, C, S][A, B]   []       
[B, C, S][C]      [C]      [C]      [B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->BS }]
B[{ B-->AB }, { B-->AS }, { B-->CA }, { B-->SC }]
C[{ C-->CB }, { C-->a }, { C-->b }]
S[{ S-->BC }]

word='abbbaaaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CB }]
B[{ B-->b }, { B-->a }]
C[{ C-->AS }, { C-->CA }, { C-->SS }, { C-->SC }, { C-->CS }]
S[{ S-->BS }]

word='abbbaaaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [A, B][]    []    []    []    []    
[]    []    []    []    [A]   [A, B][]    []    []    []    
[]    []    []    []    [A]   [A]   [A, B][]    []    []    
[]    []    []    []    [A]   [A]   [A]   [A, B][]    []    
[]    []    []    []    [A]   [A]   [A]   [A]   [A, B][]    
[]    []    []    []    [A]   [A]   [A]   [A]   [A]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->BB }]
B[{ B-->b }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->CC }, { S-->BC }]

word='abbbaaaaaa'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[A, S][A]   [B]   []    []    []    []    []    []    []    
[]    []    [A]   [B]   []    []    []    []    []    []    
[]    []    [A]   []    [A, S][]    []    []    []    []    
[]    []    [A]   []    [A, S][A, S][]    []    []    []    
[]    []    [A]   []    [A, S][A, S][A, S][]    []    []    
[]    []    [A]   []    [A, S][A, S][A, S][A, S][]    []    
[]    []    [A]   []    [A, S][A, S][A, S][A, S][A, S][]    
[]    []    [A]   []    [A, S][A, S][A, S][A, S][A, S][A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SS }, { A-->CC }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->AC }, { B-->SA }, { B-->CS }]
C[{ C-->a }, { C-->b }]
S[{ S-->CB }, { S-->SB }, { S-->b }]

word='babaabbbaa'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[A, B]   [A, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, B]   [C, S]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [A, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [C, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [C, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [C, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->AC }, { B-->SB }]
C[{ C-->AS }, { C-->a }, { C-->CC }]
S[{ S-->AA }, { S-->AB }]

word='babaabbbaa'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [A, C]   []       []       []       []       []       []       []       []       
[]       [S]      [B]      []       []       []       []       []       []       []       
[]       []       []       [A, C]   []       []       []       []       []       []       
[]       [B]      []       [B, C, S][A, C]   []       []       []       []       []       
[]       [B]      []       [B, C]   [S]      [B]      []       []       []       []       
[]       []       []       [S]      [B]      []       [B]      []       []       []       
[]       [B]      []       [B]      []       []       []       [B]      []       []       
[]       []       []       []       []       []       []       []       [A, C]   []       
[]       []       []       []       []       []       []       []       [B, C, S][A, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->b }]
C[{ C-->a }, { C-->AA }]
S[{ S-->AC }, { S-->SA }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }, { S-->BS }]

word='babaabbbaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[S]      [A]      [B, S]   []       []       []       []       []       []       []       
[S]      [A, C, S][S]      [A, C]   []       []       []       []       []       []       
[S]      [A, C, S][S]      [A, C, S][A, C]   []       []       []       []       []       
[S]      [A, C, S][S]      [A, C, S][A]      [B, S]   []       []       []       []       
[S]      [A, C, S][S]      [A, C, S][A]      [S]      [B, S]   []       []       []       
[S]      [A, C, S][S]      [A, C, S][A]      [S]      [S]      [B, S]   []       []       
[S]      [A, C, S][S]      [A, C, S][A, C, S][S]      [S]      [S]      [A, C]   []       
[S]      [A, C, S][S]      [A, C, S][A, C, S][S]      [S]      [S]      [A, C, S][A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }, { B-->SC }]
C[{ C-->a }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->AA }, { S-->CC }, { S-->b }]

word='babaabbbaa'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[B]   [C, S][]    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[B]   [B]   [B]   [C, S][]    []    []    []    []    []    
[B]   [B]   [B]   [B, S][C, S][]    []    []    []    []    
[]    []    []    []    []    [S]   []    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [C, S][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, S][C, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AC }, { B-->BA }, { B-->CB }, { B-->SS }]
S[{ S-->AS }, { S-->a }, { S-->BB }, { S-->b }, { S-->BS }]
C[{ C-->CA }, { C-->a }, { C-->b }, { C-->BC }]

word='babaabbbaa'
setV=setV
[S, C]   []       []       []       []       []       []       []       []       []       
[B]      [S, C]   []       []       []       []       []       []       []       []       
[B, S, C][B]      [S, C]   []       []       []       []       []       []       []       
[B, S, C][B, S, C][B]      [S, C]   []       []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B]      [S, C]   []       []       []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B]      [S, C]   []       []       []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B]      [S, C]   []       []       []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B]      [S, C]   []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B]      [S, C]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][B]      [S, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->a }]
C[{ C-->CA }, { C-->CB }, { C-->a }]
S[{ S-->b }]

word='babaabaaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B, C][]    []    []    []    []    []    []    []    
[]    [B, C][B, S][]    []    []    []    []    []    []    
[]    [C]   []    [B, C][]    []    []    []    []    []    
[]    [C]   []    [C]   [B, C][]    []    []    []    []    
[]    [C]   []    [C]   [B, C][B, S][]    []    []    []    
[]    [C]   []    [C]   [C]   []    [B, C][]    []    []    
[]    [C]   []    [C]   [C]   []    [C]   [B, C][]    []    
[]    [C]   []    [C]   [C]   []    [C]   [B, C][B, S][]    
[]    [C]   []    [C]   [C]   []    [C]   [C]   []    [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->AC }, { A-->SB }]
B[{ B-->b }, { B-->a }]
C[{ C-->AS }, { C-->SS }, { C-->CC }]
S[{ S-->AB }, { S-->BC }]

word='babaabaaba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[A, C, S][A, S]   [A, B]   []       []       []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [A, B]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, S]   [A, B]   []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, B]   []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, B]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, B]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, B]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, S]   [A, B]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AS }]
C[{ C-->a }, { C-->BS }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->a }, { S-->BB }, { S-->SS }, { S-->BC }]

word='babaabaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C, S][C, S][]    []    []    []    []    []    []    []    
[C, S][S]   [B]   []    []    []    []    []    []    []    
[S, C][S]   [C, S][C, S][]    []    []    []    []    []    
[S, C][S]   [C, S][S]   [C, S][]    []    []    []    []    
[S, C][S]   [C, S][S]   [S]   [B]   []    []    []    []    
[S, C][S]   [C, S][S]   [S]   [C, S][C, S][]    []    []    
[S, C][S]   [C, S][S]   [S]   [C, S][S]   [C, S][]    []    
[S, C][S]   [C, S][S]   [S]   [C, S][S]   [S]   [B]   []    
[S, C][S]   [C, S][S]   [S]   [C, S][S]   [S]   [C, S][C, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AC }, { B-->AS }, { B-->CB }, { B-->BB }, { B-->SS }, { B-->SC }]
S[{ S-->BA }, { S-->a }, { S-->CS }, { S-->BS }]

word='babaabaaba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[B][S][] [] [] [] [] [] [] [] 
[S][] [A][] [] [] [] [] [] [] 
[B][] [B][S][] [] [] [] [] [] 
[S][B][S][B][S][] [] [] [] [] 
[B][S][B][S][] [A][] [] [] [] 
[S][B][S][B][] [B][S][] [] [] 
[B][S][B][S][B][S][B][S][] [] 
[S][B][S][B][S][B][S][] [A][] 
[B][S][B][S][B][S][B][] [B][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->BS }, { A-->CB }, { A-->SB }]
B[{ B-->BC }, { B-->SA }, { B-->BA }, { B-->a }, { B-->BB }]
S[{ S-->AC }, { S-->CS }, { S-->b }]
C[{ C-->CA }, { C-->AA }]

word='babaabaaba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[A]         [B]         []          []          []          []          []          []          []          []          
[B]         [A]         [S]         []          []          []          []          []          []          []          
[A, B, C]   [B]         [A]         [B]         []          []          []          []          []          []          
[A, B, C]   [B]         [A]         [B]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B, C]   [A, B]      [A]         [S]         []          []          []          []          
[A, B, C, S][A, B]      [A, B, C]   [B]         [B]         [A]         [B]         []          []          []          
[A, B, C, S][A, B]      [A, B, C]   [B]         [B]         [A]         [B]         [B]         []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [A, B]      [A]         [S]         []          
[A, B, C, S][A, B, C]   [A, B, C, S][A, B]      [A, B]      [A, B, C]   [B]         [B]         [A]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->SA }]
B[{ B-->b }, { B-->CB }, { B-->a }, { B-->SS }, { B-->SC }]
S[{ S-->BA }, { S-->a }, { S-->BB }, { S-->CC }]

word='ababbaaaaa'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, B]   []       []       []       []       []       []       []       []       
[A, B, S][A, S]   [B, S]   []       []       []       []       []       []       []       
[A, B, S][A, S]   [A, S]   [A, B]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, S]   [A, B]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [B, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [B, S]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, S]   [B, S]   [B, S]   [B, S]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->a }]
S[{ S-->SA }, { S-->a }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->CB }, { C-->SB }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->AB }]

word='ababbaaaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[S]   [S]   []    []    []    []    []    []    []    []    
[S, C][S, C][B, S][]    []    []    []    []    []    []    
[S, C][S, C][S]   [S]   []    []    []    []    []    []    
[S, C][S, C][S]   [S]   [S]   []    []    []    []    []    
[S, C][S, C][S, C][S, C][S, C][B, S][]    []    []    []    
[S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    []    []    
[C, S][S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    []    
[C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][B, S][]    
[C, S][C, S][C, S][S, C][S, C][S, C][S, C][S, C][S, C][B, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->CB }]
B[{ B-->SA }, { B-->SS }]
C[{ C-->a }, { C-->b }]
S[{ S-->AA }, { S-->SC }, { S-->AB }, { S-->BS }]

word='ababbaaaaa'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[]       []       [A, C]   []       []       []       []       []       []       []       
[]       []       []       [C]      []       []       []       []       []       []       
[]       []       []       []       [C]      []       []       []       []       []       
[]       []       []       []       []       [A, C]   []       []       []       []       
[]       []       []       []       [A]      [S]      [A, C]   []       []       []       
[S]      [A]      [S]      [A]      [A, S]   [A, B, S][S]      [A, C]   []       []       
[A, B, S][A, S]   [A, B, S][A, S]   [A, B, S][A, B, S][A, B, S][S]      [A, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][S]      [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->b }, { B-->AA }]
S[{ S-->SB }, { S-->a }]
C[{ C-->CA }, { C-->BA }, { C-->SC }, { C-->b }, { C-->BC }]

word='ababbaaaaa'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [B, C]      []          []          []          []          []          []          []          []          
[A, C]      [C]         [A, S]      []          []          []          []          []          []          []          
[A, C]      [C]         [S, C]      [B, C]      []          []          []          []          []          []          
[A, C]      [C]         [C, S]      [C]         [B, C]      []          []          []          []          []          
[B, C]      [C]         [A, C]      [C]         [C]         [A, S]      []          []          []          []          
[A, B, C, S][C]         [B, C, S]   [C]         [C]         [A, B]      [A, S]      []          []          []          
[A, B, C, S][C]         [A, B, C, S][C]         [C]         [B, S, C]   [A, B]      [A, S]      []          []          
[A, B, C, S][C]         [A, B, C, S][C]         [C]         [A, B, S, C][B, S, C]   [A, B]      [A, S]      []          
[A, B, C, S][C]         [A, B, C, S][C]         [C]         [A, B, S, C][A, B, S, C][B, S, C]   [A, B]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->SB }]
B[{ B-->b }, { B-->CS }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->AA }, { S-->CC }, { S-->BS }]
C[{ C-->AC }, { C-->b }]

word='ababbaaaaa'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [B, C]   []       []       []       []       []       []       []       []       
[A]      [B, S]   [S]      []       []       []       []       []       []       []       
[C, S]   [A]      [A]      [B, C]   []       []       []       []       []       []       
[A, S, C][S, C]   [C]      [S]      [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B]   [B, S]   [B, S]   [S]      []       []       []       []       
[A, B, S][A, B, S][A, S]   [B, S]   [S]      []       [S]      []       []       []       
[A, S]   [A, S]   [A]      [S]      []       []       []       [S]      []       []       
[A, S]   [A]      [A]      []       []       []       []       []       [S]      []       
[A, S]   [A]      [A]      []       []       []       []       []       []       [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }]
B[{ B-->b }]
C[{ C-->a }, { C-->BC }]
S[{ S-->AC }, { S-->CA }, { S-->AA }, { S-->SS }, { S-->CC }, { S-->SC }, { S-->b }]

word='babbbaaaba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C, S][C]   []    []    []    []    []    []    []    []    
[S]   []    [B, S][]    []    []    []    []    []    []    
[S]   []    [S]   [B, S][]    []    []    []    []    []    
[S]   []    [S]   [S]   [B, S][]    []    []    []    []    
[S]   [S]   [C, S][C, S][C, S][C]   []    []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [C]   []    []    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   []    [B, S][]    
[S]   [S]   [S]   [S]   [S]   [S]   [S]   [S]   [C, S][C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AC }]
B[{ B-->b }, { B-->BS }, { B-->a }, { B-->AA }]
C[{ C-->CB }, { C-->BB }]
S[{ S-->CA }, { S-->BC }]

word='babbbaaaba'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[S, C]   [C]      [B]      []       []       []       []       []       []       []       
[B, C, S][C, S]   [C]      [B]      []       []       []       []       []       []       
[B, C, S][B, C, S][S, C]   [C]      [B]      []       []       []       []       []       
[B, S, C][B, C, S][B, S, C][S, C]   [C]      [B]      []       []       []       []       
[B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [C]      [B]      []       []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [C]      [B]      []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [C]      [B]      []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, S, C][S, C]   [C]      [B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->SC }]
B[{ B-->b }, { B-->CB }]
C[{ C-->BA }, { C-->a }, { C-->CC }, { C-->AB }, { C-->BC }]
S[{ S-->AS }, { S-->CS }]

word='babbbaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[B, C][B, C][B]   []    []    []    []    []    []    []    
[B]   [B]   []    [B]   []    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [A, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [A, C][A, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [A, C][A, C][A, C][]    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }]
C[{ C-->AC }, { C-->BA }, { C-->a }, { C-->SS }, { C-->b }, { C-->BC }, { C-->BS }]
S[{ S-->AS }, { S-->SB }, { S-->AA }]

word='babbbaaaba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, C]   [C]      []       []       []       []       []       []       []       []       
[A, S, C][A]      [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C]   []       []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   []       []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A]      [C]      []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][C]      [A]      [C]      []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, S, C][A, S]   [C, S]   [A]      [A, C]   []       
[A, S, C][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, C]   [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->a }]
S[{ S-->BB }]
C[{ C-->CA }, { C-->SB }, { C-->SS }]

word='babbbaaaba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [A, B][]    []    []    []    []    []    []    []    
[C]   [S]   [B]   []    []    []    []    []    []    []    
[C]   [C]   [S]   [B]   []    []    []    []    []    []    
[]    [C]   [C]   [S]   [B]   []    []    []    []    []    
[]    [C]   [C]   [C]   [S]   [A, B][]    []    []    []    
[]    [C]   [C]   [C]   [C]   [S]   [A, B][]    []    []    
[]    [C]   [C]   [C]   [C]   [C]   [S]   [A, B][]    []    
[]    []    []    []    []    [C]   [C]   [S]   [B]   []    
[]    []    []    []    []    [C]   [C]   [C]   [S]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }]
B[{ B-->b }, { B-->BS }, { B-->a }]
S[{ S-->AC }, { S-->AS }, { S-->AA }, { S-->CC }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }]
C[{ C-->CA }, { C-->SS }]

word='baabbaabbb'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [B]   [B, S][]    []    []    []    []    []    
[]    []    [B]   [B, C][B, S][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [B]   [B, S][]    []    
[]    []    []    []    []    []    [B]   [B, C][B, S][]    
[]    []    []    []    []    []    [B]   [B, S][B, C][B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }, { B-->a }]
S[{ S-->AS }, { S-->CS }, { S-->b }]
C[{ C-->BB }, { C-->CC }]

word='baabbaabbb'
setV=setV
[B, S]   []       []       []       []       []       []       []       []       []       
[C]      [B]      []       []       []       []       []       []       []       []       
[]       [C]      [B]      []       []       []       []       []       []       []       
[B, C]   [S, C]   [B, C]   [B, S]   []       []       []       []       []       []       
[B, S, C][B, C, S][B, C, S][B, C]   [B, S]   []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [B]      []       []       []       []       
[C]      [C]      [C]      [C]      []       [C]      [B]      []       []       []       
[B, C, S][B, S, C][B, C, S][B, C, S][B, C]   [C, S]   [B, C]   [B, S]   []       []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B, S]   []       
[B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C, S][B, C]   [B, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->CA }, { A-->CB }]
B[{ B-->SS }]
C[{ C-->AS }, { C-->a }, { C-->BB }, { C-->b }]
S[{ S-->a }, { S-->BS }]

word='baabbaabbb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[A]   [B]   [C, S][]    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [B]   [C, S][]    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[]    []    []    []    []    []    []    []    [C]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->AB }, { A-->BS }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->AC }, { B-->SB }, { B-->SC }]
S[{ S-->b }]
C[{ C-->AS }, { C-->CA }, { C-->CS }]

word='baabbaabbb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[A]      [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[B]      [B]      [C]      [S]      []       []       []       []       []       []       
[A, B]   [A, B]   [C]      [A]      [S]      []       []       []       []       []       
[A, B]   [A, B]   [C]      [A]      [A]      [A]      []       []       []       []       
[A, B]   [A, B]   [C]      []       []       []       [A]      []       []       []       
[A, B, C][A, B, C][A, C]   [A, B]   [B]      [B]      [C]      [S]      []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [C]      [A]      [S]      []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][B, C]   [A, C]   [A]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->SC }, { A-->b }, { A-->BC }]
B[{ B-->CS }]
C[{ C-->AS }, { C-->CA }, { C-->CB }, { C-->AA }, { C-->SS }, { C-->AB }]

word='baabbaabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][C][A][] [] [] [] [] [] [] 
[C][C][C][A][] [] [] [] [] [] 
[C][C][C][C][A][] [] [] [] [] 
[C][C][C][C][C][A][] [] [] [] 
[C][C][C][C][C][C][A][] [] [] 
[C][C][C][C][C][C][C][A][] [] 
[C][C][C][C][C][C][C][C][A][] 
[C][C][C][C][C][C][C][C][C][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->BC }, { A-->CA }]
B[{ B-->b }, { B-->AS }, { B-->a }, { B-->SC }]
C[{ C-->BA }, { C-->SS }, { C-->b }]
S[{ S-->AC }, { S-->BB }]

word='bbabababba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, S]      [B, C]      []          []          []          []          []          []          []          []          
[]          [S]         [B]         []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          []          []          []          []          
[A, S]      [C, S]      []          [S]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, S]      [C, S]      []          [S]         [B]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, S]      [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [B, C, S]   [A, S]      [B, C]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, C, S]   [A, B, S]   [B, C, S]   []          [S]         [B]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AC }, { A-->SB }]
B[{ B-->BC }, { B-->CB }, { B-->SC }]
S[{ S-->BA }, { S-->a }, { S-->b }, { S-->AB }]

word='bbabababba'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[A]   [A]   [A, S][]    []    []    []    []    []    []    
[A]   [A]   [A]   [A, S][]    []    []    []    []    []    
[A]   [A]   [A]   [A]   [A, S][]    []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A, S][]    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    []    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S][]    
[A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->b }, { A-->BA }]
B[{ B-->AS }, { B-->CS }]
C[{ C-->AA }, { C-->b }]
S[{ S-->BB }]

word='bbabababba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [A, C][]    []    []    []    []    []    []    []    
[]    [C]   [A]   []    []    []    []    []    []    []    
[]    []    [C]   [A, C][]    []    []    []    []    []    
[]    []    []    [C]   [A]   []    []    []    []    []    
[]    []    []    []    [C]   [A, C][]    []    []    []    
[]    []    []    []    []    [C]   [A]   []    []    []    
[]    []    []    []    []    []    [C]   [A, C][]    []    
[]    []    []    []    []    []    []    [C]   [A, C][]    
[]    []    []    []    []    []    []    []    [C]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->AC }, { B-->a }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->BC }]
C[{ C-->SA }]

word='bbabababba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [B, S][]    []    []    []    []    []    []    
[]    [B]   [C]   [A]   []    []    []    []    []    []    
[]    []    [B]   []    [B, S][]    []    []    []    []    
[]    [S]   []    [B]   [C]   [A]   []    []    []    []    
[]    []    []    []    [B]   []    [B, S][]    []    []    
[]    []    []    [S]   []    [B]   [C]   [A]   []    []    
[]    []    [S]   [C]   [B]   []    [S]   []    [A]   []    
[]    []    []    [B]   []    []    []    []    []    [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SA }]
B[{ B-->AS }]
S[{ S-->a }, { S-->BB }, { S-->SS }, { S-->CS }, { S-->b }, { S-->BC }]
C[{ C-->BA }]

word='bbabababba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[S][S][S][] [] [] [] [] [] [] 
[S][S][S][S][] [] [] [] [] [] 
[S][S][S][S][S][] [] [] [] [] 
[S][S][S][S][S][S][] [] [] [] 
[S][S][S][S][S][S][S][] [] [] 
[S][S][S][S][S][S][S][S][] [] 
[S][S][S][S][S][S][S][S][S][] 
[S][S][S][S][S][S][S][S][S][S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CA }]
B[{ B-->b }, { B-->BC }, { B-->AC }, { B-->BA }, { B-->a }]
C[{ C-->a }, { C-->AB }]
S[{ S-->SB }]

word='bbbabababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    [B]   [B, C][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    [B]   [B, C][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    [B]   [B, C][]    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->b }, { A-->CB }]
S[{ S-->a }, { S-->CC }]
C[{ C-->AC }, { C-->SB }, { C-->AA }, { C-->SS }, { C-->b }]

word='bbbabababb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S, C]   [A, C]   []       []       []       []       []       []       []       []       
[A, S, C][S, C]   [A, C]   []       []       []       []       []       []       []       
[A, C, S][A, C]   [A]      [S]      []       []       []       []       []       []       
[A, S, C][S, C]   [C]      []       [A, C]   []       []       []       []       []       
[A, C, S][A, C, S][A, C]   []       [A]      [S]      []       []       []       []       
[A, S, C][A, S, C][C, S]   []       [C]      []       [A, C]   []       []       []       
[A, S, C][A, S, C][A, C]   []       [A, C]   []       [A]      [S]      []       []       
[A, C, S][A, S, C][S, C]   [C]      [C, S]   []       [C]      []       [A, C]   []       
[A, C, S][A, C, S][A, C, S][C, S]   [A, S, C][C]      [S, C]   [C]      [S, C]   [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CA }, { B-->a }]
C[{ C-->BA }, { C-->SS }, { C-->AB }]
S[{ S-->BC }]

word='bbbabababb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->BS }, { A-->BA }]
B[{ B-->SC }]
S[{ S-->SA }, { S-->CB }, { S-->a }, { S-->b }, { S-->BC }]
C[{ C-->a }, { C-->BB }]

word='bbbabababb'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[S]      [S]      [A, S]   []       []       []       []       []       []       []       
[B]      [B]      [B]      [S, C]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       
[B, C]   [B, C]   [B, C]   [B, S]   [B]      [S, C]   []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][B, C]   [B, S]   [B]      [S, C]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BS }]
B[{ B-->b }, { B-->AB }, { B-->SA }]
S[{ S-->AS }, { S-->a }, { S-->SC }, { S-->b }]
C[{ C-->CA }, { C-->AA }, { C-->BB }, { C-->CS }]

word='bbbabababb'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, C]      [B, S]      []          []          []          []          []          []          []          []          
[B, S, C]   [A, C]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][B, S, C]   [A, B]      [A, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][B, S]      [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [A, B]      [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S]      [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C]   [A, B]      [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][B, S]      [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->SC }, { B-->CS }]
C[{ C-->AS }, { C-->SB }, { C-->CC }, { C-->b }]
S[{ S-->CA }, { S-->BA }]

word='aabbaaaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    []    [B, C][]    []    []    []    []    []    []    
[]    []    [C]   [B, C][]    []    []    []    []    []    
[]    []    []    []    [B]   []    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B, C][]    
[]    []    []    []    []    []    []    []    [C]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }]
B[{ B-->b }, { B-->BS }, { B-->AS }, { B-->SA }, { B-->CB }, { B-->a }, { B-->CC }]
S[{ S-->SC }, { S-->BC }]
C[{ C-->AC }]

word='aabbaaaabb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [B][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [B][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [] [] [B][] [] [] [] 
[] [] [] [] [] [] [B][] [] [] 
[] [] [] [] [] [] [] [B][] [] 
[] [] [] [] [] [] [] [] [B][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->CC }, { A-->BS }, { A-->AS }]
B[{ B-->AB }, { B-->CS }]
C[{ C-->a }, { C-->b }]

word='aabbaaaabb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[A]   [A, C][]    []    []    []    []    []    []    []    
[]    [A]   [C]   []    []    []    []    []    []    []    
[]    []    [A]   [C]   []    []    []    []    []    []    
[]    []    []    [A]   [A, C][]    []    []    []    []    
[]    []    []    []    [A]   [A, C][]    []    []    []    
[]    []    []    []    []    [A]   [A, C][]    []    []    
[]    []    []    []    []    []    [A]   [A, C][]    []    
[]    []    []    []    []    []    []    [A]   [C]   []    
[]    []    []    []    []    []    []    []    [A]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AB }, { B-->SS }, { B-->CC }]
C[{ C-->CA }, { C-->a }, { C-->b }]
S[{ S-->AA }, { S-->BC }]

word='aabbaaaabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[B][C][] [] [] [] [] [] [] [] 
[S][B][C][] [] [] [] [] [] [] 
[] [S][B][C][] [] [] [] [] [] 
[] [] [S][B][C][] [] [] [] [] 
[B][] [] [S][B][C][] [] [] [] 
[S][B][] [] [S][B][C][] [] [] 
[] [S][B][] [] [S][B][C][] [] 
[] [] [S][B][] [] [S][B][C][] 
[B][] [] [S][B][] [] [S][B][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->SA }]
S[{ S-->CB }, { S-->a }, { S-->b }]
C[{ C-->SB }, { C-->a }, { C-->SS }, { C-->CC }, { C-->SC }, { C-->AB }]

word='aabbaaaabb'
setV=setV
[S, C][]    []    []    []    []    []    []    []    []    
[C]   [S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [S]   []    []    []    []    []    []    []    
[C]   [C]   [C]   [S]   []    []    []    []    []    []    
[C]   [C]   [C]   [C]   [S, C][]    []    []    []    []    
[C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [S, C][]    []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S]   []    
[C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }]
B[{ B-->AB }, { B-->BC }, { B-->CA }, { B-->CC }]
S[{ S-->AC }, { S-->SA }, { S-->SC }, { S-->b }]
C[{ C-->AS }]

word='abbabbabba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [S]         []          []          []          []          []          []          []          []          
[]          [A]         [S]         []          []          []          []          []          []          []          
[]          [A]         [S]         [A]         []          []          []          []          []          []          
[B, S, C]   [A, S, C]   [A, S]      [C]         [S]         []          []          []          []          []          
[A, B, S, C][A, C, S]   [A, S, C]   []          [A]         [S]         []          []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][]          [A]         [S]         [A]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][B, S, C]   [A, S, C]   [A, S]      [C]         [S]         []          []          
[A, B, S, C][A, B, C, S][A, B, S, C][A, B, S, C][A, S, C]   [A, S, C]   []          [A]         [S]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][]          [A]         [S]         [A]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->SC }, { A-->b }, { A-->AC }]
B[{ B-->CC }]
C[{ C-->CA }, { C-->BA }, { C-->CS }, { C-->BC }]

word='abbabbabba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->BS }, { B-->CB }, { B-->SC }]
S[{ S-->SB }, { S-->BB }]
C[{ C-->CA }, { C-->SS }, { C-->AB }]

word='abbabbabba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }]
B[{ B-->BC }, { B-->AC }, { B-->SA }, { B-->BB }, { B-->SS }, { B-->CS }]
S[{ S-->a }, { S-->AA }, { S-->SC }]
C[{ C-->CC }, { C-->b }]

word='abbabbabba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[S][C][C][] [] [] [] [] [] [] 
[B][B][B][S][] [] [] [] [] [] 
[B][B][B][S][C][] [] [] [] [] 
[B][B][B][S][C][C][] [] [] [] 
[B][B][B][B][B][B][S][] [] [] 
[B][B][B][B][B][B][S][C][] [] 
[B][B][B][B][B][B][S][C][C][] 
[B][B][B][B][B][B][B][B][B][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
S[{ S-->CB }, { S-->SS }, { S-->b }, { S-->BC }]
C[{ C-->AS }, { C-->BB }]

word='abbabbabba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[C]   [S, C][A, S][]    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    [C]   [A, S][]    []    []    []    []    
[]    []    []    [C]   [S, C][A, S][]    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    [C]   [A, S][]    []    
[]    []    []    []    []    []    [C]   [S, C][A, S][]    
[]    []    []    []    []    []    []    []    []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->AB }, { A-->AC }, { A-->BA }, { A-->CB }]
B[{ B-->BS }]
S[{ S-->BB }, { S-->SC }]

word='baaabbabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CB }]
B[{ B-->AS }, { B-->CA }, { B-->SB }]
S[{ S-->BA }, { S-->a }, { S-->b }]
C[{ C-->AB }]

word='baaabbabab'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->AC }, { A-->SA }, { A-->CA }, { A-->CB }]
B[{ B-->a }]
C[{ C-->AS }, { C-->a }, { C-->b }]
S[{ S-->SB }, { S-->CC }]

word='baaabbabab'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[A, S]   [B, C]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [B, C]   []       []       []       []       []       []       []       
[A, S, C][A, S]   [A, S]   [B, C]   []       []       []       []       []       []       
[A, C, S][A, C]   [A]      [S]      [C]      []       []       []       []       []       
[A, C, S][A, C, S][A, C]   []       [S]      [C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A]      [A, S]   [A, S]   [B, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A]      [A]      [A]      [S]      [C]      []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C]   [A, S]   [A, S]   [B, C]   []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][A]      [A]      [S]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BS }]
B[{ B-->AC }, { B-->SA }, { B-->BA }]
S[{ S-->a }, { S-->CS }, { S-->b }]
C[{ C-->CC }]

word='baaabbabab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    [B]   [A, S][]    []    []    []    []    
[]    []    [B]   [A, B][A, B][A, S][]    []    []    []    
[]    [B]   [A, B][A, B][A]   []    [S]   []    []    []    
[A, B][A, B][A, B][A, B][A]   []    [B]   [A, S][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    [S]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A]   []    [B]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BB }, { B-->CS }]
S[{ S-->a }, { S-->b }]
C[{ C-->AS }, { C-->CB }]

word='baaabbabab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[B]   []    [S]   []    []    []    []    []    []    []    
[]    []    []    [S]   []    []    []    []    []    []    
[]    []    []    []    [A, S][]    []    []    []    []    
[]    []    []    []    [C]   [A, S][]    []    []    []    
[]    []    []    []    [B]   [C]   [S]   []    []    []    
[]    []    []    []    []    [B]   []    [A, S][]    []    
[]    []    []    []    []    []    []    [C]   [S]   []    
[]    []    []    []    [B]   [C]   []    [B]   []    [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->SA }, { B-->CB }, { B-->a }]
C[{ C-->CA }, { C-->SB }, { C-->a }]
S[{ S-->AC }, { S-->BB }, { S-->SS }, { S-->SC }, { S-->AB }]

word='abbabaabba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[C]      []       [A]      []       []       []       []       []       []       []       
[B]      []       [S]      [B, C]   []       []       []       []       []       []       
[B]      [S]      [B, S]   [C]      [A]      []       []       []       []       []       
[B, S]   [C, S]   [S, C]   [B]      [S]      [B, C]   []       []       []       []       
[B, S, C][B, C, S][B, S, C][B, S]   [S, C]   [B, S]   [B, C]   []       []       []       
[B, S, C][B, C, S][B, S, C][B, S]   [B, S, C][B]      [C]      [A]      []       []       
[B, S, C][B, S, C][B, S, C][B, S]   [B, S, C][]       [C]      []       [A]      []       
[B, S, C][B, C, S][B, S, C][B, S, C][B, S, C][B, S]   [B]      []       [S]      [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->b }]
B[{ B-->BC }, { B-->BS }]
C[{ C-->AC }, { C-->CA }, { C-->BA }, { C-->SB }, { C-->a }, { C-->AB }]
S[{ S-->CS }]

word='abbabaabba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][A][] [] [] [] [] [] [] [] 
[C][] [A][] [] [] [] [] [] [] 
[A][C][C][C][] [] [] [] [] [] 
[A][C][C][C][A][] [] [] [] [] 
[C][A][A][A][C][C][] [] [] [] 
[A][C][C][C][A][A][C][] [] [] 
[A][C][C][C][A][A][C][A][] [] 
[A][C][C][C][A][A][C][] [A][] 
[C][A][A][A][C][C][A][C][C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->SB }]
C[{ C-->CC }, { C-->SC }, { C-->b }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->AA }, { S-->BS }]

word='abbabaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[S]      [A, C]   []       []       []       []       []       []       []       []       
[S, C]   [C, S]   [A, C]   []       []       []       []       []       []       []       
[S]      [A, S]   [S]      [A]      []       []       []       []       []       []       
[A, C, S][A, C, S][A, S, C][S]      [A, C]   []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      [S]      [A]      []       []       []       []       
[A, S]   [A, S]   [A, S]   [S]      [A, S]   [S]      [A]      []       []       []       
[A, C, S][A, C, S][A, C, S][S, C]   [A, C, S][S, C]   [S]      [A, C]   []       []       
[A, C, S][A, C, S][A, C, S][S, C]   [A, C, S][S, C]   [S, C]   [C, S]   [A, C]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, S]   [S]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SS }, { A-->b }, { A-->SA }]
B[{ B-->AB }, { B-->BB }, { B-->SC }]
C[{ C-->AS }, { C-->CA }, { C-->a }, { C-->BC }]
S[{ S-->AC }, { S-->SB }, { S-->b }]

word='abbabaabba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[C]         [A, S]      []          []          []          []          []          []          []          []          
[C, S]      [A, C]      [A, S]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][C]         [A, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [A, B, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, B, C, S][C, S]      [A, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [C]         [A, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A, C]      [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->CA }, { B-->SC }]
C[{ C-->SA }, { C-->AA }]
S[{ S-->AC }, { S-->SS }, { S-->CS }, { S-->AB }, { S-->BC }]

word='abbabaabba'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[C]      [A]      []       []       []       []       []       []       []       []       
[B, S]   [C]      [A]      []       []       []       []       []       []       []       
[C, S]   [B, S]   [C]      [A]      []       []       []       []       []       []       
[B, S, C][C, S]   [B, S]   [C]      [A]      []       []       []       []       []       
[B, S, C][B, S, C][S, C]   [B, S]   [C]      [A]      []       []       []       []       
[B, S, C][B, S, C][B, S, C][S, C]   [B, S]   [C]      [A]      []       []       []       
[B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [B, S]   [C]      [A]      []       []       
[B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [B, S]   [C]      [A]      []       
[B, C, S][B, C, S][B, S, C][B, S, C][B, S, C][B, S, C][S, C]   [B, S]   [C]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->b }, { A-->AB }]
C[{ C-->CA }, { C-->a }]
S[{ S-->AC }, { S-->CB }, { S-->a }]

word='abaaabbbba'
setV=setV
[C, S][]    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[]    [S]   [C, S][]    []    []    []    []    []    []    
[C]   [A]   [A]   [C, S][]    []    []    []    []    []    
[]    [S]   [C, S][A]   [C, S][]    []    []    []    []    
[]    [S]   [C, S][A]   [C]   [A]   []    []    []    []    
[]    [S]   [C, S][A]   [C]   []    [A]   []    []    []    
[]    [S]   [C, S][A]   [C]   []    []    [A]   []    []    
[]    [S]   [C, S][A]   [C]   []    []    []    [A]   []    
[C]   [A]   [A]   [S]   []    []    []    []    [S]   [C, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->SB }]
B[{ B-->AC }, { B-->a }]
S[{ S-->a }]
C[{ C-->b }]

word='abaaabbbba'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[]    [A, C][]    []    []    []    []    []    []    []    
[]    [A]   [B, S][]    []    []    []    []    []    []    
[]    []    [A]   [B, S][]    []    []    []    []    []    
[]    []    []    [A]   [B, S][]    []    []    []    []    
[]    []    [A]   [B]   []    [A, C][]    []    []    []    
[]    []    [B]   []    [A]   [B]   [A, C][]    []    []    
[]    []    []    [A]   [B]   []    [B]   [A, C][]    []    
[]    []    [A]   [B]   []    []    []    [B]   [A, C][]    
[]    []    []    []    []    []    []    []    [A]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AB }]
B[{ B-->SB }, { B-->BB }, { B-->SC }]
C[{ C-->SA }, { C-->CA }, { C-->CS }, { C-->b }]
S[{ S-->AS }, { S-->b }]

word='abaaabbbba'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[S]         [C, S]      []          []          []          []          []          []          []          []          
[C]         [C]         [A]         []          []          []          []          []          []          []          
[C]         [C]         []          [A]         []          []          []          []          []          []          
[C]         [C]         []          []          [A]         []          []          []          []          []          
[C]         [C]         [S]         [S]         [S]         [C, S]      []          []          []          []          
[A, B, C]   [B, C]      [A, B]      [A, B]      [A, B]      [B, C]      [C, S]      []          []          []          
[A, B, C, S][B, C]      [A, B, S]   [A, B, S]   [A, B, S]   [B, C]      [B, C]      [C, S]      []          []          
[A, B, C, S][B, C]      [A, B, S]   [A, B, S]   [A, B, S]   [B, C]      [B, C]      [B, C]      [C, S]      []          
[A, B, C]   [B, C]      [A, B, C]   [A, B, C]   [A, B, C]   [B, C]      [B, C]      [B, C]      [C]         [A]         

validity=false
isWordProducible=false
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->CC }, { A-->b }, { A-->AS }, { A-->CA }, { A-->BA }]
B[{ B-->a }]
C[{ C-->AC }, { C-->SA }, { C-->CB }, { C-->SB }, { C-->a }, { C-->BB }]
S[{ S-->CS }, { S-->b }]

word='abaaabbbba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, S]   []       []       []       []       []       []       []       []       
[A, C]   [C]      [B, C]   []       []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [B, C]   []       []       []       []       []       []       
[A, C]   [A, C]   [A, C]   [A, C]   [B, C]   []       []       []       []       []       
[A, S, C][A, S, C][A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       
[A, C, S][A, C, S][A, C]   [A, C]   [A, C]   [A, C]   [A, S]   []       []       []       
[A, C, S][A, C, S][A, S, C][A, S, C][A, S, C][A, C, S][A, C]   [A, S]   []       []       
[A, C, S][A, C, S][A, C, S][A, S, C][A, S, C][A, C, S][A, C, S][A, C]   [A, S]   []       
[A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [A, C]   [C]      [B, C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->BS }]
B[{ B-->BA }]
S[{ S-->a }]
C[{ C-->SA }, { C-->CA }, { C-->SB }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->b }, { C-->BC }]

word='abaaabbbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][S][] [] [] [] [] [] [] 
[C][C][A][S][] [] [] [] [] [] 
[C][C][C][A][S][] [] [] [] [] 
[] [] [C][C][C][C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [C][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->AS }, { A-->SB }]
B[{ B-->SA }, { B-->a }, { B-->AA }]
C[{ C-->a }]
S[{ S-->AC }, { S-->BA }, { S-->CB }, { S-->SS }, { S-->BC }]

word='bbabaaaaab'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[A, S]   [S]      [B, C]   []       []       []       []       []       []       []       
[B]      [A, B]   [S]      [A]      []       []       []       []       []       []       
[A, B, S][A, B, S][A]      [S]      [B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B]   [A, S]   [B, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [B, C]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, S]   [B, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B]      [S]      [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->CB }]
B[{ B-->BC }, { B-->BA }, { B-->BB }]
S[{ S-->a }, { S-->b }]
C[{ C-->SS }]

word='bbabaaaaab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[C]   [A, S][]    []    []    []    []    []    []    []    
[]    [C]   [S]   []    []    []    []    []    []    []    
[]    []    [C]   [A, S][]    []    []    []    []    []    
[]    []    []    [C]   [S]   []    []    []    []    []    
[]    []    []    []    [C]   [S]   []    []    []    []    
[]    []    []    []    []    [C]   [S]   []    []    []    
[]    []    []    []    []    []    [C]   [S]   []    []    
[]    []    []    []    []    []    []    [C]   [S]   []    
[]    []    []    []    []    []    []    []    [C]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->AB }, { A-->CB }]
B[{ B-->BS }, { B-->a }]
C[{ C-->b }]
S[{ S-->BA }, { S-->SS }, { S-->CC }]

word='bbabaaaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[] [A][B][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[S][] [S][A][B][] [] [] [] [] 
[S][] [S][A][] [B][] [] [] [] 
[S][] [S][A][] [] [B][] [] [] 
[S][] [S][A][] [] [] [B][] [] 
[S][] [S][A][] [] [] [] [B][] 
[A][] [A][] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }]
B[{ B-->b }, { B-->BS }, { B-->AC }, { B-->CA }, { B-->SC }]
S[{ S-->a }, { S-->AA }, { S-->CS }, { S-->AB }]
C[{ C-->CB }, { C-->SB }]

word='bbabaaaaab'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[A, S]      [A, B]      []          []          []          []          []          []          []          []          
[A, S]      [B]         [S]         []          []          []          []          []          []          []          
[A, B, S, C][A, B]      [C]         [A, B]      []          []          []          []          []          []          
[A, B, S, C][A, B]      [C, S]      [B]         [S]         []          []          []          []          []          
[A, B, S, C][A, B]      [C, S]      [B]         []          [S]         []          []          []          []          
[A, B, S, C][A, B]      [C, S]      [B]         []          []          [S]         []          []          []          
[A, B, S, C][A, B]      [C, S]      [B]         []          []          []          [S]         []          []          
[A, B, S, C][A, B]      [C, S]      [B]         []          []          []          []          [S]         []          
[A, B, C, S][A, B, S]   [B, C]      [A, B]      [C]         [B]         [C]         [B]         [C]         [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->CB }]
B[{ B-->b }, { B-->SA }, { B-->CA }, { B-->a }, { B-->AA }, { B-->BB }, { B-->CS }]
C[{ C-->SS }]

word='bbabaaaaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->SA }]
B[{ B-->AB }]
C[{ C-->AC }, { C-->a }, { C-->SS }, { C-->BS }]
S[{ S-->b }, { S-->BC }]

word='bbbbbabbba'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[A]   [C]   [S]   []    []    []    []    []    []    []    
[A]   [A]   [C]   [S]   []    []    []    []    []    []    
[A, C][A]   [A]   [C]   [S]   []    []    []    []    []    
[C]   [C]   [C]   []    []    [C]   []    []    []    []    
[A]   [A]   [A]   [A]   [A]   [A]   [S]   []    []    []    
[]    []    []    []    []    []    [C]   [S]   []    []    
[C]   [C]   [C]   [C]   [C]   [C]   [A]   [C]   [S]   []    
[]    []    []    []    []    []    [C]   []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->CA }, { B-->a }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->CC }, { C-->b }, { C-->BC }]
S[{ S-->AC }, { S-->SA }, { S-->BB }, { S-->AB }, { S-->BS }]

word='bbbbbabbba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[C, S][B, C][]    []    []    []    []    []    []    []    
[C, S][C, S][B, C][]    []    []    []    []    []    []    
[C, S][C, S][C, S][B, C][]    []    []    []    []    []    
[C, S][C, S][C, S][C, S][B, C][]    []    []    []    []    
[C, S][C, S][C, S][C, S][C, S][B, C][]    []    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][B, C][]    []    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][B, C][]    []    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][B, C][]    
[C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][C, S][B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->AC }]
B[{ B-->BC }, { B-->SB }, { B-->SC }]
C[{ C-->a }, { C-->b }]
S[{ S-->AS }, { S-->AB }]

word='bbbbbabbba'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [A, C][]    []    []    []    
[]    []    []    []    []    [A]   [C]   []    []    []    
[]    []    []    []    []    [A]   []    [C]   []    []    
[]    []    []    []    []    [A]   []    []    [C]   []    
[]    []    []    []    []    [A]   []    []    []    [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
S[{ S-->CB }, { S-->a }, { S-->b }]
C[{ C-->AS }, { C-->CA }, { C-->SB }, { C-->AA }, { C-->BB }, { C-->SC }, { C-->CS }, { C-->BS }]

word='bbbbbabbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BS }, { B-->BA }, { B-->a }, { B-->CC }, { B-->CS }]
C[{ C-->a }, { C-->AA }]
S[{ S-->AS }, { S-->CA }, { S-->CB }, { S-->SS }, { S-->AB }]

word='bbbbbabbba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[C]   [A]   []    []    []    []    []    []    []    []    
[S]   [C]   [A]   []    []    []    []    []    []    []    
[B, S][S]   [C]   [A]   []    []    []    []    []    []    
[B, S][B, S][S]   [C]   [A]   []    []    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B, C][]    []    []    []    
[B, S][B, S][B, S][B, S][S]   [B, S][A]   []    []    []    
[B, S][B, S][B, S][B, S][S]   [B]   [C]   [A]   []    []    
[B, S][B, S][B, S][B, S][S]   [B]   [S]   [C]   [A]   []    
[B, S][B, S][B, S][B, S][S]   [B, S][B, S][B, S][S]   [B, C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }]
B[{ B-->AA }]
C[{ C-->CB }, { C-->a }]
S[{ S-->SA }, { S-->SB }, { S-->BB }, { S-->SC }, { S-->CS }, { S-->b }, { S-->AB }, { S-->BS }]

word='bbababbabb'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [S][C][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [S][S][C][] [] [] [] [] 
[] [] [] [] [S][S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [S][C][] [] 
[] [] [] [] [] [] [] [S][S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CS }, { A-->b }, { A-->AB }, { A-->BC }, { A-->BA }, { A-->CB }]
C[{ C-->SA }, { C-->SB }, { C-->a }]
S[{ S-->b }]

word='bbababbabb'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[A, C][A, S][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[A, C][A, C][A]   [A, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[A, C][A, C][A]   [A, C][A]   [A, S][]    []    []    []    
[A, C][A, C][A]   [A, C][A]   [A, C][A, S][]    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[A, C][A, C][A]   [A, C][A]   [A, C][A, C][A]   [A, S][]    
[A, C][A, C][A]   [A, C][A]   [A, C][A, C][A]   [A, C][A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->SB }]
C[{ C-->b }, { C-->BC }]
S[{ S-->AC }, { S-->CB }, { S-->SS }]

word='bbababbabb'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[S]   [A, C][]    []    []    []    []    []    []    []    
[]    []    [A]   []    []    []    []    []    []    []    
[S]   []    [S]   [A, C][]    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[S]   []    [S]   []    [S]   [A, C][]    []    []    []    
[]    []    []    []    []    [S]   [A, C][]    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    [S]   []    [S]   [A, C][]    
[]    []    []    []    []    []    []    []    [S]   [A, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->SS }, { A-->SC }, { A-->AB }, { A-->AS }, { A-->CA }, { A-->SB }]
B[{ B-->b }, { B-->SA }, { B-->BA }]
C[{ C-->a }, { C-->CC }, { C-->b }, { C-->BS }]
S[{ S-->CB }]

word='bbababbabb'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[C, S]      [B, C]      []          []          []          []          []          []          []          []          
[A, C]      [C]         [C]         []          []          []          []          []          []          []          
[A, C, S]   [C, S]      [C, S]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, C]      [C]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [C, S]      [C, S]      [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C, S]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, C]      [C]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, C, S]   [C, S]      [C, S]      [B, C]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [C, S]      [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AS }]
B[{ B-->CA }, { B-->a }, { B-->SC }]
S[{ S-->b }, { S-->BC }]
C[{ C-->AC }, { C-->BA }, { C-->CB }, { C-->AA }, { C-->BB }, { C-->CS }, { C-->AB }]

word='bbababbabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[A, C]      [A, S]      []          []          []          []          []          []          []          []          
[B, C]      [C]         [B]         []          []          []          []          []          []          []          
[A, B, C]   [B, C]      [C]         [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [S, C]      [C]         [B]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, C]      [C]         [A, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, S, C]   [A, C]      [A, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, S, C]   [B, C]      [C]         [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, C]      [C]         [A, S]      []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, S, C]   [A, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }]
B[{ B-->SS }]
S[{ S-->CA }, { S-->BA }, { S-->SB }, { S-->a }, { S-->CC }, { S-->b }, { S-->AB }]
C[{ C-->b }, { C-->BC }]

word='aabbaabbba'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [S]         []          []          []          []          []          []          []          []          
[S, C]      [A, B]      [S, C]      []          []          []          []          []          []          []          
[A, B, S]   [B, C, S]   [A, B, S]   [S, C]      []          []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [B]         [S]         []          []          []          []          []          
[B, S]      [B, S]      [B, S]      [S]         [B]         [S]         []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      [A, B]      [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [B, S, C]   [A, B, S]   [S, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [S, C]      []          
[B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B, S]      [B]         [S]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }]
B[{ B-->b }, { B-->AC }, { B-->AA }, { B-->SS }, { B-->CC }]
C[{ C-->AS }, { C-->BA }, { C-->a }]
S[{ S-->CB }, { S-->SB }, { S-->a }, { S-->AB }, { S-->BC }]

word='aabbaabbba'
setV=setV
[C, S]      []          []          []          []          []          []          []          []          []          
[B]         [C, S]      []          []          []          []          []          []          []          []          
[B, C]      [S]         [A, B]      []          []          []          []          []          []          []          
[A, B, C, S][B, S]      [B, C, S]   [A, B]      []          []          []          []          []          []          
[A, B, C, S][A, B, S]   [A, B, C, S][A, B, C, S][C, S]      []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][B]         [C, S]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, C, S][A, B, S, C][B, C]      [S]         [A, B]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S]      [B, C, S]   [A, B]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, B, C, S][B, C, S]   [A, B]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CS }, { A-->BS }, { A-->CB }, { A-->SB }]
B[{ B-->b }]
C[{ C-->CA }, { C-->a }, { C-->b }]
S[{ S-->CC }]

word='aabbaabbba'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [C]      []       []       []       []       []       []       []       []       
[A, C]   [A, S]   [B, C]   []       []       []       []       []       []       []       
[A, S, C][A, C]   [A, S]   [B, C]   []       []       []       []       []       []       
[A, S, C][A, S, C][A]      [S]      [C]      []       []       []       []       []       
[A, C, S][A, S, C][A, C]   [A]      [S]      [C]      []       []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, S]   [B, C]   []       []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, S]   [B, C]   []       []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C]   [A, S]   [B, C]   []       
[A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A, C, S][A]      [S]      [C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->CB }]
B[{ B-->b }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->AA }, { S-->SS }, { S-->SC }]
C[{ C-->BB }, { C-->BS }]

word='aabbaabbba'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[S]         [A, S]      []          []          []          []          []          []          []          []          
[S]         [A, S]      [A, B]      []          []          []          []          []          []          []          
[S]         [A, S]      [A, S, C]   [A, B]      []          []          []          []          []          []          
[S]         [A, S]      [B, C, S]   [S, C]      [A, S]      []          []          []          []          []          
[S]         [A, S]      [A, B, C, S][B, C, S]   [S]         [A, S]      []          []          []          []          
[S]         [A, S]      [A, B, S, C][A, B, C, S][S]         [A, S]      [A, B]      []          []          []          
[S]         [A, S]      [A, B, C, S][A, B, C, S][S]         [A, S]      [A, S, C]   [A, B]      []          []          
[S]         [A, S]      [A, B, C, S][A, B, C, S][S]         [A, S]      [A, S, C]   [A, S, C]   [A, B]      []          
[S]         [A, S]      [A, B, C, S][A, B, C, S][S]         [A, S]      [A, B, C, S][B, C, S]   [S, C]      [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->BA }]
B[{ B-->CA }, { B-->AA }]
C[{ C-->AC }, { C-->a }, { C-->SC }]
S[{ S-->CC }, { S-->CS }]

word='aabbaabbba'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[]          [B]         [A]         []          []          []          []          []          []          []          
[B]         [A]         [B]         [A]         []          []          []          []          []          []          
[S, C]      [C, S]      [C]         [C]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, S]      [S]         [S]         [C]         []          []          []          []          
[A, B]      [A, B]      [B]         []          []          [B]         [A]         []          []          []          
[A, B]      [A, B]      [A, B]      [B]         [B]         [A]         [B]         [A]         []          []          
[A, B]      [A, B]      [A, B]      [A, B]      [A]         [B]         [A]         [B]         [A]         []          
[A, B, C, S][A, B, C, S][A, C, S]   [C, S]      [S, C]      [S, C]      [C]         [C]         [C]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->b }]
C[{ C-->a }, { C-->SC }, { C-->AB }, { C-->BC }]
S[{ S-->BA }, { S-->SB }, { S-->AA }, { S-->BB }, { S-->CC }, { S-->b }]

word='aababbbabb'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[S]   [C]   []    []    []    []    []    []    []    []    
[A]   []    [A, S][]    []    []    []    []    []    []    
[C]   [S]   [C]   [C]   []    []    []    []    []    []    
[]    [A]   []    []    [A, S][]    []    []    []    []    
[]    [A, S][]    []    [A, S][A, S][]    []    []    []    
[]    [A, S][]    []    [A, S][A, S][A, S][]    []    []    
[A, S][C]   [A, S][S]   [C]   [C]   [C]   [C]   []    []    
[A, S][]    [A, S][A]   []    []    []    []    [A, S][]    
[A, S][]    [A, S][A, S][]    []    []    []    [A, S][A, S]

validity=false
isWordProducible=true
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BC }, { A-->CB }]
B[{ B-->AC }, { B-->CS }]
S[{ S-->SB }, { S-->a }, { S-->b }, { S-->BS }]
C[{ C-->SA }, { C-->b }]

word='aababbbabb'
setV=setV
[A, S]      []          []          []          []          []          []          []          []          []          
[C]         [A, S]      []          []          []          []          []          []          []          []          
[B, S]      [B]         [S, C]      []          []          []          []          []          []          []          
[A, S, C]   [B, S]      [B, C]      [A, S]      []          []          []          []          []          []          
[A, B, S, C][A, S, C]   [A, B, S]   [B]         [S, C]      []          []          []          []          []          
[A, B, S, C][B, S, C]   [A, B, C, S][A, S]      [B]         [S, C]      []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S]   [B, C]      [A, S]      [B]         [S, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][B, S, C]   [A, B, C]   [A, S]      [B, C]      [A, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][A, B, S]   [B]         [S, C]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, C, S][A, S]      [B]         [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->SC }]
C[{ C-->SB }, { C-->a }, { C-->b }]
S[{ S-->SA }, { S-->BA }, { S-->AA }, { S-->CS }, { S-->BC }]

word='aababbbabb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->b }, { B-->CA }, { B-->a }, { B-->BB }, { B-->CC }]
S[{ S-->AS }, { S-->SA }, { S-->SB }, { S-->SC }, { S-->b }]
C[{ C-->AA }, { C-->AB }]

word='aababbbabb'
setV=setV
[B]         []          []          []          []          []          []          []          []          []          
[B]         [B]         []          []          []          []          []          []          []          []          
[A, B]      [A, B]      [B, S]      []          []          []          []          []          []          []          
[A, B, C]   [A, B, C]   [B, S]      [B]         []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B]      [B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B]         []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S]   [A, B]      [B, S]      []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S]   [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->a }, { B-->CS }]
S[{ S-->AS }, { S-->BA }, { S-->b }]
C[{ C-->BB }]

word='aababbbabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [B]   []    []    []    []    []    []    []    []    
[B]   [C]   [B, S][]    []    []    []    []    []    []    
[C]   []    [C]   [B]   []    []    []    []    []    []    
[B]   [C]   [B]   [C]   [B, S][]    []    []    []    []    
[C]   [B]   [C]   [B]   [C]   [B, S][]    []    []    []    
[B]   [C]   [B]   [C]   [B]   [C]   [B, S][]    []    []    
[C]   []    [C]   []    [C]   []    [C]   [B]   []    []    
[B]   [C]   [B]   [C]   [B]   [C]   [B]   [C]   [B, S][]    
[C]   [B]   [C]   [B]   [C]   [B]   [C]   [B]   [C]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->b }, { A-->CB }]
B[{ B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->BA }, { B-->CS }]
S[{ S-->a }]

word='abbbaaabab'
setV=setV
[A, S][]    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[B]   []    [A]   []    []    []    []    []    []    []    
[B]   []    []    [A]   []    []    []    []    []    []    
[A, B][B]   [B]   [B]   [A, S][]    []    []    []    []    
[A, B][B]   [B]   [B]   [B]   [A, S][]    []    []    []    
[A, B][A, B][A, B][A, B][B]   [B]   [A, S][]    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   [B]   [A]   []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B]   [B]   [A, S][]    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   [B]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BC }, { A-->SA }]
B[{ B-->BS }, { B-->AC }, { B-->CA }, { B-->BA }, { B-->SB }, { B-->a }, { B-->AA }, { B-->CC }, { B-->SC }, { B-->CS }]
C[{ C-->CB }, { C-->a }]

word='abbbaaabab'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B]      [A]      []       []       []       []       []       []       []       []       
[B, C]   [B]      [A]      []       []       []       []       []       []       []       
[B, C]   [B]      [B]      [A]      []       []       []       []       []       []       
[A, B, C][A, B]   [A]      [B]      [B, C]   []       []       []       []       []       
[A, B, C][A, B]   [A, B]   [A, B]   [A, B, C][B, C]   []       []       []       []       
[A, B, C][A, B]   [A, B]   [A, B]   [A, B, C][A, B, C][B, C]   []       []       []       
[A, B, C][A, B]   [A, B]   [A, B]   [A, B, C][B, C]   [B]      [A]      []       []       
[A, B, C][A, B]   [A, B]   [A, B]   [A, B, C][A, B, C][A, C]   [B]      [B, C]   []       
[A, B, C][A, B]   [A, B]   [A, B]   [A, B, C][A, B, C][B, C]   [B]      [B]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->AB }, { A-->AS }]
B[{ B-->CB }]
S[{ S-->BA }, { S-->BB }, { S-->b }]

word='abbbaaabab'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][S][] [] [] [] [] [] [] [] 
[A][] [S][] [] [] [] [] [] [] 
[A][] [] [S][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [A][S][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [A][S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->CS }, { A-->b }, { A-->BS }, { A-->SB }]
B[{ B-->AC }]
S[{ S-->BA }, { S-->b }, { S-->AB }]
C[{ C-->AS }, { C-->SA }, { C-->CB }, { C-->BB }, { C-->SS }, { C-->CC }]

word='abbbaaabab'
setV=setV
[A]         []          []          []          []          []          []          []          []          []          
[C]         [A, S]      []          []          []          []          []          []          []          []          
[A, B]      [C]         [A, S]      []          []          []          []          []          []          []          
[A, S, C]   [A, B]      [C]         [A, S]      []          []          []          []          []          []          
[B, C]      [A, C, S]   [A, B]      [C]         [A]         []          []          []          []          []          
[A, B, S]   [C]         [S]         []          []          [A]         []          []          []          []          
[S, C]      [A, B]      [C]         []          []          []          [A]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][C]         [S]         [B]         [C]         [A, S]      []          []          
[A, B, C, S][A, B, C, S][A, S, C]   [A, B]      [C]         [S]         [B]         [C]         [A]         []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, S, C]   [A, B, S]   [B, C]      [A, S, C]   [A, B]      [C]         [A, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SC }, { A-->b }, { A-->AB }, { A-->BC }, { A-->CB }]
S[{ S-->a }, { S-->b }]
C[{ C-->CA }, { C-->BB }]

word='abbbaaabab'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[A]   [A, S][]    []    []    []    []    []    []    []    
[]    [A]   [A, S][]    []    []    []    []    []    []    
[]    []    [A]   [A, S][]    []    []    []    []    []    
[]    []    []    [A]   [S]   []    []    []    []    []    
[]    []    []    []    [A]   [S]   []    []    []    []    
[]    []    []    []    []    [A]   [S]   []    []    []    
[]    []    []    []    []    []    [A]   [A, S][]    []    
[]    []    []    []    []    []    []    [A]   [S]   []    
[]    []    []    []    []    []    []    []    [A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BS }, { A-->AC }, { A-->SA }, { A-->CA }]
B[{ B-->a }, { B-->BB }, { B-->SS }]
C[{ C-->a }, { C-->BC }]
S[{ S-->b }]

word='aabbbbaabb'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[B, C]   [B, C]   []       []       []       []       []       []       []       []       
[A]      [A]      [S]      []       []       []       []       []       []       []       
[B]      [B]      [B]      [S]      []       []       []       []       []       []       
[A]      [A]      [A]      [B]      [S]      []       []       []       []       []       
[A, B]   [A, B]   [A, B]   [A]      [B]      [S]      []       []       []       []       
[A, B, C][A, B, C][A, B, C][A]      [B, C]   []       [B, C]   []       []       []       
[A, B, C][A, B, C][A, B, C][A]      [B, C]   []       [B, C]   [B, C]   []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [S]      []       
[B]      [B]      [B]      []       [B]      []       [B]      [B]      [B]      [S]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CS }, { A-->b }, { A-->AB }, { A-->CA }]
B[{ B-->b }, { B-->AC }]
C[{ C-->AS }, { C-->BA }, { C-->a }]
S[{ S-->SS }, { S-->CC }]

word='aabbbbaabb'
setV=setV
[C]         []          []          []          []          []          []          []          []          []          
[S]         [C]         []          []          []          []          []          []          []          []          
[A]         [A]         [A, B]      []          []          []          []          []          []          []          
[A]         [A, S]      [A, C]      [A, B]      []          []          []          []          []          []          
[A, B]      [A, B, S]   [A, B, C]   [A, C]      [A, B]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A, B]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [B]         [C]         []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [C]         [S]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, C]      [A]         [A]         [A, B]      []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [A, S]      [A, C]      [A, B]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }]
C[{ C-->CB }, { C-->a }, { C-->CS }, { C-->AB }]
S[{ S-->AC }, { S-->AS }, { S-->BA }, { S-->SC }]

word='aabbbbaabb'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[A, S]   [A, C]   []       []       []       []       []       []       []       []       
[A]      [A]      [A]      []       []       []       []       []       []       []       
[A]      [A]      [A]      [A]      []       []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      []       []       []       []       []       
[A]      [A]      [A]      [A]      [A]      [A]      []       []       []       []       
[A, S, C][A, S, C][A, S]   [A, S]   [A, S]   [A, S]   [A, C]   []       []       []       
[A, S, C][A, S, C][A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, C]   []       []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      []       
[A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      [A]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }]
B[{ B-->BS }, { B-->BA }, { B-->a }]
S[{ S-->b }]
C[{ C-->AS }, { C-->CA }, { C-->SS }, { C-->BC }]

word='aabbbbaabb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [B]   []    []    []    []    []    []    []    []    
[]    [B]   [A, S][]    []    []    []    []    []    []    
[C]   [B, C][C]   [A, S][]    []    []    []    []    []    
[C]   [B, C][C]   [C]   [A, S][]    []    []    []    []    
[C]   [B, C][C]   [C]   [C]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    [B]   [A, S][]    
[C]   [C]   []    []    []    []    [C]   [B, C][C]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->CC }, { A-->b }]
B[{ B-->BC }, { B-->CB }, { B-->SB }, { B-->SC }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->b }]
C[{ C-->BA }]

word='aabbbbaabb'
setV=setV
[S]   []    []    []    []    []    []    []    []    []    
[]    [S]   []    []    []    []    []    []    []    []    
[]    []    [A, S][]    []    []    []    []    []    []    
[]    []    [A]   [A, S][]    []    []    []    []    []    
[]    []    [A]   [A]   [A, S][]    []    []    []    []    
[]    []    [A]   [A]   [A]   [A, S][]    []    []    []    
[]    []    []    []    []    []    [S]   []    []    []    
[]    []    []    []    []    []    []    [S]   []    []    
[]    []    []    []    []    []    []    []    [A, S][]    
[]    []    []    []    []    []    []    []    [A]   [A, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }]
B[{ B-->AB }, { B-->SC }]
C[{ C-->a }, { C-->b }]
S[{ S-->SA }, { S-->CC }]

word='babbabbbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[B][S][C][] [] [] [] [] [] [] 
[] [B][S][C][] [] [] [] [] [] 
[A][] [B][S][C][] [] [] [] [] 
[] [A][] [B][S][C][] [] [] [] 
[S][] [A][] [B][S][C][] [] [] 
[B][S][] [A][] [B][S][C][] [] 
[] [B][S][] [A][] [B][S][C][] 
[A][] [B][S][] [A][] [B][S][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }, { A-->b }, { A-->SA }]
B[{ B-->BA }, { B-->CC }]
C[{ C-->AS }, { C-->CB }, { C-->b }, { C-->AB }]
S[{ S-->SB }, { S-->SS }, { S-->BS }]

word='babbabbbba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[]    [A]   []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[B]   [C]   [B]   [A, C][]    []    []    []    []    []    
[B]   [C]   [B]   []    [A]   []    []    []    []    []    
[B, C][B, C][B]   []    []    [A, C][]    []    []    []    
[B, C][B, C][B, C][B]   [C]   [B]   [A, C][]    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B]   [A, C][]    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   [A, C][]    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B]   []    [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->AB }, { B-->BS }, { B-->AS }, { B-->CA }, { B-->SB }, { B-->AA }, { B-->CS }]
S[{ S-->SA }, { S-->BA }, { S-->a }, { S-->SC }, { S-->b }]

word='babbabbbba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->CC }, { A-->b }, { A-->BS }, { A-->AS }, { A-->CA }]
B[{ B-->b }, { B-->SC }]
C[{ C-->BA }]

word='babbabbbba'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A, C][A]   []    []    []    []    []    []    []    []    
[A, C][A]   [A, B][]    []    []    []    []    []    []    
[A, C][A]   [A, C][A, B][]    []    []    []    []    []    
[A, C][A]   [A, C][A, C][A]   []    []    []    []    []    
[A, C][A]   [A, C][A, C][A]   [A, B][]    []    []    []    
[A, C][A]   [A, C][A, C][A]   [A, C][A, B][]    []    []    
[A, C][A]   [A, C][A, C][A]   [A, C][A, C][A, B][]    []    
[A, C][A]   [A, C][A, C][A]   [A, C][A, C][A, C][A, B][]    
[A, C][A]   [A, C][A, C][A]   [A, C][A, C][A, C][A, C][A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }]
B[{ B-->b }, { B-->SS }]
S[{ S-->a }, { S-->AB }]
C[{ C-->AC }, { C-->a }, { C-->SC }]

word='babbabbbba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[]    [S, C][]    []    []    []    []    []    []    []    
[]    []    [B]   []    []    []    []    []    []    []    
[]    []    []    [B]   []    []    []    []    []    []    
[]    []    []    []    [S, C][]    []    []    []    []    
[]    []    []    []    []    [B]   []    []    []    []    
[]    []    []    []    []    []    [B]   []    []    []    
[]    []    []    []    []    []    []    [B]   []    []    
[]    []    []    []    []    []    []    []    [B]   []    
[]    []    []    []    []    []    []    []    []    [S, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }]
B[{ B-->b }, { B-->AB }, { B-->AC }, { B-->AS }, { B-->SA }, { B-->SS }, { B-->CS }]
S[{ S-->CB }, { S-->SC }]

word='abbbbbabba'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[A][A][B][] [] [] [] [] [] [] 
[B][B][A][B][] [] [] [] [] [] 
[A][A][B][A][B][] [] [] [] [] 
[B][B][A][B][A][B][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[A][A][B][A][B][A][B][B][] [] 
[B][B][A][B][A][B][A][A][B][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->AB }, { A-->SA }, { A-->CA }]
B[{ B-->BA }]
C[{ C-->a }, { C-->b }, { C-->BC }]
S[{ S-->SC }, { S-->BS }]

word='abbbbbabba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[A][C][] [] [] [] [] [] [] [] 
[A][A][C][] [] [] [] [] [] [] 
[A][A][A][C][] [] [] [] [] [] 
[A][A][A][A][C][] [] [] [] [] 
[A][A][A][A][A][C][] [] [] [] 
[A][A][A][A][A][A][C][] [] [] 
[A][A][A][A][A][A][A][C][] [] 
[A][A][A][A][A][A][A][A][C][] 
[A][A][A][A][A][A][A][A][A][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->SB }]
C[{ C-->SA }, { C-->CA }, { C-->a }, { C-->SS }, { C-->CS }, { C-->b }, { C-->BS }]

word='abbbbbabba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->b }, { B-->SA }, { B-->BA }]
C[{ C-->AS }, { C-->SB }, { C-->a }, { C-->CC }, { C-->BC }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->SS }, { S-->CS }]

word='abbbbbabba'
setV=setV
[A, C]   []       []       []       []       []       []       []       []       []       
[S]      [B]      []       []       []       []       []       []       []       []       
[C]      []       [B]      []       []       []       []       []       []       []       
[S]      []       []       [B]      []       []       []       []       []       []       
[C]      []       []       []       [B]      []       []       []       []       []       
[S]      []       []       []       []       [B]      []       []       []       []       
[B, C, S][C]      [C]      [C]      [C]      [B, C]   [A, C]   []       []       []       
[S, C]   [S]      [S]      [S]      [S]      [S]      [S]      [B]      []       []       
[C, S]   [C]      [C]      [C]      [C]      [C]      [C]      []       [B]      []       
[B, C, S][C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C, S]   [C]      [B, C]   [A, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AS }, { A-->BA }]
B[{ B-->AB }, { B-->BB }, { B-->CS }]
S[{ S-->CA }, { S-->a }, { S-->b }]
C[{ C-->CC }]

word='abbbbbabba'
setV=setV
[S][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [S][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [S][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->AB }, { A-->SA }]
B[{ B-->BC }, { B-->AC }, { B-->SB }, { B-->CC }]
C[{ C-->a }]
S[{ S-->AA }, { S-->BB }, { S-->CS }, { S-->b }]

word='abbbbbabbb'
setV=setV
[C]      []       []       []       []       []       []       []       []       []       
[S]      [A, S]   []       []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   []       []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B]   [B]      [C]      []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [S]      []       [S]      [A, S]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->CC }, { A-->SC }, { A-->AC }, { A-->CA }, { A-->SB }]
B[{ B-->a }, { B-->AA }]
C[{ C-->BA }, { C-->BB }, { C-->b }]
S[{ S-->AS }, { S-->CS }]

word='abbbbbabbb'
setV=setV
[B]      []       []       []       []       []       []       []       []       []       
[]       [C]      []       []       []       []       []       []       []       []       
[C]      [A]      [C]      []       []       []       []       []       []       []       
[A, C]   [A]      [A]      [C]      []       []       []       []       []       []       
[A, C]   [A, B]   [A]      [A]      [C]      []       []       []       []       []       
[A, B, C][A, B]   [A, B]   [A]      [A]      [C]      []       []       []       []       
[C]      [A, C]   [C]      []       []       []       [B]      []       []       []       
[A, C]   [A]      [A]      []       []       []       []       [C]      []       []       
[A, B, C][A, B, C][A, B]   [A, B]   [A]      [A]      [C]      [A]      [C]      []       
[A, B, C][A, B, C][A, B, C][A, B]   [A, B]   [A]      [A, C]   [A]      [A]      [C]      

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->CB }]
B[{ B-->SB }, { B-->CC }, { B-->SC }]
S[{ S-->AS }, { S-->a }, { S-->AB }]
C[{ C-->BB }, { C-->b }]

word='abbbbbabbb'
setV=setV
[S]         []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[A, B]      [B]         [C]         []          []          []          []          []          []          []          
[A, C]      [A]         [B]         [C]         []          []          []          []          []          []          
[B, S, C]   [C]         [A]         [B]         [C]         []          []          []          []          []          
[A, B, S]   [B, S]      [C]         [A]         [B]         [C]         []          []          []          []          
[S]         []          []          [S]         []          []          [S]         []          []          []          
[B, S, C]   [B, C]      [A]         [B, S]      [C]         [A]         [B]         [C]         []          []          
[A, B, C, S][A, B, C, S][A, C]      [A, B, S]   [B, C]      [A]         [A, B]      [B]         [C]         []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [B, S]      [A, C]      [A]         [B]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->AB }, { A-->AS }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->BS }, { B-->SA }, { B-->a }, { B-->AA }]
C[{ C-->b }]
S[{ S-->BB }, { S-->CC }]

word='abbbbbabbb'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[A, B, S][B, C]   []       []       []       []       []       []       []       []       
[A, B, S][A, B, S][B, C]   []       []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][B, C]   []       []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][B, C]   []       []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, C]   []       []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, S]   [A, B]   []       []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, C]   []       []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, C]   []       
[A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][A, B, S][B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->SA }, { A-->BA }]
B[{ B-->CB }, { B-->SB }]
S[{ S-->BC }]
C[{ C-->CS }]

word='abbbbbabbb'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[] [A][] [] [] [] [] [] [] [] 
[] [] [A][] [] [] [] [] [] [] 
[] [] [] [A][] [] [] [] [] [] 
[] [] [] [] [A][] [] [] [] [] 
[] [] [] [] [] [A][] [] [] [] 
[] [] [] [] [] [] [A][] [] [] 
[] [] [] [] [] [] [] [A][] [] 
[] [] [] [] [] [] [] [] [A][] 
[] [] [] [] [] [] [] [] [] [A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->CS }, { A-->AB }, { A-->BC }, { A-->BS }, { A-->AC }, { A-->CB }]
B[{ B-->b }, { B-->a }, { B-->AA }, { B-->BB }]
C[{ C-->SB }, { C-->a }]

word='abaaabaaba'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[A, B][B]   []    []    []    []    []    []    []    []    
[A, B][A, B][B, C][]    []    []    []    []    []    []    
[A, B][A, B][A, B][B, C][]    []    []    []    []    []    
[A, B][A, B][A, B][A, B][B, C][]    []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][B]   []    []    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][B, C][]    []    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][B, C][]    []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B]   []    
[A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][A, B][B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->SA }, { A-->CA }]
B[{ B-->a }, { B-->SC }]
S[{ S-->BA }, { S-->CB }, { S-->a }, { S-->b }]
C[{ C-->AA }]

word='abaaabaaba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A, S]      [A, S]      []          []          []          []          []          []          []          []          
[]          []          [B, S]      []          []          []          []          []          []          []          
[]          []          []          [B, S]      []          []          []          []          []          []          
[]          []          []          []          [B, S]      []          []          []          []          []          
[A, B, S, C][A, C]      [A, S]      [A, S]      [A, S]      [A, S]      []          []          []          []          
[S]         [S]         []          []          []          []          [B, S]      []          []          []          
[]          []          []          []          []          []          []          [B, S]      []          []          
[A, B, S, C][A, B, C]   [A, B, S, C][A, B, S, C][A, B, S, C][A, C]      [A, S]      [A, S]      [A, S]      []          
[S]         [S]         [S]         [S]         [S]         [S]         []          []          []          [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }, { A-->AB }, { A-->BA }, { A-->CB }, { A-->SB }]
B[{ B-->b }, { B-->BC }, { B-->CC }]
S[{ S-->SA }, { S-->CA }, { S-->SS }]

word='abaaabaaba'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A]   [A, B][]    []    []    []    []    []    []    []    
[]    [A]   [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[]    []    []    []    [A]   []    []    []    []    []    
[]    []    []    []    [A]   [A, B][]    []    []    []    
[]    []    []    []    []    [A]   [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[]    []    []    []    []    []    []    [A]   [A, B][]    
[]    []    []    []    []    []    []    []    [A]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->b }, { A-->AB }, { A-->AC }]
B[{ B-->CA }, { B-->CS }]
S[{ S-->CB }, { S-->SB }, { S-->a }, { S-->SC }, { S-->BS }]
C[{ C-->a }, { C-->SS }]

word='abaaabaaba'
setV=setV
[S, C]      []          []          []          []          []          []          []          []          []          
[B]         [A]         []          []          []          []          []          []          []          []          
[B, S]      [A]         [S, C]      []          []          []          []          []          []          []          
[B, S, C]   [A]         [A, B, S, C][S, C]      []          []          []          []          []          []          
[A, B, S, C][A]         [A, B, S, C][A, B, S, C][S, C]      []          []          []          []          []          
[B, S, C]   [A]         [A, B, S, C][B, S]      [B]         [A]         []          []          []          []          
[A, B, S, C][A]         [A, B, C, S][B, S, C]   [B, S]      [A]         [S, C]      []          []          []          
[A, B, C, S][A]         [A, B, C, S][A, B, S, C][B, S, C]   [A]         [A, B, S, C][S, C]      []          []          
[A, B, C, S][A]         [A, B, C, S][B, S, C]   [B, S]      [A]         [B, S]      [B]         [A]         []          
[A, B, C, S][A]         [A, B, C, S][A, B, C, S][B, S, C]   [A]         [B, S, C]   [B, S]      [A]         [S, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SS }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->BS }, { B-->CB }, { B-->a }, { B-->AA }]
S[{ S-->a }, { S-->BB }]
C[{ C-->AS }, { C-->BA }, { C-->SB }, { C-->SC }]

word='abaaabaaba'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[S, C]      [B]         []          []          []          []          []          []          []          []          
[A, B, S, C][B, S]      [B, S]      []          []          []          []          []          []          []          
[A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          []          
[A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][S, C]      [B]         []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, S]      []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][A, B, S, C][B, S]      []          []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C, S][S, C]      [B]         []          
[A, B, S, C][A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, S, C][B, S]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->b }, { A-->SA }, { A-->BA }, { A-->CB }]
B[{ B-->a }]
C[{ C-->AC }, { C-->a }]
S[{ S-->CA }, { S-->SB }, { S-->CC }]

word='bbbbaababb'
setV=setV
[A]      []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[]       []       [A]      []       []       []       []       []       []       []       
[]       []       []       [A]      []       []       []       []       []       []       
[C]      [C]      [C]      [C]      [B, C]   []       []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [B, C]   []       []       []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      []       []       []       
[A, S, C][A, S, C][A, C, S][A, C, S][A, S, C][S, C]   [C]      [B, C]   []       []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [S]      [A, S]   [A]      []       
[A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A, S]   [A]      [A]      []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }, { B-->AC }, { B-->SA }, { B-->CS }]
C[{ C-->a }, { C-->b }]
S[{ S-->AS }, { S-->BA }, { S-->CC }]

word='bbbbaababb'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[B][S][C][] [] [] [] [] [] [] 
[B][B][S][C][] [] [] [] [] [] 
[B][B][B][S][C][] [] [] [] [] 
[B][B][B][B][S][C][] [] [] [] 
[B][B][B][B][B][S][C][] [] [] 
[B][B][B][B][B][B][S][C][] [] 
[B][B][B][B][B][B][B][S][C][] 
[B][B][B][B][B][B][B][B][S][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->BB }, { A-->CC }, { A-->CS }, { A-->BS }]
B[{ B-->AS }]
S[{ S-->SA }, { S-->BA }, { S-->SS }, { S-->b }, { S-->AB }]

word='bbbbaababb'
setV=setV
[S]      []       []       []       []       []       []       []       []       []       
[S]      [S]      []       []       []       []       []       []       []       []       
[S]      [S]      [S]      []       []       []       []       []       []       []       
[S]      [S]      [S]      [S]      []       []       []       []       []       []       
[S]      [S]      [S]      [S]      [A]      []       []       []       []       []       
[S]      [S]      [S]      [S]      []       [A]      []       []       []       []       
[S]      [S]      [S]      [S]      [S]      [B]      [S]      []       []       []       
[S]      [S]      [S]      [S]      [B, S]   [B, S]   [S]      [A]      []       []       
[S]      [S]      [S]      [S]      [A, B, S][A, B, S][S]      [B]      [S]      []       
[S]      [S]      [S]      [S]      [A, B, S][A, B, S][S]      [A, B]   [S]      [S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BS }]
C[{ C-->AC }, { C-->a }, { C-->AA }, { C-->SC }]
S[{ S-->SA }, { S-->a }, { S-->BB }, { S-->CC }]

word='bbbbaababb'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[S]   [B]   []    []    []    []    []    []    []    []    
[B]   [S]   [B]   []    []    []    []    []    []    []    
[S]   [B]   [S]   [B]   []    []    []    []    []    []    
[S, C][B]   [S, C][B]   [C, S][]    []    []    []    []    
[S, C][B]   [S, C][B]   [C, S][C, S][]    []    []    []    
[B]   [S]   [B]   [S]   []    []    [B]   []    []    []    
[B]   [C, S][B]   [S, C][]    []    [B]   [C, S][]    []    
[S]   [B]   [S]   [B]   []    []    [S]   []    [B]   []    
[B]   [S]   [B]   [S]   []    []    [B]   []    [S]   [B]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->BC }, { B-->CA }, { B-->a }, { B-->BB }, { B-->SS }, { B-->CC }, { B-->CS }]
C[{ C-->AB }]
S[{ S-->AS }, { S-->SA }]

word='bbbbaababb'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[B][B][] [] [] [] [] [] [] [] 
[B][B][B][] [] [] [] [] [] [] 
[B][B][B][B][] [] [] [] [] [] 
[B][B][B][B][B][] [] [] [] [] 
[B][B][B][B][B][B][] [] [] [] 
[B][B][B][B][B][B][B][] [] [] 
[B][B][B][B][B][B][B][B][] [] 
[B][B][B][B][B][B][B][B][B][] 
[B][B][B][B][B][B][B][B][B][B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SA }, { A-->SB }]
B[{ B-->BA }, { B-->BB }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->CS }, { C-->b }]
S[{ S-->AA }, { S-->CC }]

word='bababbaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][C][] [] [] [] [] [] [] [] 
[C][S][C][] [] [] [] [] [] [] 
[S][C][S][C][] [] [] [] [] [] 
[C][S][C][S][C][] [] [] [] [] 
[S][C][S][C][S][C][] [] [] [] 
[C][S][C][S][C][S][C][] [] [] 
[S][C][S][C][S][C][S][C][] [] 
[C][S][C][S][C][S][C][S][C][] 
[S][C][S][C][S][C][S][C][S][C]

validity=false
isWordProducible=true
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AB }, { A-->BS }, { A-->BA }]
B[{ B-->SB }, { B-->BB }]
C[{ C-->a }, { C-->b }]
S[{ S-->SA }, { S-->a }]

word='bababbaaab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[]    [C, S][]    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C, S][]    []    []    []    []    []    
[]    []    []    []    [C]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C, S][]    []    []    
[]    []    []    []    []    []    []    [C, S][]    []    
[]    []    []    []    []    []    []    []    [C, S][]    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->SB }]
B[{ B-->AA }, { B-->SC }]
C[{ C-->SA }, { C-->a }, { C-->CC }, { C-->b }, { C-->AB }, { C-->BS }]
S[{ S-->AS }, { S-->CS }]

word='bababbaaab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[C][C][] [] [] [] [] [] [] [] 
[C][C][C][] [] [] [] [] [] [] 
[C][C][C][C][] [] [] [] [] [] 
[C][C][C][C][C][] [] [] [] [] 
[C][C][C][C][C][C][] [] [] [] 
[C][C][C][C][C][C][C][] [] [] 
[C][C][C][C][C][C][C][C][] [] 
[C][C][C][C][C][C][C][C][C][] 
[C][C][C][C][C][C][C][C][C][C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->b }, { A-->BS }, { A-->AS }]
B[{ B-->b }, { B-->AB }, { B-->BC }, { B-->AC }, { B-->BB }]
S[{ S-->CA }, { S-->a }]
C[{ C-->SC }]

word='bababbaaab'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[A]   [S]   []    []    []    []    []    []    []    []    
[B]   []    [A, B][]    []    []    []    []    []    []    
[A]   []    [A]   [S]   []    []    []    []    []    []    
[B]   []    [B]   []    [A, B][]    []    []    []    []    
[B]   []    [B]   []    [B]   [A, B][]    []    []    []    
[A]   []    [A]   []    [A]   [A]   [S]   []    []    []    
[A]   []    [A]   []    [A]   [A]   []    [S]   []    []    
[A]   []    [A]   []    [A]   [A]   []    []    [S]   []    
[B]   []    [B]   []    [B]   [B]   []    []    []    [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }]
B[{ B-->b }]
S[{ S-->AC }, { S-->SA }, { S-->a }, { S-->CC }, { S-->BC }]
C[{ C-->BA }]

word='bababbaaab'
setV=setV
[B][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [B][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [] [B][] [] [] [] [] 
[] [] [] [S][A][B][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->b }, { B-->AC }, { B-->SA }, { B-->BA }, { B-->CB }, { B-->a }, { B-->AA }]
C[{ C-->a }, { C-->CS }, { C-->b }]
S[{ S-->SC }]

word='aaaaaaaaaa'
setV=setV
[B, C][]    []    []    []    []    []    []    []    []    
[B]   [B, C][]    []    []    []    []    []    []    []    
[B]   [B]   [B, C][]    []    []    []    []    []    []    
[B]   [B]   [B]   [B, C][]    []    []    []    []    []    
[B]   [B]   [B]   [B]   [B, C][]    []    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    []    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    []    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C][]    
[B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B]   [B, C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BA }, { B-->a }, { B-->AA }]
S[{ S-->a }]
C[{ C-->CA }, { C-->SS }, { C-->b }]

word='aaaaaaaaaa'
setV=setV
[B, S][]    []    []    []    []    []    []    []    []    
[C]   [B, S][]    []    []    []    []    []    []    []    
[]    [C]   [B, S][]    []    []    []    []    []    []    
[]    []    [C]   [B, S][]    []    []    []    []    []    
[]    []    []    [C]   [B, S][]    []    []    []    []    
[]    []    []    []    [C]   [B, S][]    []    []    []    
[]    []    []    []    []    [C]   [B, S][]    []    []    
[]    []    []    []    []    []    [C]   [B, S][]    []    
[]    []    []    []    []    []    []    [C]   [B, S][]    
[]    []    []    []    []    []    []    []    [C]   [B, S]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->b }]
B[{ B-->CA }, { B-->a }]
C[{ C-->BA }, { C-->CB }, { C-->SB }, { C-->SC }]

word='aaaaaaaaaa'
setV=setV
[A, B][]    []    []    []    []    []    []    []    []    
[C]   [A, B][]    []    []    []    []    []    []    []    
[B, C][C]   [A, B][]    []    []    []    []    []    []    
[B, C][B, C][C]   [A, B][]    []    []    []    []    []    
[B, C][B, C][B, C][C]   [A, B][]    []    []    []    []    
[B, C][B, C][B, C][B, C][C]   [A, B][]    []    []    []    
[B, C][B, C][B, C][B, C][B, C][C]   [A, B][]    []    []    
[B, C][B, C][B, C][B, C][B, C][B, C][C]   [A, B][]    []    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   [A, B][]    
[B, C][B, C][B, C][B, C][B, C][B, C][B, C][B, C][C]   [A, B]

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->AA }, { A-->b }, { A-->AB }, { A-->BS }, { A-->AS }, { A-->CA }, { A-->CB }]
B[{ B-->BB }]
C[{ C-->AC }, { C-->BA }]

word='aaaaaaaaaa'
setV=setV
[A][] [] [] [] [] [] [] [] [] 
[A][A][] [] [] [] [] [] [] [] 
[A][A][A][] [] [] [] [] [] [] 
[A][A][A][A][] [] [] [] [] [] 
[A][A][A][A][A][] [] [] [] [] 
[A][A][A][A][A][A][] [] [] [] 
[A][A][A][A][A][A][A][] [] [] 
[A][A][A][A][A][A][A][A][] [] 
[A][A][A][A][A][A][A][A][A][] 
[A][A][A][A][A][A][A][A][A][A]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
B[{ B-->BC }]
C[{ C-->AC }, { C-->SA }, { C-->a }, { C-->AA }, { C-->SC }]
S[{ S-->AS }, { S-->BB }, { S-->SS }, { S-->b }, { S-->BS }]

word='aaaaaaaaaa'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->BC }]
B[{ B-->a }]
C[{ C-->AS }, { C-->CA }, { C-->BA }, { C-->a }, { C-->SS }, { C-->CS }]
S[{ S-->CC }, { S-->b }, { S-->AB }, { S-->BS }]

word='ababbabbba'
setV=setV
[B, C]   []       []       []       []       []       []       []       []       []       
[C, S]   [S]      []       []       []       []       []       []       []       []       
[S]      []       [B, C]   []       []       []       []       []       []       []       
[A, C, S][C]      [C, S]   [S]      []       []       []       []       []       []       
[A, C, S][C]      [A, S, C][C]      [S]      []       []       []       []       []       
[A, C, S][S, C]   [C, S]   [S]      []       [B, C]   []       []       []       []       
[A, C, S][S, C]   [A, C, S][C, S]   [C]      [C, S]   [S]      []       []       []       
[A, C, S][S, C]   [A, C, S][C, S]   [C]      [A, S, C][C]      [S]      []       []       
[A, C, S][C, S]   [A, C, S][C, S]   [C, S]   [A, S, C][C]      [C]      [S]      []       
[A, C, S][C, S]   [A, C, S][C, S]   [C, S]   [A, C, S][C, S]   [S]      []       [B, C]   

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->BC }, { A-->AS }, { A-->SA }]
B[{ B-->b }, { B-->AB }, { B-->SB }]
C[{ C-->AC }, { C-->CA }, { C-->a }, { C-->b }]
S[{ S-->BA }, { S-->AA }, { S-->BS }]

word='ababbabbba'
setV=setV
[A, C]      []          []          []          []          []          []          []          []          []          
[B, C]      [B, C]      []          []          []          []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [B, C]      [B, C]      []          []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, C, S]   [A]         [B, C]      []          []          []          []          []          
[A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [B, C]      [B, C]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A]         [B, C]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A]         [B, C]      []          
[A, S, C]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C, S]   [A, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BA }]
B[{ B-->SS }]
C[{ C-->SB }, { C-->a }, { C-->BB }, { C-->CC }, { C-->AB }]
S[{ S-->AC }, { S-->b }]

word='ababbabbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [S][] [] [] [] [] [] 
[] [] [] [B][S][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [S][] [] [] 
[] [] [] [] [] [] [B][S][] [] 
[] [] [] [] [] [C][C][B][S][] 
[] [] [] [] [] [C][C][] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BC }, { A-->BS }, { A-->CA }]
B[{ B-->AB }, { B-->BA }, { B-->CB }, { B-->AA }, { B-->BB }]
C[{ C-->SA }, { C-->a }]
S[{ S-->AS }, { S-->CS }, { S-->b }]

word='ababbabbba'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[S][S][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [S][S][] [] [] [] [] [] 
[] [] [] [] [S][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [S][S][] [] [] 
[] [] [] [] [] [] [] [S][] [] 
[] [] [] [] [] [] [] [] [S][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->CS }, { A-->AB }, { A-->BS }, { A-->AC }, { A-->AS }, { A-->SA }]
B[{ B-->CB }, { B-->a }, { B-->CC }]
C[{ C-->CA }, { C-->a }, { C-->SS }, { C-->b }]
S[{ S-->AA }, { S-->b }]

word='ababbabbba'
setV=setV
[B, C]      []          []          []          []          []          []          []          []          []          
[A, B]      [C, S]      []          []          []          []          []          []          []          []          
[A, B]      [B]         [B, C]      []          []          []          []          []          []          []          
[A, B, C, S][A, B, C]   [A, B]      [C, S]      []          []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B, C]   [C, S]      []          []          []          []          []          
[A, B, S, C][A, B, C]   [A, B, C]   [A, B]      [B]         [B, C]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [C, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [A, B, C]   [C, S]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B, C]   [C, S]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C]   [A, B]      [B]         [B, C]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }]
B[{ B-->CS }]
C[{ C-->AS }, { C-->AA }, { C-->CC }, { C-->SC }, { C-->b }]
S[{ S-->SB }, { S-->b }]

word='babbabbbab'
setV=setV
[C, S]   []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[C]      [C]      [C, S]   []       []       []       []       []       []       []       
[B, C, S][B, C]   [B, C]   [C, S]   []       []       []       []       []       []       
[]       []       []       []       [A]      []       []       []       []       []       
[C]      [C]      [C]      [C]      [C]      [C, S]   []       []       []       []       
[B, C, S][B, C]   [B, C, S][B, C, S][B, C]   [B, C]   [C, S]   []       []       []       
[B, C, S][B, C]   [B, C, S][B, C, S][B, C]   [B, C, S][B, C]   [C, S]   []       []       
[]       []       []       []       []       []       []       []       [A]      []       
[C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C]      [C, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CS }]
B[{ B-->AB }, { B-->CA }, { B-->BB }, { B-->SS }]
C[{ C-->BA }, { C-->b }]
S[{ S-->CB }, { S-->AA }]

word='babbabbbab'
setV=setV
[C]   []    []    []    []    []    []    []    []    []    
[B]   [A]   []    []    []    []    []    []    []    []    
[]    []    [C]   []    []    []    []    []    []    []    
[]    []    []    [C]   []    []    []    []    []    []    
[]    []    [S]   [B]   [A]   []    []    []    []    []    
[]    []    []    []    []    [C]   []    []    []    []    
[]    []    []    []    []    []    [C]   []    []    []    
[]    []    []    []    []    []    []    [C]   []    []    
[B, S][B]   [B]   [A, C][S]   [A]   [S]   [B]   [A]   []    
[]    []    []    []    []    []    []    []    []    [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BS }, { A-->SB }]
C[{ C-->a }, { C-->b }]
S[{ S-->BA }, { S-->BB }, { S-->CS }, { S-->AB }, { S-->BC }]

word='babbabbbab'
setV=setV
[C][] [] [] [] [] [] [] [] [] 
[] [C][] [] [] [] [] [] [] [] 
[] [] [C][] [] [] [] [] [] [] 
[] [] [] [C][] [] [] [] [] [] 
[] [] [] [] [C][] [] [] [] [] 
[] [] [] [] [] [C][] [] [] [] 
[] [] [] [] [] [] [C][] [] [] 
[] [] [] [] [] [] [] [C][] [] 
[] [] [] [] [] [] [] [] [C][] 
[] [] [] [] [] [] [] [] [] [C]

validity=false
isWordProducible=false
maxVarsPerCellSetV=1

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->CC }, { A-->SC }, { A-->CS }, { A-->b }, { A-->AS }, { A-->CB }]
B[{ B-->SS }]
S[{ S-->BA }, { S-->a }]
C[{ C-->AC }, { C-->SA }, { C-->a }]

word='babbabbbab'
setV=setV
[A]   []    []    []    []    []    []    []    []    []    
[A, C][S, C][]    []    []    []    []    []    []    []    
[C]   [C]   [A]   []    []    []    []    []    []    []    
[]    []    []    [A]   []    []    []    []    []    []    
[A, C][A]   [C]   [A, C][S, C][]    []    []    []    []    
[A, C][A]   [C]   [C]   [C]   [A]   []    []    []    []    
[]    []    []    []    []    []    [A]   []    []    []    
[]    []    []    []    []    []    []    [A]   []    []    
[A, C][A, C][A, C][A, C][A]   [C]   [C]   [A, C][S, C][]    
[A, C][A, C][A, C][A, C][A]   [C]   [C]   [C]   [C]   [A]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->SC }, { A-->BC }, { A-->BS }, { A-->BA }, { A-->CB }]
B[{ B-->b }, { B-->AA }, { B-->CC }]
C[{ C-->AS }, { C-->a }]
S[{ S-->CS }, { S-->b }, { S-->AB }]

word='babbabbbab'
setV=setV
[B, S]      []          []          []          []          []          []          []          []          []          
[A]         [C]         []          []          []          []          []          []          []          []          
[A, C, S]   [A, S]      [B, S]      []          []          []          []          []          []          []          
[A, B, C, S][C, S]      [A]         [B, S]      []          []          []          []          []          []          
[A, B]      [A, B]      [A]         [A]         [C]         []          []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [B, S]      []          []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][C, S]      [A]         [B, S]      []          []          []          
[A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S]   [A, C, S]   [A]         [B, S]      []          []          
[A, B, C, S][A, B, C, S][A, B, S]   [A, B, S]   [A, B]      [A, B]      [A]         [A]         [C]         []          
[A, B, S, C][A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, C, S]   [A, S]      [B, S]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->CC }, { A-->b }, { A-->AS }, { A-->SA }]
B[{ B-->b }]
S[{ S-->AC }, { S-->CA }, { S-->CB }, { S-->SB }, { S-->BB }, { S-->SS }]
C[{ C-->AB }, { C-->BS }]

word='babaaaabba'
setV=setV
[A, B]   []       []       []       []       []       []       []       []       []       
[]       [A]      []       []       []       []       []       []       []       []       
[S]      [C]      [A, B]   []       []       []       []       []       []       []       
[A, C]   [S]      []       [A]      []       []       []       []       []       []       
[S]      [A]      []       []       [A]      []       []       []       []       []       
[A]      []       []       []       []       [A]      []       []       []       []       
[]       []       []       []       []       []       [A]      []       []       []       
[S]      [A]      []       []       [A]      [S]      [C]      [A, B]   []       []       
[A, S, C][A, C, S][A, C]   [S]      [A, C]   [A, S]   [A, S]   [S, C]   [A, B]   []       
[A, S, C][A, S]   [S]      [A]      [S]      [A]      [A]      [A, S]   []       [A]      

validity=false
isWordProducible=true
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->a }, { A-->SC }, { A-->b }, { A-->CB }]
B[{ B-->CA }]
S[{ S-->a }, { S-->b }]
C[{ C-->AC }, { C-->BA }, { C-->SB }, { C-->SS }, { C-->CS }, { C-->BC }]

word='babaaaabba'
setV=setV
[A, S]   []       []       []       []       []       []       []       []       []       
[C]      [A, S]   []       []       []       []       []       []       []       []       
[A, B, C][C]      [A, S]   []       []       []       []       []       []       []       
[A, B, C][A, B, C][C]      [A, S]   []       []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][C]      [A, S]   []       []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][C]      [A, S]   []       []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [A, S]   []       []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [A, S]   []       []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [A, S]   []       
[A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][A, B, C][C]      [A, S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=3

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=false
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->AC }, { A-->CB }]
B[{ B-->b }]
C[{ C-->AS }, { C-->BA }, { C-->a }, { C-->BB }, { C-->BC }]

word='babaaaabba'
setV=setV
[B]   []    []    []    []    []    []    []    []    []    
[C]   [C]   []    []    []    []    []    []    []    []    
[A, C][A]   [B]   []    []    []    []    []    []    []    
[A, C][A]   [C]   [C]   []    []    []    []    []    []    
[A, C][A]   []    []    [C]   []    []    []    []    []    
[A, C][A]   []    []    []    [C]   []    []    []    []    
[A, C][A]   []    []    []    []    [C]   []    []    []    
[A, C][A]   []    []    []    []    [A]   [B]   []    []    
[A, C][A]   []    []    []    []    []    [C]   [B]   []    
[A, C][A]   []    []    []    []    [A]   [C]   [C]   [C]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->BB }, { A-->b }, { A-->CB }, { A-->SB }]
B[{ B-->BC }, { B-->SS }]
S[{ S-->a }]
C[{ C-->AS }, { C-->b }]

word='babaaaabba'
setV=setV
[A, C][]    []    []    []    []    []    []    []    []    
[C]   [S]   []    []    []    []    []    []    []    []    
[]    []    [A, C][]    []    []    []    []    []    []    
[]    []    [C]   [S]   []    []    []    []    []    []    
[]    []    [A]   [B]   [S]   []    []    []    []    []    
[]    []    [A, C][A]   [B]   [S]   []    []    []    []    
[]    []    [C]   [A, C][A]   [B]   [S]   []    []    []    
[]    []    []    [A]   [A]   [B]   []    [A, C][]    []    
[]    []    []    [A]   [A]   [B]   []    []    [A, C][]    
[]    []    []    [A, C][A, C][B]   []    []    [C]   [S]   

validity=false
isWordProducible=false
maxVarsPerCellSetV=2

ResultSampleExamConstraints{
isExamConstraints=true
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=true
isMaxSumOfVarsInPyramidCount=true

ResultSampleGrammarRestrictions{
isGrammarRestrictions=true
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=true

}

############################################################
############################################################
sampleGrammars=ResultSample{
grammar=Grammar{
variableStart: S
Productions
A[{ A-->AA }, { A-->b }, { A-->BS }, { A-->AS }]
B[{ B-->b }, { B-->AC }, { B-->CB }, { B-->CC }]
C[{ C-->a }, { C-->BB }, { C-->CS }]
S[{ S-->CA }, { S-->BA }, { S-->AB }]

word='babaaaabba'
setV=setV
[A, B]      []          []          []          []          []          []          []          []          []          
[B]         [C]         []          []          []          []          []          []          []          []          
[A, C, S]   [B, S]      [A, B]      []          []          []          []          []          []          []          
[B, C, S]   [B]         [B]         [C]         []          []          []          []          []          []          
[A, B, S, C][B, C]      [C, S]      [B]         [C]         []          []          []          []          []          
[A, B, S, C][B, C]      [B, C, S]   [B]         [B]         [C]         []          []          []          []          
[A, B, C, S][B, C]      [B, C, S]   [B, C]      [B]         [B]         [C]         []          []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [B, S]      [A, B]      []          []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][A, B, C, S][B, C, S]   [A, C, S]   [A, B]      []          
[A, B, S, C][A, B, C, S][A, B, C, S][A, B, C, S][A, B, S, C][A, B, C]   [B, C]      [B, C, S]   [B]         [C]         

validity=false
isWordProducible=true
maxVarsPerCellSetV=4

ResultSampleExamConstraints{
isExamConstraints=false
isRightCellCombinationsForced=true
isMaxSumOfProductionsCount=false
isMaxSumOfVarsInPyramidCount=false

ResultSampleGrammarRestrictions{
isGrammarRestrictions=false
isSizeOfWordCount=true
isMaxNumberOfVarsPerCellCount=false

}
